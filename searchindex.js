Search.setIndex({"docnames": ["README", "changelog", "cmake_doc/index", "cmake_doc/options", "coreneuron/compatibility", "coreneuron/examples", "coreneuron/index", "coreneuron/installation", "coreneuron/running-a-simulation", "courses/artificial_cells_neuron", "courses/batch_runs_bulletin_board_parallelization", "courses/batch_runs_with_bulletin_board", "courses/building_and_labeling_a_two_electrod", "courses/bulletin_board_walkthrough", "courses/cellbuilder_overview_and_hints", "courses/code/cell.ho", "courses/code/initbatpar.ho", "courses/code/initbatser.ho", "courses/code/initonerun.ho", "courses/code/initplotfi.ho", "courses/code/net1run.hoc", "courses/code/net1spec.ho", "courses/code/net2spec.ho", "courses/code/test0.hoc", "courses/custom-initialization", "courses/electrotonic_analysis", "courses/exercises2018", "courses/hints_for_inhomogeneous_channel_dist", "courses/hoc_exercises", "courses/hopfield_brody_network_in_python", "courses/interactive_modeling", "courses/intro_to_gui", "courses/intro_to_the_network_builder", "courses/introduction_to_the_linear_circuit", "courses/managing_models_on_the_fly", "courses/mpi_parallelization", "courses/multithread_parallelization", "courses/network_ready_cells_from_the_cellb", "courses/neuron_scripting_exercises", "courses/numerical-methods-exercises", "courses/quality_issues_with_morphometric", "courses/rxd_exercises", "courses/saving_windows", "courses/specifying_inhomogeneous_channel_dis", "courses/state_and_parameter_discontinuities", "courses/the_cellbuilder", "courses/using_modeldb_and_modelview", "courses/using_morphometric_data", "courses/using_nmodl_files", "courses/using_nsg_portal", "courses/working_with_shape_plots", "dealing_simulations_generate_lot", "dev/HOCInterpreter/HOCInterpreter", "dev/gpu-testing", "dev/how-do-i/how-do-i", "dev/index", "docs_requirements", "doxygen", "example_of_generating_movie", "guide/bio_faq", "guide/cellbuilder", "guide/cellbuilder1", "guide/cellbuilder2", "guide/cellbuilder3", "guide/data/finithnd1.hoc", "guide/data/idraw-readme", "guide/data/readme", "guide/data/solution.ses", "guide/differences_between_idraw_and_core", "guide/example_hybrid_network", "guide/example_of_simple_network", "guide/faq", "guide/finitialize_handler", "guide/fixing_funny_axes", "guide/heres_how_delete_v5", "guide/heres_how_page", "guide/hoc_chapter_11_old_reference", "guide/how_to_get_started", "guide/how_to_get_started_with_neuron", "guide/how_to_move_labels", "guide/how_to_translate_view", "guide/import3d", "guide/index", "guide/introduction_to_network_construction", "guide/modelview_compact_display", "guide/network_builder_tutorials", "guide/nmodls_built_in_functions", "guide/nrn_defaults", "guide/optimization", "guide/optimization1", "guide/optimization1a", "guide/optimization2", "guide/plot_what", "guide/porting_mechanisms_to_cpp", "guide/print_file_manager", "guide/randomness", "guide/run_simulation_plot_input_output", "guide/run_simulation_plot_input_output2", "guide/saveses", "guide/set_up_a_subsetdomainiterator", "guide/specify_and_verify_the_functions", "guide/specify_the_model_parameters_varied", "guide/step_1_define_type_cell", "guide/step_1_define_type_of_cell", "guide/step_1_define_type_of_cell2", "guide/step_1_define_type_of_cell3", "guide/step_2_create_each_cell", "guide/step_2_create_network_cell", "guide/step_3_connect_cells", "guide/step_3_connect_cells_continued", "guide/step_3_connect_the_cells", "guide/step_3_connect_the_cells_continued", "guide/tutorial_2_hybrid_nets", "guide/tutorial_artificial_neurons", "guide/units", "guide/units_tutorial", "guide/use_the_model_specification", "guide/using_neuron_on_the_mac", "guide/using_plotwhat_to_specify_a_variable", "guide/using_session_files_for_saving", "guide/using_the_d_lambda_rule", "guide/what_is_neuron", "guide/working_with_postscript_and_idraw", "hoc/analysis/guitools", "hoc/analysis/guitools/funfit", "hoc/analysis/guitools/impedancetools", "hoc/analysis/guitools/impedanx", "hoc/analysis/guitools/impratio", "hoc/analysis/guitools/mulfit", "hoc/analysis/guitools/runfit", "hoc/analysis/programmatic", "hoc/analysis/programmatic/impedance", "hoc/analysis/programmatic/misc", "hoc/analysis/programmatic/optimization", "hoc/compilationoptions", "hoc/index", "hoc/modelspec/guitools", "hoc/modelspec/guitools/cellbuilder", "hoc/modelspec/guitools/inserter", "hoc/modelspec/guitools/pointman", "hoc/modelspec/guitools/showmech", "hoc/modelspec/programmatic", "hoc/modelspec/programmatic/electrod", "hoc/modelspec/programmatic/hocmech", "hoc/modelspec/programmatic/ions", "hoc/modelspec/programmatic/kschan", "hoc/modelspec/programmatic/linmod", "hoc/modelspec/programmatic/mechanisms", "hoc/modelspec/programmatic/mechanisms/mech", "hoc/modelspec/programmatic/mechanisms/nmodl", "hoc/modelspec/programmatic/mechanisms/nmodl2", "hoc/modelspec/programmatic/mechtype", "hoc/modelspec/programmatic/network", "hoc/modelspec/programmatic/network/lyttonmpi", "hoc/modelspec/programmatic/network/netcon", "hoc/modelspec/programmatic/network/parcon", "hoc/modelspec/programmatic/network/parnet", "hoc/modelspec/programmatic/obsoletestimuli", "hoc/modelspec/programmatic/rxd", "hoc/modelspec/programmatic/ste", "hoc/modelspec/programmatic/topology", "hoc/modelspec/programmatic/topology/geometry", "hoc/modelspec/programmatic/topology/seclist", "hoc/modelspec/programmatic/topology/secref", "hoc/modelspec/programmatic/topology/secspec", "hoc/programming/dynamiccode", "hoc/programming/errors", "hoc/programming/gui/dialog", "hoc/programming/gui/layout", "hoc/programming/gui/list", "hoc/programming/gui/misc", "hoc/programming/gui/nfunc", "hoc/programming/gui/pwman", "hoc/programming/gui/secbrows", "hoc/programming/gui/symchooser", "hoc/programming/gui/texteditor", "hoc/programming/gui/textmenus", "hoc/programming/gui/vfe", "hoc/programming/gui/widgets", "hoc/programming/guidesign", "hoc/programming/hoc", "hoc/programming/hocsyntax", "hoc/programming/internals", "hoc/programming/io", "hoc/programming/io/file", "hoc/programming/io/plotters", "hoc/programming/io/printf", "hoc/programming/io/read", "hoc/programming/io/ropen", "hoc/programming/math/constants", "hoc/programming/math/eqnsolve", "hoc/programming/math/functions", "hoc/programming/math/guimath", "hoc/programming/math/matrix", "hoc/programming/math/mcran4", "hoc/programming/math/misc", "hoc/programming/math/random", "hoc/programming/math/vector", "hoc/programming/mathematics", "hoc/programming/mechstan", "hoc/programming/neuronpython", "hoc/programming/ockeywor", "hoc/programming/oop", "hoc/programming/pointers/misc", "hoc/programming/pointers/pointer", "hoc/programming/pointers/ptrvector", "hoc/programming/predec", "hoc/programming/projectmanagement", "hoc/programming/python", "hoc/programming/references", "hoc/programming/sscanf", "hoc/programming/strfun", "hoc/programming/strings", "hoc/programming/system", "hoc/programming/timer", "hoc/simctrl/batch", "hoc/simctrl/bbsavestate", "hoc/simctrl/cvode", "hoc/simctrl/family", "hoc/simctrl/interpretermanagement", "hoc/simctrl/programmatic", "hoc/simctrl/runctrl", "hoc/simctrl/savstate", "hoc/simctrl/sessionsave", "hoc/simctrl/stdrun", "hoc/visualization/glyph", "hoc/visualization/graph", "hoc/visualization/grapher", "hoc/visualization/gui", "hoc/visualization/notify", "hoc/visualization/oldgrph", "hoc/visualization/plotshape", "hoc/visualization/plotshapeclass", "hoc/visualization/rvarplt", "hoc/visualization/shape", "hoc/visualization/shapebox", "how_to_develop_and_debug_code", "index", "install/code_coverage", "install/debug", "install/developer", "install/formatting", "install/install", "install/install_instructions", "install/mac_pkg", "install/python_wheels", "install/windows", "nmodl/NMODL_language", "nmodl/index", "nmodl/verbatim", "otherscripting", "publications", "publications-using-neuron", "python/analysis/guitools", "python/analysis/guitools/funfit", "python/analysis/guitools/impedancetools", "python/analysis/guitools/impedanx", "python/analysis/guitools/impratio", "python/analysis/guitools/mulfit", "python/analysis/guitools/runfit", "python/analysis/programmatic", "python/analysis/programmatic/impedance", "python/analysis/programmatic/misc", "python/analysis/programmatic/optimization", "python/compilationoptions", "python/envvariables", "python/index", "python/modelspec/guitools", "python/modelspec/guitools/cellbuilder", "python/modelspec/guitools/inserter", "python/modelspec/guitools/pointman", "python/modelspec/guitools/showmech", "python/modelspec/programmatic", "python/modelspec/programmatic/electrod", "python/modelspec/programmatic/hocmech", "python/modelspec/programmatic/ions", "python/modelspec/programmatic/kschan", "python/modelspec/programmatic/linmod", "python/modelspec/programmatic/mechanisms", "python/modelspec/programmatic/mechanisms/mech", "python/modelspec/programmatic/mechanisms/nmodl", "python/modelspec/programmatic/mechanisms/nmodl2", "python/modelspec/programmatic/mechtype", "python/modelspec/programmatic/network", "python/modelspec/programmatic/network/lyttonmpi", "python/modelspec/programmatic/network/netcon", "python/modelspec/programmatic/network/parcon", "python/modelspec/programmatic/network/parnet", "python/modelspec/programmatic/obsoletestimuli", "python/modelspec/programmatic/rxd", "python/modelspec/programmatic/rxdmath", "python/modelspec/programmatic/ste", "python/modelspec/programmatic/topology", "python/modelspec/programmatic/topology/geometry", "python/modelspec/programmatic/topology/seclist", "python/modelspec/programmatic/topology/secref", "python/modelspec/programmatic/topology/secspec", "python/programming/dynamiccode", "python/programming/errors", "python/programming/gui/dialog", "python/programming/gui/layout", "python/programming/gui/list", "python/programming/gui/misc", "python/programming/gui/nfunc", "python/programming/gui/pwman", "python/programming/gui/secbrows", "python/programming/gui/symchooser", "python/programming/gui/texteditor", "python/programming/gui/textmenus", "python/programming/gui/vfe", "python/programming/gui/widgets", "python/programming/guidesign", "python/programming/hoc", "python/programming/hocsyntax", "python/programming/internals", "python/programming/io", "python/programming/io/file", "python/programming/io/plotters", "python/programming/io/printf", "python/programming/io/read", "python/programming/io/ropen", "python/programming/math/constants", "python/programming/math/eqnsolve", "python/programming/math/functions", "python/programming/math/guimath", "python/programming/math/matrix", "python/programming/math/mcran4", "python/programming/math/misc", "python/programming/math/random", "python/programming/math/vector", "python/programming/mathematics", "python/programming/mechstan", "python/programming/neuronpython", "python/programming/ockeywor", "python/programming/oop", "python/programming/pointers/misc", "python/programming/pointers/pointer", "python/programming/pointers/ptrvector", "python/programming/predec", "python/programming/projectmanagement", "python/programming/python", "python/programming/references", "python/programming/sscanf", "python/programming/strfun", "python/programming/strings", "python/programming/system", "python/programming/timer", "python/simctrl/batch", "python/simctrl/bbsavestate", "python/simctrl/cvode", "python/simctrl/family", "python/simctrl/interpretermanagement", "python/simctrl/programmatic", "python/simctrl/runctrl", "python/simctrl/savstate", "python/simctrl/sessionsave", "python/simctrl/stdrun", "python/visualization/glyph", "python/visualization/graph", "python/visualization/grapher", "python/visualization/gui", "python/visualization/notify", "python/visualization/oldgrph", "python/visualization/plotshape", "python/visualization/plotshapeclass", "python/visualization/rvarplt", "python/visualization/shape", "python/visualization/shapebox", "removed_features", "rst_substitutions", "rxd-tutorials/Changing initial conditions and parameters", "rxd-tutorials/Reaction-Diffusion tutorial", "rxd-tutorials/Restricting reactions to certain sections", "rxd-tutorials/basic-initialization", "rxd-tutorials/calcium waves", "rxd-tutorials/circadian", "rxd-tutorials/combining currents from mod files with rxd", "rxd-tutorials/degradable_buffer", "rxd-tutorials/extracellular", "rxd-tutorials/index", "rxd-tutorials/ip3-demo", "rxd-tutorials/thresholds", "scm/guide/SCMGuide", "scm/guidelines/SCMGuidelines", "scm/index", "scm/policies/policies", "tutorials/ball-and-stick-1", "tutorials/ball-and-stick-2", "tutorials/ball-and-stick-3", "tutorials/ball-and-stick-4", "tutorials/index", "tutorials/pythontutorial", "tutorials/scripting-neuron-basics", "videos/cns-tutorial-2021", "videos/incfcns-tutorial-2022", "videos/index", "videos/netpyne-course-2021", "videos/neuron-course-2021"], "filenames": ["README.md", "changelog.md", "cmake_doc/index.rst", "cmake_doc/options.rst", "coreneuron/compatibility.rst", "coreneuron/examples.rst", "coreneuron/index.rst", "coreneuron/installation.rst", "coreneuron/running-a-simulation.rst", "courses/artificial_cells_neuron.rst", "courses/batch_runs_bulletin_board_parallelization.rst", "courses/batch_runs_with_bulletin_board.rst", "courses/building_and_labeling_a_two_electrod.rst", "courses/bulletin_board_walkthrough.rst", "courses/cellbuilder_overview_and_hints.rst", "courses/code/cell.ho.txt", "courses/code/initbatpar.ho.txt", "courses/code/initbatser.ho.txt", "courses/code/initonerun.ho.txt", "courses/code/initplotfi.ho.txt", "courses/code/net1run.hoc.txt", "courses/code/net1spec.ho.txt", "courses/code/net2spec.ho.txt", "courses/code/test0.hoc.txt", "courses/custom-initialization.rst", "courses/electrotonic_analysis.rst", "courses/exercises2018.rst", "courses/hints_for_inhomogeneous_channel_dist.rst", "courses/hoc_exercises.rst", "courses/hopfield_brody_network_in_python.rst", "courses/interactive_modeling.rst", "courses/intro_to_gui.rst", "courses/intro_to_the_network_builder.rst", "courses/introduction_to_the_linear_circuit.rst", "courses/managing_models_on_the_fly.rst", "courses/mpi_parallelization.rst", "courses/multithread_parallelization.rst", "courses/network_ready_cells_from_the_cellb.rst", "courses/neuron_scripting_exercises.rst", "courses/numerical-methods-exercises.rst", "courses/quality_issues_with_morphometric.rst", "courses/rxd_exercises.rst", "courses/saving_windows.rst", "courses/specifying_inhomogeneous_channel_dis.rst", "courses/state_and_parameter_discontinuities.rst", "courses/the_cellbuilder.rst", "courses/using_modeldb_and_modelview.rst", "courses/using_morphometric_data.rst", "courses/using_nmodl_files.rst", "courses/using_nsg_portal.rst", "courses/working_with_shape_plots.rst", "dealing_simulations_generate_lot.rst", "dev/HOCInterpreter/HOCInterpreter.md", "dev/gpu-testing.rst", "dev/how-do-i/how-do-i.rst", "dev/index.rst", "docs_requirements.txt", "doxygen.rst", "example_of_generating_movie.rst", "guide/bio_faq.rst", "guide/cellbuilder.rst", "guide/cellbuilder1.rst", "guide/cellbuilder2.rst", "guide/cellbuilder3.rst", "guide/data/finithnd1.hoc.txt", "guide/data/idraw-readme.txt", "guide/data/readme.txt", "guide/data/solution.ses.txt", "guide/differences_between_idraw_and_core.rst", "guide/example_hybrid_network.rst", "guide/example_of_simple_network.rst", "guide/faq.rst", "guide/finitialize_handler.rst", "guide/fixing_funny_axes.rst", "guide/heres_how_delete_v5.rst", "guide/heres_how_page.rst", "guide/hoc_chapter_11_old_reference.rst", "guide/how_to_get_started.rst", "guide/how_to_get_started_with_neuron.rst", "guide/how_to_move_labels.rst", "guide/how_to_translate_view.rst", "guide/import3d.rst", "guide/index.rst", "guide/introduction_to_network_construction.rst", "guide/modelview_compact_display.rst", "guide/network_builder_tutorials.rst", "guide/nmodls_built_in_functions.rst", "guide/nrn_defaults.rst", "guide/optimization.rst", "guide/optimization1.rst", "guide/optimization1a.rst", "guide/optimization2.rst", "guide/plot_what.rst", "guide/porting_mechanisms_to_cpp.rst", "guide/print_file_manager.rst", "guide/randomness.rst", "guide/run_simulation_plot_input_output.rst", "guide/run_simulation_plot_input_output2.rst", "guide/saveses.rst", "guide/set_up_a_subsetdomainiterator.rst", "guide/specify_and_verify_the_functions.rst", "guide/specify_the_model_parameters_varied.rst", "guide/step_1_define_type_cell.rst", "guide/step_1_define_type_of_cell.rst", "guide/step_1_define_type_of_cell2.rst", "guide/step_1_define_type_of_cell3.rst", "guide/step_2_create_each_cell.rst", "guide/step_2_create_network_cell.rst", "guide/step_3_connect_cells.rst", "guide/step_3_connect_cells_continued.rst", "guide/step_3_connect_the_cells.rst", "guide/step_3_connect_the_cells_continued.rst", "guide/tutorial_2_hybrid_nets.rst", "guide/tutorial_artificial_neurons.rst", "guide/units.rst", "guide/units_tutorial.rst", "guide/use_the_model_specification.rst", "guide/using_neuron_on_the_mac.rst", "guide/using_plotwhat_to_specify_a_variable.rst", "guide/using_session_files_for_saving.rst", "guide/using_the_d_lambda_rule.rst", "guide/what_is_neuron.rst", "guide/working_with_postscript_and_idraw.rst", "hoc/analysis/guitools.rst", "hoc/analysis/guitools/funfit.rst", "hoc/analysis/guitools/impedancetools.rst", "hoc/analysis/guitools/impedanx.rst", "hoc/analysis/guitools/impratio.rst", "hoc/analysis/guitools/mulfit.rst", "hoc/analysis/guitools/runfit.rst", "hoc/analysis/programmatic.rst", "hoc/analysis/programmatic/impedance.rst", "hoc/analysis/programmatic/misc.rst", "hoc/analysis/programmatic/optimization.rst", "hoc/compilationoptions.rst", "hoc/index.rst", "hoc/modelspec/guitools.rst", "hoc/modelspec/guitools/cellbuilder.rst", "hoc/modelspec/guitools/inserter.rst", "hoc/modelspec/guitools/pointman.rst", "hoc/modelspec/guitools/showmech.rst", "hoc/modelspec/programmatic.rst", "hoc/modelspec/programmatic/electrod.rst", "hoc/modelspec/programmatic/hocmech.rst", "hoc/modelspec/programmatic/ions.rst", "hoc/modelspec/programmatic/kschan.rst", "hoc/modelspec/programmatic/linmod.rst", "hoc/modelspec/programmatic/mechanisms.rst", "hoc/modelspec/programmatic/mechanisms/mech.rst", "hoc/modelspec/programmatic/mechanisms/nmodl.rst", "hoc/modelspec/programmatic/mechanisms/nmodl2.rst", "hoc/modelspec/programmatic/mechtype.rst", "hoc/modelspec/programmatic/network.rst", "hoc/modelspec/programmatic/network/lyttonmpi.rst", "hoc/modelspec/programmatic/network/netcon.rst", "hoc/modelspec/programmatic/network/parcon.rst", "hoc/modelspec/programmatic/network/parnet.rst", "hoc/modelspec/programmatic/obsoletestimuli.rst", "hoc/modelspec/programmatic/rxd.rst", "hoc/modelspec/programmatic/ste.rst", "hoc/modelspec/programmatic/topology.rst", "hoc/modelspec/programmatic/topology/geometry.rst", "hoc/modelspec/programmatic/topology/seclist.rst", "hoc/modelspec/programmatic/topology/secref.rst", "hoc/modelspec/programmatic/topology/secspec.rst", "hoc/programming/dynamiccode.rst", "hoc/programming/errors.rst", "hoc/programming/gui/dialog.rst", "hoc/programming/gui/layout.rst", "hoc/programming/gui/list.rst", "hoc/programming/gui/misc.rst", "hoc/programming/gui/nfunc.rst", "hoc/programming/gui/pwman.rst", "hoc/programming/gui/secbrows.rst", "hoc/programming/gui/symchooser.rst", "hoc/programming/gui/texteditor.rst", "hoc/programming/gui/textmenus.rst", "hoc/programming/gui/vfe.rst", "hoc/programming/gui/widgets.rst", "hoc/programming/guidesign.rst", "hoc/programming/hoc.rst", "hoc/programming/hocsyntax.rst", "hoc/programming/internals.rst", "hoc/programming/io.rst", "hoc/programming/io/file.rst", "hoc/programming/io/plotters.rst", "hoc/programming/io/printf.rst", "hoc/programming/io/read.rst", "hoc/programming/io/ropen.rst", "hoc/programming/math/constants.rst", "hoc/programming/math/eqnsolve.rst", "hoc/programming/math/functions.rst", "hoc/programming/math/guimath.rst", "hoc/programming/math/matrix.rst", "hoc/programming/math/mcran4.rst", "hoc/programming/math/misc.rst", "hoc/programming/math/random.rst", "hoc/programming/math/vector.rst", "hoc/programming/mathematics.rst", "hoc/programming/mechstan.rst", "hoc/programming/neuronpython.rst", "hoc/programming/ockeywor.rst", "hoc/programming/oop.rst", "hoc/programming/pointers/misc.rst", "hoc/programming/pointers/pointer.rst", "hoc/programming/pointers/ptrvector.rst", "hoc/programming/predec.rst", "hoc/programming/projectmanagement.rst", "hoc/programming/python.rst", "hoc/programming/references.rst", "hoc/programming/sscanf.rst", "hoc/programming/strfun.rst", "hoc/programming/strings.rst", "hoc/programming/system.rst", "hoc/programming/timer.rst", "hoc/simctrl/batch.rst", "hoc/simctrl/bbsavestate.rst", "hoc/simctrl/cvode.rst", "hoc/simctrl/family.rst", "hoc/simctrl/interpretermanagement.rst", "hoc/simctrl/programmatic.rst", "hoc/simctrl/runctrl.rst", "hoc/simctrl/savstate.rst", "hoc/simctrl/sessionsave.rst", "hoc/simctrl/stdrun.rst", "hoc/visualization/glyph.rst", "hoc/visualization/graph.rst", "hoc/visualization/grapher.rst", "hoc/visualization/gui.rst", "hoc/visualization/notify.rst", "hoc/visualization/oldgrph.rst", "hoc/visualization/plotshape.rst", "hoc/visualization/plotshapeclass.rst", "hoc/visualization/rvarplt.rst", "hoc/visualization/shape.rst", "hoc/visualization/shapebox.rst", "how_to_develop_and_debug_code.rst", "index.rst", "install/code_coverage.md", "install/debug.md", "install/developer.rst", "install/formatting.md", "install/install.rst", "install/install_instructions.md", "install/mac_pkg.md", "install/python_wheels.md", "install/windows.md", "nmodl/NMODL_language.ipynb", "nmodl/index.rst", "nmodl/verbatim.rst", "otherscripting.rst", "publications.rst", "publications-using-neuron.rst", "python/analysis/guitools.rst", "python/analysis/guitools/funfit.rst", "python/analysis/guitools/impedancetools.rst", "python/analysis/guitools/impedanx.rst", "python/analysis/guitools/impratio.rst", "python/analysis/guitools/mulfit.rst", "python/analysis/guitools/runfit.rst", "python/analysis/programmatic.rst", "python/analysis/programmatic/impedance.rst", "python/analysis/programmatic/misc.rst", "python/analysis/programmatic/optimization.rst", "python/compilationoptions.rst", "python/envvariables.rst", "python/index.rst", "python/modelspec/guitools.rst", "python/modelspec/guitools/cellbuilder.rst", "python/modelspec/guitools/inserter.rst", "python/modelspec/guitools/pointman.rst", "python/modelspec/guitools/showmech.rst", "python/modelspec/programmatic.rst", "python/modelspec/programmatic/electrod.rst", "python/modelspec/programmatic/hocmech.rst", "python/modelspec/programmatic/ions.rst", "python/modelspec/programmatic/kschan.rst", "python/modelspec/programmatic/linmod.rst", "python/modelspec/programmatic/mechanisms.rst", "python/modelspec/programmatic/mechanisms/mech.rst", "python/modelspec/programmatic/mechanisms/nmodl.rst", "python/modelspec/programmatic/mechanisms/nmodl2.rst", "python/modelspec/programmatic/mechtype.rst", "python/modelspec/programmatic/network.rst", "python/modelspec/programmatic/network/lyttonmpi.rst", "python/modelspec/programmatic/network/netcon.rst", "python/modelspec/programmatic/network/parcon.rst", "python/modelspec/programmatic/network/parnet.rst", "python/modelspec/programmatic/obsoletestimuli.rst", "python/modelspec/programmatic/rxd.rst", "python/modelspec/programmatic/rxdmath.rst", "python/modelspec/programmatic/ste.rst", "python/modelspec/programmatic/topology.rst", "python/modelspec/programmatic/topology/geometry.rst", "python/modelspec/programmatic/topology/seclist.rst", "python/modelspec/programmatic/topology/secref.rst", "python/modelspec/programmatic/topology/secspec.rst", "python/programming/dynamiccode.rst", "python/programming/errors.rst", "python/programming/gui/dialog.rst", "python/programming/gui/layout.rst", "python/programming/gui/list.rst", "python/programming/gui/misc.rst", "python/programming/gui/nfunc.rst", "python/programming/gui/pwman.rst", "python/programming/gui/secbrows.rst", "python/programming/gui/symchooser.rst", "python/programming/gui/texteditor.rst", "python/programming/gui/textmenus.rst", "python/programming/gui/vfe.rst", "python/programming/gui/widgets.rst", "python/programming/guidesign.rst", "python/programming/hoc.rst", "python/programming/hocsyntax.rst", "python/programming/internals.rst", "python/programming/io.rst", "python/programming/io/file.rst", "python/programming/io/plotters.rst", "python/programming/io/printf.rst", "python/programming/io/read.rst", "python/programming/io/ropen.rst", "python/programming/math/constants.rst", "python/programming/math/eqnsolve.rst", "python/programming/math/functions.rst", "python/programming/math/guimath.rst", "python/programming/math/matrix.rst", "python/programming/math/mcran4.rst", "python/programming/math/misc.rst", "python/programming/math/random.rst", "python/programming/math/vector.rst", "python/programming/mathematics.rst", "python/programming/mechstan.rst", "python/programming/neuronpython.rst", "python/programming/ockeywor.rst", "python/programming/oop.rst", "python/programming/pointers/misc.rst", "python/programming/pointers/pointer.rst", "python/programming/pointers/ptrvector.rst", "python/programming/predec.rst", "python/programming/projectmanagement.rst", "python/programming/python.rst", "python/programming/references.rst", "python/programming/sscanf.rst", "python/programming/strfun.rst", "python/programming/strings.rst", "python/programming/system.rst", "python/programming/timer.rst", "python/simctrl/batch.rst", "python/simctrl/bbsavestate.rst", "python/simctrl/cvode.rst", "python/simctrl/family.rst", "python/simctrl/interpretermanagement.rst", "python/simctrl/programmatic.rst", "python/simctrl/runctrl.rst", "python/simctrl/savstate.rst", "python/simctrl/sessionsave.rst", "python/simctrl/stdrun.rst", "python/visualization/glyph.rst", "python/visualization/graph.rst", "python/visualization/grapher.rst", "python/visualization/gui.rst", "python/visualization/notify.rst", "python/visualization/oldgrph.rst", "python/visualization/plotshape.rst", "python/visualization/plotshapeclass.rst", "python/visualization/rvarplt.rst", "python/visualization/shape.rst", "python/visualization/shapebox.rst", "removed_features.rst", "rst_substitutions.txt", "rxd-tutorials/Changing initial conditions and parameters.ipynb", "rxd-tutorials/Reaction-Diffusion tutorial.ipynb", "rxd-tutorials/Restricting reactions to certain sections.ipynb", "rxd-tutorials/basic-initialization.ipynb", "rxd-tutorials/calcium waves.ipynb", "rxd-tutorials/circadian.ipynb", "rxd-tutorials/combining currents from mod files with rxd.ipynb", "rxd-tutorials/degradable_buffer.ipynb", "rxd-tutorials/extracellular.ipynb", "rxd-tutorials/index.rst", "rxd-tutorials/ip3-demo.ipynb", "rxd-tutorials/thresholds.ipynb", "scm/guide/SCMGuide.md", "scm/guidelines/SCMGuidelines.md", "scm/index.rst", "scm/policies/policies.md", "tutorials/ball-and-stick-1.ipynb", "tutorials/ball-and-stick-2.ipynb", "tutorials/ball-and-stick-3.ipynb", "tutorials/ball-and-stick-4.ipynb", "tutorials/index.rst", "tutorials/pythontutorial.ipynb", "tutorials/scripting-neuron-basics.ipynb", "videos/cns-tutorial-2021.rst", "videos/incfcns-tutorial-2022.rst", "videos/index.rst", "videos/netpyne-course-2021.rst", "videos/neuron-course-2021.rst"], "titles": ["NEURON Documentation", "NEURON 8.2", "CMake Build Options", "Introduction", "CoreNEURON Compatibility", "Examples", "CoreNEURON", "Getting CoreNEURON", "Running a simulation", "Artificial Cells in NEURON", "Batch runs with bulletin board parallelization", "Batch runs with bulletin board parallelization", "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder", "Bulletin board code walkthroughs", "CellBuilder Overview and Hints", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Custom Initialization", "Electrotonic Analysis with NEURON", "NEURON Course Exercises", "Overview of the Tasks", "HOC Exercises", "Hopfield Brody synchronization (sync) model", "Interactive Modeling", "Introduction to the GUI", "Introduction to the Network Builder", "Introduction to the Linear Circuit Builder", "Managing Models on the Fly", "Parallel Computing with MPI", "Multithreaded paralellization", "Network ready cells from the CellBuilder", "NEURON scripting exercises", "Numerical Methods Exercises", "Quality Issues with Morphometric Data", "Reaction-Diffusion Exercises", "Saving Windows", "Inhomogeneous Channel Distribution", "State and parameter discontinuities", "Using the CellBuilder", "Using ModelDB with NEURON", "Working with Morphometric Data", "Using NMODL files", "Using the Neuroscience Gateway (NSG) portal", "Working with Shape Plots", "Dealing with Simulations that Generate a lot of Data", "HOC Interpreter", "Testing GPU functionality", "How-Do-I Guide", "NEURON Development topics", "bokeh 3 seems to break docs notebooks", "C/C++ API", "Example of Generating a Movie", "Biology Modeling FAQ", "Using the Cell Builder GUI", "Creating a stylized (\u201cstick-figure\u201d) model cell", "Managing a model cell with complex anatomy", "Specifying parameterized variation of biophysical properties", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Differences between idraw and CorelDraw", "Example of a Hybrid Network", "Example of a Simple Network", "Frequently asked questions (FAQ)", "FIinitializeHandler", "Fixing funny axes", "How to delete v(.5) from the graph", "How to plot variables that belong to biophysical cell models in a network", "Hoc", "How to get started with NEURON", "How to get started with NEURON", "How to move the labels", "How to translate the view", "Using the Import3D GUI", "Guides", "Introduction to Network Construction", "ModelView: Compact display of parameters for NEURON models", "Network Builder tutorials", "NMODL\u2019s built-in functions", "How to change the background color used in shape plots and other graphs", "Using NEURON\u2019s Optimization Tools", "Tutorial 1 : Fitting a function to data", "Implementational Details of the Synaptic Mechanism", "Tutorial 2 : Fitting a model to data", "&lt;no title&gt;", "Adapting MOD files for C++ with NEURON 9.0[.dev]", "The Print &amp; File Manager", "Randomness in NEURON models", "Run a simulation and plot the input and output spike trains", "Run a simulation and plot the input and output spike trains", "Using Session Files for Saving and Retrieving Windows", "Step 1. Set up a SubsetDomainIterator", "Step 3. Specify and verify the functions that govern the parameters", "Step 2. Specify the model parameter(s) to be varied", "Step 1. Define the types of cells", "Step 1. Define the types of cells", "2. Specifying what kinds of synapses can be attached to an M cell", "3. Placing synapses on the M cell", "Step 2. Create each cell in the network", "Step 2. Create each cell in the network", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Tutorial 2 : Making Hybrid Nets", "Tutorial 1: Making Networks of Artificial Neurons", "Units used in NEURON", "UNITS Tutorial", "Step 4. Use the model specification", "Using NEURON on the Mac", "Using \u201cPlot what?\u201d to Specify a Variable to be plotted", "Using Session Files for Saving and Retrieving Windows", "Using the d_lambda Rule", "What is NEURON", "Working with PostScript and idraw figures", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "NEURON HOC documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "Obsolete Text Menus", "ValueFieldEditor", "Widgets", "GUI Design", "HOC Language", "HOC Syntax", "Debugging and Internals Access", "Input and Output", "File Access (Recommended Way)", "Plotter Control (obsolete)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "neuron", "HOC Keywords", "Object Oriented Programming", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Predeclared Variables", "Project Management", "Python Language", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "How to develop and debug your own code", "The NEURON Simulator", "Code Coverage", "Diagnosis and Debugging", "Developer Builds", "Code Formatting", "Installation", "Installing Binary Distribution", "Mac Binary Package (Apple M1 and Mac x86_64)", "Building Python Wheels", "Windows build", "Neuron MODelling Language", "NMODLanguage", "VERBATIM", "Other scripting languages", "Publications about NEURON", "Publications using NEURON", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "Environment Variables", "NEURON Python documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "Mathematical functions for rate expressions", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "Obsolete Text Menus", "ValueFieldEditor", "GUI Widgets", "GUI Design", "HOC Language", "HOC Syntax", "Debugging and Internals Access", "Input and Output", "File Access (objected-oriented via NEURON)", "Plotter Control (obsolete)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "neuron", "HOC Keywords", "Object Oriented Programming in HOC", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Predeclared Variables", "Project Management", "Python Language", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "Removed Features", "&lt;no title&gt;", "Varying initial concentrations and parameters", "Reaction-diffusion introduction", "Restricting reactions to a part of a region", "Initialization Strategies", "Example: Calcium waves", "Example: Circadian rhythm", "Example: combining MOD file ion channels with rxd", "Example: Degradable buffer", "Extracellular reaction-diffusion tutorial", "Python RXD tutorials", "IP3 demo", "Reaction-diffusion thresholds", "NEURON Source and Release Management Guide", "NEURON Versioning and Release Guidelines", "NEURON SCM and Release", "NEURON Software Policies", "Ball and stick 1: Basic cell", "Ball and stick 2: Build a ring network of ball-and-stick cells", "Ball and stick 3: Extensible network of cells", "Ball and stick 4: Parallel vs serial mode", "Python tutorials", "Introduction to Python", "Scripting NEURON basics", "CNS 2021 Online Tutorial", "INCF/CNS 2022 Online Tutorial", "Training videos", "NetPyNE 2021 Online Course", "NEURON 2021 Online Course"], "terms": {"latest": [0, 1, 7, 11, 76, 77, 121, 243, 244, 245, 246, 247, 382, 383], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 395, 397], "avail": [0, 1, 3, 7, 29, 39, 40, 46, 51, 52, 54, 59, 71, 76, 77, 82, 83, 84, 88, 89, 93, 95, 96, 120, 122, 128, 131, 137, 146, 148, 149, 151, 155, 156, 158, 159, 165, 168, 176, 182, 185, 196, 197, 200, 202, 208, 211, 213, 217, 222, 224, 230, 234, 239, 243, 245, 252, 258, 261, 268, 277, 279, 280, 282, 286, 287, 289, 290, 291, 292, 295, 296, 297, 300, 308, 314, 317, 321, 328, 329, 332, 333, 334, 340, 343, 344, 345, 349, 354, 356, 358, 362, 366, 371, 373, 376, 382, 383, 391, 392], "http": [0, 1, 3, 4, 7, 10, 25, 38, 46, 49, 52, 58, 65, 84, 88, 91, 93, 95, 121, 122, 146, 153, 155, 159, 193, 196, 200, 238, 239, 243, 244, 245, 246, 247, 252, 277, 284, 286, 291, 325, 328, 332, 340, 360, 370, 372, 373, 375, 376, 378, 381, 382, 383, 385, 397], "nrn": [0, 1, 7, 10, 11, 52, 71, 77, 78, 87, 117, 148, 149, 153, 155, 156, 161, 170, 178, 193, 197, 201, 208, 213, 214, 216, 217, 220, 226, 228, 237, 238, 239, 241, 243, 244, 245, 246, 247, 265, 279, 280, 281, 284, 286, 287, 289, 293, 302, 310, 325, 329, 333, 340, 345, 346, 348, 349, 352, 358, 360, 378, 392], "io": [0, 1, 49, 245, 247, 316, 318, 386, 391, 392], "en": [0, 52, 128, 243, 247, 252, 258, 382, 388], "githubpag": 0, "neuronsimul": [0, 1, 3, 4, 7, 10, 77, 237, 238, 243, 245, 286, 360, 373, 378], "github": [0, 1, 3, 4, 7, 10, 49, 77, 91, 93, 237, 238, 239, 243, 244, 246, 286, 360, 371, 383, 384, 385], "content": [0, 3, 24, 42, 45, 46, 49, 61, 71, 76, 88, 89, 98, 119, 122, 135, 149, 155, 168, 169, 184, 188, 197, 201, 207, 243, 280, 282, 286, 300, 316, 320, 323, 329, 333, 339, 374, 382, 391, 392, 396], "user": [0, 1, 3, 4, 9, 10, 11, 19, 25, 27, 31, 42, 45, 47, 51, 52, 54, 61, 66, 71, 73, 76, 78, 82, 94, 95, 98, 102, 114, 115, 119, 122, 124, 125, 128, 129, 134, 139, 142, 148, 149, 150, 155, 159, 160, 164, 167, 168, 175, 176, 178, 181, 182, 184, 187, 188, 193, 197, 200, 201, 206, 207, 213, 216, 217, 220, 221, 222, 224, 226, 228, 230, 234, 243, 244, 245, 252, 254, 255, 258, 259, 264, 270, 273, 279, 280, 281, 286, 291, 292, 297, 299, 300, 307, 308, 310, 313, 314, 316, 319, 320, 325, 329, 332, 333, 338, 339, 340, 345, 348, 349, 352, 354, 356, 358, 360, 362, 366, 374, 375, 382, 383, 389], "hoc": [0, 1, 4, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 26, 31, 33, 35, 36, 38, 42, 45, 46, 47, 53, 54, 55, 58, 59, 60, 63, 64, 66, 67, 72, 74, 77, 78, 81, 82, 83, 85, 89, 91, 95, 98, 114, 116, 117, 118, 119, 120, 121, 124, 129, 132, 133, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 165, 168, 172, 178, 182, 184, 187, 193, 197, 198, 199, 200, 202, 203, 207, 211, 213, 214, 216, 217, 218, 220, 222, 224, 226, 227, 228, 230, 234, 237, 239, 243, 247, 250, 252, 254, 259, 263, 265, 266, 272, 273, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 295, 297, 299, 300, 301, 302, 304, 306, 310, 314, 316, 318, 319, 321, 324, 325, 327, 329, 330, 331, 332, 335, 336, 339, 343, 345, 346, 348, 349, 350, 352, 353, 354, 356, 358, 359, 360, 362, 366, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 386, 387, 388, 392, 395], "python": [0, 1, 2, 4, 5, 7, 8, 10, 13, 14, 26, 30, 31, 36, 38, 39, 44, 45, 47, 48, 53, 54, 59, 61, 71, 77, 81, 86, 89, 95, 117, 121, 133, 135, 146, 148, 149, 150, 155, 158, 159, 160, 178, 181, 182, 193, 197, 200, 205, 213, 226, 237, 238, 239, 240, 241, 242, 244, 246, 248, 250, 251, 252, 259, 263, 265, 270, 274, 277, 279, 280, 281, 282, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 305, 306, 310, 313, 314, 316, 318, 319, 321, 323, 324, 325, 327, 329, 331, 332, 333, 334, 335, 336, 339, 342, 344, 345, 346, 349, 356, 358, 362, 365, 366, 371, 374, 375, 376, 378, 382, 383, 384, 386, 389, 395], "tutori": [0, 1, 47, 49, 59, 61, 62, 63, 71, 77, 78, 81, 82, 90, 118, 120, 121, 158, 239, 252, 266, 286, 289, 290, 340, 370, 371, 373, 374, 386, 387, 388, 389, 391, 392, 395], "rxd": [0, 1, 4, 41, 59, 141, 155, 158, 200, 243, 272, 274, 286, 289, 290, 332, 354, 370, 371, 373, 374, 375, 377, 378, 380, 381, 392, 395, 397], "develop": [0, 1, 3, 41, 45, 52, 61, 71, 76, 82, 83, 84, 93, 149, 155, 158, 161, 207, 216, 230, 243, 244, 248, 251, 252, 280, 286, 289, 293, 339, 348, 362, 368, 375, 378, 382, 383, 390], "scm": [0, 246, 382, 383], "technic": [0, 4, 52, 252, 382, 385, 387, 397], "topic": [0, 4, 61, 71, 74, 88, 89, 91, 252, 371, 382, 383, 396, 397], "doxygen": [0, 3, 57], "It": [0, 3, 5, 7, 12, 13, 14, 25, 27, 29, 32, 36, 37, 42, 44, 45, 47, 52, 53, 59, 60, 61, 62, 71, 76, 77, 78, 81, 83, 84, 89, 91, 93, 94, 98, 100, 102, 114, 115, 118, 119, 121, 128, 131, 139, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 170, 172, 181, 185, 193, 194, 196, 197, 199, 201, 206, 207, 208, 211, 216, 217, 220, 221, 222, 224, 226, 227, 228, 230, 231, 234, 239, 243, 247, 258, 261, 270, 276, 277, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 302, 304, 310, 313, 317, 325, 326, 328, 329, 331, 333, 338, 339, 340, 343, 348, 349, 352, 353, 354, 356, 358, 359, 360, 362, 363, 366, 374, 382, 383, 386, 389, 391, 392], "recommend": [0, 7, 44, 54, 76, 88, 114, 115, 150, 164, 180, 183, 197, 200, 207, 208, 224, 228, 237, 238, 239, 243, 281, 285, 289, 292, 329, 332, 339, 356, 360, 365, 391], "us": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 59, 63, 65, 66, 69, 73, 74, 76, 79, 82, 83, 84, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 115, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 182, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 247, 249, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 313, 314, 316, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 395, 396, 397], "virtual": [0, 33, 42, 43, 45, 61, 91, 94, 155, 243, 252, 286, 387, 392, 395], "environ": [0, 1, 3, 7, 52, 71, 76, 77, 78, 94, 121, 149, 153, 155, 165, 200, 207, 208, 213, 228, 239, 240, 243, 244, 245, 250, 251, 252, 266, 280, 284, 286, 297, 332, 339, 345, 360, 368, 374, 382, 391, 392, 395], "exampl": [0, 3, 4, 6, 7, 8, 10, 11, 13, 14, 25, 31, 33, 36, 39, 42, 47, 51, 53, 54, 55, 59, 61, 63, 64, 65, 73, 76, 77, 78, 81, 82, 83, 85, 87, 88, 89, 91, 93, 94, 95, 98, 107, 109, 112, 113, 114, 115, 118, 119, 121, 128, 131, 133, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 170, 173, 174, 178, 181, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 208, 210, 211, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 230, 232, 233, 234, 239, 243, 244, 245, 248, 252, 258, 261, 263, 265, 274, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 310, 313, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 356, 357, 358, 359, 360, 362, 364, 365, 366, 370, 372, 373, 378, 381, 382, 383, 386, 388, 390, 391, 392], "python3": [0, 1, 3, 238, 243, 244, 245], "m": [0, 3, 4, 9, 13, 16, 17, 18, 24, 29, 31, 32, 33, 36, 37, 38, 40, 41, 44, 46, 47, 53, 58, 59, 61, 62, 64, 67, 69, 75, 82, 83, 84, 88, 90, 91, 95, 96, 97, 100, 102, 106, 109, 111, 112, 114, 115, 120, 121, 122, 131, 142, 146, 148, 149, 154, 156, 158, 159, 178, 193, 196, 197, 199, 200, 214, 217, 220, 221, 225, 226, 227, 230, 234, 243, 244, 247, 250, 251, 252, 261, 273, 277, 279, 280, 285, 287, 289, 290, 310, 325, 328, 329, 331, 332, 346, 349, 352, 353, 354, 357, 358, 359, 362, 366, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 386, 387, 388, 389, 392], "venv": 0, "sourc": [0, 1, 3, 6, 9, 11, 25, 32, 33, 35, 40, 41, 46, 49, 53, 55, 58, 66, 69, 71, 76, 83, 88, 103, 110, 111, 121, 148, 149, 151, 154, 155, 156, 159, 193, 197, 199, 216, 217, 224, 237, 238, 239, 242, 244, 245, 252, 279, 280, 282, 285, 286, 287, 291, 325, 329, 331, 348, 349, 356, 371, 376, 378, 383, 384, 387, 388, 389, 392], "bin": [0, 7, 53, 117, 153, 155, 196, 197, 207, 213, 216, 217, 238, 239, 241, 243, 244, 246, 284, 286, 328, 329, 339, 345, 348, 349], "activ": [0, 12, 14, 20, 24, 25, 29, 43, 46, 51, 52, 61, 65, 71, 75, 82, 84, 90, 91, 104, 121, 128, 148, 149, 154, 155, 159, 191, 217, 221, 224, 228, 244, 252, 258, 279, 280, 283, 285, 286, 289, 291, 296, 323, 349, 353, 356, 360, 371, 374, 375, 376, 377, 382, 383, 389, 392], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 24, 25, 27, 28, 31, 32, 33, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 59, 61, 62, 65, 68, 71, 75, 76, 81, 84, 86, 88, 89, 91, 93, 94, 95, 98, 103, 114, 115, 118, 119, 121, 125, 126, 128, 129, 131, 139, 142, 143, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 178, 181, 182, 185, 191, 193, 196, 197, 199, 200, 201, 207, 208, 211, 217, 220, 222, 226, 227, 228, 231, 234, 235, 238, 239, 243, 244, 245, 248, 251, 252, 255, 256, 258, 259, 261, 270, 273, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 301, 313, 314, 317, 318, 319, 323, 325, 328, 329, 331, 332, 333, 336, 337, 339, 340, 343, 349, 352, 354, 356, 358, 359, 360, 363, 364, 365, 366, 367, 371, 372, 373, 374, 378, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393], "order": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 29, 32, 33, 37, 42, 46, 52, 60, 61, 62, 65, 72, 75, 76, 83, 89, 91, 93, 95, 98, 116, 119, 121, 126, 128, 129, 134, 139, 148, 149, 150, 151, 154, 155, 156, 159, 161, 162, 164, 165, 168, 181, 184, 193, 197, 201, 205, 215, 217, 220, 222, 224, 226, 228, 231, 234, 238, 239, 243, 245, 246, 247, 252, 256, 258, 259, 264, 270, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 297, 300, 308, 313, 316, 325, 329, 331, 333, 337, 347, 349, 352, 354, 356, 358, 360, 363, 366, 371, 374, 375, 382, 389, 391], "you": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 53, 54, 59, 61, 62, 65, 68, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 122, 128, 129, 139, 144, 146, 148, 149, 150, 153, 154, 155, 156, 158, 160, 161, 164, 168, 169, 170, 174, 178, 181, 182, 184, 193, 194, 197, 200, 201, 203, 207, 208, 211, 217, 219, 220, 222, 224, 226, 227, 228, 231, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 250, 252, 258, 259, 270, 275, 277, 279, 280, 281, 284, 285, 286, 287, 289, 292, 293, 296, 299, 300, 301, 302, 306, 310, 313, 314, 316, 325, 326, 329, 332, 333, 335, 339, 340, 343, 349, 351, 352, 354, 356, 358, 359, 360, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 378, 382, 386, 387, 389, 391, 392], "need": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 24, 25, 28, 29, 30, 31, 35, 36, 40, 47, 51, 52, 53, 61, 62, 66, 73, 75, 76, 77, 82, 83, 85, 93, 94, 95, 97, 99, 100, 104, 112, 118, 121, 122, 128, 131, 134, 144, 148, 149, 150, 155, 156, 158, 159, 161, 163, 164, 168, 182, 184, 193, 197, 200, 206, 207, 208, 211, 216, 217, 220, 222, 226, 227, 228, 233, 238, 239, 241, 243, 244, 245, 246, 247, 250, 252, 258, 261, 264, 275, 279, 280, 281, 285, 286, 287, 289, 291, 293, 296, 300, 314, 316, 325, 326, 329, 332, 338, 339, 340, 343, 348, 349, 352, 353, 354, 356, 358, 359, 360, 365, 371, 372, 374, 375, 376, 377, 378, 382, 385, 386, 387, 388, 389, 391, 392], "pip": [0, 1, 3, 6, 58, 77, 88, 237, 241, 243, 244, 250, 391], "instal": [0, 1, 6, 10, 11, 35, 52, 53, 72, 76, 78, 82, 88, 138, 139, 143, 153, 155, 156, 213, 220, 226, 228, 238, 239, 240, 241, 244, 245, 250, 265, 269, 270, 274, 284, 286, 287, 340, 345, 352, 358, 360, 382, 383, 385, 389, 391, 392, 393], "docs_requir": 0, "txt": [0, 3, 7, 46, 71, 122, 153, 243, 244, 284, 382], "pip3": [0, 237, 243, 244], "r": [0, 3, 28, 38, 40, 47, 50, 53, 58, 69, 71, 75, 76, 83, 88, 91, 95, 105, 106, 114, 115, 121, 148, 149, 155, 158, 170, 181, 184, 186, 188, 189, 193, 196, 197, 217, 225, 232, 239, 243, 247, 251, 252, 265, 279, 280, 286, 289, 302, 313, 316, 318, 321, 325, 328, 329, 349, 352, 354, 357, 364, 365, 371, 375, 378, 382, 386, 387, 388, 389, 392], "doc": [0, 1, 3, 155, 176, 200, 243, 244, 286, 308, 332, 340, 378, 382, 383, 391], "upgrad": [0, 58, 93, 243, 244, 289], "also": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 25, 27, 28, 29, 33, 35, 36, 37, 40, 45, 46, 47, 49, 50, 52, 53, 54, 59, 61, 62, 63, 65, 71, 75, 77, 78, 81, 84, 88, 89, 91, 93, 94, 95, 99, 100, 102, 103, 105, 114, 115, 118, 121, 122, 124, 125, 126, 128, 129, 131, 133, 139, 142, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 163, 165, 168, 170, 178, 181, 182, 184, 193, 194, 196, 197, 200, 201, 204, 208, 210, 211, 217, 220, 222, 224, 226, 228, 229, 230, 231, 236, 237, 239, 243, 244, 245, 246, 252, 254, 255, 256, 258, 259, 261, 263, 265, 270, 273, 277, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 297, 300, 302, 310, 313, 314, 316, 325, 326, 328, 329, 331, 332, 333, 340, 342, 343, 349, 350, 352, 354, 356, 358, 360, 361, 362, 363, 364, 365, 368, 371, 373, 375, 376, 377, 378, 382, 383, 386, 387, 388, 389, 391, 392, 394, 396, 397], "make": [0, 1, 3, 4, 5, 7, 8, 10, 11, 14, 24, 25, 27, 28, 31, 32, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 52, 58, 61, 62, 65, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 114, 115, 119, 120, 121, 122, 129, 131, 134, 139, 142, 148, 149, 150, 151, 153, 155, 156, 161, 163, 164, 168, 169, 170, 171, 172, 173, 178, 181, 185, 193, 194, 197, 201, 202, 207, 208, 210, 217, 220, 221, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244, 245, 246, 247, 249, 252, 259, 261, 264, 270, 272, 273, 279, 280, 281, 282, 284, 286, 287, 293, 300, 301, 302, 303, 304, 305, 310, 313, 317, 325, 326, 329, 333, 334, 339, 340, 342, 349, 352, 353, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 381, 382, 383, 386, 387, 389, 390, 392], "sure": [0, 3, 4, 5, 7, 8, 10, 11, 14, 28, 29, 31, 38, 42, 46, 47, 50, 51, 59, 61, 62, 71, 81, 85, 87, 89, 91, 93, 94, 95, 97, 98, 100, 101, 105, 119, 120, 121, 122, 129, 142, 148, 149, 150, 153, 155, 185, 197, 201, 208, 210, 217, 220, 224, 226, 228, 235, 236, 243, 244, 259, 273, 280, 281, 284, 286, 301, 317, 329, 333, 340, 342, 349, 352, 356, 358, 360, 367, 382, 386, 389], "have": [0, 1, 3, 6, 8, 9, 10, 11, 13, 14, 16, 24, 25, 27, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 51, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 103, 104, 105, 106, 107, 109, 114, 115, 117, 119, 121, 122, 128, 129, 131, 134, 140, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 178, 181, 182, 193, 195, 197, 201, 205, 208, 215, 216, 217, 221, 224, 226, 228, 230, 231, 233, 238, 239, 243, 244, 245, 247, 248, 252, 258, 259, 261, 264, 271, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 308, 310, 313, 314, 325, 327, 328, 329, 333, 337, 339, 340, 342, 348, 349, 353, 356, 358, 360, 362, 363, 365, 368, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395], "pandoc": 0, "depend": [0, 3, 4, 7, 9, 10, 11, 13, 24, 25, 27, 29, 40, 42, 47, 52, 53, 54, 63, 71, 76, 81, 89, 95, 98, 118, 119, 121, 128, 131, 146, 148, 149, 150, 151, 155, 159, 161, 168, 190, 192, 193, 197, 200, 201, 204, 207, 212, 214, 217, 220, 222, 226, 227, 228, 232, 239, 240, 242, 245, 248, 249, 252, 258, 261, 277, 279, 280, 281, 282, 286, 289, 291, 293, 300, 308, 322, 324, 325, 329, 332, 333, 336, 339, 344, 346, 349, 352, 354, 358, 359, 360, 364, 365, 371, 373, 376, 382, 383, 385, 387, 391, 392], "list": [0, 1, 3, 13, 14, 21, 22, 27, 29, 32, 36, 37, 38, 52, 59, 61, 67, 75, 76, 77, 78, 82, 84, 89, 91, 93, 98, 101, 102, 104, 106, 107, 109, 114, 119, 121, 124, 128, 129, 133, 135, 139, 143, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 162, 164, 165, 168, 170, 172, 173, 174, 176, 178, 179, 181, 182, 187, 193, 196, 197, 200, 201, 202, 205, 207, 208, 211, 213, 215, 216, 217, 224, 226, 228, 230, 232, 233, 234, 239, 243, 244, 245, 250, 252, 254, 258, 259, 263, 265, 266, 270, 274, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 297, 300, 302, 304, 305, 306, 308, 310, 311, 313, 314, 319, 325, 328, 329, 331, 332, 333, 334, 337, 339, 340, 343, 345, 347, 348, 349, 356, 358, 360, 362, 364, 365, 366, 371, 374, 386, 387, 388, 389, 392, 397], "conda": [0, 243], "_": [0, 1, 15, 16, 17, 18, 19, 20, 21, 22, 52, 56, 58, 64, 66, 67, 76, 95, 165, 208, 217, 238, 239, 240, 243, 244, 245, 279, 297, 340, 349, 360, 369, 382], "yml": [0, 245], "note": [0, 1, 3, 4, 5, 8, 25, 31, 32, 36, 37, 38, 39, 41, 44, 50, 52, 54, 59, 61, 62, 75, 76, 79, 89, 93, 94, 95, 102, 103, 105, 106, 114, 115, 122, 125, 131, 134, 138, 139, 141, 144, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 177, 178, 182, 184, 185, 186, 193, 194, 196, 197, 199, 200, 202, 204, 207, 208, 210, 211, 213, 216, 217, 220, 222, 224, 226, 228, 234, 238, 239, 243, 245, 252, 255, 261, 264, 265, 269, 270, 272, 275, 277, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 307, 309, 310, 316, 317, 318, 325, 326, 328, 329, 331, 332, 334, 336, 339, 340, 342, 343, 345, 348, 349, 352, 354, 356, 358, 360, 362, 365, 366, 368, 371, 372, 382, 383, 384, 386, 387, 389, 391, 392, 397], "thi": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "tailor": [0, 3, 121, 243], "all": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 14, 16, 22, 24, 27, 28, 29, 32, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 51, 52, 54, 59, 60, 61, 62, 63, 65, 68, 71, 72, 73, 75, 76, 81, 82, 84, 86, 88, 89, 90, 91, 94, 95, 99, 101, 103, 105, 109, 111, 114, 115, 118, 120, 121, 122, 124, 128, 129, 131, 134, 139, 140, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 178, 182, 185, 193, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 241, 243, 244, 245, 246, 247, 252, 254, 258, 259, 261, 264, 265, 270, 271, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 296, 297, 300, 301, 302, 303, 304, 305, 306, 314, 317, 325, 327, 328, 329, 331, 332, 333, 334, 337, 339, 340, 343, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 373, 374, 375, 377, 378, 382, 383, 386, 387, 388, 389, 391, 392, 393], "desir": [0, 3, 7, 12, 14, 42, 48, 61, 62, 65, 71, 73, 94, 98, 100, 119, 129, 146, 148, 149, 154, 158, 164, 168, 193, 197, 200, 217, 218, 221, 225, 226, 228, 235, 238, 243, 245, 259, 277, 280, 281, 285, 289, 296, 300, 325, 329, 332, 349, 350, 353, 357, 358, 360, 367, 382, 383, 386, 392], "requir": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 32, 35, 39, 42, 45, 47, 53, 61, 65, 76, 81, 82, 83, 84, 89, 93, 114, 115, 128, 131, 134, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 168, 181, 182, 187, 193, 197, 207, 208, 217, 221, 226, 228, 239, 243, 244, 245, 246, 247, 250, 252, 258, 259, 261, 264, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 300, 313, 319, 329, 339, 340, 349, 350, 352, 353, 358, 360, 371, 374, 376, 383, 384, 385, 387, 389, 391, 393], "With": [0, 3, 6, 7, 8, 12, 29, 32, 36, 45, 52, 61, 63, 76, 83, 86, 90, 91, 93, 98, 99, 114, 115, 119, 121, 131, 148, 149, 154, 155, 159, 161, 164, 182, 184, 186, 187, 188, 197, 199, 201, 207, 208, 211, 217, 220, 222, 226, 230, 232, 234, 239, 245, 252, 265, 279, 280, 285, 286, 291, 293, 314, 316, 318, 319, 320, 329, 331, 333, 339, 340, 343, 349, 352, 354, 358, 362, 364, 366, 382, 383, 391], "configur": [0, 3, 7, 31, 35, 45, 53, 60, 71, 88, 100, 103, 116, 153, 155, 156, 208, 213, 239, 241, 243, 244, 246, 252, 284, 286, 287, 308, 345, 382, 388, 389, 392], "project": [0, 1, 7, 27, 29, 42, 53, 69, 75, 84, 98, 99, 108, 110, 119, 121, 135, 155, 159, 200, 224, 239, 241, 243, 245, 251, 252, 266, 286, 291, 332, 356, 368, 382, 385, 387, 388, 389, 392, 396, 397], "cmake": [0, 1, 3, 7, 53, 149, 238, 239, 241, 242, 244, 246, 265, 280, 382], "describ": [0, 1, 4, 7, 8, 37, 39, 41, 43, 47, 59, 65, 71, 76, 77, 78, 81, 83, 84, 88, 90, 91, 93, 95, 102, 104, 121, 125, 137, 143, 148, 149, 150, 155, 156, 158, 159, 160, 161, 164, 196, 208, 228, 239, 243, 244, 245, 250, 252, 255, 268, 274, 279, 280, 281, 286, 287, 289, 291, 292, 293, 328, 336, 340, 360, 370, 371, 378, 382, 383, 385, 386, 391, 392, 396], "option": [0, 1, 4, 7, 10, 11, 13, 16, 17, 28, 29, 35, 45, 46, 47, 52, 53, 59, 65, 72, 76, 77, 81, 89, 94, 99, 135, 141, 146, 148, 149, 150, 154, 155, 156, 159, 160, 173, 178, 181, 184, 186, 188, 193, 197, 199, 200, 202, 204, 208, 217, 220, 224, 226, 228, 230, 232, 234, 238, 239, 241, 243, 244, 245, 265, 266, 272, 277, 280, 281, 285, 286, 287, 291, 292, 305, 310, 313, 316, 318, 320, 325, 329, 331, 332, 334, 336, 337, 340, 349, 352, 356, 358, 360, 362, 364, 365, 366, 371, 374, 375, 378, 379, 382, 383, 386, 391, 392], "e": [0, 3, 4, 6, 8, 10, 11, 13, 14, 22, 25, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 52, 54, 59, 60, 61, 62, 63, 65, 66, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 89, 90, 91, 92, 94, 98, 99, 102, 104, 105, 108, 109, 114, 115, 119, 121, 122, 128, 131, 133, 142, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 162, 164, 168, 172, 175, 181, 185, 186, 189, 191, 193, 196, 197, 200, 207, 208, 213, 216, 217, 220, 222, 224, 226, 228, 230, 234, 238, 239, 243, 244, 245, 247, 250, 251, 252, 258, 261, 263, 265, 273, 277, 279, 280, 281, 282, 285, 286, 289, 290, 292, 293, 294, 296, 300, 301, 302, 304, 307, 313, 316, 317, 318, 321, 323, 325, 328, 329, 331, 332, 339, 340, 343, 344, 345, 348, 349, 352, 353, 354, 356, 358, 360, 362, 365, 366, 371, 372, 373, 374, 376, 378, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 397], "g": [0, 3, 4, 6, 7, 8, 14, 16, 17, 18, 22, 25, 28, 29, 31, 32, 37, 38, 40, 42, 45, 46, 47, 54, 59, 61, 63, 64, 65, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 88, 89, 90, 91, 98, 102, 108, 114, 115, 119, 121, 122, 128, 131, 133, 146, 148, 149, 150, 151, 155, 156, 158, 160, 164, 168, 178, 186, 188, 193, 196, 197, 200, 202, 207, 208, 213, 216, 217, 220, 222, 224, 225, 226, 228, 230, 233, 234, 238, 239, 243, 244, 245, 246, 247, 250, 251, 252, 258, 261, 263, 265, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 296, 300, 301, 310, 316, 318, 320, 323, 325, 327, 328, 329, 331, 332, 334, 337, 339, 340, 342, 343, 345, 348, 349, 352, 353, 354, 356, 357, 358, 360, 362, 365, 366, 371, 372, 373, 374, 376, 378, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 397], "your": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 27, 29, 30, 31, 35, 36, 38, 39, 42, 45, 47, 51, 53, 59, 60, 65, 71, 78, 85, 87, 91, 93, 94, 95, 98, 117, 118, 119, 120, 122, 150, 153, 155, 156, 158, 161, 168, 174, 181, 200, 201, 208, 217, 222, 228, 237, 238, 239, 243, 244, 245, 252, 281, 284, 286, 287, 289, 293, 300, 306, 313, 316, 332, 333, 349, 354, 360, 371, 372, 375, 378, 386, 389, 391, 392, 397], "folder": [0, 3, 45, 48, 52, 54, 71, 89, 117, 213, 216, 238, 241, 243, 244, 245, 246, 345, 348, 382], "dnrn_enable_doc": 0, "ON": [0, 7, 14, 24, 48, 53, 61, 62, 75, 91, 96, 97, 106, 238, 239, 243, 244, 246, 252], "jupyt": [0, 1, 3, 56, 237, 364, 386, 387, 388, 391, 392, 396, 397], "work": [0, 1, 3, 4, 10, 11, 13, 16, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 51, 53, 55, 61, 63, 65, 68, 71, 76, 77, 78, 81, 82, 83, 85, 89, 91, 93, 98, 102, 104, 106, 107, 114, 115, 119, 120, 128, 129, 131, 134, 139, 143, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 172, 175, 182, 185, 193, 197, 201, 207, 208, 213, 216, 217, 218, 222, 223, 224, 225, 226, 228, 234, 239, 243, 244, 245, 248, 249, 250, 252, 258, 259, 264, 270, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 297, 298, 300, 302, 304, 307, 308, 310, 314, 317, 318, 323, 325, 329, 333, 336, 339, 340, 343, 345, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 364, 366, 371, 373, 378, 382, 383, 386, 387, 388, 389, 390, 391, 392, 397], "so": [0, 3, 4, 7, 8, 10, 11, 12, 13, 14, 16, 24, 25, 28, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 50, 52, 53, 54, 61, 62, 63, 65, 66, 71, 73, 75, 76, 79, 81, 83, 84, 85, 88, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 118, 119, 120, 121, 125, 128, 129, 131, 133, 142, 144, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 178, 181, 182, 184, 191, 193, 194, 196, 197, 199, 204, 205, 207, 208, 211, 217, 218, 220, 221, 224, 225, 226, 228, 229, 230, 234, 235, 238, 239, 243, 244, 245, 247, 249, 250, 255, 258, 259, 261, 263, 273, 275, 276, 277, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 294, 296, 297, 300, 301, 310, 313, 314, 316, 323, 325, 326, 328, 329, 331, 337, 339, 340, 343, 349, 350, 352, 353, 356, 357, 358, 360, 361, 362, 366, 367, 371, 372, 374, 375, 376, 378, 382, 383, 385, 386, 387, 388, 389, 391, 392, 397], "modul": [0, 1, 3, 4, 5, 7, 8, 38, 41, 59, 76, 158, 200, 208, 244, 245, 252, 265, 274, 286, 289, 290, 292, 310, 321, 332, 340, 342, 345, 346, 371, 374, 378], "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 59, 61, 62, 63, 65, 68, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 105, 109, 112, 114, 115, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 139, 142, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 170, 172, 174, 176, 177, 178, 181, 182, 184, 185, 186, 187, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 258, 259, 261, 265, 270, 273, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 300, 302, 304, 306, 308, 309, 310, 313, 314, 316, 317, 318, 319, 321, 323, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 345, 346, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 386, 387, 388, 389, 391, 392, 393], "import": [0, 1, 3, 4, 7, 8, 12, 13, 14, 24, 25, 28, 30, 31, 36, 38, 41, 43, 45, 46, 48, 52, 58, 59, 61, 62, 65, 71, 81, 84, 91, 95, 103, 114, 115, 121, 122, 133, 146, 148, 149, 150, 155, 156, 158, 159, 162, 164, 170, 197, 205, 208, 213, 222, 234, 239, 243, 244, 247, 250, 252, 263, 265, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 304, 305, 306, 310, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 337, 340, 342, 343, 344, 345, 346, 347, 349, 350, 352, 354, 356, 357, 358, 360, 362, 364, 365, 366, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 395], "For": [0, 1, 3, 4, 7, 8, 10, 11, 14, 25, 28, 31, 32, 37, 39, 41, 42, 47, 48, 49, 51, 53, 54, 59, 61, 62, 63, 65, 71, 75, 76, 77, 78, 81, 83, 84, 87, 89, 91, 93, 94, 95, 98, 102, 103, 105, 106, 109, 111, 114, 115, 119, 121, 128, 131, 143, 144, 148, 149, 150, 151, 154, 155, 156, 160, 161, 165, 166, 168, 169, 175, 178, 181, 184, 190, 193, 194, 196, 197, 199, 200, 208, 213, 216, 217, 218, 220, 222, 224, 225, 226, 227, 233, 237, 239, 243, 244, 245, 246, 258, 261, 274, 275, 279, 280, 281, 282, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 300, 301, 307, 310, 313, 316, 318, 322, 325, 326, 328, 329, 331, 332, 340, 345, 348, 349, 350, 352, 354, 356, 357, 358, 359, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 386, 387, 388, 389, 392, 394, 396, 397], "from": [0, 1, 3, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 63, 64, 65, 68, 69, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 119, 122, 124, 126, 127, 128, 129, 131, 132, 133, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 168, 169, 174, 178, 180, 182, 183, 184, 186, 190, 193, 194, 196, 197, 199, 200, 201, 202, 205, 207, 208, 211, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 234, 235, 237, 239, 241, 243, 244, 245, 246, 248, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 263, 265, 270, 272, 273, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 310, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 384, 386, 387, 388, 389, 390, 391, 392, 395, 397], "first": [0, 1, 3, 4, 5, 7, 8, 13, 16, 17, 18, 25, 28, 32, 33, 35, 36, 37, 41, 42, 46, 47, 50, 51, 52, 54, 58, 61, 62, 65, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 89, 91, 93, 94, 98, 99, 100, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 126, 127, 128, 129, 131, 133, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 172, 176, 178, 181, 182, 184, 185, 187, 193, 196, 197, 199, 201, 202, 203, 204, 207, 208, 211, 216, 217, 220, 224, 225, 226, 228, 230, 231, 232, 233, 234, 239, 244, 245, 247, 250, 252, 254, 256, 257, 258, 259, 261, 263, 265, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 300, 304, 308, 310, 313, 314, 316, 317, 319, 325, 328, 329, 331, 333, 334, 335, 337, 339, 340, 343, 348, 349, 352, 356, 357, 358, 360, 362, 363, 364, 365, 366, 370, 371, 372, 374, 375, 378, 382, 386, 388, 389, 390, 391, 392, 396, 397], "could": [0, 4, 10, 11, 13, 14, 29, 30, 31, 40, 42, 45, 46, 47, 54, 61, 71, 76, 89, 91, 98, 114, 115, 119, 128, 131, 155, 158, 169, 197, 231, 239, 243, 252, 258, 261, 286, 289, 296, 301, 329, 340, 363, 371, 372, 373, 375, 376, 382, 386, 388, 389, 392], "do": [0, 1, 3, 4, 7, 13, 14, 16, 25, 27, 29, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 61, 62, 63, 66, 68, 73, 74, 75, 76, 78, 81, 82, 83, 89, 93, 94, 95, 97, 98, 100, 103, 105, 106, 114, 115, 118, 119, 122, 128, 129, 131, 133, 142, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 176, 178, 181, 182, 184, 193, 196, 197, 200, 216, 217, 218, 220, 222, 224, 226, 227, 228, 231, 236, 239, 243, 245, 247, 250, 252, 258, 259, 261, 263, 265, 273, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 299, 300, 308, 310, 313, 314, 316, 323, 325, 328, 329, 331, 332, 340, 348, 349, 350, 352, 354, 356, 358, 359, 360, 363, 366, 370, 371, 373, 374, 375, 381, 382, 383, 385, 386, 387, 389, 391, 392], "case": [0, 1, 3, 4, 8, 33, 36, 37, 39, 42, 53, 54, 61, 63, 76, 77, 93, 95, 98, 99, 114, 115, 119, 128, 129, 131, 143, 146, 148, 149, 150, 153, 154, 155, 156, 159, 161, 164, 165, 166, 178, 181, 191, 193, 196, 197, 201, 207, 208, 216, 217, 222, 226, 228, 233, 239, 243, 244, 245, 252, 258, 259, 261, 274, 277, 279, 280, 281, 284, 285, 286, 287, 289, 291, 293, 297, 298, 310, 313, 323, 325, 328, 329, 331, 333, 337, 339, 340, 348, 349, 354, 358, 360, 365, 371, 373, 382, 383, 385, 386, 387, 391], "don": [0, 3, 4, 7, 8, 14, 16, 17, 18, 25, 32, 33, 35, 36, 42, 46, 50, 61, 62, 65, 71, 75, 76, 78, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 110, 114, 115, 118, 119, 120, 122, 134, 149, 155, 156, 160, 161, 178, 196, 207, 224, 226, 228, 239, 264, 280, 286, 287, 292, 293, 310, 328, 339, 356, 358, 360, 375, 382, 389, 392], "t": [0, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 59, 61, 62, 65, 66, 67, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 114, 115, 118, 119, 120, 121, 122, 129, 134, 142, 143, 146, 148, 149, 154, 155, 156, 159, 160, 161, 168, 178, 186, 187, 191, 193, 195, 196, 197, 207, 208, 211, 213, 214, 215, 216, 217, 220, 222, 224, 226, 227, 228, 230, 239, 243, 245, 247, 250, 251, 252, 259, 264, 273, 274, 277, 279, 280, 281, 283, 285, 286, 287, 289, 291, 292, 293, 294, 300, 301, 302, 310, 318, 319, 323, 325, 327, 328, 329, 336, 339, 340, 343, 345, 347, 348, 349, 352, 354, 356, 358, 359, 360, 362, 370, 371, 372, 375, 376, 377, 380, 381, 382, 383, 386, 387, 388, 389, 392], "want": [0, 1, 3, 7, 10, 11, 14, 27, 28, 31, 40, 42, 46, 47, 53, 54, 59, 61, 62, 63, 65, 73, 74, 75, 77, 81, 82, 85, 87, 88, 91, 94, 95, 98, 99, 100, 101, 105, 109, 117, 118, 119, 122, 150, 153, 156, 158, 160, 161, 169, 174, 208, 226, 228, 233, 238, 239, 243, 245, 281, 284, 287, 289, 292, 301, 306, 329, 339, 340, 358, 360, 365, 370, 373, 374, 375, 378, 382, 383, 386, 387, 391, 392], "compil": [0, 1, 3, 4, 5, 6, 8, 10, 11, 46, 49, 53, 76, 82, 93, 121, 133, 135, 143, 148, 149, 150, 153, 155, 191, 204, 224, 239, 243, 244, 245, 248, 249, 263, 266, 274, 280, 281, 284, 286, 323, 336, 356, 378, 382, 383, 389], "full": [0, 1, 3, 10, 11, 35, 61, 63, 93, 131, 149, 155, 158, 193, 197, 213, 238, 239, 243, 244, 245, 252, 261, 280, 286, 289, 290, 325, 329, 345, 371, 373, 382, 392], "sphinx": [0, 1, 3, 56], "That": [0, 9, 32, 36, 42, 47, 54, 61, 81, 89, 91, 98, 99, 100, 102, 103, 119, 131, 148, 149, 150, 154, 155, 156, 158, 159, 178, 197, 216, 222, 244, 250, 279, 280, 281, 285, 286, 287, 291, 297, 310, 329, 348, 354, 370, 371, 373, 374, 386, 388, 391, 392], "everyth": [0, 13, 14, 19, 24, 45, 51, 52, 61, 64, 65, 72, 89, 91, 95, 117, 118, 121, 158, 167, 208, 217, 220, 222, 226, 232, 234, 245, 299, 349, 352, 354, 358, 364, 366, 373, 382, 383, 387, 388, 389, 391], "_build": 0, "where": [0, 1, 4, 5, 9, 10, 11, 13, 14, 25, 27, 28, 35, 37, 38, 39, 41, 43, 46, 47, 52, 53, 54, 59, 61, 63, 65, 68, 73, 76, 82, 87, 88, 89, 90, 91, 93, 94, 100, 114, 115, 121, 126, 131, 140, 148, 149, 150, 155, 156, 158, 161, 165, 168, 170, 181, 184, 193, 197, 200, 201, 203, 207, 208, 213, 217, 218, 220, 221, 224, 226, 228, 231, 233, 234, 239, 243, 244, 245, 252, 256, 261, 265, 271, 279, 280, 281, 285, 286, 287, 289, 290, 293, 295, 297, 300, 302, 310, 313, 316, 321, 325, 329, 330, 332, 333, 335, 339, 340, 345, 349, 350, 352, 353, 356, 358, 360, 363, 365, 366, 372, 373, 374, 377, 378, 382, 383, 386, 387, 388, 389, 392], "open": [0, 8, 14, 16, 17, 18, 31, 38, 46, 47, 50, 58, 65, 71, 76, 81, 84, 88, 89, 90, 98, 102, 119, 121, 128, 151, 168, 177, 180, 183, 184, 185, 186, 187, 193, 196, 197, 200, 201, 219, 222, 225, 226, 228, 230, 243, 244, 245, 250, 252, 258, 279, 282, 300, 309, 310, 312, 315, 316, 317, 318, 319, 325, 328, 329, 332, 333, 350, 351, 354, 357, 358, 360, 362, 370, 372, 373, 375, 376, 378, 381, 382, 383, 385, 391, 392], "index": [0, 10, 11, 13, 16, 32, 37, 52, 62, 74, 75, 118, 133, 135, 144, 145, 146, 149, 151, 154, 155, 156, 158, 159, 160, 168, 169, 172, 181, 182, 187, 193, 194, 196, 197, 199, 200, 201, 202, 203, 208, 211, 217, 220, 226, 228, 232, 233, 234, 237, 238, 250, 263, 266, 275, 276, 277, 278, 280, 282, 285, 286, 287, 289, 291, 292, 300, 301, 304, 311, 313, 314, 319, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 343, 349, 352, 358, 360, 364, 365, 366, 378, 382, 383, 391], "html": [0, 3, 58, 65, 71, 85, 122, 146, 155, 193, 200, 238, 239, 247, 277, 286, 325, 332, 340, 378, 382, 383], "just": [0, 3, 10, 11, 14, 25, 28, 32, 36, 42, 45, 47, 51, 52, 61, 62, 64, 65, 72, 75, 81, 82, 83, 84, 89, 90, 91, 94, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 119, 120, 122, 129, 142, 144, 146, 148, 149, 150, 155, 156, 158, 163, 165, 168, 184, 187, 194, 197, 202, 204, 207, 216, 217, 218, 220, 222, 226, 227, 230, 231, 243, 244, 252, 259, 273, 275, 277, 279, 280, 281, 286, 287, 289, 297, 300, 301, 310, 316, 326, 329, 334, 336, 339, 348, 349, 350, 352, 354, 358, 359, 362, 363, 371, 375, 376, 382, 387, 388, 391, 392], "perform": [0, 1, 3, 4, 7, 10, 11, 13, 24, 25, 29, 33, 36, 37, 45, 52, 65, 76, 88, 95, 121, 128, 131, 146, 150, 155, 156, 158, 193, 197, 217, 224, 226, 228, 231, 240, 243, 245, 246, 250, 251, 252, 258, 261, 277, 281, 286, 287, 289, 324, 325, 329, 349, 356, 358, 360, 363, 371, 382, 391, 392], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 114, 115, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 134, 138, 139, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 243, 244, 245, 247, 249, 250, 252, 254, 256, 257, 258, 259, 261, 262, 264, 265, 269, 270, 273, 274, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 308, 310, 313, 314, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 396, 397], "when": [0, 1, 3, 4, 7, 9, 12, 13, 14, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 44, 45, 46, 51, 52, 59, 61, 62, 65, 68, 75, 76, 79, 82, 83, 84, 87, 89, 91, 93, 94, 95, 100, 102, 103, 104, 105, 106, 108, 110, 111, 114, 118, 122, 124, 125, 126, 128, 129, 131, 133, 138, 139, 140, 142, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 184, 187, 191, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 238, 239, 243, 245, 247, 250, 252, 254, 255, 256, 258, 259, 261, 263, 265, 269, 270, 271, 273, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 309, 310, 316, 319, 323, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 345, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 371, 372, 374, 377, 381, 382, 383, 386, 387, 389, 391, 392], "what": [0, 10, 11, 13, 24, 28, 30, 31, 32, 36, 38, 39, 40, 41, 44, 45, 49, 52, 61, 62, 73, 76, 82, 85, 87, 89, 94, 95, 96, 97, 99, 100, 103, 105, 108, 110, 111, 112, 114, 115, 122, 139, 149, 150, 153, 155, 156, 158, 181, 197, 201, 208, 217, 218, 221, 222, 226, 227, 228, 236, 238, 239, 243, 244, 252, 270, 280, 281, 284, 286, 287, 289, 313, 329, 333, 340, 349, 350, 353, 354, 358, 359, 360, 371, 373, 374, 377, 381, 382, 386, 387, 389, 391], "awar": [0, 52, 155, 161, 239, 286, 293], "follow": [0, 1, 3, 4, 8, 10, 11, 13, 14, 25, 28, 29, 32, 34, 36, 37, 39, 44, 46, 52, 59, 60, 61, 63, 65, 68, 71, 72, 75, 76, 83, 87, 89, 91, 93, 95, 98, 100, 102, 106, 114, 115, 119, 124, 129, 134, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 160, 161, 165, 168, 169, 176, 178, 181, 184, 185, 187, 189, 193, 197, 199, 200, 201, 202, 204, 207, 208, 210, 211, 213, 216, 217, 222, 226, 228, 230, 231, 234, 239, 243, 244, 245, 246, 247, 249, 250, 252, 254, 259, 264, 274, 275, 277, 279, 280, 281, 284, 285, 286, 287, 289, 290, 292, 293, 296, 297, 300, 301, 308, 313, 316, 317, 319, 321, 325, 329, 331, 332, 333, 334, 339, 340, 342, 343, 345, 347, 348, 349, 353, 354, 356, 358, 360, 362, 363, 366, 368, 371, 374, 378, 381, 382, 383, 387, 389, 391, 392, 393, 397], "target": [0, 1, 3, 7, 9, 22, 32, 52, 110, 111, 121, 145, 148, 150, 151, 154, 155, 156, 199, 217, 238, 239, 243, 244, 245, 252, 276, 278, 279, 281, 282, 285, 286, 287, 331, 349, 374, 382, 383, 387, 388, 389], "speed": [0, 6, 10, 11, 26, 41, 47, 81, 89, 114, 115, 134, 149, 156, 161, 221, 232, 243, 252, 264, 280, 287, 293, 353, 364, 371, 395], "up": [0, 1, 7, 9, 10, 11, 12, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 45, 46, 47, 48, 49, 51, 52, 60, 63, 65, 71, 74, 75, 76, 79, 81, 83, 87, 88, 90, 94, 96, 97, 100, 102, 103, 105, 106, 107, 109, 114, 115, 118, 121, 124, 128, 129, 131, 133, 134, 139, 142, 146, 149, 150, 155, 156, 159, 165, 167, 168, 171, 172, 174, 178, 184, 187, 196, 197, 201, 207, 211, 213, 217, 218, 220, 221, 224, 226, 227, 228, 231, 232, 235, 244, 247, 249, 252, 254, 258, 259, 261, 263, 264, 270, 273, 277, 280, 281, 286, 287, 290, 291, 297, 299, 300, 303, 304, 306, 310, 316, 319, 328, 329, 333, 339, 343, 345, 349, 350, 352, 353, 356, 358, 359, 360, 363, 364, 367, 370, 371, 374, 377, 378, 384, 385, 386, 391, 395], "process": [0, 1, 3, 4, 5, 9, 10, 11, 13, 14, 22, 25, 30, 31, 32, 37, 39, 42, 52, 53, 66, 71, 72, 76, 84, 98, 102, 114, 119, 122, 128, 129, 135, 139, 141, 142, 147, 149, 150, 151, 154, 155, 156, 157, 160, 161, 168, 169, 171, 197, 199, 201, 202, 208, 216, 217, 220, 222, 224, 227, 228, 234, 235, 239, 245, 251, 252, 258, 259, 266, 270, 272, 273, 274, 278, 280, 281, 282, 285, 286, 287, 288, 289, 292, 293, 296, 300, 301, 303, 329, 331, 333, 334, 340, 343, 348, 349, 352, 354, 356, 359, 360, 366, 367, 371, 374, 382, 383, 388, 389, 392], "api": [0, 1, 4, 5, 8, 53, 54, 93, 149, 216, 239, 250, 280, 348, 368, 382], "onli": [0, 3, 6, 9, 13, 14, 16, 17, 18, 22, 25, 27, 28, 29, 32, 33, 36, 40, 41, 45, 51, 54, 58, 61, 62, 65, 69, 71, 75, 76, 84, 85, 89, 91, 93, 98, 100, 103, 114, 115, 118, 119, 121, 124, 128, 129, 131, 134, 139, 142, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 164, 165, 168, 169, 170, 171, 172, 173, 175, 178, 181, 182, 184, 186, 187, 192, 193, 196, 197, 201, 202, 207, 208, 210, 213, 216, 217, 218, 220, 224, 226, 228, 230, 231, 234, 239, 241, 243, 244, 245, 249, 250, 252, 254, 258, 259, 261, 264, 265, 270, 273, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 293, 296, 297, 300, 301, 302, 303, 304, 305, 307, 310, 313, 316, 318, 319, 321, 324, 325, 328, 329, 333, 334, 336, 337, 339, 340, 342, 345, 348, 349, 350, 352, 353, 356, 358, 360, 362, 363, 364, 366, 371, 372, 373, 374, 376, 378, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392], "end": [0, 1, 4, 8, 9, 10, 11, 12, 13, 16, 17, 18, 25, 27, 28, 30, 31, 33, 43, 47, 51, 52, 53, 61, 62, 65, 67, 71, 73, 75, 76, 81, 89, 91, 99, 102, 103, 108, 114, 115, 118, 121, 122, 124, 125, 126, 129, 133, 134, 146, 148, 149, 150, 154, 155, 156, 159, 160, 161, 163, 164, 168, 184, 185, 186, 193, 197, 201, 211, 214, 217, 218, 220, 221, 224, 227, 228, 231, 233, 239, 244, 245, 249, 252, 254, 255, 256, 259, 263, 264, 277, 279, 280, 281, 286, 287, 291, 292, 293, 300, 316, 317, 318, 325, 329, 333, 343, 346, 349, 350, 352, 353, 356, 359, 360, 363, 365, 366, 368, 371, 382, 384, 386, 389, 391, 392, 397], "gener": [0, 1, 2, 6, 8, 9, 10, 11, 13, 17, 19, 25, 28, 29, 33, 36, 38, 40, 41, 42, 46, 47, 49, 52, 59, 61, 62, 63, 65, 73, 75, 76, 81, 82, 84, 85, 88, 93, 94, 98, 114, 115, 116, 119, 123, 125, 129, 131, 133, 139, 141, 142, 146, 147, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 174, 182, 185, 194, 197, 198, 199, 207, 208, 211, 217, 218, 220, 222, 224, 226, 228, 230, 238, 239, 240, 243, 244, 245, 249, 252, 253, 255, 259, 261, 263, 270, 272, 273, 277, 278, 281, 285, 286, 287, 289, 290, 291, 292, 293, 295, 297, 300, 306, 314, 317, 318, 321, 326, 329, 330, 331, 339, 340, 343, 349, 350, 352, 354, 356, 358, 360, 362, 371, 374, 376, 382, 383, 386, 390, 391, 395, 397], "emb": [0, 252], "output": [0, 3, 4, 9, 32, 33, 35, 37, 42, 46, 49, 52, 53, 69, 70, 81, 84, 102, 112, 113, 128, 129, 135, 148, 149, 154, 155, 156, 180, 184, 185, 188, 193, 197, 207, 216, 238, 239, 247, 252, 258, 259, 265, 266, 279, 280, 285, 286, 287, 293, 312, 316, 317, 319, 320, 324, 325, 328, 329, 339, 347, 348, 358, 374, 387, 389, 391, 392], "place": [0, 12, 13, 32, 33, 35, 36, 37, 39, 42, 44, 50, 61, 64, 65, 67, 72, 74, 76, 84, 91, 94, 103, 106, 112, 114, 115, 122, 129, 144, 146, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 170, 172, 174, 184, 186, 187, 193, 197, 201, 202, 204, 215, 217, 218, 220, 222, 224, 226, 228, 230, 233, 239, 244, 252, 259, 275, 277, 280, 281, 285, 286, 287, 289, 291, 292, 293, 296, 297, 300, 302, 304, 306, 316, 318, 319, 321, 325, 329, 333, 334, 336, 347, 349, 350, 352, 354, 356, 358, 360, 362, 365, 371, 372, 378, 382, 387, 389], "see": [0, 1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 50, 52, 53, 54, 59, 61, 63, 65, 72, 73, 74, 75, 77, 78, 82, 83, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 109, 111, 114, 115, 119, 120, 121, 122, 124, 125, 128, 129, 131, 133, 139, 142, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 174, 176, 178, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 216, 217, 219, 220, 222, 224, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 239, 243, 244, 245, 246, 247, 254, 255, 258, 259, 261, 263, 265, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 300, 306, 308, 310, 321, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 344, 345, 347, 348, 349, 351, 352, 354, 356, 358, 359, 360, 362, 364, 365, 366, 370, 371, 375, 376, 378, 382, 385, 386, 387, 389, 391, 392], "sh": [0, 3, 153, 155, 213, 216, 243, 244, 245, 246, 284, 345, 348], "clean": [0, 3, 40, 52, 62, 90, 155, 286, 375, 382], "clear": [0, 3, 8, 14, 27, 29, 31, 65, 76, 114, 115, 155, 211, 215, 216, 217, 220, 222, 231, 245, 286, 343, 347, 348, 349, 352, 354, 363, 375, 377, 382, 383, 392], "rememb": [0, 27, 28, 34, 39, 40, 54, 61, 62, 89, 91, 93, 103, 131, 155, 159, 161, 165, 197, 261, 286, 291, 293, 297, 329, 372, 376, 388, 391], "add": [0, 1, 3, 7, 24, 28, 36, 38, 39, 41, 53, 65, 71, 76, 82, 89, 90, 91, 93, 95, 98, 119, 128, 134, 139, 146, 148, 149, 150, 159, 161, 169, 178, 193, 197, 201, 207, 208, 215, 217, 226, 228, 230, 231, 238, 239, 244, 245, 247, 250, 258, 264, 270, 277, 279, 280, 281, 289, 291, 293, 301, 308, 310, 325, 329, 330, 333, 339, 340, 347, 349, 358, 360, 362, 363, 371, 382, 383, 387, 388, 391, 392, 395], "we": [0, 1, 3, 4, 5, 7, 9, 10, 11, 14, 16, 24, 27, 29, 30, 31, 32, 36, 37, 38, 39, 42, 44, 46, 47, 51, 52, 59, 60, 61, 62, 63, 69, 70, 71, 75, 76, 84, 88, 90, 95, 98, 99, 100, 101, 104, 112, 114, 115, 119, 120, 121, 131, 148, 149, 150, 153, 155, 156, 158, 187, 208, 217, 226, 239, 243, 244, 245, 248, 250, 252, 261, 279, 280, 281, 284, 286, 287, 289, 301, 319, 340, 349, 354, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397], "those": [0, 1, 3, 4, 10, 11, 12, 16, 17, 18, 32, 36, 41, 42, 43, 45, 47, 49, 51, 54, 59, 61, 76, 81, 88, 89, 98, 114, 115, 119, 121, 122, 128, 131, 138, 139, 148, 149, 150, 154, 155, 156, 159, 160, 161, 165, 173, 182, 193, 197, 208, 217, 220, 223, 224, 226, 231, 241, 243, 244, 258, 261, 269, 270, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 297, 305, 310, 314, 325, 329, 340, 349, 352, 355, 356, 358, 363, 370, 371, 373, 375, 376, 382, 387, 391, 392, 394, 396, 397], "commit": [0, 1, 3, 53, 93, 368, 383, 384], "repo": [0, 382], "call": [0, 1, 4, 8, 9, 10, 14, 24, 25, 27, 28, 29, 36, 37, 42, 45, 47, 52, 53, 54, 59, 61, 62, 63, 64, 65, 71, 72, 74, 76, 81, 82, 83, 84, 85, 86, 89, 91, 93, 95, 98, 99, 102, 105, 118, 119, 120, 121, 124, 128, 129, 131, 133, 135, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 164, 166, 168, 169, 172, 174, 176, 178, 181, 182, 184, 185, 191, 193, 194, 196, 197, 200, 202, 205, 206, 207, 208, 214, 216, 217, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 234, 239, 243, 250, 254, 258, 259, 261, 263, 265, 266, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 295, 296, 297, 298, 300, 301, 304, 306, 308, 310, 313, 314, 316, 317, 323, 325, 326, 328, 329, 332, 334, 337, 338, 339, 340, 346, 348, 349, 350, 352, 353, 354, 355, 356, 358, 360, 362, 363, 364, 365, 366, 371, 376, 381, 382, 386, 387, 388, 389, 391, 392], "one": [0, 1, 3, 8, 9, 10, 11, 12, 13, 18, 24, 25, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 47, 49, 51, 52, 54, 61, 62, 63, 65, 66, 68, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 98, 99, 100, 105, 107, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 128, 129, 131, 139, 142, 143, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 178, 181, 182, 184, 186, 187, 188, 190, 193, 194, 196, 197, 201, 202, 204, 207, 208, 216, 217, 218, 220, 221, 224, 226, 228, 230, 231, 233, 236, 239, 243, 244, 245, 250, 252, 254, 255, 256, 258, 259, 261, 265, 270, 273, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 310, 313, 314, 316, 318, 319, 320, 322, 325, 326, 328, 329, 333, 334, 336, 339, 340, 343, 348, 349, 350, 352, 353, 356, 358, 360, 362, 363, 365, 370, 371, 372, 373, 376, 378, 382, 383, 386, 387, 388, 389, 391, 392, 397], "assembl": [0, 36, 51, 76, 286], "top": [0, 1, 3, 4, 14, 25, 29, 37, 46, 47, 52, 61, 62, 65, 71, 72, 74, 76, 81, 84, 93, 105, 107, 108, 109, 122, 124, 125, 128, 129, 137, 139, 140, 148, 160, 164, 165, 168, 169, 170, 172, 178, 182, 184, 192, 193, 197, 200, 202, 208, 211, 217, 220, 225, 226, 228, 231, 234, 238, 247, 254, 255, 258, 259, 265, 268, 270, 271, 292, 296, 297, 300, 301, 302, 304, 310, 314, 316, 324, 325, 329, 332, 334, 340, 343, 349, 357, 358, 360, 363, 366, 373, 375, 382, 386], "directori": [0, 1, 3, 7, 8, 14, 24, 30, 31, 34, 35, 36, 45, 46, 47, 48, 53, 71, 76, 81, 89, 91, 117, 122, 149, 155, 161, 165, 184, 200, 207, 208, 213, 224, 238, 239, 243, 245, 280, 286, 293, 297, 316, 332, 339, 345, 356, 378, 389], "sinc": [0, 3, 4, 14, 25, 28, 29, 32, 36, 37, 39, 42, 46, 47, 61, 76, 83, 89, 91, 98, 107, 114, 115, 119, 121, 122, 128, 129, 131, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 168, 178, 182, 193, 196, 197, 201, 207, 208, 210, 213, 216, 217, 218, 222, 226, 228, 229, 231, 233, 234, 243, 244, 245, 247, 258, 259, 261, 275, 277, 279, 280, 281, 285, 286, 287, 291, 292, 293, 295, 296, 300, 310, 314, 325, 328, 329, 333, 339, 340, 342, 345, 348, 349, 350, 354, 358, 360, 361, 363, 365, 366, 371, 372, 375, 376, 382, 386, 388, 389, 391, 392], "therein": 0, "To": [0, 3, 7, 9, 13, 14, 25, 29, 31, 34, 39, 42, 43, 44, 45, 46, 47, 53, 59, 61, 62, 63, 65, 69, 70, 71, 74, 75, 80, 81, 89, 91, 94, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 114, 115, 119, 120, 122, 128, 129, 149, 150, 153, 154, 155, 158, 159, 160, 161, 164, 176, 181, 193, 196, 197, 207, 208, 216, 217, 224, 226, 227, 228, 231, 233, 239, 243, 244, 245, 246, 250, 252, 258, 259, 279, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 297, 308, 313, 314, 325, 328, 329, 339, 340, 348, 349, 356, 358, 359, 360, 363, 365, 368, 371, 374, 375, 377, 378, 382, 386, 387, 391, 392, 396], "abl": [0, 3, 4, 7, 36, 38, 45, 71, 81, 84, 89, 91, 93, 156, 161, 207, 216, 223, 243, 244, 287, 289, 339, 348, 355, 375, 376, 382, 383, 387, 392], "packag": [0, 1, 3, 7, 165, 217, 240, 243, 245, 250, 297, 349, 374, 378, 382, 385, 391], "like": [0, 1, 3, 4, 7, 8, 9, 14, 25, 31, 32, 33, 34, 36, 37, 40, 42, 43, 45, 46, 51, 52, 54, 59, 61, 62, 63, 65, 73, 75, 76, 77, 82, 87, 89, 91, 93, 95, 99, 102, 103, 104, 105, 106, 109, 110, 114, 115, 117, 118, 121, 122, 131, 148, 149, 150, 154, 155, 156, 158, 160, 163, 167, 168, 178, 196, 197, 200, 208, 217, 220, 226, 228, 230, 231, 239, 243, 245, 247, 250, 252, 261, 279, 280, 281, 285, 286, 287, 289, 290, 292, 295, 299, 300, 302, 310, 328, 329, 332, 339, 340, 349, 352, 358, 360, 362, 363, 371, 372, 374, 376, 382, 383, 386, 387, 391, 392], "under": [0, 1, 3, 8, 10, 11, 14, 35, 39, 40, 46, 47, 52, 71, 76, 77, 78, 81, 84, 87, 88, 89, 91, 93, 94, 98, 100, 119, 121, 122, 134, 148, 149, 151, 155, 158, 161, 165, 166, 168, 172, 177, 178, 186, 197, 213, 217, 221, 224, 228, 239, 243, 245, 247, 252, 264, 279, 280, 282, 286, 293, 297, 298, 300, 304, 309, 310, 318, 329, 345, 349, 353, 356, 360, 368, 371, 374, 382], "The": [0, 3, 4, 7, 9, 12, 13, 14, 24, 26, 27, 29, 30, 31, 33, 35, 36, 40, 41, 45, 46, 47, 51, 52, 53, 54, 58, 59, 61, 62, 63, 65, 66, 68, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 86, 87, 89, 93, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 129, 131, 133, 134, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 239, 243, 244, 245, 246, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 308, 310, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 371, 373, 374, 377, 378, 379, 382, 383, 385, 387, 388, 389, 391, 396, 397], "wai": [0, 4, 5, 7, 10, 11, 14, 25, 28, 38, 39, 42, 45, 46, 47, 52, 54, 59, 61, 75, 76, 81, 82, 89, 91, 94, 95, 98, 99, 100, 105, 109, 114, 115, 117, 119, 121, 122, 131, 142, 143, 149, 150, 151, 154, 155, 159, 161, 164, 168, 176, 178, 180, 181, 183, 188, 197, 200, 207, 208, 216, 217, 220, 223, 224, 239, 243, 245, 250, 261, 273, 274, 280, 281, 282, 285, 286, 289, 291, 293, 296, 300, 308, 310, 313, 318, 320, 329, 332, 337, 339, 340, 348, 349, 350, 352, 354, 355, 356, 365, 370, 371, 374, 378, 382, 386, 387, 389, 391, 392], "gather": [0, 10, 11, 25, 35, 81, 121, 155, 205, 217, 286, 337, 349, 350, 385, 390], "extra": [0, 33, 46, 52, 53, 71, 76, 93, 123, 125, 131, 134, 149, 154, 155, 161, 197, 216, 217, 222, 228, 230, 239, 240, 243, 244, 247, 252, 253, 255, 261, 264, 280, 285, 286, 293, 329, 348, 349, 354, 360, 362, 364, 382], "look": [0, 10, 11, 14, 28, 32, 33, 34, 36, 37, 40, 46, 49, 51, 52, 61, 62, 65, 71, 75, 76, 84, 87, 89, 91, 99, 102, 104, 105, 106, 110, 135, 148, 149, 151, 155, 156, 176, 182, 196, 200, 201, 217, 239, 245, 252, 266, 279, 280, 282, 283, 286, 287, 293, 308, 314, 328, 332, 333, 349, 374, 382, 383, 386, 388, 389, 392], "o": [0, 1, 11, 29, 71, 76, 108, 121, 148, 158, 161, 169, 186, 197, 208, 210, 213, 224, 226, 238, 242, 247, 251, 252, 265, 279, 280, 289, 293, 301, 311, 317, 318, 329, 340, 342, 345, 356, 358, 371, 373, 378], "get": [0, 3, 6, 10, 11, 13, 14, 16, 17, 18, 19, 28, 29, 31, 36, 37, 39, 41, 46, 49, 51, 52, 53, 59, 60, 61, 65, 81, 82, 85, 89, 90, 91, 94, 95, 107, 118, 120, 122, 124, 128, 131, 148, 149, 150, 155, 156, 158, 160, 161, 164, 168, 171, 178, 184, 196, 197, 199, 202, 208, 211, 217, 222, 224, 226, 228, 235, 238, 239, 243, 244, 245, 247, 250, 252, 254, 258, 261, 279, 280, 281, 286, 287, 289, 292, 293, 294, 295, 296, 300, 303, 310, 315, 316, 328, 329, 330, 331, 334, 340, 343, 349, 354, 356, 358, 360, 364, 367, 371, 373, 374, 376, 379, 382, 383, 386, 387, 389, 391, 397], "block": [0, 1, 3, 4, 9, 36, 52, 54, 64, 66, 71, 72, 75, 76, 77, 83, 84, 93, 131, 143, 148, 149, 150, 151, 154, 155, 167, 217, 220, 222, 224, 239, 248, 249, 251, 252, 261, 274, 279, 280, 281, 282, 285, 286, 299, 314, 349, 352, 354, 356, 382, 391, 392], "how": [0, 1, 4, 7, 8, 10, 11, 13, 24, 25, 27, 28, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 49, 51, 52, 53, 55, 58, 60, 61, 62, 63, 66, 73, 76, 81, 82, 84, 85, 88, 89, 90, 91, 92, 97, 99, 100, 102, 104, 114, 115, 121, 122, 134, 142, 144, 148, 149, 150, 155, 156, 158, 160, 161, 168, 197, 201, 207, 212, 216, 217, 227, 228, 237, 239, 240, 243, 244, 245, 248, 250, 252, 264, 273, 275, 279, 280, 281, 286, 287, 292, 293, 300, 329, 333, 339, 340, 344, 346, 348, 349, 359, 360, 370, 372, 373, 374, 375, 382, 383, 386, 387, 389, 390, 391, 392, 397], "aforement": [0, 1, 382, 383], "nightli": [0, 1, 7, 240, 378, 382, 383], "master": [0, 3, 4, 7, 10, 11, 13, 16, 58, 77, 129, 155, 156, 241, 245, 252, 259, 286, 287, 360, 368, 382, 383], "x": [0, 4, 10, 11, 13, 16, 17, 18, 21, 22, 28, 29, 30, 31, 32, 39, 40, 41, 43, 50, 61, 62, 63, 65, 71, 73, 76, 78, 81, 86, 89, 93, 94, 114, 115, 117, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 164, 166, 168, 171, 172, 178, 181, 184, 186, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 210, 212, 213, 214, 217, 218, 220, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 243, 245, 247, 251, 252, 254, 256, 258, 259, 261, 262, 263, 274, 277, 279, 280, 281, 282, 283, 285, 286, 289, 290, 292, 293, 296, 298, 300, 303, 304, 310, 313, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342, 344, 345, 349, 350, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 371, 372, 373, 376, 378, 380, 381, 382, 383, 386, 387, 388, 391, 392], "y": [0, 21, 22, 24, 25, 28, 29, 32, 36, 38, 39, 40, 41, 50, 58, 73, 76, 81, 86, 89, 94, 100, 114, 115, 122, 124, 129, 131, 133, 146, 148, 149, 160, 161, 168, 178, 187, 188, 191, 197, 201, 206, 208, 210, 217, 218, 224, 225, 226, 227, 228, 230, 231, 232, 234, 243, 245, 252, 254, 259, 261, 263, 277, 280, 289, 290, 292, 293, 310, 319, 320, 323, 329, 333, 337, 338, 340, 342, 349, 350, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 376, 378, 380, 381, 382, 386, 387, 388, 391, 392], "z": [0, 21, 22, 32, 40, 50, 76, 81, 122, 132, 160, 161, 191, 201, 228, 231, 234, 243, 245, 252, 262, 289, 292, 293, 323, 333, 360, 363, 366, 378, 382, 386, 387, 388], "publish": [0, 121, 122, 156, 240, 252, 287, 382, 383, 392], "next": [0, 1, 10, 11, 13, 27, 28, 35, 39, 42, 43, 51, 52, 61, 62, 71, 76, 79, 83, 89, 91, 94, 96, 99, 100, 101, 104, 106, 107, 108, 110, 114, 124, 148, 149, 151, 155, 158, 159, 168, 170, 181, 184, 186, 187, 194, 197, 201, 217, 218, 222, 226, 228, 230, 236, 239, 243, 244, 254, 279, 280, 282, 286, 289, 291, 292, 300, 302, 313, 316, 318, 319, 326, 329, 333, 349, 350, 354, 358, 360, 362, 374, 382, 383, 387, 388, 391, 397], "section": [0, 1, 3, 4, 6, 7, 8, 9, 14, 25, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 47, 50, 52, 53, 59, 60, 61, 62, 63, 71, 74, 76, 81, 83, 84, 91, 93, 98, 99, 100, 103, 105, 119, 120, 121, 122, 125, 126, 129, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 162, 163, 168, 171, 173, 174, 182, 197, 199, 200, 201, 203, 208, 216, 217, 220, 222, 224, 226, 227, 228, 232, 233, 234, 235, 239, 244, 245, 247, 249, 250, 252, 255, 256, 259, 261, 262, 264, 265, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 294, 295, 300, 303, 305, 306, 314, 329, 331, 332, 333, 335, 340, 343, 347, 348, 349, 352, 354, 356, 359, 360, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 387, 388, 391, 397], "achiev": [0, 5, 7, 62, 63, 73, 100, 121, 149, 280, 378], "pars": [0, 40, 52, 76, 149, 165, 178, 193, 201, 212, 217, 230, 280, 297, 325, 333, 344, 362], "variabl": [0, 1, 3, 6, 8, 9, 25, 28, 29, 31, 32, 33, 36, 37, 38, 39, 42, 44, 47, 51, 52, 54, 58, 59, 62, 64, 71, 72, 83, 84, 88, 89, 91, 94, 96, 98, 102, 114, 115, 119, 121, 124, 126, 128, 129, 132, 133, 135, 139, 140, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 171, 174, 176, 178, 180, 181, 182, 184, 185, 187, 190, 191, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 239, 243, 244, 248, 251, 252, 254, 256, 258, 259, 262, 263, 266, 270, 271, 274, 275, 277, 279, 280, 281, 284, 285, 286, 287, 289, 291, 292, 293, 297, 298, 300, 302, 303, 306, 308, 310, 312, 313, 314, 316, 317, 318, 319, 322, 323, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 343, 345, 347, 349, 350, 352, 353, 354, 358, 359, 360, 362, 363, 364, 365, 366, 371, 372, 373, 375, 386, 388, 389, 397], "readthedocs_vers": 0, "step": [0, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 44, 45, 47, 52, 59, 60, 63, 64, 67, 72, 75, 82, 83, 88, 112, 113, 121, 122, 123, 125, 128, 129, 142, 143, 146, 148, 149, 150, 154, 155, 156, 158, 159, 191, 197, 214, 215, 217, 218, 220, 221, 226, 228, 230, 236, 243, 245, 251, 252, 253, 255, 258, 259, 273, 274, 277, 279, 280, 281, 285, 286, 287, 289, 291, 323, 328, 329, 347, 349, 350, 352, 353, 358, 360, 362, 371, 375, 382, 387, 389, 391, 397], "creat": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 27, 30, 31, 32, 33, 34, 37, 38, 42, 44, 45, 46, 47, 48, 52, 59, 60, 64, 65, 69, 70, 72, 74, 76, 81, 82, 83, 84, 88, 89, 95, 96, 97, 98, 99, 102, 103, 105, 112, 113, 118, 119, 121, 122, 125, 128, 137, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 176, 177, 178, 181, 182, 184, 193, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 213, 215, 217, 220, 222, 224, 226, 227, 228, 231, 232, 235, 238, 240, 243, 244, 245, 246, 247, 250, 252, 255, 258, 268, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 303, 304, 306, 308, 309, 310, 313, 314, 316, 319, 320, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 344, 345, 347, 348, 349, 354, 356, 358, 359, 360, 363, 364, 367, 371, 378, 383, 384, 385, 387, 388, 389, 391], "gha": 0, "manual": [0, 3, 36, 52, 55, 61, 71, 76, 78, 89, 91, 109, 121, 149, 157, 202, 207, 239, 244, 245, 252, 280, 288, 300, 334, 339, 382], "workflow": [0, 3, 8, 240, 252, 382], "go": [0, 1, 29, 31, 36, 37, 38, 47, 51, 52, 61, 62, 71, 79, 81, 82, 89, 90, 91, 95, 101, 110, 118, 128, 154, 155, 156, 158, 165, 168, 181, 197, 201, 217, 226, 228, 236, 237, 239, 244, 252, 258, 279, 285, 286, 287, 289, 297, 300, 313, 329, 333, 349, 354, 358, 360, 372, 374, 376, 382, 385, 386, 387, 388, 389], "version": [0, 1, 3, 7, 11, 31, 43, 48, 53, 61, 65, 76, 77, 82, 84, 87, 93, 117, 121, 122, 129, 131, 133, 148, 149, 150, 151, 155, 156, 159, 160, 172, 176, 184, 194, 196, 197, 200, 207, 208, 211, 213, 216, 220, 222, 228, 239, 241, 243, 244, 245, 246, 249, 250, 259, 261, 263, 279, 280, 281, 282, 286, 287, 289, 291, 292, 295, 296, 302, 304, 308, 316, 321, 325, 326, 328, 329, 332, 333, 339, 343, 345, 348, 352, 354, 360, 364, 368, 370, 372, 373, 375, 376, 377, 378, 381, 384, 388, 389, 391, 392], "page": [0, 14, 27, 40, 46, 47, 50, 61, 62, 65, 68, 71, 77, 78, 81, 91, 99, 101, 122, 228, 237, 239, 243, 244, 252, 274, 290, 333, 340, 360, 362, 368, 386, 387, 388, 389, 391], "tag": [0, 134, 244, 245, 264, 378, 383, 384], "re": [0, 1, 7, 25, 31, 32, 36, 37, 42, 47, 49, 59, 61, 62, 75, 76, 79, 81, 82, 89, 91, 94, 95, 98, 99, 100, 103, 104, 105, 106, 109, 119, 122, 125, 138, 139, 145, 148, 149, 155, 158, 160, 163, 182, 185, 188, 193, 197, 205, 217, 220, 226, 228, 236, 239, 243, 252, 255, 269, 270, 276, 279, 280, 286, 289, 292, 295, 317, 320, 325, 329, 337, 342, 349, 352, 358, 360, 375, 382, 386, 387, 388, 391, 392], "launch": [0, 3, 8, 10, 11, 13, 30, 31, 35, 36, 42, 46, 48, 52, 53, 71, 81, 87, 91, 98, 117, 119, 155, 158, 208, 213, 239, 240, 243, 246, 265, 286, 340, 345, 346, 366, 382], "mani": [0, 3, 4, 14, 28, 29, 36, 40, 41, 42, 45, 47, 51, 53, 54, 61, 71, 76, 77, 78, 81, 83, 84, 88, 89, 91, 94, 95, 114, 115, 121, 122, 128, 129, 131, 146, 149, 154, 155, 156, 170, 174, 191, 193, 194, 197, 208, 216, 217, 218, 220, 225, 226, 228, 232, 237, 239, 250, 251, 252, 258, 259, 261, 277, 280, 285, 286, 287, 289, 293, 296, 302, 306, 323, 325, 326, 329, 340, 348, 349, 350, 352, 357, 358, 360, 364, 371, 375, 382, 386, 389, 391, 392, 397], "time": [0, 1, 3, 4, 9, 10, 11, 13, 14, 16, 17, 18, 24, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 44, 45, 46, 49, 52, 53, 58, 59, 61, 62, 67, 73, 75, 76, 82, 83, 84, 89, 90, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 110, 114, 115, 118, 119, 121, 122, 128, 129, 131, 134, 142, 143, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 163, 164, 168, 169, 170, 172, 175, 178, 184, 185, 187, 188, 193, 194, 196, 197, 200, 201, 207, 208, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 239, 243, 244, 245, 247, 251, 252, 258, 259, 261, 264, 265, 273, 274, 276, 277, 279, 280, 281, 283, 285, 286, 287, 289, 291, 293, 296, 300, 301, 302, 304, 307, 316, 317, 319, 320, 325, 326, 328, 329, 331, 332, 333, 337, 339, 340, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 368, 370, 371, 373, 375, 378, 382, 383, 385, 386, 387, 388, 389, 391, 392], "releas": [1, 3, 7, 13, 16, 37, 46, 47, 61, 74, 75, 76, 79, 80, 81, 89, 90, 91, 95, 104, 105, 106, 107, 108, 110, 121, 149, 150, 151, 155, 169, 178, 200, 208, 217, 218, 226, 228, 234, 243, 244, 246, 252, 280, 281, 282, 286, 301, 310, 332, 349, 350, 358, 360, 366, 374, 378], "date": [1, 47, 61, 76, 134, 149, 244, 264, 280, 340, 384], "15": [1, 13, 16, 17, 18, 19, 22, 30, 53, 58, 87, 95, 133, 153, 159, 160, 181, 196, 197, 226, 230, 243, 245, 247, 251, 252, 263, 284, 291, 292, 293, 313, 328, 329, 358, 362, 368, 370, 371, 374, 376, 378, 382, 386, 387, 391, 392], "12": [1, 11, 22, 28, 36, 53, 63, 67, 95, 100, 114, 115, 149, 154, 155, 197, 208, 210, 213, 217, 226, 228, 239, 241, 243, 244, 247, 251, 252, 279, 280, 285, 286, 289, 319, 320, 323, 329, 340, 342, 345, 347, 349, 358, 360, 372, 373, 375, 376, 378, 382, 383, 386, 387, 388, 391, 392], "2022": [1, 243, 244, 251, 252, 395], "3": [1, 3, 10, 11, 13, 19, 21, 22, 25, 27, 28, 29, 32, 33, 35, 40, 43, 44, 45, 47, 52, 53, 59, 60, 63, 64, 66, 67, 72, 73, 76, 87, 88, 95, 104, 112, 113, 114, 115, 120, 131, 133, 134, 143, 144, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 164, 168, 171, 173, 178, 181, 182, 185, 186, 187, 189, 192, 193, 196, 197, 199, 200, 201, 202, 207, 208, 210, 213, 215, 217, 220, 225, 226, 227, 228, 230, 231, 232, 234, 236, 239, 243, 244, 245, 247, 249, 251, 252, 261, 263, 264, 274, 275, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 296, 300, 301, 303, 310, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 333, 334, 339, 340, 342, 343, 344, 345, 347, 349, 352, 354, 357, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 389, 390, 391, 397], "11": [1, 3, 46, 53, 65, 71, 76, 93, 95, 161, 195, 197, 200, 208, 210, 217, 226, 243, 244, 245, 247, 251, 252, 279, 293, 310, 327, 328, 329, 332, 340, 342, 345, 349, 358, 372, 373, 375, 378, 382, 383, 386, 387, 388, 391, 392], "support": [1, 3, 4, 6, 7, 8, 32, 41, 52, 53, 54, 59, 76, 82, 84, 93, 95, 150, 155, 158, 181, 186, 192, 208, 228, 238, 239, 249, 250, 252, 281, 282, 286, 289, 290, 293, 294, 302, 305, 313, 316, 318, 319, 324, 325, 329, 331, 340, 349, 350, 358, 360, 364, 368, 371, 374, 378, 381, 382, 383, 384, 386, 389, 392], "enabl": [1, 3, 6, 7, 25, 53, 75, 91, 95, 98, 119, 121, 155, 197, 201, 228, 238, 239, 243, 244, 251, 252, 286, 329, 333, 360, 364, 375, 376, 377, 378, 382, 386, 389, 391], "music": [1, 3, 252], "1896": [1, 252], "cvode": [1, 4, 8, 20, 24, 29, 33, 36, 44, 46, 59, 91, 121, 131, 135, 143, 146, 148, 154, 155, 159, 191, 197, 205, 220, 221, 222, 224, 226, 239, 261, 266, 274, 277, 279, 281, 285, 286, 291, 323, 329, 337, 352, 353, 354, 356, 358, 371, 374, 375, 392], "poolshrink": [1, 217, 349], "delet": [1, 3, 4, 7, 14, 61, 65, 71, 75, 76, 93, 128, 142, 151, 160, 163, 168, 197, 201, 202, 217, 222, 224, 252, 258, 273, 282, 292, 295, 300, 333, 334, 349, 354, 356, 382, 387, 392], "unus": [1, 125, 127, 144, 155, 160, 193, 255, 257, 275, 286, 292, 325], "mechan": [1, 4, 14, 25, 26, 29, 30, 36, 38, 43, 46, 47, 48, 52, 53, 59, 61, 66, 72, 75, 76, 82, 83, 84, 89, 91, 99, 103, 105, 114, 122, 131, 134, 138, 140, 141, 144, 146, 147, 149, 151, 155, 156, 160, 161, 171, 174, 178, 189, 199, 200, 201, 213, 216, 217, 220, 222, 243, 247, 251, 252, 261, 264, 269, 271, 272, 275, 277, 278, 280, 282, 286, 287, 292, 293, 303, 306, 310, 321, 331, 332, 333, 345, 348, 349, 352, 354, 369, 371, 374, 375, 378, 386, 389, 395, 397], "pool": [1, 217, 239, 252, 349], "2033": [1, 252], "bugfix": [1, 382], "reaction": [1, 26, 89, 135, 141, 149, 155, 200, 208, 222, 251, 252, 266, 272, 280, 286, 290, 292, 332, 340, 354, 370, 373, 374, 376, 377, 392, 395], "involv": [1, 10, 11, 13, 27, 32, 76, 83, 88, 91, 95, 103, 110, 114, 115, 121, 124, 128, 129, 131, 146, 149, 155, 158, 159, 161, 162, 168, 197, 208, 217, 228, 233, 236, 244, 252, 254, 258, 259, 261, 277, 280, 286, 289, 291, 293, 300, 340, 349, 360, 371, 389], "paramet": [1, 4, 10, 11, 12, 14, 16, 17, 18, 24, 25, 26, 27, 28, 31, 32, 33, 36, 38, 41, 42, 43, 46, 52, 59, 61, 62, 63, 69, 70, 82, 88, 93, 95, 98, 99, 102, 104, 108, 110, 112, 113, 114, 118, 119, 121, 123, 124, 125, 129, 133, 138, 139, 140, 142, 143, 144, 150, 155, 158, 160, 161, 170, 171, 181, 197, 207, 208, 217, 218, 220, 222, 224, 230, 235, 245, 248, 252, 253, 254, 255, 259, 263, 269, 270, 271, 272, 273, 274, 275, 281, 285, 286, 289, 290, 292, 293, 302, 303, 313, 329, 339, 340, 349, 350, 352, 354, 356, 362, 367, 371, 372, 373, 376, 378, 379, 386, 387, 390, 391, 392, 395, 397], "1933": 1, "document": [1, 3, 4, 28, 35, 51, 53, 76, 77, 78, 82, 95, 104, 122, 137, 148, 149, 158, 160, 197, 200, 208, 237, 239, 240, 247, 268, 279, 280, 289, 292, 329, 332, 333, 340, 370, 383, 384, 385, 386], "window": [1, 10, 11, 14, 25, 31, 32, 35, 36, 37, 45, 46, 47, 48, 50, 61, 62, 65, 67, 74, 75, 76, 77, 81, 82, 84, 87, 89, 91, 102, 103, 104, 105, 109, 117, 118, 124, 128, 129, 135, 142, 167, 168, 169, 170, 171, 172, 174, 178, 197, 207, 213, 218, 223, 226, 230, 232, 234, 235, 237, 240, 242, 252, 254, 258, 259, 266, 273, 299, 300, 301, 302, 303, 304, 306, 310, 326, 329, 337, 339, 345, 350, 355, 358, 362, 364, 366, 367, 368, 378, 386, 392], "build": [1, 3, 4, 5, 6, 7, 14, 31, 32, 35, 36, 37, 45, 48, 52, 53, 61, 65, 71, 76, 84, 93, 102, 103, 107, 121, 122, 148, 155, 158, 170, 178, 197, 208, 228, 237, 238, 239, 242, 244, 252, 279, 286, 289, 302, 310, 329, 360, 382, 383, 386, 388, 389, 390, 391, 392, 395], "updat": [1, 6, 18, 29, 32, 61, 71, 76, 77, 93, 103, 128, 145, 148, 149, 150, 155, 158, 159, 161, 178, 199, 217, 221, 228, 229, 231, 239, 243, 245, 258, 276, 279, 280, 281, 286, 291, 293, 310, 328, 331, 339, 349, 353, 360, 361, 363, 376, 382, 383, 389, 392], "1991": [1, 252], "adapt": [1, 3, 4, 8, 26, 58, 77, 82, 91, 121, 197, 230, 252, 289, 329, 362, 382, 383, 386, 395], "script": [1, 3, 4, 26, 36, 48, 61, 71, 76, 81, 82, 155, 196, 213, 216, 226, 228, 234, 239, 244, 245, 246, 252, 286, 345, 348, 358, 360, 366, 386, 387, 388, 389, 390, 395], "local": [1, 3, 16, 17, 18, 22, 25, 47, 53, 71, 76, 78, 87, 89, 91, 94, 96, 114, 115, 120, 121, 128, 129, 131, 133, 143, 150, 153, 154, 155, 156, 158, 159, 178, 181, 192, 193, 194, 197, 199, 201, 202, 214, 217, 222, 226, 228, 230, 232, 234, 237, 239, 243, 245, 246, 248, 252, 258, 259, 261, 263, 274, 281, 284, 285, 286, 287, 289, 291, 313, 314, 329, 333, 334, 349, 354, 358, 360, 362, 364, 376, 379, 382, 392], "usag": [1, 5, 6, 11, 12, 51, 53, 59, 71, 82, 88, 128, 131, 137, 139, 142, 150, 155, 158, 160, 162, 163, 169, 174, 197, 199, 201, 208, 217, 218, 226, 230, 235, 239, 245, 247, 258, 261, 268, 270, 273, 281, 285, 286, 289, 292, 301, 306, 331, 333, 340, 349, 350, 352, 358, 362, 367, 371, 375, 382], "ad": [1, 12, 32, 39, 59, 65, 71, 76, 98, 119, 121, 124, 128, 144, 146, 149, 150, 155, 156, 158, 169, 172, 178, 193, 196, 197, 201, 207, 211, 217, 226, 228, 230, 239, 244, 254, 258, 275, 277, 280, 281, 282, 286, 287, 289, 293, 301, 304, 305, 308, 310, 325, 328, 329, 331, 333, 339, 340, 343, 349, 358, 360, 362, 364, 370, 373, 382, 383, 386, 391, 392, 395], "nmodl": [1, 3, 4, 7, 26, 36, 52, 53, 66, 82, 93, 121, 133, 135, 141, 143, 147, 148, 158, 200, 201, 208, 216, 217, 238, 239, 243, 248, 249, 251, 263, 266, 272, 274, 278, 279, 282, 289, 301, 331, 332, 333, 340, 348, 349, 371, 374, 378, 379, 392, 395], "variou": [1, 3, 4, 32, 40, 59, 76, 77, 85, 95, 125, 149, 154, 218, 220, 226, 231, 239, 243, 244, 247, 255, 280, 285, 289, 350, 352, 358, 363, 382, 387, 388, 389, 391], "construct": [1, 4, 9, 26, 32, 33, 34, 37, 38, 42, 45, 52, 59, 60, 61, 62, 66, 82, 85, 91, 93, 95, 98, 103, 118, 119, 121, 139, 149, 150, 154, 155, 156, 158, 160, 161, 164, 165, 176, 178, 181, 193, 197, 201, 204, 208, 218, 221, 224, 226, 228, 231, 243, 248, 249, 270, 280, 281, 285, 286, 287, 289, 292, 293, 297, 308, 310, 313, 325, 329, 333, 336, 340, 350, 353, 356, 358, 360, 363, 388, 389, 390, 392, 396], "2011": [1, 11, 16, 17, 18, 19, 95, 251, 252], "setuptool": 1, "distutil": 1, "stdlib": [1, 4, 10, 11, 59, 211, 224, 343, 356], "1924": 1, "coreneuron": [1, 2, 5, 53, 150, 239, 245, 252, 281, 286, 376], "submodul": [1, 3, 7, 158, 243, 289, 386, 392], "complet": [1, 10, 11, 12, 13, 14, 16, 33, 43, 45, 49, 51, 61, 62, 75, 79, 89, 90, 91, 96, 100, 103, 104, 108, 110, 114, 115, 118, 128, 129, 131, 134, 149, 150, 155, 173, 176, 193, 197, 213, 217, 218, 219, 220, 221, 224, 226, 228, 239, 246, 252, 258, 259, 261, 264, 280, 281, 286, 305, 308, 325, 329, 345, 349, 350, 351, 352, 356, 358, 360, 382, 383], "issu": [1, 4, 7, 8, 29, 47, 61, 65, 77, 93, 95, 121, 149, 155, 156, 161, 184, 213, 217, 239, 243, 244, 252, 280, 286, 287, 290, 293, 316, 345, 349, 374, 382, 383, 385, 391], "2109": 1, "08": [1, 15, 153, 200, 252, 279, 284, 332, 395], "mcomplex": 1, "dat": [1, 10, 11, 16, 17, 28, 49, 71, 89, 91, 184, 188, 286, 316, 319, 320, 347], "normal": [1, 8, 25, 27, 36, 43, 52, 61, 63, 65, 76, 92, 99, 114, 115, 121, 125, 126, 128, 129, 132, 143, 146, 148, 149, 150, 151, 154, 155, 156, 159, 162, 163, 165, 166, 168, 169, 170, 172, 178, 181, 184, 185, 191, 193, 196, 197, 208, 213, 217, 220, 224, 226, 227, 228, 230, 234, 239, 244, 252, 255, 256, 258, 259, 262, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 295, 297, 298, 300, 301, 302, 304, 310, 313, 316, 317, 323, 325, 328, 329, 340, 345, 349, 352, 356, 358, 359, 360, 362, 365, 366, 371, 374, 382, 383, 386], "hh": [1, 3, 4, 11, 14, 15, 22, 25, 28, 30, 33, 36, 37, 43, 44, 45, 46, 48, 58, 61, 62, 63, 64, 67, 72, 75, 76, 77, 78, 83, 99, 103, 105, 121, 122, 131, 143, 145, 146, 148, 149, 150, 151, 154, 160, 174, 199, 201, 207, 208, 217, 220, 239, 247, 250, 261, 274, 276, 277, 279, 280, 281, 282, 285, 286, 290, 292, 306, 331, 333, 339, 340, 347, 349, 352, 354, 376, 386, 387, 388, 392], "5": [1, 4, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 28, 31, 36, 37, 41, 44, 45, 47, 49, 52, 53, 58, 59, 60, 63, 65, 67, 73, 75, 76, 82, 83, 88, 90, 100, 103, 105, 114, 115, 120, 121, 122, 124, 128, 129, 131, 132, 133, 143, 146, 148, 149, 151, 153, 154, 155, 156, 158, 159, 161, 164, 175, 178, 181, 182, 187, 193, 194, 196, 197, 201, 203, 205, 207, 208, 210, 213, 215, 217, 224, 226, 227, 230, 232, 239, 244, 245, 247, 250, 251, 252, 254, 258, 259, 261, 262, 263, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 305, 307, 310, 313, 314, 316, 323, 324, 325, 326, 328, 329, 331, 333, 336, 337, 339, 340, 342, 343, 345, 347, 349, 354, 356, 358, 359, 362, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 386, 387, 388, 389, 391], "1895": 1, "modelview": [1, 46, 82, 100, 121, 251, 252], "1907": [1, 252], "nrnivmodl": [1, 3, 4, 5, 8, 48, 71, 76, 93, 117, 149, 151, 200, 243, 247, 280, 282, 332, 378], "core": [1, 3, 10, 11, 13, 36, 53, 155, 158, 220, 239, 243, 245, 247, 252, 286, 352, 382, 383, 391], "makefil": [1, 208, 246], "sdkroot": 1, "1942": 1, "declar": [1, 3, 4, 37, 41, 42, 76, 91, 95, 98, 114, 115, 119, 131, 145, 149, 150, 154, 155, 156, 158, 159, 160, 164, 168, 178, 181, 182, 184, 197, 201, 202, 211, 216, 217, 226, 239, 244, 252, 261, 274, 276, 280, 281, 285, 286, 287, 289, 291, 300, 310, 313, 314, 329, 333, 334, 343, 348, 349, 358, 376, 382, 383, 387], "templat": [1, 21, 22, 32, 52, 76, 85, 143, 154, 155, 164, 169, 174, 202, 208, 217, 224, 252, 274, 285, 286, 301, 306, 334, 340, 349, 356], "must": [1, 3, 4, 5, 6, 7, 8, 16, 28, 29, 31, 39, 44, 51, 54, 59, 61, 62, 65, 68, 69, 70, 74, 75, 76, 77, 78, 86, 89, 90, 91, 98, 100, 104, 114, 115, 119, 122, 129, 131, 133, 134, 139, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 168, 170, 174, 177, 178, 181, 184, 186, 187, 193, 194, 196, 197, 200, 201, 202, 205, 208, 211, 213, 214, 215, 216, 217, 224, 226, 228, 230, 232, 233, 239, 243, 244, 245, 247, 252, 259, 261, 263, 264, 270, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 293, 296, 300, 302, 306, 309, 310, 313, 316, 318, 319, 325, 326, 328, 329, 332, 333, 334, 337, 340, 342, 343, 345, 346, 348, 349, 356, 358, 360, 362, 364, 365, 371, 373, 374, 376, 378, 382, 383, 385, 386, 388, 389, 392], "command": [1, 3, 4, 7, 8, 10, 11, 13, 14, 28, 29, 30, 31, 35, 45, 52, 61, 65, 71, 76, 91, 94, 114, 115, 149, 150, 151, 153, 155, 160, 161, 164, 165, 166, 168, 169, 173, 174, 176, 178, 181, 184, 185, 186, 187, 188, 197, 200, 201, 207, 208, 215, 218, 219, 225, 226, 228, 230, 234, 239, 241, 243, 244, 245, 252, 265, 280, 281, 284, 286, 293, 296, 297, 298, 300, 301, 306, 308, 310, 313, 316, 317, 318, 319, 320, 329, 332, 333, 339, 340, 347, 350, 351, 357, 358, 360, 362, 366, 378, 382, 389, 391], "level": [1, 3, 10, 11, 32, 35, 37, 52, 62, 71, 72, 76, 84, 93, 102, 114, 115, 121, 124, 128, 137, 142, 146, 148, 149, 150, 158, 160, 164, 165, 168, 178, 182, 184, 186, 191, 196, 197, 200, 201, 202, 207, 208, 211, 217, 220, 221, 228, 230, 245, 247, 252, 254, 258, 265, 268, 273, 277, 279, 280, 281, 289, 292, 297, 300, 310, 314, 316, 318, 323, 328, 329, 332, 333, 334, 339, 340, 343, 349, 353, 360, 362, 373, 374, 382, 386, 392], "1914": 1, "setup": [1, 3, 35, 45, 52, 59, 76, 95, 148, 155, 156, 208, 220, 222, 230, 239, 243, 245, 246, 250, 252, 279, 281, 286, 287, 329, 349, 352, 354, 362, 379, 389], "ex": [1, 76, 122, 193, 213, 239, 243, 245, 246, 325, 345], "distribut": [1, 3, 4, 7, 25, 26, 27, 30, 36, 41, 46, 48, 71, 84, 95, 102, 114, 121, 122, 148, 150, 151, 155, 156, 158, 174, 194, 196, 197, 216, 240, 242, 244, 251, 252, 279, 281, 282, 286, 287, 289, 306, 326, 328, 329, 348, 374, 376, 382, 391, 392], "env": [1, 52, 216, 239, 243, 250, 348], "com": [1, 3, 4, 7, 10, 52, 58, 65, 77, 91, 93, 237, 238, 243, 244, 246, 251, 286, 360, 370, 372, 373, 375, 376, 378, 381, 382, 383, 391], "pull": [1, 28, 29, 45, 61, 65, 95, 241, 245, 371, 383, 384], "1941": 1, "incf": [1, 3, 395], "cn": [1, 252, 375, 395, 397], "onlin": [1, 121, 244, 252, 286, 370, 372, 373, 375, 376, 381, 382, 383, 392, 395], "materi": [1, 71, 85, 149, 239, 252, 280, 371], "1932": [1, 252], "deal": [1, 36, 42, 47, 61, 62, 71, 76, 89, 91, 98, 119, 121, 131, 148, 149, 150, 161, 184, 193, 207, 210, 223, 229, 261, 279, 280, 281, 293, 316, 339, 342, 355, 361, 374, 382, 389], "sim": [1, 4, 28, 29, 36, 58, 217, 347, 349], "movi": [1, 30, 221, 231, 353, 363], "more": [1, 3, 4, 7, 8, 9, 10, 11, 14, 16, 17, 18, 24, 25, 28, 31, 32, 33, 36, 38, 40, 41, 42, 46, 47, 51, 53, 54, 59, 61, 63, 66, 68, 71, 72, 74, 75, 76, 77, 78, 81, 84, 85, 88, 89, 91, 93, 94, 95, 98, 105, 109, 114, 115, 119, 121, 122, 128, 129, 131, 133, 139, 143, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 187, 188, 194, 196, 197, 200, 201, 204, 207, 208, 216, 217, 220, 221, 222, 224, 226, 228, 231, 232, 234, 236, 237, 239, 243, 244, 249, 252, 258, 259, 261, 263, 270, 274, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 301, 310, 318, 319, 320, 326, 328, 329, 332, 333, 336, 339, 340, 345, 348, 349, 352, 353, 354, 356, 358, 360, 363, 364, 366, 368, 370, 371, 375, 377, 382, 383, 386, 387, 388, 391], "1925": [1, 252], "transfer": [1, 4, 8, 25, 65, 76, 89, 121, 125, 127, 131, 141, 152, 158, 161, 197, 201, 233, 239, 252, 255, 257, 260, 261, 272, 283, 289, 293, 329, 333, 365, 392], "yale": [1, 38, 76, 84, 95, 121, 155, 159, 200, 239, 244, 252, 286, 291, 332, 340, 397], "websit": [1, 40, 382, 383, 389, 391], "1867": 1, "nrnmpi": [1, 213], "load": [1, 3, 7, 8, 13, 14, 16, 17, 18, 19, 20, 30, 31, 36, 37, 38, 42, 45, 46, 52, 64, 67, 71, 76, 88, 95, 98, 103, 119, 122, 135, 146, 149, 155, 156, 158, 161, 197, 200, 207, 208, 211, 213, 220, 224, 226, 238, 239, 243, 245, 252, 266, 277, 280, 286, 287, 289, 293, 329, 332, 339, 343, 345, 350, 352, 356, 358, 371, 373, 374, 377, 387, 389, 390, 391, 397], "drop": [1, 52, 71, 368, 382, 385], "printf": [1, 8, 11, 16, 17, 23, 28, 29, 54, 55, 64, 72, 76, 114, 115, 133, 135, 146, 151, 155, 160, 164, 169, 173, 180, 183, 184, 188, 192, 193, 197, 205, 208, 210, 212, 216, 220, 234, 247, 266, 312, 315, 316, 320, 323, 325, 329, 330, 337, 340, 344, 348, 392], "alreadi": [1, 3, 7, 11, 14, 35, 37, 46, 47, 51, 52, 54, 61, 62, 76, 77, 78, 84, 85, 89, 91, 93, 108, 110, 128, 144, 154, 155, 156, 161, 165, 170, 182, 188, 197, 224, 226, 233, 237, 239, 244, 258, 275, 285, 286, 287, 293, 297, 302, 320, 329, 356, 358, 365, 382, 389, 392], "lib": [1, 3, 7, 10, 11, 76, 87, 149, 153, 155, 156, 165, 170, 178, 197, 201, 207, 208, 213, 214, 224, 226, 228, 238, 239, 243, 246, 265, 280, 284, 286, 287, 297, 302, 310, 329, 333, 339, 345, 346, 356, 358, 360, 378], "1938": 1, "1944": [1, 252], "01": [1, 16, 22, 31, 53, 73, 75, 91, 97, 111, 148, 161, 168, 178, 196, 197, 213, 217, 232, 243, 244, 245, 251, 252, 279, 286, 289, 293, 300, 310, 329, 337, 345, 349, 358, 364, 373, 375, 376, 378, 388, 389, 391], "07": [1, 155, 159, 252, 279, 291, 376, 395], "allow": [1, 3, 12, 13, 16, 17, 18, 24, 25, 27, 33, 38, 39, 42, 45, 47, 52, 54, 59, 62, 65, 71, 72, 75, 76, 81, 89, 90, 91, 94, 98, 109, 111, 114, 115, 119, 121, 125, 128, 129, 131, 133, 140, 142, 145, 146, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 164, 165, 168, 169, 172, 174, 175, 176, 181, 184, 186, 193, 195, 196, 197, 200, 201, 202, 208, 211, 213, 216, 217, 220, 224, 226, 227, 228, 230, 239, 243, 244, 252, 255, 258, 259, 261, 263, 265, 271, 273, 276, 277, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 296, 297, 300, 301, 304, 306, 307, 308, 310, 313, 314, 316, 318, 325, 327, 328, 329, 332, 333, 334, 340, 343, 345, 348, 349, 352, 356, 358, 359, 360, 362, 364, 370, 371, 374, 375, 376, 382, 383, 386, 387, 388, 389, 391, 392], "multipl": [1, 4, 10, 11, 33, 36, 42, 54, 59, 75, 76, 82, 84, 95, 98, 119, 121, 128, 129, 131, 148, 154, 155, 156, 158, 159, 161, 168, 181, 193, 194, 196, 197, 208, 216, 217, 220, 221, 226, 230, 239, 245, 252, 258, 259, 261, 265, 279, 285, 286, 287, 289, 291, 293, 300, 310, 313, 325, 326, 328, 329, 337, 340, 348, 349, 352, 353, 362, 371, 374, 382, 386, 388, 391, 392], "befor": [1, 3, 4, 7, 8, 10, 11, 14, 28, 29, 36, 40, 42, 43, 47, 48, 51, 52, 54, 61, 63, 64, 65, 71, 72, 76, 81, 85, 87, 88, 89, 91, 93, 95, 97, 98, 102, 103, 107, 119, 120, 128, 129, 131, 133, 144, 146, 147, 148, 153, 154, 155, 156, 158, 164, 165, 168, 169, 172, 173, 178, 185, 196, 197, 199, 200, 207, 217, 218, 219, 220, 222, 226, 227, 230, 234, 239, 244, 245, 248, 258, 259, 261, 263, 275, 277, 278, 279, 280, 284, 285, 286, 287, 289, 290, 297, 300, 301, 304, 305, 310, 317, 325, 328, 329, 331, 332, 339, 340, 349, 350, 351, 352, 354, 358, 359, 362, 366, 371, 374, 377, 382, 386, 387, 388, 389, 391, 392], "after": [1, 3, 8, 10, 11, 13, 24, 29, 31, 32, 37, 38, 40, 42, 45, 47, 51, 52, 61, 64, 65, 71, 72, 75, 76, 81, 84, 88, 91, 96, 98, 100, 102, 109, 114, 115, 119, 120, 121, 125, 128, 129, 131, 133, 139, 143, 145, 146, 147, 148, 149, 153, 154, 155, 156, 161, 164, 173, 181, 184, 185, 186, 187, 196, 197, 201, 207, 208, 216, 217, 220, 222, 224, 226, 227, 228, 230, 234, 239, 243, 244, 245, 248, 252, 255, 258, 259, 261, 263, 265, 270, 274, 276, 277, 278, 279, 280, 284, 285, 286, 287, 290, 293, 296, 305, 313, 316, 317, 318, 319, 328, 329, 333, 339, 348, 349, 352, 353, 354, 356, 358, 359, 360, 362, 366, 374, 382, 383, 386, 387, 388, 389, 391], "same": [1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 24, 25, 28, 29, 30, 32, 33, 36, 37, 39, 41, 42, 43, 45, 46, 48, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 71, 75, 76, 83, 84, 88, 89, 90, 91, 93, 95, 98, 102, 105, 106, 114, 115, 119, 122, 129, 131, 139, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 171, 174, 177, 178, 181, 182, 185, 188, 193, 194, 196, 197, 199, 200, 201, 202, 205, 208, 211, 216, 217, 222, 226, 227, 228, 230, 232, 234, 239, 243, 244, 245, 247, 259, 270, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 300, 303, 306, 309, 310, 313, 317, 320, 325, 326, 328, 329, 331, 332, 333, 334, 337, 340, 343, 348, 349, 354, 358, 359, 360, 362, 364, 366, 370, 371, 373, 374, 378, 382, 383, 386, 388, 391, 392, 396], "type": [1, 3, 4, 9, 12, 14, 24, 31, 36, 37, 46, 48, 52, 59, 60, 62, 65, 69, 70, 72, 75, 76, 77, 81, 82, 83, 87, 89, 91, 94, 104, 105, 107, 112, 113, 117, 118, 121, 131, 139, 144, 145, 148, 149, 151, 153, 155, 156, 158, 159, 164, 174, 176, 178, 181, 182, 186, 187, 193, 197, 199, 200, 201, 202, 208, 211, 213, 217, 220, 224, 226, 228, 233, 234, 235, 243, 248, 250, 252, 261, 270, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 289, 291, 299, 305, 306, 308, 310, 313, 314, 316, 318, 319, 323, 325, 329, 331, 332, 333, 334, 340, 343, 345, 346, 349, 352, 356, 358, 360, 365, 366, 367, 374, 382, 383, 387, 392, 397], "mod": [1, 3, 5, 6, 7, 10, 11, 36, 46, 48, 49, 53, 66, 76, 77, 78, 82, 114, 115, 131, 139, 148, 149, 150, 155, 166, 189, 201, 207, 217, 224, 243, 248, 249, 252, 261, 270, 279, 280, 281, 282, 286, 289, 298, 321, 333, 339, 349, 356, 378, 379, 382, 392], "file": [1, 3, 5, 6, 7, 10, 11, 13, 16, 17, 18, 19, 20, 24, 26, 27, 30, 31, 32, 36, 37, 38, 40, 45, 46, 49, 51, 52, 53, 59, 60, 62, 64, 65, 67, 74, 76, 77, 78, 82, 84, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 115, 116, 120, 124, 128, 129, 131, 135, 139, 142, 148, 149, 150, 155, 156, 165, 166, 168, 170, 172, 176, 178, 180, 183, 185, 186, 193, 197, 199, 200, 201, 207, 208, 211, 213, 215, 216, 217, 220, 222, 223, 225, 226, 227, 234, 238, 239, 241, 243, 245, 248, 249, 254, 258, 259, 261, 266, 270, 272, 273, 274, 279, 280, 281, 282, 286, 287, 289, 297, 298, 300, 302, 304, 308, 310, 312, 315, 317, 318, 325, 329, 331, 332, 333, 339, 340, 343, 345, 347, 348, 349, 352, 354, 355, 357, 358, 359, 364, 366, 371, 374, 379, 382, 387, 389, 391, 392, 397], "1722": [1, 252], "sever": [1, 10, 11, 24, 25, 36, 37, 39, 41, 42, 46, 47, 52, 59, 62, 71, 76, 88, 89, 91, 94, 95, 98, 102, 119, 121, 128, 129, 131, 142, 145, 148, 149, 150, 155, 158, 164, 168, 184, 194, 196, 197, 207, 218, 224, 226, 227, 230, 231, 232, 233, 234, 238, 258, 259, 261, 273, 276, 279, 280, 281, 286, 289, 300, 316, 326, 328, 329, 339, 350, 356, 358, 359, 362, 363, 364, 365, 366, 374, 382, 383, 386, 388, 389, 393], "includ": [1, 3, 4, 7, 42, 43, 46, 47, 52, 53, 54, 59, 62, 69, 70, 71, 74, 76, 77, 83, 84, 91, 93, 95, 98, 102, 103, 118, 119, 121, 122, 128, 143, 148, 150, 155, 158, 160, 162, 172, 184, 187, 191, 193, 195, 197, 201, 211, 218, 220, 222, 226, 232, 234, 239, 243, 244, 245, 248, 252, 258, 274, 279, 281, 286, 289, 290, 292, 294, 304, 316, 319, 323, 325, 327, 329, 333, 340, 343, 349, 350, 352, 354, 358, 364, 365, 366, 371, 373, 374, 376, 377, 382, 383, 385, 386, 391, 392, 393, 396, 397], "random": [1, 6, 29, 32, 76, 82, 89, 91, 102, 121, 133, 135, 148, 150, 169, 181, 193, 194, 197, 198, 216, 220, 222, 232, 249, 252, 263, 266, 279, 281, 313, 325, 326, 329, 330, 348, 352, 354, 364, 392], "model": [1, 3, 4, 5, 6, 8, 14, 16, 17, 18, 25, 26, 27, 35, 38, 40, 41, 42, 48, 49, 50, 51, 53, 60, 63, 64, 72, 76, 77, 78, 82, 83, 85, 88, 89, 93, 96, 97, 98, 99, 100, 103, 105, 110, 119, 120, 125, 129, 133, 143, 146, 147, 148, 150, 154, 155, 156, 158, 159, 161, 166, 170, 178, 191, 194, 196, 200, 215, 216, 217, 220, 222, 224, 226, 228, 231, 234, 236, 237, 239, 248, 250, 251, 252, 255, 259, 263, 265, 274, 277, 278, 279, 281, 285, 286, 287, 289, 290, 291, 293, 298, 302, 310, 323, 326, 328, 332, 340, 347, 348, 349, 352, 354, 356, 358, 360, 363, 366, 368, 370, 371, 373, 374, 375, 378, 379, 381, 383, 384, 386, 387, 388, 390, 392, 393, 395, 397], "1727": 1, "cours": [1, 13, 20, 24, 31, 38, 45, 71, 75, 76, 77, 78, 81, 89, 90, 91, 95, 97, 121, 122, 149, 155, 156, 161, 168, 197, 208, 226, 228, 252, 280, 286, 287, 289, 293, 300, 329, 340, 358, 360, 371, 375, 386, 387, 395], "exercis": [1, 10, 11, 14, 34, 44, 46, 49, 59, 62, 71, 78, 81, 85, 91, 97, 100, 102, 105, 121, 289, 371, 387, 390, 395], "set": [1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 24, 25, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 49, 50, 52, 54, 59, 60, 63, 64, 65, 67, 72, 73, 75, 76, 81, 82, 84, 87, 88, 89, 94, 95, 96, 97, 98, 103, 104, 106, 107, 109, 111, 114, 115, 118, 119, 120, 121, 122, 128, 129, 131, 133, 139, 140, 142, 143, 144, 146, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 168, 169, 178, 179, 184, 185, 187, 192, 193, 194, 196, 197, 199, 201, 204, 205, 207, 208, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 234, 238, 239, 243, 247, 252, 258, 259, 261, 263, 265, 270, 271, 273, 274, 275, 277, 279, 280, 281, 284, 285, 286, 289, 291, 292, 293, 297, 298, 300, 301, 310, 311, 316, 317, 319, 324, 325, 326, 328, 329, 330, 331, 333, 336, 337, 339, 340, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 364, 365, 366, 370, 371, 373, 374, 376, 377, 378, 382, 383, 386, 387, 389, 397], "2018": [1, 26, 251, 252, 286, 371, 382], "1735": [1, 252], "public": [1, 21, 22, 32, 52, 71, 75, 76, 77, 78, 83, 84, 118, 121, 143, 155, 165, 173, 180, 182, 185, 211, 228, 245, 274, 286, 297, 312, 314, 317, 343, 360, 382, 392], "1819": 1, "1725": 1, "6": [1, 3, 10, 11, 22, 25, 28, 40, 41, 46, 52, 58, 59, 60, 67, 76, 88, 95, 114, 115, 122, 129, 151, 154, 155, 161, 178, 182, 187, 191, 193, 196, 197, 200, 201, 210, 213, 217, 220, 226, 227, 230, 238, 239, 241, 243, 245, 247, 251, 252, 259, 279, 280, 282, 285, 286, 292, 293, 307, 310, 314, 321, 323, 325, 328, 329, 332, 333, 340, 342, 344, 345, 347, 349, 352, 354, 358, 359, 362, 365, 370, 372, 373, 374, 375, 376, 377, 378, 380, 382, 386, 387, 388, 391], "wa": [1, 3, 4, 7, 31, 32, 35, 36, 39, 40, 41, 47, 52, 61, 62, 65, 73, 75, 76, 81, 84, 89, 91, 94, 96, 107, 114, 115, 116, 118, 120, 121, 125, 131, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 169, 171, 172, 178, 181, 182, 184, 187, 191, 193, 194, 196, 197, 200, 204, 207, 208, 213, 215, 216, 217, 218, 220, 226, 228, 230, 234, 239, 244, 245, 255, 261, 265, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 295, 297, 300, 303, 304, 305, 310, 313, 314, 316, 319, 323, 325, 326, 328, 329, 331, 332, 336, 339, 340, 345, 347, 348, 349, 350, 352, 358, 360, 362, 366, 368, 371, 378, 382, 386, 389, 391, 394, 397], "ha": [1, 3, 4, 9, 10, 11, 12, 13, 16, 19, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 59, 61, 62, 68, 71, 75, 76, 81, 84, 89, 90, 91, 93, 94, 95, 98, 100, 102, 105, 114, 115, 118, 119, 121, 122, 125, 128, 129, 131, 139, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 176, 181, 184, 191, 193, 194, 197, 201, 202, 203, 207, 208, 213, 216, 217, 218, 224, 226, 228, 231, 234, 239, 240, 243, 252, 255, 258, 259, 261, 270, 275, 276, 279, 280, 281, 282, 285, 286, 287, 289, 292, 293, 294, 295, 297, 298, 300, 301, 304, 308, 313, 316, 323, 325, 326, 327, 329, 333, 334, 335, 337, 339, 340, 345, 348, 349, 350, 356, 358, 360, 363, 366, 371, 373, 374, 376, 377, 378, 382, 383, 386, 387, 388, 389, 391, 392], "reach": [1, 4, 13, 24, 29, 76, 89, 148, 154, 155, 159, 164, 197, 228, 231, 252, 279, 285, 286, 291, 329, 360, 363, 374, 382, 383, 389], "life": [1, 252, 383, 384], "1733": 1, "method": [1, 4, 24, 26, 32, 33, 35, 36, 38, 40, 44, 54, 59, 61, 62, 71, 75, 88, 89, 91, 93, 95, 114, 115, 118, 121, 128, 129, 131, 133, 134, 143, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 164, 168, 191, 193, 195, 196, 197, 199, 201, 202, 205, 208, 216, 217, 220, 222, 224, 225, 226, 230, 234, 239, 243, 248, 251, 252, 258, 259, 261, 263, 264, 274, 276, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 300, 307, 323, 325, 327, 328, 329, 331, 333, 334, 337, 339, 340, 344, 348, 349, 352, 354, 356, 357, 358, 362, 365, 366, 371, 376, 386, 387, 388, 389, 391, 395], "typic": [1, 4, 7, 8, 47, 53, 89, 93, 117, 131, 150, 155, 158, 197, 208, 218, 239, 246, 249, 252, 261, 280, 281, 286, 289, 329, 340, 350, 358, 365, 374, 378, 382, 383, 387, 391, 392], "nrn_": 1, "hoc_": 1, "function": [1, 3, 4, 9, 10, 11, 13, 25, 27, 32, 36, 38, 39, 40, 41, 44, 45, 46, 52, 54, 55, 61, 63, 72, 79, 81, 82, 84, 88, 91, 95, 101, 103, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 141, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 160, 161, 164, 165, 168, 170, 175, 176, 178, 181, 182, 184, 186, 187, 188, 192, 193, 194, 197, 198, 200, 201, 202, 206, 208, 209, 210, 211, 213, 216, 217, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 243, 244, 245, 248, 250, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 272, 274, 275, 276, 277, 279, 281, 282, 285, 286, 287, 292, 293, 295, 297, 300, 301, 302, 305, 307, 308, 310, 313, 314, 316, 317, 318, 319, 320, 324, 325, 326, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 368, 370, 371, 372, 374, 376, 378, 379, 381, 382, 383, 386, 387, 388, 397], "implicitli": [1, 93, 149, 217, 227, 280, 349, 359], "translat": [1, 4, 7, 8, 35, 36, 47, 50, 53, 59, 76, 77, 81, 82, 84, 93, 95, 107, 134, 148, 149, 150, 155, 161, 185, 208, 217, 226, 231, 243, 251, 252, 264, 279, 280, 281, 286, 293, 317, 340, 349, 358, 363, 378, 382, 388, 389], "caus": [1, 9, 33, 36, 42, 46, 50, 75, 76, 90, 91, 93, 98, 119, 128, 129, 133, 139, 148, 149, 150, 154, 155, 156, 158, 161, 166, 169, 186, 194, 197, 208, 217, 218, 226, 228, 229, 231, 239, 250, 252, 258, 259, 263, 265, 270, 279, 280, 281, 285, 286, 287, 289, 293, 298, 301, 318, 326, 329, 340, 349, 350, 358, 360, 361, 363, 371, 373, 375, 382, 386, 391], "error": [1, 3, 7, 8, 10, 11, 28, 36, 39, 40, 42, 46, 47, 52, 59, 60, 81, 82, 88, 89, 91, 93, 98, 114, 115, 119, 121, 124, 128, 129, 131, 132, 135, 141, 144, 145, 149, 150, 154, 155, 159, 160, 161, 163, 164, 165, 168, 178, 184, 187, 191, 192, 193, 197, 199, 200, 201, 204, 208, 210, 217, 220, 224, 239, 243, 244, 252, 254, 258, 259, 261, 262, 266, 272, 275, 276, 280, 281, 286, 290, 291, 292, 293, 295, 297, 300, 316, 318, 319, 321, 323, 324, 325, 329, 331, 332, 333, 336, 340, 342, 349, 352, 356, 375, 382, 386, 389, 391, 392], "incorrect": [1, 148, 155, 171, 224, 279, 286, 303, 356], "verbatim": [1, 4, 36, 77, 93, 147, 149, 155, 216, 248, 278, 280, 286, 348, 375], "1755": [1, 252], "1811": 1, "1825": 1, "state": [1, 3, 4, 7, 8, 9, 12, 26, 29, 31, 32, 33, 36, 59, 64, 72, 84, 89, 104, 118, 121, 122, 125, 128, 131, 144, 145, 146, 148, 150, 154, 155, 158, 159, 160, 161, 168, 171, 178, 182, 184, 196, 197, 199, 200, 202, 216, 217, 220, 221, 222, 224, 226, 227, 228, 234, 239, 248, 252, 255, 258, 261, 272, 275, 276, 277, 278, 279, 281, 285, 286, 290, 291, 292, 293, 300, 303, 310, 314, 316, 328, 329, 331, 332, 334, 348, 349, 352, 353, 354, 356, 358, 359, 360, 365, 366, 371, 376, 378, 379, 382], "global": [1, 3, 4, 36, 52, 76, 93, 121, 129, 131, 139, 143, 144, 147, 148, 149, 154, 155, 156, 159, 161, 171, 196, 197, 199, 200, 201, 208, 211, 217, 220, 221, 228, 232, 247, 252, 259, 261, 270, 274, 275, 279, 280, 285, 286, 287, 291, 293, 303, 314, 328, 329, 331, 332, 333, 340, 343, 349, 352, 353, 360, 364, 373, 375, 376, 382, 389], "now": [1, 3, 4, 7, 8, 9, 14, 16, 19, 24, 25, 27, 28, 31, 32, 36, 37, 38, 42, 45, 46, 49, 52, 58, 61, 62, 63, 65, 75, 76, 81, 82, 88, 89, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 111, 114, 115, 118, 119, 120, 148, 150, 155, 156, 161, 168, 178, 187, 213, 217, 218, 224, 239, 243, 245, 279, 281, 286, 287, 293, 300, 301, 310, 329, 340, 345, 349, 350, 356, 358, 368, 370, 371, 372, 374, 375, 376, 386, 387, 388, 389, 391, 392], "disallow": 1, "1723": [1, 252], "being": [1, 3, 4, 10, 11, 13, 14, 25, 32, 36, 40, 42, 49, 53, 61, 71, 76, 91, 93, 95, 98, 119, 121, 143, 148, 149, 150, 151, 153, 154, 155, 156, 158, 161, 164, 168, 181, 187, 193, 195, 197, 217, 220, 228, 231, 243, 247, 274, 279, 280, 281, 282, 284, 285, 286, 287, 289, 296, 300, 313, 319, 325, 327, 329, 331, 340, 349, 352, 360, 363, 365, 371, 382, 383, 387, 388, 389, 392], "fulli": [1, 3, 77, 158, 161, 213, 217, 220, 251, 252, 289, 293, 345, 349, 352, 375, 382], "migrat": [1, 93, 382, 383], "c": [1, 4, 7, 11, 21, 32, 36, 39, 41, 52, 53, 54, 76, 77, 78, 80, 82, 86, 87, 88, 91, 114, 115, 121, 129, 131, 133, 146, 148, 149, 150, 155, 156, 161, 163, 164, 166, 170, 181, 182, 184, 186, 193, 196, 197, 200, 201, 208, 210, 213, 216, 217, 226, 230, 239, 241, 243, 244, 245, 246, 249, 251, 252, 259, 261, 263, 265, 277, 279, 280, 281, 286, 287, 293, 298, 302, 313, 314, 316, 318, 325, 328, 329, 330, 332, 333, 340, 342, 343, 345, 348, 349, 354, 358, 362, 368, 371, 375, 382, 387, 388, 391], "codebas": [1, 239, 368, 382, 383], "start": [1, 3, 7, 12, 13, 16, 22, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 59, 61, 62, 63, 65, 71, 81, 82, 84, 85, 87, 88, 89, 91, 93, 95, 98, 99, 102, 103, 110, 119, 121, 122, 124, 126, 128, 133, 139, 142, 148, 149, 155, 156, 160, 178, 184, 187, 193, 194, 197, 207, 214, 215, 217, 218, 224, 226, 228, 230, 233, 239, 243, 247, 248, 254, 256, 258, 263, 270, 273, 279, 280, 286, 287, 292, 308, 310, 316, 319, 325, 326, 329, 339, 346, 347, 349, 350, 356, 358, 360, 362, 364, 365, 370, 376, 379, 382, 383, 386, 387, 388, 389, 390, 392, 397], "major": [1, 3, 25, 39, 217, 239, 252, 349, 374, 377, 382, 383], "9": [1, 3, 11, 17, 18, 22, 28, 29, 47, 58, 67, 76, 77, 78, 81, 82, 89, 91, 94, 114, 115, 120, 131, 150, 154, 168, 187, 197, 200, 201, 210, 213, 216, 217, 220, 226, 239, 243, 244, 245, 247, 249, 251, 252, 261, 281, 285, 300, 319, 320, 328, 329, 332, 333, 342, 345, 347, 348, 349, 352, 358, 369, 372, 373, 374, 375, 376, 378, 382, 386, 387, 388, 389, 391], "convert": [1, 3, 4, 16, 29, 54, 82, 91, 93, 114, 115, 121, 122, 158, 161, 186, 197, 217, 252, 289, 290, 293, 318, 329, 349, 371, 375], "instead": [1, 3, 8, 10, 11, 25, 29, 30, 31, 32, 39, 45, 47, 59, 61, 62, 65, 68, 71, 76, 77, 78, 81, 91, 93, 98, 99, 103, 110, 114, 115, 119, 121, 122, 124, 148, 149, 150, 154, 155, 156, 158, 160, 161, 171, 178, 182, 184, 193, 196, 197, 200, 207, 208, 217, 220, 226, 228, 235, 243, 250, 254, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 301, 303, 307, 310, 316, 323, 325, 328, 329, 332, 337, 339, 340, 342, 343, 349, 352, 356, 358, 360, 362, 364, 365, 367, 370, 371, 373, 374, 375, 377, 382, 386, 387, 388, 389, 391, 392], "compat": [1, 3, 6, 7, 8, 19, 46, 52, 76, 77, 93, 114, 115, 150, 155, 156, 184, 197, 217, 228, 230, 243, 244, 245, 249, 250, 281, 286, 287, 316, 329, 349, 360, 362, 365, 382, 383, 392], "some": [1, 3, 4, 5, 6, 7, 10, 11, 25, 28, 29, 32, 36, 38, 40, 46, 47, 52, 53, 59, 61, 63, 65, 69, 71, 75, 76, 77, 78, 81, 84, 85, 89, 93, 94, 95, 114, 115, 121, 122, 128, 131, 139, 146, 148, 149, 150, 151, 155, 156, 161, 164, 168, 169, 177, 178, 196, 197, 202, 208, 216, 217, 218, 220, 221, 226, 228, 239, 243, 244, 248, 249, 252, 258, 261, 270, 277, 279, 280, 281, 282, 286, 287, 289, 293, 300, 301, 309, 328, 329, 334, 340, 348, 349, 350, 352, 353, 358, 360, 362, 371, 374, 377, 382, 383, 386, 387, 388, 389, 390, 391, 392], "legaci": [1, 3, 82, 84, 131, 149, 243, 265, 280, 295, 301, 319, 321, 336, 340, 352, 368], "contain": [1, 3, 8, 13, 14, 16, 19, 31, 32, 33, 35, 37, 42, 45, 46, 47, 48, 49, 52, 59, 61, 62, 65, 71, 75, 77, 78, 81, 84, 85, 87, 89, 91, 93, 94, 96, 98, 102, 109, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 128, 129, 133, 134, 139, 140, 148, 149, 150, 154, 155, 158, 160, 161, 164, 165, 168, 169, 171, 178, 181, 186, 192, 193, 197, 199, 201, 203, 204, 206, 207, 208, 211, 213, 216, 217, 222, 224, 225, 226, 228, 230, 231, 234, 239, 243, 245, 252, 254, 255, 258, 259, 263, 264, 270, 271, 279, 280, 281, 285, 286, 289, 292, 297, 300, 303, 310, 313, 318, 324, 325, 329, 330, 331, 333, 335, 336, 338, 339, 340, 343, 345, 348, 349, 354, 356, 357, 358, 360, 362, 363, 366, 371, 373, 374, 378, 382, 391, 392], "code": [1, 3, 4, 7, 14, 16, 31, 38, 39, 45, 47, 49, 51, 54, 55, 59, 60, 63, 64, 66, 76, 77, 78, 82, 83, 84, 85, 86, 91, 93, 120, 121, 135, 148, 149, 150, 155, 156, 166, 181, 186, 193, 197, 200, 202, 203, 216, 217, 221, 226, 237, 239, 240, 243, 244, 248, 249, 250, 252, 265, 266, 272, 274, 279, 280, 281, 282, 285, 286, 287, 289, 293, 295, 296, 298, 299, 301, 313, 314, 316, 318, 319, 323, 325, 329, 331, 332, 334, 335, 336, 340, 342, 346, 347, 348, 349, 353, 356, 358, 362, 365, 368, 371, 372, 373, 374, 375, 376, 382, 386, 387, 388, 389, 392, 397], "mai": [1, 3, 7, 8, 10, 11, 14, 25, 29, 31, 33, 36, 37, 39, 40, 42, 47, 53, 54, 59, 61, 62, 65, 71, 75, 76, 77, 78, 81, 88, 89, 91, 93, 94, 95, 98, 102, 103, 105, 114, 115, 119, 121, 122, 124, 128, 129, 131, 133, 134, 139, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 163, 168, 169, 170, 178, 181, 189, 193, 196, 197, 201, 202, 204, 205, 208, 211, 217, 218, 220, 222, 224, 226, 227, 228, 230, 231, 232, 234, 236, 239, 243, 244, 250, 252, 254, 258, 259, 261, 263, 264, 270, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 308, 310, 313, 321, 325, 328, 329, 331, 333, 334, 336, 337, 340, 343, 349, 350, 352, 353, 354, 356, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 386, 387, 388, 389, 391, 392, 394, 396, 397], "given": [1, 8, 26, 28, 31, 37, 38, 40, 41, 42, 51, 52, 65, 89, 91, 98, 102, 114, 115, 119, 121, 122, 124, 131, 133, 139, 142, 149, 151, 155, 156, 158, 159, 160, 161, 164, 168, 172, 178, 181, 185, 186, 194, 196, 197, 200, 201, 207, 208, 215, 217, 221, 222, 223, 224, 226, 227, 228, 230, 232, 234, 239, 243, 254, 261, 270, 273, 280, 282, 286, 287, 289, 290, 291, 292, 293, 300, 304, 310, 313, 317, 318, 326, 328, 329, 331, 332, 333, 339, 340, 347, 349, 353, 354, 355, 356, 358, 359, 360, 362, 364, 366, 371, 372, 373, 374, 376, 378, 382, 383, 386, 391, 392], "valid": [1, 54, 93, 124, 129, 145, 149, 150, 154, 156, 159, 187, 217, 244, 252, 254, 259, 265, 276, 280, 281, 283, 285, 287, 289, 291, 319, 343, 349, 371, 382, 383, 391, 392], "A": [1, 3, 4, 10, 11, 13, 14, 24, 26, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 46, 50, 53, 54, 61, 63, 65, 66, 71, 73, 76, 77, 78, 82, 83, 87, 88, 89, 94, 95, 98, 114, 115, 119, 122, 124, 126, 127, 128, 129, 131, 132, 134, 137, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 168, 169, 172, 176, 181, 182, 184, 187, 188, 193, 194, 197, 199, 200, 201, 202, 206, 207, 208, 210, 214, 215, 216, 217, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 238, 239, 243, 244, 245, 247, 251, 252, 254, 256, 257, 258, 259, 261, 264, 268, 273, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 300, 301, 304, 305, 308, 313, 314, 316, 319, 320, 325, 326, 329, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 348, 349, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 365, 370, 371, 372, 373, 375, 376, 378, 381, 383, 384, 386, 388, 389, 390, 391, 392, 394], "guid": [1, 10, 11, 55, 88, 121, 122, 243, 252, 383, 384], "post": [1, 10, 11, 13, 16, 29, 32, 38, 71, 77, 78, 121, 150, 154, 155, 156, 169, 197, 226, 228, 234, 247, 252, 281, 283, 285, 286, 287, 301, 329, 358, 360, 366, 382], "random123": [1, 6, 95, 194, 196, 239, 326, 328], "default": [1, 3, 4, 7, 8, 12, 24, 25, 27, 31, 33, 36, 38, 42, 43, 52, 53, 59, 61, 62, 65, 71, 72, 74, 75, 76, 77, 78, 87, 89, 91, 94, 95, 99, 100, 102, 103, 109, 114, 115, 121, 124, 125, 127, 128, 129, 131, 132, 138, 139, 141, 146, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 168, 170, 171, 175, 177, 178, 185, 187, 192, 193, 194, 195, 196, 197, 199, 200, 208, 217, 218, 220, 221, 224, 226, 227, 230, 231, 232, 233, 234, 235, 239, 243, 244, 245, 250, 254, 255, 257, 258, 259, 261, 262, 265, 269, 270, 272, 277, 279, 280, 281, 284, 285, 286, 289, 291, 292, 293, 295, 299, 300, 302, 303, 307, 309, 310, 311, 317, 319, 321, 324, 325, 326, 327, 328, 329, 331, 332, 337, 340, 349, 350, 352, 353, 356, 358, 359, 362, 363, 364, 365, 366, 367, 371, 374, 375, 378, 379, 380, 382, 383, 386, 391, 392, 397], "number": [1, 3, 6, 8, 9, 10, 11, 13, 16, 22, 29, 31, 32, 36, 37, 38, 39, 40, 42, 45, 46, 49, 52, 53, 59, 61, 65, 76, 83, 84, 86, 87, 89, 91, 93, 95, 102, 103, 114, 115, 117, 121, 124, 128, 129, 131, 133, 139, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 176, 178, 181, 182, 184, 186, 187, 188, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 217, 218, 221, 222, 224, 226, 227, 228, 230, 231, 233, 234, 239, 243, 244, 249, 252, 254, 258, 259, 261, 263, 270, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 308, 310, 313, 314, 316, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 343, 345, 348, 349, 350, 353, 354, 356, 358, 359, 360, 362, 363, 365, 366, 368, 371, 373, 374, 375, 376, 382, 383, 386, 387, 388, 389, 392], "most": [1, 3, 4, 7, 8, 10, 11, 13, 14, 24, 25, 27, 29, 35, 39, 40, 42, 43, 47, 52, 61, 63, 71, 76, 81, 88, 89, 91, 93, 94, 95, 98, 99, 102, 114, 115, 119, 120, 121, 122, 128, 134, 138, 148, 149, 155, 156, 158, 159, 161, 164, 166, 169, 170, 178, 186, 192, 193, 195, 196, 197, 208, 215, 222, 224, 226, 228, 230, 239, 244, 245, 258, 264, 269, 279, 280, 286, 287, 289, 291, 293, 296, 298, 301, 302, 310, 318, 324, 325, 327, 328, 329, 340, 345, 347, 354, 356, 358, 360, 362, 382, 392, 397], "implement": [1, 4, 13, 16, 17, 27, 32, 35, 36, 39, 43, 52, 53, 54, 61, 69, 70, 74, 76, 82, 83, 84, 85, 89, 95, 100, 121, 122, 124, 131, 134, 139, 141, 142, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 164, 168, 172, 174, 178, 182, 184, 193, 197, 204, 214, 217, 219, 220, 222, 224, 225, 226, 236, 239, 249, 252, 254, 261, 264, 270, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 287, 289, 296, 300, 304, 306, 310, 314, 316, 325, 329, 346, 349, 351, 352, 354, 356, 357, 358, 368, 371, 375, 382, 383, 386, 389, 392, 397], "replac": [1, 4, 7, 8, 14, 29, 32, 44, 62, 65, 76, 93, 114, 115, 139, 149, 155, 164, 175, 182, 197, 204, 215, 216, 217, 224, 227, 228, 234, 252, 270, 280, 286, 290, 299, 307, 314, 318, 329, 336, 347, 348, 349, 356, 359, 360, 366, 369, 376, 391], "standard": [1, 10, 11, 16, 17, 18, 33, 34, 37, 46, 50, 53, 71, 76, 84, 91, 93, 95, 114, 115, 121, 122, 134, 135, 143, 146, 148, 149, 150, 155, 156, 158, 160, 165, 180, 183, 184, 187, 188, 193, 196, 197, 199, 201, 207, 208, 217, 223, 227, 228, 230, 243, 252, 264, 266, 274, 277, 280, 281, 286, 287, 289, 290, 292, 297, 312, 315, 316, 319, 320, 325, 328, 329, 331, 333, 339, 340, 342, 349, 355, 359, 360, 362, 371, 372, 375, 376, 382, 383, 386, 387, 391], "librari": [1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 39, 52, 71, 76, 82, 86, 93, 95, 133, 150, 155, 165, 186, 191, 193, 196, 197, 200, 213, 239, 243, 244, 245, 246, 249, 250, 263, 281, 286, 290, 297, 318, 323, 325, 328, 329, 332, 342, 345, 350, 364, 371, 374, 378, 379, 386, 387, 390, 391, 392, 397], "while": [1, 13, 16, 24, 28, 38, 39, 40, 47, 50, 52, 61, 62, 65, 66, 71, 74, 75, 76, 80, 81, 84, 91, 104, 105, 106, 107, 108, 110, 121, 122, 124, 129, 147, 148, 150, 155, 168, 182, 187, 193, 197, 201, 207, 215, 218, 224, 226, 228, 231, 239, 243, 244, 245, 250, 254, 259, 277, 278, 279, 281, 282, 286, 300, 314, 316, 319, 329, 333, 339, 347, 350, 356, 358, 360, 363, 371, 380, 382, 383, 389, 391, 392], "few": [1, 3, 10, 11, 13, 14, 31, 32, 36, 61, 71, 91, 98, 119, 155, 156, 170, 208, 226, 244, 245, 265, 286, 287, 302, 340, 370, 371, 382, 389, 392], "discontinu": [1, 26, 143, 148, 197, 217, 274, 279, 290, 329, 349], "1330": [1, 252], "question": [1, 6, 25, 41, 46, 58, 75, 77, 81, 82, 84, 97, 98, 119, 121, 156, 158, 207, 222, 228, 252, 287, 289, 339, 354, 360, 371, 392], "335": [1, 252], "return": [1, 3, 4, 8, 10, 11, 13, 16, 17, 21, 22, 28, 29, 31, 32, 33, 36, 37, 45, 52, 54, 58, 61, 63, 64, 71, 72, 74, 75, 76, 86, 89, 91, 93, 99, 120, 124, 128, 129, 131, 132, 133, 134, 144, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 217, 218, 220, 222, 226, 228, 230, 231, 233, 234, 250, 254, 258, 259, 261, 262, 263, 264, 265, 275, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 310, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 348, 349, 350, 352, 354, 358, 360, 362, 363, 365, 366, 371, 372, 373, 376, 378, 380, 386, 387, 388, 391, 392], "proper": [1, 12, 71, 76, 81, 94, 98, 119, 148, 149, 150, 151, 154, 155, 160, 164, 168, 199, 216, 217, 232, 234, 238, 239, 244, 252, 279, 280, 281, 282, 286, 292, 296, 300, 348, 349, 364, 366], "exit": [1, 10, 11, 13, 14, 24, 31, 42, 45, 46, 61, 62, 76, 80, 82, 91, 98, 119, 128, 133, 148, 149, 150, 155, 159, 176, 193, 197, 200, 201, 207, 213, 219, 220, 224, 228, 230, 239, 243, 258, 263, 279, 280, 281, 286, 291, 308, 310, 325, 329, 332, 333, 339, 345, 351, 352, 356, 360, 362, 389], "execut": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 24, 28, 29, 30, 32, 36, 37, 45, 46, 49, 51, 53, 54, 55, 65, 71, 72, 76, 77, 78, 83, 91, 93, 95, 120, 121, 122, 124, 128, 129, 133, 135, 143, 149, 150, 151, 154, 155, 156, 159, 160, 161, 163, 164, 168, 169, 173, 174, 176, 178, 181, 184, 187, 188, 197, 199, 200, 201, 202, 204, 205, 207, 208, 214, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 233, 234, 239, 241, 243, 244, 245, 250, 254, 258, 259, 263, 266, 274, 280, 281, 282, 285, 286, 287, 291, 292, 293, 295, 300, 301, 305, 306, 308, 310, 313, 314, 316, 319, 320, 321, 329, 331, 332, 333, 334, 336, 337, 339, 340, 346, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 362, 365, 366, 378, 382, 392], "1633": 1, "ubuntu21": 1, "10": [1, 3, 10, 11, 13, 14, 15, 16, 17, 18, 24, 25, 28, 31, 32, 33, 37, 38, 39, 40, 41, 45, 46, 47, 50, 52, 53, 59, 61, 62, 64, 72, 73, 76, 77, 78, 86, 88, 89, 90, 94, 95, 102, 103, 104, 105, 114, 115, 142, 146, 150, 154, 155, 158, 161, 163, 164, 168, 178, 181, 187, 191, 193, 195, 196, 197, 200, 201, 205, 208, 210, 214, 216, 217, 220, 224, 226, 228, 230, 231, 239, 243, 244, 245, 247, 249, 250, 251, 252, 273, 277, 279, 280, 281, 285, 286, 289, 290, 293, 300, 310, 313, 316, 323, 325, 327, 328, 329, 332, 333, 337, 340, 342, 346, 347, 348, 349, 352, 354, 356, 358, 360, 362, 363, 365, 368, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 386, 387, 388, 389, 391, 392], "wsl": [1, 237, 242], "escap": [1, 208, 217, 228, 252, 340, 349, 360], "special": [1, 5, 8, 25, 28, 53, 63, 76, 77, 81, 85, 88, 114, 115, 121, 122, 149, 150, 151, 155, 158, 163, 168, 178, 181, 186, 189, 197, 207, 208, 217, 225, 228, 239, 240, 241, 243, 244, 245, 252, 265, 280, 281, 282, 289, 300, 313, 318, 321, 329, 339, 340, 349, 357, 360, 378, 382, 383, 391, 392], "charact": [1, 65, 71, 76, 89, 114, 115, 150, 160, 172, 176, 184, 186, 187, 197, 210, 211, 213, 217, 224, 226, 228, 230, 281, 292, 304, 308, 316, 318, 319, 329, 342, 343, 345, 349, 356, 358, 360, 362, 392], "1862": 1, "mallinfo2": 1, "1805": 1, "domain": [1, 27, 39, 41, 76, 89, 91, 99, 101, 121, 128, 141, 178, 179, 185, 191, 197, 200, 252, 258, 272, 311, 317, 323, 329, 332, 371], "If": [1, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 45, 46, 47, 51, 53, 54, 59, 61, 62, 63, 65, 71, 74, 75, 76, 77, 78, 81, 84, 87, 89, 91, 93, 94, 95, 98, 105, 107, 109, 114, 115, 117, 118, 119, 120, 122, 128, 129, 131, 133, 138, 139, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182, 184, 187, 188, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 243, 244, 245, 258, 259, 261, 263, 265, 269, 270, 274, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 314, 316, 319, 320, 321, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 371, 373, 374, 382, 383, 386, 387, 389, 391, 392], "refer": [1, 4, 5, 25, 32, 37, 45, 51, 62, 63, 68, 71, 74, 76, 77, 78, 82, 93, 95, 99, 114, 115, 118, 126, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 168, 172, 174, 181, 182, 184, 192, 193, 194, 197, 200, 202, 204, 208, 211, 217, 226, 228, 232, 234, 236, 237, 239, 243, 244, 245, 250, 252, 256, 273, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 300, 304, 306, 310, 313, 314, 316, 324, 325, 326, 328, 329, 332, 334, 336, 340, 343, 344, 349, 358, 360, 364, 365, 366, 371, 374, 384, 387, 389, 391, 392, 397], "minor": [1, 149, 226, 239, 280, 358, 382, 383, 392], "prepar": [1, 45, 61, 71, 93, 197, 216, 226, 228, 244, 252, 286, 329, 348, 358, 360, 382], "upcom": [1, 245], "remain": [1, 32, 33, 38, 46, 50, 68, 75, 91, 94, 128, 139, 149, 150, 154, 155, 160, 164, 167, 169, 185, 193, 197, 230, 236, 258, 270, 280, 281, 285, 286, 289, 292, 296, 299, 301, 317, 325, 329, 362, 375, 388], "older": [1, 71, 77, 93, 197, 243, 289, 296, 325, 329, 345, 364, 374, 391, 392], "straightforward": [1, 7, 81, 286, 382], "featur": [1, 6, 25, 42, 61, 68, 81, 85, 91, 93, 94, 114, 115, 121, 148, 149, 150, 155, 177, 224, 228, 243, 245, 246, 249, 252, 279, 280, 281, 286, 289, 309, 356, 360, 371, 382, 383, 397], "1879": [1, 252], "25": [1, 10, 11, 13, 15, 16, 17, 18, 28, 41, 58, 67, 76, 122, 149, 160, 181, 187, 192, 197, 208, 210, 217, 239, 247, 251, 252, 280, 292, 293, 296, 313, 319, 324, 329, 340, 342, 345, 347, 349, 371, 372, 378, 381, 386, 387, 391, 392, 397], "03": [1, 10, 11, 53, 76, 155, 247, 252, 373, 395], "wheel": [1, 3, 7, 53, 237, 240, 242, 382, 383, 385], "arm": [1, 252], "aarch64": [1, 245], "platform": [1, 3, 84, 121, 122, 200, 243, 245, 252, 332, 345, 373, 382, 383, 391], "via": [1, 4, 5, 8, 13, 22, 31, 32, 37, 44, 52, 59, 65, 66, 76, 81, 83, 88, 93, 95, 98, 119, 121, 127, 131, 134, 143, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 200, 207, 208, 211, 213, 226, 228, 237, 238, 239, 240, 243, 246, 250, 251, 252, 257, 261, 264, 274, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 310, 312, 314, 315, 329, 331, 332, 334, 339, 340, 343, 345, 346, 349, 350, 353, 358, 360, 365, 366, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 386, 389, 390, 391, 392, 396], "circleci": [1, 240], "1676": [1, 252], "appl": [1, 3, 52, 240, 245], "m1": [1, 3, 75, 97, 110, 111, 193, 240, 245, 252, 325], "1649": [1, 252], "nvidia": [1, 7, 53, 239, 243, 245], "gpu": [1, 3, 5, 6, 7, 8, 55, 150, 240, 245, 252, 281], "iter": [1, 3, 13, 16, 17, 29, 51, 52, 59, 63, 76, 89, 91, 99, 101, 131, 149, 151, 158, 162, 164, 180, 190, 193, 197, 199, 201, 202, 208, 217, 226, 227, 261, 280, 282, 289, 294, 296, 312, 322, 325, 329, 333, 334, 340, 349, 358, 359, 371, 374, 382, 383, 386, 392], "separ": [1, 3, 13, 16, 17, 18, 28, 39, 42, 45, 52, 54, 61, 65, 71, 76, 78, 82, 89, 91, 94, 98, 105, 119, 124, 128, 129, 143, 149, 150, 154, 155, 156, 158, 161, 164, 165, 169, 193, 194, 196, 197, 201, 202, 213, 217, 224, 226, 227, 228, 231, 239, 243, 244, 252, 254, 258, 259, 274, 280, 281, 285, 286, 287, 289, 293, 296, 297, 301, 314, 325, 326, 328, 329, 333, 334, 345, 347, 349, 356, 358, 359, 360, 363, 374, 382, 386, 387, 391, 392], "nvhpc": [1, 3, 7, 245], "21": [1, 41, 52, 58, 121, 155, 161, 197, 216, 239, 245, 251, 252, 286, 293, 329, 348, 386, 387, 391, 392], "sdk": [1, 3, 7, 243], "1657": [1, 252], "1705": [1, 252], "vendor": [1, 243], "intel": [1, 3, 7, 194, 197, 243, 245, 252, 326, 329], "crai": [1, 3, 7, 121, 134, 215, 243, 264, 347], "better": [1, 7, 12, 24, 28, 35, 39, 71, 73, 76, 91, 95, 120, 149, 155, 156, 164, 191, 193, 197, 208, 217, 231, 243, 252, 280, 286, 287, 289, 296, 323, 329, 346, 349, 363, 382, 386, 392], "hpe": [1, 245], "mpt": [1, 3, 245], "mpi": [1, 2, 5, 7, 8, 10, 11, 26, 77, 95, 131, 141, 152, 153, 156, 240, 243, 244, 246, 261, 272, 283, 284, 287, 297, 390], "1498": 1, "linux": [1, 3, 10, 11, 47, 48, 62, 71, 77, 78, 81, 87, 94, 121, 122, 155, 166, 213, 214, 237, 240, 242, 250, 286, 298, 345, 346, 368, 378, 382, 395], "manylinux2014": [1, 245], "1365": 1, "maco": [1, 10, 48, 62, 71, 77, 78, 224, 237, 240, 243, 244, 250, 356, 368], "universal2": [1, 243, 244, 245], "tight": [1, 149, 150, 252, 280, 281], "integr": [1, 6, 7, 9, 25, 29, 32, 36, 39, 44, 53, 70, 71, 83, 85, 86, 91, 137, 143, 146, 148, 149, 150, 155, 156, 158, 159, 161, 191, 197, 217, 220, 221, 222, 224, 251, 252, 268, 274, 277, 279, 280, 281, 286, 287, 289, 291, 293, 323, 329, 330, 349, 352, 353, 354, 356, 371, 374, 382, 383, 395], "both": [1, 3, 6, 7, 9, 25, 29, 30, 37, 38, 39, 41, 47, 48, 51, 53, 59, 65, 66, 68, 71, 75, 76, 83, 85, 91, 93, 95, 100, 103, 111, 121, 126, 148, 149, 150, 151, 155, 156, 160, 181, 191, 197, 208, 217, 226, 239, 243, 244, 245, 252, 256, 279, 280, 281, 282, 285, 286, 287, 289, 290, 292, 313, 318, 323, 324, 329, 349, 358, 364, 365, 371, 372, 373, 374, 382, 388, 397], "memori": [1, 3, 6, 8, 51, 52, 53, 71, 76, 93, 131, 134, 149, 150, 156, 159, 160, 166, 193, 197, 204, 205, 213, 217, 222, 226, 239, 252, 261, 264, 279, 280, 281, 286, 287, 289, 291, 292, 298, 325, 329, 331, 336, 337, 345, 349, 354, 358, 371, 391], "well": [1, 28, 29, 36, 37, 40, 41, 47, 52, 53, 59, 65, 71, 75, 76, 81, 84, 89, 91, 95, 114, 115, 118, 121, 128, 131, 137, 138, 139, 148, 149, 154, 155, 169, 181, 185, 197, 201, 202, 207, 208, 217, 224, 226, 228, 234, 235, 244, 245, 250, 252, 258, 268, 269, 270, 280, 285, 286, 289, 301, 313, 317, 323, 329, 333, 334, 339, 349, 356, 358, 360, 366, 367, 371, 372, 374, 375, 382, 383, 386, 387, 388, 391], "mode": [1, 42, 45, 61, 65, 71, 74, 75, 76, 79, 80, 89, 91, 94, 118, 126, 139, 142, 161, 168, 172, 175, 184, 185, 192, 217, 223, 226, 228, 230, 231, 234, 245, 252, 256, 270, 273, 279, 286, 293, 300, 304, 307, 316, 317, 324, 349, 355, 358, 360, 362, 363, 366, 370, 372, 373, 375, 376, 381, 390, 392], "extend": [1, 29, 65, 82, 118, 129, 131, 149, 155, 158, 224, 243, 252, 259, 261, 280, 286, 289, 356, 371, 386, 387], "pointer": [1, 6, 28, 29, 38, 52, 54, 76, 133, 135, 147, 154, 155, 159, 160, 163, 168, 178, 181, 182, 184, 193, 197, 199, 200, 201, 202, 205, 208, 215, 216, 217, 226, 228, 233, 247, 263, 266, 282, 285, 286, 289, 291, 292, 295, 300, 302, 310, 313, 314, 316, 325, 329, 331, 332, 333, 334, 337, 340, 342, 347, 348, 349, 358, 360, 365, 377, 392], "ani": [1, 3, 4, 8, 12, 13, 14, 25, 28, 29, 32, 34, 36, 40, 43, 45, 46, 47, 53, 54, 61, 62, 63, 64, 65, 66, 72, 73, 76, 77, 78, 81, 82, 88, 89, 91, 93, 95, 98, 99, 102, 103, 104, 109, 114, 115, 118, 119, 121, 122, 124, 128, 129, 131, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 170, 172, 178, 181, 182, 184, 191, 193, 194, 196, 197, 199, 201, 202, 206, 207, 208, 215, 216, 217, 220, 222, 224, 226, 227, 228, 229, 230, 231, 235, 238, 243, 245, 250, 254, 258, 259, 261, 265, 270, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 302, 304, 310, 313, 314, 316, 323, 325, 326, 328, 329, 331, 333, 334, 338, 339, 340, 347, 348, 349, 352, 354, 356, 358, 359, 360, 361, 362, 363, 365, 367, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 389, 391, 392], "rang": [1, 4, 13, 16, 17, 24, 25, 27, 29, 36, 38, 47, 58, 71, 73, 76, 84, 86, 89, 91, 95, 99, 102, 121, 122, 124, 128, 129, 131, 140, 143, 147, 148, 149, 154, 155, 156, 159, 160, 161, 164, 166, 168, 171, 174, 178, 181, 187, 191, 193, 194, 196, 197, 199, 201, 205, 208, 213, 215, 217, 218, 224, 226, 227, 228, 230, 231, 232, 233, 239, 247, 249, 252, 254, 258, 259, 261, 271, 274, 279, 280, 282, 285, 286, 287, 291, 292, 293, 296, 298, 300, 303, 306, 310, 313, 319, 320, 323, 324, 325, 326, 328, 329, 331, 333, 337, 340, 342, 345, 347, 349, 350, 356, 358, 359, 360, 362, 363, 364, 365, 370, 371, 372, 376, 378, 386, 387, 388, 389, 391], "thread": [1, 3, 6, 8, 36, 52, 90, 121, 148, 150, 155, 158, 159, 196, 197, 217, 239, 252, 279, 281, 283, 286, 289, 291, 328, 329, 331, 346, 349, 356, 376, 378], "1622": 1, "1581": 1, "savest": [1, 135, 200, 216, 220, 266, 289, 332, 348, 352, 392], "1586": 1, "dynam": [1, 3, 8, 38, 41, 76, 83, 121, 135, 141, 155, 156, 158, 169, 178, 224, 226, 228, 243, 247, 251, 252, 266, 272, 287, 289, 301, 310, 356, 358, 360, 368, 370, 371, 376, 378, 386, 387, 392, 397], "extracellular": [1, 4, 33, 131, 134, 141, 146, 148, 150, 151, 155, 200, 217, 247, 251, 252, 261, 264, 272, 277, 279, 281, 282, 286, 332, 349, 371, 373, 376, 379, 392, 397], "tortuos": [1, 289, 373, 378], "volum": [1, 81, 149, 158, 252, 280, 289, 371, 374, 378, 386], "fraction": [1, 25, 61, 63, 71, 95, 102, 148, 159, 226, 252, 279, 289, 291, 358, 374, 378], "1260": [1, 252], "3d": [1, 4, 5, 46, 50, 84, 99, 120, 141, 158, 160, 231, 234, 251, 252, 272, 286, 289, 292, 363, 366, 371, 374, 376, 386], "morphologi": [1, 37, 40, 43, 46, 47, 52, 81, 82, 84, 126, 129, 252, 256, 259, 289, 292, 293, 294, 364, 373, 376, 378, 379, 390, 392], "move": [1, 12, 24, 25, 37, 38, 42, 50, 52, 61, 65, 67, 75, 76, 80, 81, 85, 93, 94, 98, 99, 100, 102, 105, 107, 118, 119, 122, 128, 131, 139, 148, 150, 154, 155, 158, 159, 168, 170, 172, 176, 178, 184, 197, 201, 208, 217, 226, 228, 230, 234, 239, 243, 252, 258, 261, 270, 279, 281, 286, 289, 291, 292, 300, 302, 304, 308, 310, 316, 329, 333, 340, 349, 358, 360, 362, 366, 371, 376, 382, 391], "1147": [1, 252], "dedic": [1, 382], "ci": [1, 3, 132, 207, 239, 243, 245, 246, 262, 339, 382, 385], "repositori": [1, 3, 7, 10, 53, 93, 238, 239, 241, 243, 244, 245, 246, 382, 383, 385], "check": [1, 3, 13, 25, 27, 28, 29, 31, 34, 35, 36, 38, 45, 46, 47, 52, 53, 61, 62, 71, 76, 81, 89, 91, 93, 114, 115, 122, 124, 128, 129, 149, 150, 155, 156, 159, 170, 178, 181, 188, 193, 197, 200, 202, 207, 208, 210, 217, 218, 220, 221, 222, 228, 229, 239, 243, 244, 245, 254, 258, 259, 280, 281, 286, 287, 291, 301, 310, 313, 314, 320, 325, 329, 332, 334, 339, 340, 342, 345, 349, 350, 352, 353, 354, 360, 361, 382, 386, 388, 391], "differ": [1, 3, 4, 5, 7, 10, 11, 13, 14, 24, 25, 28, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 52, 59, 61, 65, 66, 75, 76, 81, 82, 84, 87, 88, 89, 91, 94, 95, 96, 102, 114, 115, 121, 122, 128, 133, 139, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 170, 178, 184, 189, 190, 193, 194, 196, 197, 201, 207, 208, 216, 217, 220, 222, 224, 226, 228, 231, 240, 241, 243, 245, 252, 258, 263, 270, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 302, 310, 316, 321, 322, 323, 325, 326, 328, 329, 331, 333, 339, 340, 342, 348, 349, 350, 352, 354, 356, 358, 360, 363, 371, 374, 378, 382, 386, 388, 389, 391, 392, 396], "edu": [1, 38, 95, 121, 155, 159, 184, 194, 197, 200, 234, 239, 244, 252, 286, 291, 316, 326, 332, 340, 366, 397], "readthedoc": [1, 247], "1674": 1, "train": [1, 9, 32, 36, 37, 66, 69, 70, 78, 95, 112, 113, 148, 154, 197, 252, 279, 285, 329], "video": [1, 58, 65, 71, 77, 78, 81, 286, 289, 378, 394, 396, 397], "profil": [1, 25, 53, 240, 252], "benchmark": [1, 5, 53, 240, 252], "programm": [1, 4, 45, 51, 61, 71, 77, 78, 95, 121, 156, 158, 164, 178, 197, 236, 237, 250, 287, 310, 329, 397], "expand": [1, 46, 49, 65, 77, 78, 84, 197, 251, 252, 329, 378, 387, 388], "rewritten": [1, 382], "1680": [1, 252], "propos": [1, 71, 252, 382], "directli": [1, 35, 54, 59, 76, 94, 121, 124, 145, 149, 156, 158, 181, 182, 197, 208, 216, 217, 228, 239, 247, 250, 252, 254, 263, 274, 276, 280, 286, 287, 289, 292, 293, 296, 313, 314, 329, 333, 336, 339, 340, 346, 348, 349, 360, 373, 374, 382, 383, 392], "click": [1, 12, 14, 24, 25, 27, 31, 32, 42, 45, 46, 47, 50, 61, 62, 65, 68, 71, 74, 75, 76, 79, 80, 81, 84, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 126, 128, 129, 138, 139, 149, 168, 169, 173, 174, 226, 228, 231, 234, 235, 243, 244, 245, 256, 258, 259, 269, 270, 279, 280, 300, 301, 305, 306, 310, 358, 360, 363, 364, 366, 367, 382, 386], "edit": [1, 10, 11, 14, 25, 31, 36, 42, 47, 61, 65, 75, 81, 82, 87, 91, 98, 118, 119, 175, 200, 207, 219, 228, 230, 244, 252, 307, 332, 339, 351, 360, 362, 382], "_nrnthread": 1, "fail": [1, 3, 4, 7, 42, 54, 76, 93, 98, 119, 155, 228, 239, 241, 243, 244, 245, 286, 360], "nrnthread": [1, 4, 52, 239], "1609": 1, "minimum": [1, 16, 17, 40, 53, 89, 91, 99, 128, 129, 133, 148, 155, 156, 164, 196, 197, 217, 243, 244, 258, 259, 263, 279, 280, 286, 287, 328, 329, 337, 349], "1408": [1, 252], "python2": [1, 243], "intern": [1, 3, 4, 5, 8, 12, 36, 39, 76, 93, 95, 121, 128, 129, 135, 144, 145, 146, 148, 149, 150, 151, 155, 158, 159, 160, 161, 168, 196, 200, 205, 216, 217, 220, 226, 244, 247, 249, 251, 252, 258, 259, 266, 275, 276, 277, 279, 280, 281, 282, 286, 289, 291, 292, 293, 300, 328, 332, 337, 348, 349, 352, 358, 382], "readlin": [1, 3, 245, 250], "remov": [1, 3, 28, 36, 42, 59, 65, 93, 98, 119, 128, 129, 131, 138, 139, 142, 150, 151, 154, 155, 160, 161, 162, 165, 168, 169, 178, 184, 188, 197, 200, 203, 211, 217, 224, 226, 227, 228, 234, 238, 247, 252, 258, 259, 261, 269, 270, 272, 273, 281, 282, 285, 286, 292, 293, 294, 297, 300, 301, 310, 311, 316, 320, 329, 330, 332, 335, 337, 343, 349, 356, 358, 359, 360, 366, 387, 391], "1371": [1, 252, 382], "begin": [1, 4, 13, 42, 45, 46, 52, 61, 67, 72, 76, 91, 121, 122, 124, 126, 129, 133, 134, 146, 148, 154, 155, 159, 160, 161, 165, 168, 169, 172, 181, 184, 185, 186, 187, 188, 193, 196, 197, 200, 201, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 233, 239, 250, 254, 256, 259, 263, 264, 265, 277, 279, 280, 286, 289, 291, 292, 293, 297, 300, 301, 304, 313, 316, 317, 318, 319, 320, 325, 328, 329, 332, 333, 347, 348, 349, 350, 352, 354, 355, 357, 358, 359, 360, 365, 371, 372, 375, 378, 382, 383, 386, 387, 388, 389, 391, 396, 397], "might": [1, 7, 8, 10, 11, 14, 29, 34, 39, 46, 47, 49, 53, 61, 63, 71, 73, 75, 81, 85, 87, 89, 91, 95, 105, 121, 122, 128, 149, 150, 155, 158, 174, 197, 217, 228, 239, 243, 258, 280, 281, 286, 306, 316, 328, 329, 349, 360, 370, 371, 373, 382, 383, 391], "1651": [1, 252], "parallelcontext": [1, 8, 16, 23, 35, 131, 135, 141, 152, 154, 156, 161, 197, 208, 217, 222, 239, 261, 266, 272, 279, 283, 285, 287, 293, 297, 329, 340, 349, 354, 368, 389, 392, 397], "mpiabort": 1, "sai": [1, 28, 36, 82, 89, 91, 149, 150, 154, 155, 158, 160, 227, 280, 281, 285, 286, 289, 292, 328, 358, 359, 365, 370, 386, 389, 391, 392], "abort": [1, 155, 166, 207, 286, 298, 339], "1567": 1, "openmpi": [1, 3, 7, 10, 243, 244, 245], "initialis": [1, 52], "crash": [1, 42, 45, 89, 98, 119, 150, 240, 281], "argv": [1, 52], "argc": [1, 52], "should": [1, 4, 7, 8, 10, 11, 13, 14, 24, 25, 28, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 53, 59, 61, 62, 76, 81, 82, 85, 88, 89, 91, 93, 94, 102, 103, 104, 105, 106, 110, 114, 115, 128, 129, 131, 133, 139, 142, 144, 146, 148, 149, 150, 153, 155, 156, 158, 159, 160, 161, 163, 164, 168, 171, 178, 181, 184, 185, 194, 196, 197, 200, 201, 203, 205, 206, 207, 208, 210, 213, 216, 217, 218, 220, 222, 223, 224, 226, 228, 230, 233, 239, 243, 244, 249, 252, 258, 259, 261, 263, 270, 273, 275, 277, 279, 280, 281, 284, 286, 287, 289, 291, 292, 293, 295, 296, 300, 303, 310, 313, 316, 317, 326, 328, 329, 332, 333, 335, 337, 338, 339, 340, 342, 345, 348, 349, 350, 352, 354, 355, 356, 358, 360, 362, 365, 371, 374, 381, 382, 383, 386, 387, 389, 391, 392], "null": [1, 52, 54, 213, 314, 345], "1682": [1, 252], "avoid": [1, 3, 4, 8, 37, 40, 51, 71, 74, 75, 76, 91, 93, 95, 102, 114, 115, 121, 122, 148, 149, 150, 154, 155, 158, 159, 160, 161, 163, 164, 191, 193, 196, 197, 204, 208, 217, 224, 238, 239, 243, 244, 250, 252, 279, 280, 281, 285, 286, 289, 290, 291, 292, 293, 295, 297, 321, 323, 328, 329, 340, 349, 358, 362, 364, 375, 378, 382, 387, 389], "segfault": [1, 3, 205, 240, 337], "dure": [1, 3, 4, 9, 14, 29, 32, 33, 42, 44, 51, 52, 61, 66, 71, 72, 76, 88, 89, 91, 93, 98, 119, 121, 124, 125, 128, 129, 131, 133, 143, 146, 148, 149, 150, 151, 154, 155, 159, 164, 165, 168, 172, 178, 182, 197, 200, 207, 208, 213, 217, 220, 221, 226, 227, 230, 231, 238, 239, 244, 252, 254, 255, 258, 259, 261, 263, 274, 277, 279, 280, 281, 282, 285, 286, 291, 297, 300, 304, 310, 314, 329, 332, 339, 340, 345, 349, 352, 353, 358, 359, 362, 363, 374, 378, 382, 386, 387, 389], "point": [1, 4, 9, 12, 13, 14, 16, 17, 19, 22, 25, 27, 30, 31, 32, 37, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 59, 61, 63, 65, 66, 67, 71, 72, 76, 77, 78, 81, 84, 86, 88, 89, 91, 94, 95, 96, 98, 99, 102, 110, 114, 115, 119, 120, 121, 124, 125, 126, 128, 129, 133, 135, 139, 141, 142, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 168, 169, 171, 181, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 210, 211, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 230, 231, 233, 234, 235, 239, 243, 244, 247, 250, 252, 254, 255, 256, 258, 259, 263, 266, 270, 272, 273, 274, 278, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 296, 298, 300, 301, 303, 313, 314, 316, 318, 319, 320, 324, 326, 327, 328, 329, 331, 333, 334, 336, 337, 339, 340, 342, 343, 348, 349, 350, 352, 353, 354, 356, 357, 358, 360, 362, 363, 365, 366, 367, 368, 370, 374, 376, 382, 383, 386, 388, 389, 392], "1627": 1, "1d": [1, 158, 252, 289, 371], "voxel": [1, 289], "problem": [1, 3, 12, 36, 43, 44, 46, 47, 51, 63, 71, 72, 73, 76, 82, 84, 88, 93, 98, 119, 121, 122, 129, 131, 149, 150, 155, 156, 159, 207, 217, 220, 221, 224, 230, 236, 239, 252, 259, 261, 280, 281, 286, 287, 289, 291, 339, 349, 352, 353, 356, 362, 371, 374, 375, 382, 386], "frusta": 1, "outsid": [1, 3, 53, 54, 124, 128, 129, 149, 150, 155, 158, 165, 197, 202, 230, 239, 245, 252, 254, 258, 259, 280, 281, 286, 289, 297, 329, 334, 362, 371], "grid": [1, 12, 14, 30, 60, 61, 65, 68, 91, 252, 289, 378, 381], "1227": [1, 252], "two": [1, 3, 4, 14, 25, 26, 28, 29, 30, 33, 36, 37, 38, 39, 40, 42, 46, 47, 52, 54, 59, 61, 65, 71, 76, 79, 81, 83, 84, 89, 91, 93, 94, 95, 100, 104, 105, 108, 109, 114, 115, 121, 124, 128, 131, 132, 133, 139, 142, 148, 149, 150, 155, 156, 158, 161, 163, 164, 178, 181, 184, 185, 186, 191, 193, 195, 197, 201, 206, 208, 216, 217, 224, 226, 228, 231, 233, 239, 244, 247, 250, 252, 254, 258, 261, 262, 263, 270, 273, 279, 280, 281, 282, 286, 287, 289, 292, 293, 300, 310, 313, 316, 317, 318, 323, 325, 327, 329, 333, 338, 340, 348, 349, 356, 358, 360, 363, 365, 370, 371, 374, 376, 378, 382, 383, 386, 387, 388, 389, 391, 392, 396, 397], "singl": [1, 3, 5, 10, 11, 13, 26, 28, 33, 36, 38, 42, 45, 47, 48, 49, 51, 61, 65, 66, 67, 71, 75, 76, 81, 84, 90, 91, 94, 95, 98, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 128, 129, 133, 137, 138, 139, 142, 148, 149, 154, 155, 156, 158, 159, 160, 161, 164, 168, 169, 173, 174, 186, 187, 193, 194, 196, 197, 199, 200, 201, 207, 211, 217, 220, 221, 224, 226, 228, 230, 232, 243, 248, 251, 252, 254, 258, 259, 263, 268, 269, 270, 273, 279, 280, 285, 286, 287, 289, 291, 292, 293, 296, 300, 301, 305, 306, 318, 319, 325, 326, 329, 331, 332, 333, 339, 343, 347, 349, 352, 353, 356, 358, 360, 362, 364, 365, 370, 371, 374, 376, 382, 388, 389, 390, 391, 392, 395], "swc": [1, 47, 59, 121, 373, 378], "soma": [1, 10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 31, 37, 38, 41, 43, 44, 45, 46, 47, 58, 59, 61, 62, 63, 67, 69, 75, 81, 83, 84, 89, 91, 99, 100, 103, 105, 110, 120, 121, 126, 128, 129, 143, 146, 154, 155, 158, 159, 160, 161, 163, 164, 173, 174, 199, 200, 207, 208, 215, 217, 220, 232, 234, 247, 250, 252, 256, 258, 259, 274, 277, 279, 280, 281, 285, 286, 289, 291, 292, 293, 296, 305, 306, 314, 329, 331, 332, 336, 339, 340, 343, 347, 349, 352, 354, 358, 364, 365, 366, 370, 371, 373, 374, 376, 377, 381, 387, 388, 391, 392], "1144": [1, 252], "current": [1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 28, 29, 30, 31, 32, 33, 37, 38, 44, 45, 46, 47, 52, 54, 58, 61, 62, 65, 66, 74, 76, 82, 83, 84, 88, 89, 95, 98, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 171, 173, 177, 178, 182, 184, 185, 186, 187, 193, 196, 197, 199, 201, 203, 207, 208, 213, 214, 217, 218, 220, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 243, 245, 247, 250, 251, 252, 254, 255, 256, 258, 259, 261, 262, 263, 264, 270, 271, 273, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 309, 310, 314, 316, 317, 318, 319, 325, 328, 329, 333, 335, 337, 339, 340, 345, 346, 347, 349, 350, 352, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 373, 376, 378, 382, 387, 388, 392], "respons": [1, 9, 10, 11, 13, 18, 25, 47, 62, 75, 79, 82, 116, 148, 149, 150, 155, 187, 224, 244, 252, 279, 280, 281, 286, 319, 356, 371, 373, 374, 382], "diffus": [1, 26, 82, 121, 135, 141, 149, 155, 200, 208, 222, 247, 251, 252, 266, 272, 280, 286, 292, 332, 340, 354, 373, 374, 376, 386, 392, 395, 396], "simul": [1, 3, 4, 5, 6, 9, 10, 11, 12, 16, 17, 18, 24, 26, 29, 38, 40, 41, 42, 46, 49, 53, 61, 69, 70, 71, 76, 77, 78, 82, 83, 84, 88, 89, 91, 95, 98, 100, 112, 113, 118, 119, 122, 128, 129, 134, 137, 138, 143, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 192, 196, 197, 200, 207, 215, 216, 217, 221, 222, 224, 227, 228, 230, 239, 243, 247, 250, 251, 252, 258, 259, 264, 268, 269, 274, 277, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 294, 324, 328, 329, 332, 333, 339, 347, 348, 349, 353, 354, 356, 359, 360, 362, 370, 371, 373, 374, 377, 378, 379, 382, 388, 389, 390, 395, 396], "1721": [1, 252], "rxdmath": [1, 158, 289, 290, 378, 381], "ab": [1, 76, 86, 145, 191, 193, 197, 252, 276, 278, 323, 325, 329, 330, 349, 392], "longer": [1, 3, 28, 29, 45, 46, 66, 75, 107, 114, 115, 120, 134, 142, 148, 150, 151, 155, 158, 178, 182, 184, 202, 208, 220, 264, 273, 279, 281, 282, 286, 289, 310, 314, 316, 334, 352, 371, 382, 387], "rais": [1, 41, 44, 86, 88, 91, 158, 166, 178, 193, 197, 208, 228, 252, 280, 285, 289, 290, 298, 316, 325, 329, 340, 342, 360, 371], "an": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 27, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 61, 62, 64, 65, 66, 68, 70, 72, 75, 76, 77, 78, 82, 84, 88, 93, 95, 98, 100, 102, 103, 105, 109, 110, 112, 114, 115, 118, 119, 120, 121, 122, 124, 128, 129, 131, 133, 139, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 184, 185, 187, 188, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234, 237, 239, 243, 244, 245, 247, 248, 250, 252, 254, 258, 259, 261, 262, 263, 265, 270, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 308, 309, 310, 313, 314, 316, 317, 318, 320, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 343, 345, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359, 360, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 397], "except": [1, 3, 39, 54, 61, 62, 76, 86, 91, 131, 148, 150, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 178, 181, 184, 191, 193, 197, 200, 207, 208, 213, 217, 220, 224, 231, 236, 239, 252, 261, 265, 279, 281, 285, 286, 287, 289, 292, 293, 295, 296, 297, 298, 310, 313, 314, 316, 323, 325, 329, 332, 339, 340, 342, 343, 345, 349, 352, 356, 363, 370, 372, 374, 382, 383, 391], "1545": [1, 252], "align": [1, 52, 65, 68, 122, 226, 252, 358, 391], "edg": [1, 47, 61, 65, 81, 91, 99, 104, 105, 107, 108, 109, 161, 196, 232, 247, 286, 289, 293, 328, 349, 364, 372, 378], "1471": [1, 252], "bbp": [1, 241, 382, 383], "1374": [1, 252], "undefinedbehavioursanit": 1, "1518": [1, 252], "import3d": [1, 14, 26, 40, 59, 82, 91, 121, 251, 373, 378], "gui": [1, 3, 4, 8, 14, 24, 26, 30, 32, 34, 36, 38, 43, 44, 45, 46, 48, 52, 59, 61, 66, 76, 77, 78, 82, 94, 103, 117, 118, 120, 121, 122, 128, 135, 145, 150, 155, 156, 172, 176, 197, 200, 217, 220, 243, 258, 265, 266, 274, 276, 277, 279, 281, 282, 285, 286, 292, 293, 299, 300, 301, 304, 305, 306, 308, 316, 317, 319, 320, 326, 328, 329, 331, 332, 337, 345, 349, 350, 352, 356, 357, 358, 362, 364, 365, 373, 374, 382, 386, 387, 388, 392, 393, 395], "class": [1, 4, 9, 13, 28, 33, 35, 38, 40, 45, 47, 52, 55, 59, 61, 63, 71, 72, 74, 76, 83, 91, 95, 104, 106, 107, 112, 118, 121, 126, 127, 131, 142, 143, 145, 146, 148, 150, 151, 154, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 172, 173, 174, 175, 177, 181, 182, 184, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 208, 209, 212, 214, 216, 217, 220, 222, 224, 225, 226, 232, 233, 234, 235, 237, 247, 252, 256, 257, 261, 273, 274, 276, 277, 279, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 301, 304, 305, 306, 307, 309, 310, 313, 314, 316, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 337, 340, 341, 344, 346, 348, 349, 352, 354, 356, 357, 358, 364, 365, 366, 367, 370, 371, 373, 374, 378, 386, 389, 390, 392, 396, 397], "1159": [1, 252], "notebook": [1, 3, 364, 370, 372, 373, 375, 376, 378, 381, 386, 387, 391, 392, 396, 397], "nbsphinx": [1, 56, 371], "1684": [1, 252], "1650": 1, "manag": [1, 6, 7, 10, 11, 14, 25, 30, 31, 32, 37, 45, 46, 47, 60, 61, 76, 81, 82, 90, 93, 114, 121, 122, 129, 135, 136, 145, 150, 154, 155, 156, 162, 168, 170, 172, 181, 196, 201, 202, 217, 221, 223, 226, 234, 239, 243, 244, 252, 259, 266, 267, 276, 281, 285, 286, 287, 294, 300, 302, 304, 311, 313, 321, 328, 333, 334, 349, 353, 355, 358, 366, 384, 388], "docker": 1, "imag": [1, 40, 47, 50, 52, 65, 68, 71, 81, 84, 85, 225, 226, 228, 252, 357, 358, 360, 386], "1469": [1, 252], "short": [1, 29, 45, 52, 61, 71, 75, 76, 103, 128, 155, 197, 201, 226, 227, 228, 247, 252, 258, 286, 329, 333, 358, 359, 360, 368], "interfac": [1, 3, 4, 21, 22, 31, 32, 33, 36, 37, 42, 45, 54, 61, 71, 76, 82, 91, 98, 119, 122, 148, 149, 150, 155, 156, 158, 170, 176, 184, 193, 196, 199, 200, 206, 208, 217, 224, 226, 228, 237, 239, 243, 249, 252, 279, 280, 281, 286, 287, 302, 308, 316, 325, 328, 331, 332, 338, 340, 349, 356, 358, 360, 365, 368, 375, 376, 378, 392, 395], "1453": [1, 252, 377], "1061": [1, 252], "1496": [1, 252], "1538": [1, 252], "test": [1, 3, 4, 5, 7, 10, 11, 13, 24, 28, 35, 36, 39, 41, 43, 45, 51, 55, 61, 62, 64, 66, 71, 72, 84, 95, 109, 111, 134, 149, 150, 153, 155, 178, 194, 196, 197, 200, 208, 210, 216, 217, 220, 234, 236, 238, 239, 240, 247, 252, 264, 280, 281, 284, 286, 289, 292, 310, 314, 326, 328, 329, 332, 340, 342, 348, 349, 352, 358, 366, 382, 383, 387, 390, 391, 397], "coverag": [1, 3, 240, 252], "tqperf": 1, "1556": [1, 252], "olfactori": [1, 4, 5, 252, 285], "bulb": [1, 4, 5, 252, 285], "extern": [1, 21, 22, 29, 52, 53, 66, 76, 93, 147, 148, 149, 164, 180, 217, 222, 238, 241, 247, 249, 252, 265, 279, 280, 312, 349, 354, 382, 387, 392], "1541": [1, 252], "reduc": [1, 6, 10, 11, 13, 25, 32, 37, 47, 50, 61, 62, 65, 75, 76, 91, 94, 102, 128, 150, 155, 161, 184, 197, 217, 218, 221, 226, 228, 239, 252, 258, 281, 286, 291, 293, 316, 329, 330, 349, 350, 353, 358, 360, 382, 386], "dentat": [1, 252], "1515": 1, "channel": [1, 4, 24, 26, 27, 29, 30, 31, 33, 37, 38, 45, 48, 60, 61, 63, 71, 77, 78, 82, 84, 89, 91, 95, 121, 131, 137, 141, 145, 148, 149, 150, 158, 220, 224, 247, 251, 252, 261, 268, 272, 274, 276, 279, 280, 281, 289, 290, 347, 352, 356, 371, 373, 374, 379, 386, 395], "ctest": [1, 3, 53, 238, 239, 243], "suit": [1, 121, 217, 239, 243, 252, 349, 382], "1439": [1, 252], "nrntest": 1, "part": [1, 4, 10, 11, 12, 24, 25, 32, 35, 39, 52, 53, 54, 61, 65, 69, 75, 76, 84, 89, 91, 95, 121, 122, 140, 146, 149, 151, 155, 168, 184, 191, 197, 201, 208, 214, 222, 226, 230, 231, 234, 235, 241, 252, 271, 277, 280, 282, 286, 289, 300, 316, 323, 329, 333, 340, 346, 349, 350, 354, 358, 362, 363, 366, 367, 370, 371, 373, 374, 376, 379, 382, 383, 386, 387, 388, 389, 391, 392], "1429": [1, 252], "refactor": [1, 386], "cpp": [1, 3, 52, 54, 216, 238, 239, 241, 243, 348, 369, 378], "763": [1, 53], "relat": [1, 12, 25, 32, 52, 77, 84, 95, 108, 131, 139, 149, 155, 156, 207, 217, 252, 261, 270, 272, 280, 286, 287, 339, 349, 368, 382, 385], "realtim": [1, 67], "daq": [1, 368], "1401": [1, 52, 252, 368], "hash": [1, 196, 244, 314, 328, 382, 391], "nrnhash": 1, "1403": [1, 52], "absolut": [1, 3, 51, 59, 62, 77, 78, 85, 86, 89, 90, 91, 121, 131, 148, 156, 161, 172, 191, 197, 213, 217, 222, 224, 230, 236, 261, 279, 287, 289, 290, 293, 304, 323, 329, 345, 349, 354, 356, 362, 371, 375, 376, 382, 385, 386], "path": [1, 7, 27, 43, 47, 53, 63, 71, 89, 99, 100, 117, 121, 126, 128, 149, 153, 155, 161, 162, 165, 184, 200, 208, 225, 228, 231, 233, 238, 239, 243, 244, 245, 252, 256, 258, 280, 284, 286, 289, 293, 294, 297, 316, 332, 340, 357, 360, 363, 365, 373, 378, 382, 389], "ccach": 1, "1574": 1, "std": [1, 52, 93, 155, 252, 286], "unord": 1, "map": [1, 25, 52, 65, 67, 75, 76, 87, 103, 154, 155, 156, 168, 172, 175, 178, 197, 218, 224, 226, 234, 239, 252, 286, 287, 300, 304, 307, 310, 311, 329, 350, 356, 358, 366, 371], "gid2presyn": 1, "int2tarlist": 1, "1568": 1, "succe": [1, 42, 98, 119, 392], "1583": 1, "copi": [1, 10, 11, 28, 36, 37, 42, 43, 45, 46, 49, 62, 65, 82, 91, 94, 98, 103, 109, 119, 122, 128, 129, 139, 146, 149, 150, 155, 158, 172, 184, 185, 193, 197, 199, 205, 206, 213, 216, 217, 218, 223, 226, 228, 233, 239, 244, 250, 258, 259, 270, 277, 279, 280, 281, 286, 289, 304, 316, 317, 325, 329, 330, 331, 337, 338, 345, 348, 349, 350, 354, 355, 358, 360, 365, 370, 372, 373, 375, 376, 381, 386, 389, 391, 392], "1396": [1, 252], "multisend": [1, 155, 251, 252, 286], "specif": [1, 2, 4, 14, 16, 17, 18, 21, 22, 24, 25, 32, 33, 37, 42, 43, 45, 46, 59, 60, 63, 65, 66, 68, 71, 76, 81, 84, 95, 96, 98, 100, 103, 105, 114, 119, 122, 125, 126, 127, 129, 131, 143, 148, 149, 150, 155, 156, 158, 159, 160, 170, 174, 186, 190, 197, 213, 215, 217, 221, 222, 224, 225, 226, 227, 230, 239, 243, 244, 245, 247, 252, 255, 256, 257, 259, 261, 274, 279, 280, 281, 286, 287, 289, 291, 292, 296, 302, 306, 318, 322, 329, 342, 345, 347, 349, 353, 354, 356, 357, 359, 362, 364, 365, 370, 371, 377, 382, 385, 386, 387, 391, 392, 393, 396], "bluegen": [1, 368], "dma": 1, "1294": 1, "possibl": [1, 3, 7, 13, 32, 38, 40, 42, 47, 51, 54, 61, 63, 65, 77, 78, 81, 83, 84, 85, 88, 89, 93, 98, 119, 121, 128, 139, 142, 148, 149, 150, 155, 156, 158, 159, 161, 174, 193, 194, 197, 199, 201, 205, 207, 213, 216, 222, 224, 226, 228, 230, 239, 244, 252, 258, 270, 273, 274, 279, 280, 281, 286, 287, 289, 291, 293, 306, 316, 325, 326, 329, 331, 333, 337, 339, 345, 348, 354, 356, 358, 360, 362, 368, 371, 373, 382, 386], "prefer": [1, 28, 31, 49, 62, 71, 76, 93, 105, 149, 208, 210, 226, 252, 280, 299, 340, 342, 375, 382, 383, 386, 392, 394, 396, 397], "1659": 1, "provid": [1, 3, 4, 7, 8, 10, 11, 29, 32, 37, 46, 52, 53, 54, 59, 69, 71, 77, 78, 84, 86, 91, 93, 95, 121, 149, 150, 151, 155, 158, 164, 167, 168, 169, 196, 197, 199, 200, 201, 217, 224, 237, 238, 239, 243, 245, 249, 250, 252, 280, 281, 282, 286, 289, 290, 292, 293, 299, 300, 301, 316, 319, 328, 329, 331, 332, 333, 340, 342, 345, 349, 356, 364, 368, 371, 374, 378, 382, 383, 385, 386, 391, 392], "1172": [1, 252], "1537": [1, 252], "modlunit": [1, 3, 46, 114, 115, 149, 178, 243, 280, 310], "charg": [1, 25, 31, 52, 59, 91, 121, 132, 144, 150, 197, 245, 252, 262, 275, 281, 289, 321, 329, 349, 371, 373, 374, 376, 377, 378, 381], "keyword": [1, 36, 46, 51, 52, 74, 89, 135, 145, 149, 150, 155, 158, 160, 169, 180, 202, 208, 247, 266, 276, 279, 280, 281, 285, 286, 289, 292, 293, 296, 301, 312, 329, 331, 334, 340, 364, 365, 368, 371, 373, 374, 375, 386, 391], "valenc": [1, 132, 248, 252, 262, 378], "1508": 1, "specifi": [1, 3, 4, 9, 10, 11, 12, 13, 14, 18, 25, 27, 30, 31, 32, 37, 42, 43, 45, 46, 47, 52, 54, 58, 59, 60, 64, 65, 66, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 85, 88, 93, 94, 95, 96, 105, 106, 107, 108, 110, 112, 114, 115, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 139, 141, 143, 146, 148, 149, 150, 151, 154, 155, 156, 159, 161, 164, 168, 170, 178, 184, 186, 196, 197, 199, 200, 201, 205, 207, 208, 213, 214, 215, 216, 217, 218, 220, 223, 224, 226, 227, 228, 230, 232, 233, 234, 235, 241, 243, 244, 250, 254, 255, 256, 257, 258, 259, 261, 263, 270, 272, 274, 277, 279, 280, 281, 282, 285, 286, 287, 291, 292, 293, 294, 296, 300, 302, 305, 308, 310, 316, 318, 328, 329, 331, 332, 333, 335, 337, 339, 340, 345, 346, 347, 348, 349, 350, 352, 355, 356, 358, 359, 360, 362, 364, 365, 366, 367, 370, 371, 373, 374, 375, 376, 378, 382, 383, 387, 389, 391, 392], "dialog": [1, 12, 37, 65, 89, 91, 98, 119, 124, 129, 168, 174, 179, 184, 207, 224, 227, 228, 231, 235, 254, 259, 300, 306, 310, 311, 316, 339, 350, 356, 359, 360, 363, 367], "popup": [1, 91, 94, 142, 199, 226, 235, 273, 331, 358, 367], "locat": [1, 3, 9, 12, 13, 25, 27, 28, 32, 33, 37, 38, 39, 40, 42, 46, 48, 52, 59, 61, 63, 65, 71, 76, 79, 80, 89, 91, 94, 99, 100, 103, 105, 106, 107, 118, 121, 122, 125, 126, 127, 131, 132, 134, 139, 142, 143, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 197, 199, 203, 208, 213, 217, 220, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 239, 243, 244, 252, 255, 256, 257, 261, 262, 264, 270, 272, 273, 274, 277, 279, 280, 281, 282, 285, 286, 289, 292, 293, 296, 297, 298, 300, 301, 302, 303, 304, 329, 331, 335, 340, 345, 349, 352, 354, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 371, 373, 378, 386, 388, 391, 392], "1487": [1, 252], "disconnect": [1, 76, 148, 160, 196, 218, 272, 279, 292, 328, 350, 392], "1451": [1, 252], "bbsavest": [1, 52, 135, 220, 222, 266, 392], "cell": [1, 5, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 40, 41, 43, 47, 50, 59, 63, 69, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 95, 98, 99, 112, 113, 119, 121, 125, 126, 131, 135, 137, 139, 140, 141, 143, 147, 150, 151, 154, 155, 156, 159, 160, 161, 162, 168, 169, 173, 196, 197, 201, 202, 208, 216, 217, 222, 224, 231, 233, 234, 247, 248, 250, 251, 252, 255, 256, 261, 266, 268, 270, 271, 272, 274, 278, 281, 282, 283, 285, 286, 287, 289, 291, 292, 293, 294, 300, 301, 328, 329, 333, 334, 340, 348, 349, 354, 356, 363, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 389, 390, 391, 395], "1355": 1, "usr": [1, 78, 87, 216, 239, 243, 244, 345, 348, 378], "x11": [1, 3, 230, 243, 244, 265, 362], "prefix": [1, 3, 45, 76, 114, 115, 129, 148, 149, 153, 155, 160, 165, 194, 208, 213, 239, 243, 259, 279, 280, 284, 286, 292, 297, 302, 326, 340, 345, 374, 382, 383, 386], "1565": 1, "cxx": [1, 7], "flag": [1, 3, 7, 8, 52, 71, 81, 128, 133, 149, 153, 154, 166, 186, 217, 220, 238, 239, 243, 247, 258, 263, 280, 284, 285, 286, 289, 298, 318, 349, 352, 364, 368, 385, 389, 392], "facilit": [1, 25, 59, 109, 121, 252, 396], "cross": [1, 122, 148, 149, 154, 159, 197, 228, 243, 252, 279, 280, 285, 286, 289, 291, 329, 360, 371, 374, 380], "1174": 1, "faster": [1, 3, 9, 36, 77, 78, 83, 89, 90, 121, 124, 129, 148, 149, 154, 164, 194, 197, 204, 217, 229, 230, 232, 254, 259, 274, 279, 280, 285, 286, 326, 329, 336, 349, 361, 362, 364, 371, 382, 383], "converg": [1, 29, 39, 47, 81, 89, 91, 121, 131, 252, 261], "rate": [1, 4, 9, 36, 39, 41, 75, 89, 90, 111, 114, 115, 141, 148, 149, 156, 191, 197, 215, 217, 220, 221, 226, 228, 230, 247, 252, 272, 279, 280, 287, 323, 329, 347, 349, 352, 353, 354, 358, 360, 362, 370, 372, 374, 375, 376, 377, 378, 381], "surfac": [1, 15, 31, 46, 48, 63, 81, 122, 149, 247, 252, 280, 289, 371, 374, 378, 386], "partial": [1, 75, 128, 149, 251, 252, 258, 280, 289, 371], "estim": [1, 39, 91, 252, 382], "1555": 1, "save": [1, 3, 10, 11, 13, 16, 17, 24, 25, 26, 27, 30, 31, 32, 36, 37, 46, 47, 48, 51, 60, 62, 65, 67, 76, 77, 78, 81, 82, 89, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 116, 120, 122, 124, 128, 129, 138, 139, 142, 148, 149, 151, 155, 156, 168, 169, 170, 172, 178, 181, 182, 185, 197, 199, 200, 207, 216, 219, 220, 222, 226, 227, 228, 230, 234, 243, 252, 254, 258, 259, 269, 270, 272, 273, 279, 280, 282, 285, 286, 287, 300, 302, 304, 310, 311, 313, 314, 317, 329, 331, 332, 339, 348, 351, 352, 354, 358, 359, 360, 362, 366, 373, 382, 389, 391, 397], "restor": [1, 24, 50, 79, 89, 91, 118, 124, 138, 139, 200, 208, 216, 222, 226, 228, 252, 254, 269, 270, 272, 332, 340, 348, 354, 358, 360, 391], "1476": 1, "prevent": [1, 16, 42, 52, 75, 91, 98, 119, 139, 149, 150, 155, 178, 205, 207, 211, 214, 218, 226, 231, 234, 239, 244, 252, 270, 280, 281, 286, 291, 310, 337, 339, 343, 346, 350, 358, 363, 366, 382], "keep": [1, 4, 12, 13, 17, 42, 45, 46, 51, 59, 60, 61, 71, 76, 80, 89, 91, 95, 98, 119, 138, 143, 146, 148, 149, 155, 156, 159, 163, 164, 174, 178, 185, 197, 217, 222, 226, 228, 239, 252, 269, 274, 277, 279, 280, 286, 287, 291, 295, 306, 310, 317, 329, 349, 354, 358, 360, 382, 383, 385, 388], "object": [1, 4, 8, 9, 20, 21, 22, 29, 31, 32, 38, 42, 52, 55, 59, 67, 68, 71, 72, 75, 76, 89, 91, 95, 98, 102, 118, 119, 121, 125, 129, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 171, 172, 173, 174, 177, 178, 180, 181, 184, 186, 192, 193, 196, 197, 199, 200, 201, 205, 208, 211, 217, 218, 220, 222, 226, 228, 233, 234, 239, 250, 252, 255, 259, 273, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 295, 297, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 315, 318, 324, 325, 328, 329, 331, 332, 333, 335, 337, 340, 342, 343, 344, 349, 350, 352, 353, 354, 358, 360, 364, 365, 366, 371, 373, 382, 386, 387, 388, 389, 392, 397], "aliv": [1, 385], "1270": 1, "1103": [1, 252], "1072": [1, 252], "assign": [1, 3, 4, 10, 11, 13, 14, 27, 28, 32, 36, 38, 46, 52, 59, 60, 61, 62, 71, 76, 100, 103, 114, 115, 121, 129, 139, 143, 144, 148, 150, 151, 155, 156, 160, 161, 163, 166, 171, 181, 189, 193, 197, 199, 201, 204, 208, 210, 217, 220, 222, 224, 226, 248, 252, 259, 270, 274, 275, 279, 281, 282, 286, 287, 289, 292, 293, 298, 303, 313, 314, 318, 321, 325, 329, 331, 333, 336, 340, 342, 349, 352, 354, 356, 358, 371, 373, 374, 376, 378, 387, 389, 391], "segment": [1, 25, 38, 45, 46, 51, 59, 61, 65, 84, 120, 126, 131, 134, 141, 143, 146, 148, 149, 150, 155, 156, 160, 161, 171, 192, 197, 199, 200, 201, 203, 217, 222, 226, 243, 252, 256, 261, 264, 272, 274, 277, 279, 280, 281, 285, 286, 287, 292, 293, 295, 303, 324, 329, 331, 332, 333, 335, 349, 354, 358, 364, 365, 373, 374, 380, 382, 386], "1149": [1, 252], "system": [1, 3, 7, 8, 13, 25, 39, 40, 47, 53, 62, 65, 71, 76, 82, 90, 91, 95, 129, 131, 135, 146, 149, 150, 154, 155, 156, 158, 159, 161, 170, 174, 176, 185, 193, 196, 197, 198, 201, 207, 214, 217, 220, 221, 222, 226, 228, 231, 239, 243, 244, 245, 250, 251, 252, 259, 261, 266, 277, 280, 281, 285, 286, 287, 289, 291, 293, 302, 306, 308, 317, 325, 328, 329, 330, 333, 339, 346, 349, 352, 353, 354, 358, 360, 362, 363, 371, 372, 373, 374, 375, 376, 382, 386, 389, 392], "7": [1, 3, 7, 10, 11, 16, 25, 28, 41, 48, 49, 53, 61, 67, 71, 84, 87, 91, 93, 95, 120, 121, 153, 155, 158, 159, 170, 178, 181, 182, 187, 193, 196, 197, 201, 208, 210, 213, 217, 226, 230, 239, 243, 245, 247, 251, 252, 265, 274, 279, 282, 284, 286, 289, 291, 292, 293, 302, 305, 307, 310, 313, 314, 319, 320, 325, 328, 329, 331, 333, 340, 342, 345, 347, 349, 358, 362, 364, 365, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 386, 387, 388, 391], "1719": [1, 252], "02": [1, 16, 17, 53, 213, 228, 244, 252, 345, 358, 360], "detail": [1, 5, 8, 10, 11, 14, 28, 29, 32, 43, 45, 46, 51, 52, 53, 62, 71, 72, 75, 77, 78, 81, 84, 89, 91, 95, 97, 98, 119, 121, 122, 139, 148, 149, 150, 155, 160, 197, 207, 220, 224, 237, 239, 243, 249, 252, 270, 279, 280, 281, 286, 292, 329, 339, 352, 356, 382, 383, 392, 396, 397], "pr": [1, 145, 161, 181, 241, 245, 276, 278, 279, 286, 293, 313, 368, 382, 383], "1614": 1, "28": [1, 197, 251, 252, 293, 329, 358, 365, 386, 387, 391, 392, 394], "1603": 1, "introduc": [1, 4, 54, 81, 85, 95, 146, 149, 150, 151, 155, 158, 181, 186, 201, 213, 249, 251, 252, 277, 280, 281, 282, 286, 289, 313, 318, 321, 333, 345, 370, 382, 383, 386, 387, 391, 393, 396], "30": [1, 10, 16, 17, 25, 28, 36, 62, 153, 155, 161, 175, 187, 193, 196, 197, 202, 210, 225, 232, 239, 252, 279, 280, 284, 293, 307, 325, 328, 329, 334, 342, 354, 357, 364, 386, 387, 391, 392], "04": [1, 15, 67, 73, 84, 252, 286, 387, 388, 389], "2021": [1, 81, 121, 239, 252, 286, 289, 395], "select": [1, 6, 10, 11, 12, 14, 19, 25, 27, 29, 30, 31, 32, 45, 46, 47, 48, 50, 51, 61, 62, 65, 67, 68, 74, 75, 79, 81, 82, 84, 87, 91, 93, 94, 95, 99, 100, 101, 103, 107, 110, 118, 121, 122, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 149, 151, 154, 155, 158, 160, 161, 169, 172, 173, 174, 176, 178, 181, 184, 193, 196, 197, 199, 213, 215, 217, 218, 223, 224, 225, 226, 227, 228, 230, 231, 234, 235, 239, 243, 244, 245, 252, 254, 255, 256, 257, 258, 259, 270, 271, 272, 273, 280, 282, 286, 289, 292, 293, 301, 304, 305, 306, 308, 310, 311, 313, 316, 325, 328, 329, 331, 345, 347, 349, 350, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 386], "v": [1, 3, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 28, 30, 31, 37, 38, 39, 41, 43, 44, 45, 49, 52, 58, 60, 64, 67, 72, 75, 76, 89, 91, 100, 114, 115, 121, 122, 125, 127, 128, 129, 131, 132, 133, 134, 141, 143, 145, 146, 148, 149, 150, 153, 154, 155, 158, 161, 164, 171, 174, 181, 193, 197, 200, 201, 207, 208, 215, 217, 220, 224, 226, 231, 232, 233, 239, 243, 245, 246, 247, 250, 252, 255, 257, 258, 259, 261, 262, 263, 264, 272, 274, 276, 277, 279, 280, 284, 285, 286, 289, 293, 296, 303, 306, 313, 314, 323, 325, 329, 332, 333, 336, 339, 340, 343, 349, 352, 354, 356, 358, 363, 364, 365, 376, 384, 386, 390, 391, 392, 397], "modern": [1, 3, 4, 6, 7, 52, 149, 239, 243, 251, 265, 280, 308, 321, 339, 340, 352, 362], "unit": [1, 3, 25, 29, 41, 58, 59, 65, 82, 95, 120, 125, 131, 132, 150, 155, 158, 178, 189, 197, 200, 217, 230, 243, 248, 252, 255, 261, 262, 265, 279, 281, 286, 289, 310, 311, 321, 329, 332, 349, 352, 354, 362, 370, 371, 372, 373, 376, 381, 382, 386, 387, 388, 389, 392], "initi": [1, 4, 8, 26, 29, 31, 37, 38, 39, 41, 46, 55, 64, 71, 72, 76, 82, 87, 89, 91, 109, 110, 129, 133, 142, 143, 144, 146, 148, 150, 151, 154, 155, 156, 158, 159, 161, 164, 181, 185, 196, 197, 200, 201, 207, 208, 213, 217, 220, 221, 226, 227, 230, 232, 235, 238, 239, 243, 248, 252, 259, 263, 273, 274, 275, 277, 279, 281, 282, 285, 286, 287, 289, 291, 293, 296, 299, 301, 313, 317, 328, 329, 332, 333, 339, 340, 343, 345, 347, 349, 352, 353, 354, 356, 358, 359, 362, 364, 367, 371, 372, 374, 375, 377, 379, 380, 381, 382, 383, 386, 389, 391, 392, 395], "binari": [1, 3, 7, 8, 28, 35, 53, 82, 159, 184, 197, 222, 239, 240, 242, 245, 252, 286, 289, 291, 316, 329, 354, 382, 383, 392], "primari": [1, 25, 61, 65, 74, 75, 79, 81, 114, 115, 118, 145, 155, 188, 200, 207, 226, 228, 234, 243, 250, 252, 276, 286, 320, 332, 339, 358, 360, 366, 371], "interview": [1, 2, 155, 228, 243, 265, 286, 360, 364, 365, 392], "h": [1, 3, 4, 7, 8, 13, 14, 24, 25, 29, 30, 31, 36, 38, 44, 45, 46, 47, 48, 52, 54, 58, 59, 61, 71, 76, 88, 89, 93, 95, 114, 121, 131, 133, 134, 146, 148, 149, 155, 158, 159, 182, 197, 200, 205, 208, 213, 216, 220, 228, 239, 241, 243, 247, 250, 251, 252, 261, 262, 263, 264, 265, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 386, 387, 388, 389], "interpret": [1, 3, 4, 32, 34, 47, 55, 61, 62, 71, 72, 81, 82, 84, 95, 133, 135, 143, 149, 150, 154, 155, 159, 160, 165, 166, 168, 170, 174, 178, 182, 184, 187, 189, 191, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 215, 217, 220, 224, 226, 228, 233, 243, 249, 250, 252, 263, 266, 274, 280, 281, 285, 286, 291, 292, 297, 298, 300, 302, 306, 314, 316, 319, 321, 323, 325, 327, 328, 329, 332, 333, 338, 339, 340, 347, 349, 352, 356, 358, 360, 365, 374, 375, 391], "posit": [1, 12, 18, 21, 22, 25, 32, 39, 40, 41, 42, 46, 54, 61, 63, 65, 76, 84, 86, 89, 91, 98, 107, 114, 115, 119, 121, 125, 126, 128, 131, 132, 134, 139, 142, 143, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 162, 170, 171, 172, 178, 181, 184, 188, 193, 197, 201, 203, 208, 212, 217, 220, 224, 226, 228, 230, 231, 233, 234, 235, 247, 252, 255, 256, 258, 261, 262, 264, 270, 273, 274, 277, 279, 280, 281, 282, 285, 286, 289, 290, 292, 293, 294, 296, 302, 303, 304, 310, 313, 316, 320, 325, 329, 331, 333, 335, 344, 349, 356, 358, 360, 362, 363, 365, 366, 367, 371, 372, 379, 386, 390], "argument": [1, 3, 13, 28, 29, 32, 39, 45, 52, 55, 59, 76, 86, 93, 124, 128, 129, 131, 133, 143, 146, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 174, 175, 178, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 205, 208, 211, 213, 214, 215, 216, 217, 220, 223, 225, 226, 230, 232, 233, 234, 239, 243, 244, 245, 254, 258, 259, 261, 263, 265, 274, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 295, 296, 298, 300, 302, 304, 306, 307, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 345, 346, 347, 348, 349, 352, 355, 357, 358, 362, 364, 365, 366, 370, 371, 373, 374, 375, 378, 382, 386, 387, 391, 392], "name": [1, 3, 7, 8, 10, 11, 12, 14, 27, 28, 29, 30, 31, 37, 38, 42, 45, 46, 47, 52, 53, 58, 59, 61, 62, 65, 67, 71, 81, 93, 94, 98, 99, 100, 103, 104, 114, 115, 118, 119, 122, 124, 128, 129, 132, 133, 139, 140, 143, 144, 145, 148, 149, 150, 151, 155, 158, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 178, 181, 182, 184, 185, 186, 188, 197, 199, 201, 202, 204, 207, 208, 211, 213, 215, 217, 218, 223, 224, 226, 227, 228, 230, 234, 235, 239, 241, 243, 244, 245, 254, 258, 259, 262, 263, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 313, 314, 316, 317, 318, 320, 329, 331, 333, 334, 336, 339, 340, 343, 345, 347, 349, 350, 352, 354, 355, 356, 358, 359, 360, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 391, 392], "previous": [1, 14, 37, 76, 114, 115, 133, 144, 149, 155, 160, 165, 184, 188, 197, 224, 243, 245, 263, 275, 280, 286, 297, 316, 320, 329, 356, 382, 389], "were": [1, 12, 14, 25, 27, 29, 39, 40, 42, 45, 47, 49, 63, 65, 69, 71, 75, 76, 77, 78, 81, 84, 88, 91, 93, 98, 111, 116, 119, 122, 133, 148, 149, 151, 155, 156, 160, 162, 191, 196, 197, 213, 217, 226, 231, 238, 263, 279, 280, 282, 286, 287, 292, 294, 295, 323, 328, 329, 345, 349, 354, 363, 382, 383, 386, 392], "unchang": [1, 32, 54, 91, 94, 102, 160, 161, 167, 184, 193, 197, 207, 220, 226, 228, 292, 293, 299, 316, 325, 329, 337, 339, 352, 358, 360, 386, 392], "algorithm": [1, 14, 29, 39, 71, 73, 76, 85, 88, 121, 128, 161, 196, 197, 228, 236, 252, 258, 293, 328, 329, 360, 374, 382], "been": [1, 3, 4, 10, 11, 13, 16, 19, 29, 37, 40, 42, 46, 47, 51, 52, 54, 61, 62, 65, 71, 75, 76, 81, 84, 93, 95, 98, 100, 105, 114, 119, 121, 129, 131, 134, 144, 148, 149, 150, 154, 155, 156, 159, 160, 163, 164, 165, 166, 170, 176, 182, 184, 193, 194, 196, 197, 202, 203, 213, 217, 221, 224, 226, 228, 239, 244, 247, 252, 259, 261, 264, 275, 279, 280, 281, 285, 286, 287, 289, 291, 292, 295, 297, 298, 302, 308, 314, 316, 325, 326, 328, 329, 334, 335, 337, 339, 345, 349, 353, 356, 358, 360, 374, 376, 382, 383, 386, 392], "adjust": [1, 7, 14, 30, 46, 61, 88, 121, 124, 129, 161, 168, 197, 200, 220, 228, 252, 254, 259, 289, 293, 300, 311, 329, 332, 352, 360, 382, 383, 390, 392], "especi": [1, 42, 43, 47, 61, 91, 94, 98, 119, 121, 161, 164, 174, 224, 239, 293, 306, 356, 371, 374, 378, 382, 391, 392], "around": [1, 28, 29, 40, 44, 50, 65, 91, 128, 148, 155, 168, 197, 214, 228, 234, 243, 250, 252, 258, 279, 286, 300, 318, 329, 336, 346, 360, 366, 381, 382, 383, 387, 397], "indic": [1, 3, 10, 11, 12, 13, 16, 17, 25, 29, 32, 37, 40, 53, 54, 59, 63, 65, 68, 71, 76, 84, 114, 115, 124, 127, 128, 139, 143, 144, 148, 149, 155, 156, 158, 160, 164, 170, 175, 178, 182, 193, 195, 197, 201, 208, 213, 217, 224, 225, 226, 228, 231, 234, 243, 244, 252, 254, 257, 258, 265, 270, 274, 275, 279, 280, 286, 287, 289, 292, 302, 307, 314, 325, 327, 329, 331, 333, 337, 340, 342, 345, 349, 356, 357, 358, 360, 363, 366, 370, 371, 372, 374, 386, 387, 389, 391, 392], "sometim": [1, 53, 71, 73, 84, 114, 115, 121, 149, 158, 197, 206, 208, 216, 217, 224, 228, 231, 239, 243, 250, 280, 289, 295, 296, 325, 329, 338, 340, 348, 349, 356, 360, 363, 371, 373, 382, 391], "count": [1, 13, 16, 17, 18, 21, 22, 28, 29, 36, 54, 58, 89, 148, 151, 156, 161, 168, 169, 172, 181, 182, 184, 197, 199, 201, 202, 208, 217, 224, 247, 272, 279, 282, 287, 289, 292, 293, 301, 304, 311, 313, 314, 316, 329, 331, 333, 334, 340, 342, 349, 356, 389, 391], "previou": [1, 3, 28, 37, 38, 42, 46, 52, 71, 76, 84, 93, 95, 98, 114, 115, 119, 122, 129, 131, 144, 148, 149, 154, 155, 158, 159, 160, 161, 166, 190, 194, 196, 197, 201, 207, 208, 216, 217, 218, 221, 226, 228, 229, 230, 239, 259, 261, 275, 279, 280, 285, 286, 291, 292, 293, 298, 308, 322, 326, 328, 329, 333, 339, 340, 348, 349, 350, 353, 358, 360, 361, 362, 371, 373, 378, 382, 383, 386, 387, 388, 389, 391], "five": [1, 3, 46, 121, 178, 201, 215, 310, 316, 333, 347, 382], "init": [1, 21, 22, 24, 28, 31, 32, 37, 42, 45, 46, 52, 61, 64, 67, 71, 72, 76, 83, 91, 96, 97, 98, 116, 119, 155, 169, 196, 197, 200, 202, 207, 208, 211, 220, 224, 227, 247, 312, 329, 332, 334, 339, 340, 352, 356, 359, 378, 382, 391], "run": [1, 3, 5, 6, 7, 9, 13, 16, 17, 18, 20, 24, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 61, 62, 67, 69, 70, 73, 76, 78, 81, 82, 83, 84, 95, 112, 113, 118, 121, 122, 123, 128, 135, 143, 146, 153, 154, 155, 156, 158, 159, 160, 165, 166, 174, 187, 196, 197, 200, 201, 207, 208, 216, 217, 218, 220, 221, 226, 227, 228, 230, 237, 238, 240, 244, 245, 246, 247, 252, 253, 258, 266, 274, 277, 279, 284, 285, 286, 287, 289, 291, 292, 297, 298, 306, 311, 319, 329, 331, 332, 333, 337, 339, 340, 346, 348, 349, 350, 352, 353, 358, 359, 360, 362, 370, 371, 373, 374, 378, 379, 381, 382, 388, 389, 390, 391, 397], "psection": [1, 45, 46, 52, 61, 160, 163, 186, 201, 208, 272, 292, 318, 331, 333, 340, 386], "xopen": [1, 52, 76, 120, 161, 165, 184, 188, 200, 207, 208, 222, 293, 297, 312, 315, 316, 320, 332, 339, 340, 354, 392], "quit": [1, 3, 13, 16, 17, 19, 23, 31, 32, 65, 71, 73, 75, 76, 89, 91, 95, 129, 131, 148, 150, 155, 156, 159, 200, 208, 217, 219, 220, 243, 259, 261, 279, 281, 286, 287, 291, 332, 340, 349, 351, 352, 382, 383, 389, 392], "autotool": [1, 3], "here": [1, 3, 4, 5, 8, 10, 11, 13, 14, 16, 25, 28, 29, 36, 37, 38, 41, 43, 44, 45, 46, 47, 51, 52, 54, 59, 61, 62, 71, 75, 76, 77, 81, 84, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 104, 105, 107, 108, 110, 114, 115, 116, 121, 122, 128, 148, 149, 150, 155, 156, 158, 165, 181, 197, 201, 207, 208, 221, 228, 237, 239, 243, 245, 247, 250, 258, 279, 280, 281, 286, 287, 289, 290, 297, 302, 313, 329, 333, 339, 340, 343, 353, 356, 360, 370, 371, 372, 373, 374, 375, 377, 378, 381, 382, 383, 386, 387, 388, 389, 391, 392], "action": [1, 14, 25, 30, 32, 38, 41, 44, 46, 48, 52, 68, 74, 75, 121, 122, 128, 148, 151, 158, 161, 168, 169, 178, 199, 200, 207, 217, 218, 219, 220, 224, 226, 228, 231, 234, 239, 243, 244, 250, 252, 258, 272, 279, 282, 289, 293, 300, 301, 310, 321, 331, 332, 339, 347, 349, 350, 351, 352, 356, 358, 360, 363, 366, 371, 374, 375, 376, 382, 386, 387], "azur": [1, 240, 382], "travi": [1, 252], "tarbal": [1, 243], "infrastructur": [1, 53, 88, 252, 376], "ubuntu": [1, 3, 239, 243, 245, 265], "18": [1, 15, 18, 28, 114, 115, 149, 197, 247, 251, 252, 280, 329, 376, 378, 386, 387, 391, 392], "20": [1, 3, 22, 24, 28, 36, 37, 43, 44, 45, 58, 61, 63, 65, 95, 99, 133, 155, 156, 158, 161, 181, 186, 187, 193, 194, 196, 197, 201, 202, 208, 210, 216, 226, 227, 228, 231, 239, 252, 263, 279, 280, 286, 287, 293, 313, 318, 325, 326, 328, 329, 331, 333, 334, 340, 342, 347, 348, 358, 359, 360, 363, 373, 376, 378, 386, 387, 391, 392], "fedora": [1, 243], "32": [1, 18, 53, 67, 144, 154, 194, 196, 197, 243, 252, 275, 279, 280, 293, 326, 328, 329, 386, 391, 392], "33": [1, 197, 247, 251, 252, 347, 386, 391, 392], "centos7": 1, "centos8": 1, "debian": [1, 3, 243], "buster": 1, "recent": [1, 35, 40, 71, 77, 94, 121, 178, 211, 228, 239, 243, 251, 252, 286, 295, 296, 310, 343, 360, 378, 382, 392], "numpi": [1, 56, 59, 197, 200, 243, 244, 246, 250, 289, 293, 300, 323, 329, 332, 358, 371, 381, 391], "hpc": [1, 7, 237, 243], "consolid": [1, 252], "spack": 1, "easybuild": 1, "deadlock": [1, 286], "avx": 1, "512": [1, 52, 239, 252], "backward": [1, 77, 93, 149, 184, 197, 217, 220, 228, 252, 280, 289, 316, 329, 349, 352, 360, 362, 371, 382, 383, 391, 397], "backtrac": [1, 3, 239], "pass": [1, 3, 7, 10, 11, 13, 27, 34, 52, 53, 76, 93, 94, 95, 129, 143, 149, 150, 154, 155, 158, 159, 163, 164, 181, 184, 197, 201, 202, 208, 213, 217, 239, 243, 245, 252, 259, 265, 274, 279, 280, 281, 285, 286, 289, 290, 291, 292, 310, 313, 316, 329, 333, 334, 340, 345, 349, 364, 365, 371, 373, 374, 378, 382, 386, 389, 391, 392], "nrniv": [1, 3, 5, 8, 11, 35, 52, 67, 76, 77, 78, 148, 153, 155, 158, 159, 160, 161, 197, 200, 207, 208, 213, 216, 227, 228, 238, 239, 243, 245, 265, 280, 284, 286, 291, 329, 332, 339, 340, 345, 346, 348, 359, 360], "exist": [1, 3, 4, 8, 12, 14, 16, 28, 32, 42, 45, 46, 58, 61, 62, 65, 71, 74, 76, 87, 91, 93, 98, 102, 103, 105, 110, 114, 115, 118, 119, 121, 122, 128, 129, 132, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 156, 160, 161, 163, 165, 166, 168, 169, 171, 172, 174, 175, 178, 181, 182, 184, 188, 193, 197, 200, 201, 202, 205, 208, 211, 213, 215, 216, 217, 222, 223, 224, 226, 227, 228, 231, 232, 233, 239, 244, 245, 252, 258, 259, 262, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 285, 286, 287, 292, 293, 295, 297, 298, 300, 301, 303, 304, 306, 307, 310, 313, 314, 316, 320, 325, 329, 332, 333, 334, 337, 340, 343, 345, 347, 348, 349, 354, 355, 356, 358, 359, 360, 363, 364, 365, 371, 373, 374, 383, 384, 386, 387, 388, 389, 391, 392, 397], "without": [1, 3, 10, 11, 14, 29, 32, 37, 38, 40, 44, 53, 54, 61, 63, 71, 76, 84, 88, 94, 121, 129, 145, 148, 149, 150, 153, 155, 158, 165, 166, 184, 186, 193, 194, 197, 201, 211, 216, 217, 218, 220, 221, 226, 227, 228, 230, 239, 243, 247, 252, 259, 276, 279, 280, 281, 284, 285, 286, 297, 298, 316, 318, 325, 326, 329, 333, 343, 348, 349, 350, 352, 353, 358, 359, 360, 362, 364, 370, 373, 376, 382, 386, 389, 392], "mac": [1, 3, 10, 11, 13, 71, 122, 155, 184, 213, 223, 224, 239, 240, 242, 286, 316, 345, 355, 356, 378, 395], "alwai": [1, 3, 25, 37, 47, 51, 54, 60, 65, 71, 76, 81, 89, 91, 128, 145, 148, 149, 151, 154, 155, 156, 158, 160, 161, 164, 166, 168, 181, 184, 196, 197, 201, 207, 210, 211, 222, 224, 226, 228, 250, 258, 276, 279, 280, 282, 285, 286, 287, 289, 292, 293, 296, 298, 300, 313, 316, 321, 328, 329, 333, 337, 339, 342, 343, 354, 356, 358, 360, 371, 372, 375, 376, 386, 392], "good": [1, 3, 14, 29, 32, 33, 35, 36, 45, 47, 59, 64, 66, 72, 75, 76, 81, 82, 83, 88, 89, 91, 100, 102, 103, 106, 108, 110, 122, 128, 148, 149, 155, 156, 161, 197, 199, 201, 218, 220, 221, 228, 239, 243, 252, 258, 279, 280, 286, 287, 293, 329, 331, 333, 350, 352, 360, 382, 386, 387, 388, 392], "idea": [1, 32, 36, 42, 47, 76, 81, 83, 88, 89, 98, 100, 106, 119, 128, 148, 149, 150, 197, 199, 207, 243, 258, 279, 280, 281, 329, 331, 339, 389, 391], "over": [1, 16, 17, 25, 38, 41, 42, 46, 47, 59, 61, 63, 65, 76, 81, 82, 89, 91, 95, 98, 105, 107, 119, 128, 131, 144, 149, 150, 151, 155, 156, 162, 164, 171, 174, 181, 193, 196, 197, 201, 208, 217, 220, 224, 226, 227, 228, 237, 245, 252, 258, 261, 265, 275, 280, 281, 282, 286, 287, 289, 293, 294, 296, 303, 306, 313, 325, 328, 329, 333, 340, 349, 352, 356, 358, 359, 360, 365, 371, 373, 375, 378, 382, 383, 386, 391], "scratch": [1, 10, 11, 14, 89, 121, 149, 280], "x86_64": [1, 3, 5, 8, 53, 117, 153, 200, 208, 213, 239, 245, 284, 332, 345, 378], "veri": [1, 3, 9, 25, 29, 30, 40, 46, 47, 53, 61, 62, 63, 71, 75, 76, 81, 83, 89, 91, 94, 95, 97, 105, 109, 114, 115, 118, 121, 122, 128, 129, 131, 143, 149, 150, 155, 156, 159, 161, 164, 165, 166, 182, 193, 196, 197, 206, 207, 217, 220, 221, 224, 225, 226, 233, 239, 244, 249, 252, 258, 259, 261, 274, 280, 281, 286, 287, 291, 293, 297, 298, 314, 325, 328, 329, 337, 338, 339, 349, 352, 353, 356, 357, 358, 365, 377, 382, 383, 386, 387, 388, 389], "rare": [1, 2, 76, 135, 155, 234, 252, 266, 285, 286, 289, 349, 366], "numer": [1, 13, 14, 26, 38, 46, 61, 76, 82, 83, 89, 91, 93, 94, 109, 114, 115, 121, 131, 141, 148, 149, 150, 155, 161, 181, 197, 200, 208, 217, 220, 252, 261, 272, 279, 280, 281, 286, 290, 293, 313, 329, 332, 340, 349, 352, 391, 395], "respect": [1, 3, 4, 13, 32, 47, 52, 54, 71, 75, 76, 81, 92, 96, 114, 115, 122, 124, 125, 127, 144, 148, 150, 154, 155, 158, 159, 161, 168, 171, 181, 184, 192, 193, 197, 199, 200, 202, 208, 217, 220, 226, 228, 230, 234, 239, 245, 254, 255, 257, 275, 279, 281, 285, 286, 289, 291, 293, 300, 303, 313, 316, 324, 325, 329, 331, 332, 334, 340, 349, 352, 358, 360, 362, 366, 371, 382, 383, 392], "graph": [1, 10, 11, 12, 13, 14, 17, 18, 19, 24, 25, 27, 30, 31, 32, 37, 39, 42, 45, 46, 47, 49, 50, 61, 67, 73, 75, 76, 79, 80, 81, 82, 84, 91, 94, 95, 96, 98, 100, 107, 118, 119, 121, 124, 126, 128, 129, 135, 142, 146, 154, 158, 168, 172, 174, 176, 181, 185, 193, 194, 196, 197, 202, 206, 207, 217, 221, 225, 227, 230, 231, 232, 233, 234, 252, 254, 256, 258, 259, 266, 273, 277, 285, 286, 300, 304, 306, 313, 317, 325, 326, 328, 329, 334, 337, 338, 339, 349, 353, 357, 359, 362, 363, 364, 365, 366, 371, 381, 387, 389, 392], "bluebrain": [1, 3, 155, 159, 200, 216, 239, 286, 291, 332, 348, 382, 397], "softwar": [1, 3, 7, 71, 76, 84, 88, 121, 155, 243, 244, 245, 251, 252, 286, 382, 383, 384, 386, 393], "report": [1, 3, 10, 11, 16, 17, 18, 47, 84, 91, 121, 238, 239, 252, 310, 371, 382], "choos": [1, 14, 24, 38, 39, 49, 61, 71, 73, 76, 93, 95, 99, 101, 114, 115, 121, 122, 139, 146, 150, 161, 174, 207, 217, 243, 244, 252, 270, 277, 279, 281, 293, 306, 339, 349, 374], "scientif": [1, 28, 40, 114, 115, 121, 217, 239, 252, 349], "forum": [1, 71, 78, 82, 121, 237, 243], "www": [1, 65, 71, 77, 78, 84, 95, 121, 122, 146, 153, 155, 159, 193, 196, 200, 251, 277, 284, 286, 291, 325, 328, 332, 375, 382], "phpbb": 1, "particip": [1, 131, 155, 261, 286], "contribut": [1, 88, 89, 91, 128, 131, 135, 148, 150, 158, 187, 217, 230, 234, 241, 252, 258, 261, 279, 281, 289, 319, 349, 362, 366, 384], "join": [1, 71, 77, 78, 217, 282, 349, 386, 392], "monthli": 1, "meet": [1, 9, 25, 121, 128, 217, 258, 349, 382, 385, 397], "wiki": [1, 52, 382], "introduct": [2, 26, 85, 88, 121, 147, 197, 248, 278, 329, 340, 379, 383, 384, 390, 395], "occasion": [2, 129, 150, 159, 197, 207, 218, 244, 259, 281, 289, 291, 329, 339, 350, 358], "advanc": [2, 4, 25, 51, 83, 88, 121, 146, 200, 201, 217, 221, 222, 224, 227, 245, 251, 252, 277, 314, 332, 333, 349, 353, 354, 356, 359, 372, 382, 390, 392], "miscellan": [2, 46, 47, 55, 76, 81, 130, 179, 197, 198, 207, 260, 311, 329, 330, 339, 350], "neuron": [2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 24, 28, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 52, 60, 61, 62, 63, 68, 69, 74, 75, 76, 82, 83, 85, 87, 89, 91, 94, 96, 98, 100, 102, 103, 105, 107, 110, 118, 119, 120, 125, 126, 127, 131, 133, 134, 137, 139, 141, 142, 146, 147, 148, 149, 153, 155, 156, 157, 158, 159, 160, 164, 170, 178, 181, 182, 197, 201, 205, 207, 208, 213, 214, 215, 217, 220, 221, 222, 227, 228, 231, 235, 236, 239, 240, 241, 242, 244, 248, 249, 255, 256, 257, 261, 263, 264, 265, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 310, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 333, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 387, 388, 390, 391, 393, 395], "8": [3, 7, 11, 18, 22, 28, 29, 37, 49, 52, 53, 65, 67, 68, 76, 93, 95, 114, 115, 144, 149, 150, 153, 154, 155, 156, 159, 160, 161, 178, 181, 182, 187, 189, 193, 196, 197, 201, 210, 213, 217, 222, 226, 234, 239, 243, 244, 245, 247, 249, 252, 275, 279, 280, 281, 284, 285, 286, 287, 289, 291, 292, 293, 310, 313, 314, 321, 325, 328, 329, 333, 342, 345, 347, 349, 352, 354, 358, 364, 365, 366, 370, 372, 373, 374, 375, 376, 378, 382, 383, 386, 387, 388, 391], "circa": [3, 321, 368], "nov": 3, "2019": [3, 149, 251, 252, 280, 286], "git": [3, 7, 238, 241, 243, 244, 245, 246, 339, 383, 384], "clone": [3, 7, 139, 148, 197, 226, 238, 241, 243, 245, 246, 270, 279, 329, 358, 382], "cd": [3, 7, 31, 45, 46, 153, 155, 238, 239, 241, 243, 245, 284, 286], "mkdir": [3, 7, 238, 239, 243], "j": [3, 25, 35, 41, 46, 76, 83, 88, 90, 95, 121, 155, 181, 193, 196, 197, 199, 201, 226, 228, 232, 238, 244, 251, 252, 286, 313, 325, 328, 329, 331, 333, 358, 360, 364, 375, 376], "sudo": [3, 238, 241, 243], "invok": [3, 32, 37, 54, 65, 76, 122, 129, 131, 149, 150, 151, 155, 163, 168, 169, 170, 201, 217, 226, 228, 231, 244, 250, 259, 261, 280, 281, 282, 286, 295, 300, 302, 333, 349, 358, 360, 363, 391], "parallel": [3, 4, 7, 13, 16, 25, 26, 29, 36, 61, 76, 77, 95, 121, 131, 141, 148, 149, 152, 153, 156, 166, 196, 217, 222, 239, 243, 251, 252, 261, 272, 279, 280, 283, 284, 287, 298, 328, 349, 354, 368, 372, 378, 382, 383, 386, 387, 388, 390, 392], "often": [3, 4, 7, 28, 32, 36, 42, 52, 59, 71, 73, 76, 77, 78, 88, 89, 93, 98, 114, 118, 119, 121, 128, 129, 144, 149, 155, 156, 158, 161, 164, 165, 169, 178, 185, 191, 193, 197, 208, 217, 220, 221, 222, 224, 239, 243, 258, 259, 275, 280, 286, 287, 289, 293, 297, 301, 310, 314, 317, 323, 325, 329, 340, 349, 352, 353, 354, 356, 370, 371, 372, 374, 382, 391, 392], "much": [3, 13, 25, 28, 33, 36, 37, 40, 42, 43, 53, 59, 60, 61, 62, 65, 71, 75, 76, 77, 78, 83, 85, 88, 89, 90, 91, 94, 98, 105, 114, 115, 119, 122, 124, 128, 129, 134, 139, 143, 148, 149, 154, 155, 156, 161, 164, 175, 197, 217, 224, 226, 228, 233, 252, 254, 258, 259, 264, 270, 274, 279, 280, 285, 286, 287, 293, 295, 307, 329, 349, 356, 358, 360, 365, 382, 387, 391, 392], "than": [3, 4, 7, 9, 14, 16, 17, 18, 29, 32, 33, 35, 36, 38, 39, 40, 41, 46, 47, 59, 61, 65, 66, 68, 73, 75, 76, 77, 78, 82, 83, 84, 86, 88, 90, 91, 93, 94, 95, 98, 104, 105, 114, 115, 118, 119, 120, 121, 122, 128, 129, 131, 139, 143, 146, 148, 149, 150, 155, 156, 158, 159, 161, 162, 164, 168, 178, 181, 187, 188, 189, 194, 196, 197, 201, 204, 205, 211, 213, 216, 217, 222, 226, 228, 229, 230, 231, 239, 243, 249, 252, 258, 259, 261, 270, 274, 277, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 300, 310, 313, 319, 320, 321, 326, 328, 329, 333, 336, 337, 340, 343, 345, 348, 349, 354, 358, 360, 361, 362, 363, 371, 375, 378, 382, 383, 386, 387, 388, 391, 392], "One": [3, 4, 65, 76, 81, 85, 91, 95, 114, 115, 121, 131, 142, 149, 150, 155, 159, 170, 196, 197, 217, 224, 228, 243, 261, 273, 280, 281, 286, 291, 302, 328, 329, 340, 349, 356, 360, 378, 381, 382], "maximum": [3, 53, 61, 65, 99, 128, 133, 143, 148, 154, 155, 156, 196, 197, 201, 217, 258, 261, 263, 274, 279, 280, 285, 286, 287, 328, 329, 333, 349, 392], "out": [3, 4, 10, 11, 13, 25, 28, 29, 40, 47, 49, 50, 52, 54, 61, 65, 71, 75, 76, 88, 89, 91, 95, 99, 105, 107, 114, 115, 122, 124, 131, 134, 142, 148, 149, 154, 155, 156, 166, 168, 178, 180, 183, 188, 191, 193, 194, 197, 199, 200, 201, 207, 216, 217, 220, 224, 226, 228, 230, 231, 236, 244, 245, 252, 254, 261, 264, 273, 279, 280, 285, 286, 287, 289, 298, 300, 310, 312, 315, 320, 323, 325, 326, 329, 331, 332, 333, 339, 340, 348, 349, 352, 356, 358, 360, 362, 363, 365, 373, 374, 382, 383, 386, 387, 389, 392, 397], "made": [3, 12, 13, 33, 47, 59, 61, 65, 75, 76, 81, 91, 98, 105, 119, 121, 139, 148, 150, 155, 158, 161, 168, 197, 208, 217, 224, 226, 227, 230, 245, 270, 279, 281, 286, 289, 293, 300, 329, 340, 349, 356, 358, 359, 362, 374, 382, 383, 389, 391], "help": [3, 4, 7, 10, 11, 25, 32, 42, 44, 45, 46, 51, 52, 53, 60, 61, 62, 63, 72, 73, 74, 76, 78, 81, 82, 84, 89, 94, 98, 102, 104, 106, 107, 119, 121, 122, 139, 149, 155, 156, 158, 166, 169, 197, 200, 201, 207, 220, 230, 239, 244, 252, 270, 280, 286, 287, 289, 298, 301, 329, 332, 333, 339, 352, 362, 375, 382, 386, 391, 397], "lh": [3, 371], "which": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 61, 63, 65, 66, 68, 69, 75, 76, 78, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 98, 99, 102, 103, 104, 106, 107, 114, 115, 119, 120, 121, 122, 125, 126, 128, 129, 131, 133, 134, 139, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 188, 191, 192, 193, 196, 197, 200, 201, 202, 203, 207, 208, 211, 215, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 238, 239, 243, 244, 245, 250, 252, 255, 256, 258, 259, 261, 263, 264, 265, 270, 273, 274, 275, 276, 277, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 303, 305, 306, 308, 309, 310, 313, 314, 316, 317, 318, 320, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 365, 367, 371, 374, 375, 376, 377, 378, 382, 383, 386, 387, 388, 389, 391, 392, 393], "abov": [3, 4, 5, 7, 8, 25, 29, 32, 35, 36, 37, 42, 43, 50, 52, 53, 59, 61, 63, 65, 75, 76, 84, 93, 94, 95, 99, 105, 114, 115, 120, 121, 131, 142, 144, 148, 149, 154, 155, 158, 161, 172, 176, 178, 185, 208, 217, 224, 226, 239, 243, 244, 245, 247, 261, 273, 275, 279, 280, 282, 285, 286, 289, 293, 304, 308, 310, 317, 329, 340, 349, 356, 358, 364, 370, 372, 373, 374, 375, 376, 378, 381, 382, 386, 387, 388, 389, 391, 392], "cach": [3, 6, 7, 8, 36, 156, 165, 205, 230, 252, 287, 297, 337, 362], "along": [3, 25, 31, 32, 33, 41, 48, 61, 63, 65, 72, 76, 84, 89, 91, 100, 104, 105, 107, 121, 125, 126, 129, 134, 148, 149, 150, 154, 155, 161, 164, 166, 171, 178, 182, 207, 210, 217, 220, 224, 226, 228, 230, 233, 235, 252, 255, 256, 259, 264, 279, 280, 281, 285, 286, 293, 296, 298, 303, 310, 314, 339, 342, 349, 352, 356, 358, 360, 362, 365, 367, 373, 374, 387, 392, 393], "mark": [3, 27, 28, 29, 31, 40, 46, 47, 61, 81, 89, 99, 108, 122, 125, 139, 142, 155, 156, 197, 216, 226, 228, 230, 232, 234, 255, 270, 273, 286, 287, 329, 330, 348, 358, 360, 362, 364, 366, 374, 382, 383, 392], "altern": [3, 8, 13, 29, 30, 31, 46, 47, 61, 71, 75, 76, 81, 84, 100, 109, 121, 150, 155, 156, 158, 160, 168, 194, 197, 208, 217, 228, 237, 243, 252, 281, 286, 287, 289, 292, 300, 326, 329, 337, 340, 345, 349, 360, 365, 370, 371, 376, 378, 384, 387], "ccmake": 3, "interact": [3, 26, 29, 45, 71, 76, 81, 121, 128, 131, 149, 155, 158, 181, 245, 250, 251, 252, 258, 261, 279, 280, 286, 289, 313, 329, 336, 350, 362, 364, 371, 373, 374, 375, 382, 386, 392, 396, 397], "inspect": [3, 52, 239, 387], "miss": [3, 32, 46, 71, 76, 114, 115, 196, 207, 217, 218, 243, 252, 328, 339, 349, 350, 373], "cmakecach": [3, 7], "leav": [3, 14, 24, 25, 61, 65, 89, 90, 91, 102, 103, 104, 109, 111, 149, 159, 161, 197, 207, 220, 228, 245, 280, 291, 293, 329, 339, 349, 352, 360], "compon": [3, 12, 13, 25, 33, 39, 65, 71, 121, 168, 197, 217, 252, 300, 329, 349, 374, 386, 392], "dcmake_install_prefix": [3, 7, 238, 243, 244, 246], "dcmake_build_typ": [3, 7, 239, 243], "dnrn_enable_interview": [3, 7, 243, 246], "dnrn_enable_mpi": [3, 243, 246], "dnrn_enable_python": [3, 246], "dnrn_enable_coreneuron": [3, 7, 244], "valu": [3, 4, 10, 11, 12, 13, 16, 17, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 46, 47, 52, 61, 62, 64, 65, 72, 76, 82, 84, 86, 87, 88, 90, 94, 95, 98, 99, 100, 102, 109, 111, 114, 115, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 166, 168, 170, 171, 172, 176, 177, 178, 181, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 240, 245, 247, 250, 254, 256, 258, 259, 261, 262, 263, 265, 270, 271, 273, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 298, 299, 300, 302, 303, 304, 308, 309, 310, 313, 314, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 336, 337, 338, 339, 340, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 356, 358, 359, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 375, 378, 386, 387, 388, 391, 392], "persist": [3, 53, 75, 91, 149, 197, 226, 252, 280, 329, 358], "subsequ": [3, 32, 76, 129, 133, 144, 149, 150, 155, 163, 165, 181, 184, 185, 188, 193, 197, 217, 228, 230, 234, 259, 263, 275, 280, 281, 286, 295, 297, 313, 316, 317, 320, 325, 329, 331, 349, 360, 362, 366, 371, 374, 382, 392], "invoc": [3, 76, 164, 193, 296], "unless": [3, 12, 32, 36, 59, 76, 89, 91, 148, 149, 150, 151, 154, 155, 156, 159, 184, 185, 193, 197, 216, 217, 222, 226, 233, 279, 280, 281, 282, 285, 286, 287, 289, 291, 316, 317, 325, 329, 348, 349, 354, 358, 365, 385, 392], "explicitli": [3, 4, 59, 93, 114, 148, 149, 150, 154, 155, 156, 158, 160, 165, 178, 184, 197, 207, 208, 217, 224, 239, 243, 244, 249, 250, 279, 280, 281, 285, 286, 287, 297, 310, 316, 329, 339, 340, 349, 356, 370, 371, 375, 386, 387, 391, 392], "chang": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 44, 46, 50, 53, 61, 64, 65, 67, 72, 75, 76, 77, 82, 90, 93, 94, 95, 97, 98, 99, 100, 102, 104, 108, 109, 110, 111, 114, 115, 119, 121, 122, 124, 125, 126, 128, 129, 131, 139, 140, 142, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 176, 177, 178, 181, 184, 185, 189, 190, 192, 193, 197, 199, 207, 208, 213, 215, 217, 220, 221, 222, 224, 226, 228, 231, 232, 233, 234, 237, 239, 244, 247, 249, 250, 252, 254, 255, 256, 258, 259, 261, 270, 271, 273, 276, 277, 279, 280, 281, 285, 286, 287, 289, 291, 292, 293, 297, 300, 301, 302, 303, 307, 308, 309, 310, 313, 316, 317, 321, 322, 324, 325, 329, 331, 337, 339, 340, 345, 347, 349, 352, 353, 354, 356, 358, 360, 362, 363, 364, 365, 366, 370, 374, 375, 377, 383, 384, 386, 387, 389, 391, 392], "modifi": [3, 7, 28, 29, 38, 39, 42, 43, 54, 59, 65, 71, 76, 77, 93, 98, 119, 121, 128, 134, 143, 145, 146, 149, 150, 155, 158, 160, 161, 193, 194, 197, 201, 207, 213, 217, 220, 252, 258, 264, 274, 276, 277, 280, 281, 285, 286, 289, 292, 293, 310, 325, 326, 329, 333, 339, 345, 349, 352, 358, 372, 373, 375, 376, 382, 383, 386, 388, 391, 392], "them": [3, 4, 5, 10, 11, 25, 28, 36, 40, 42, 46, 47, 51, 52, 53, 54, 61, 62, 65, 66, 76, 81, 82, 91, 93, 99, 100, 103, 106, 107, 121, 122, 144, 148, 149, 150, 155, 160, 161, 163, 170, 178, 181, 182, 194, 195, 197, 200, 207, 208, 216, 217, 219, 224, 228, 231, 243, 244, 245, 250, 252, 275, 279, 280, 281, 286, 292, 293, 302, 310, 313, 314, 326, 327, 329, 332, 339, 340, 348, 349, 351, 356, 360, 363, 371, 374, 375, 378, 381, 382, 385, 386, 387, 391, 392], "intend": [3, 29, 61, 89, 109, 114, 115, 155, 158, 170, 193, 225, 226, 286, 289, 302, 325, 357, 358, 371, 382, 392], "taken": [3, 4, 13, 76, 91, 131, 132, 149, 155, 159, 171, 178, 197, 217, 261, 262, 280, 286, 291, 303, 329, 349, 374, 378, 389], "account": [3, 4, 29, 52, 53, 75, 122, 131, 148, 149, 155, 161, 217, 252, 261, 279, 280, 286, 293, 349, 374], "necessari": [3, 7, 8, 10, 11, 13, 14, 24, 32, 42, 47, 61, 62, 81, 85, 91, 93, 118, 121, 122, 128, 129, 148, 149, 150, 155, 156, 158, 161, 164, 178, 185, 186, 193, 197, 207, 208, 216, 217, 244, 249, 250, 252, 258, 259, 280, 281, 286, 287, 289, 293, 295, 296, 297, 310, 317, 318, 325, 329, 337, 339, 348, 349, 371, 382, 383, 389, 392], "fresh": [3, 30, 91], "empti": [3, 14, 37, 48, 71, 89, 102, 128, 155, 159, 161, 164, 168, 169, 178, 184, 197, 201, 207, 217, 224, 225, 226, 228, 230, 245, 258, 285, 286, 291, 293, 300, 301, 310, 316, 329, 333, 337, 339, 348, 349, 356, 357, 358, 360, 362, 382], "howev": [3, 4, 12, 14, 25, 29, 32, 35, 36, 37, 39, 45, 54, 59, 60, 61, 65, 68, 75, 76, 83, 84, 88, 89, 91, 93, 96, 99, 100, 104, 121, 122, 129, 133, 143, 146, 148, 149, 150, 154, 155, 158, 159, 160, 161, 178, 181, 197, 201, 207, 208, 217, 220, 222, 224, 226, 228, 231, 244, 259, 263, 274, 277, 279, 280, 281, 285, 286, 289, 290, 291, 292, 293, 295, 310, 313, 321, 329, 331, 333, 339, 340, 349, 352, 354, 356, 360, 363, 371, 373, 375, 381, 382, 383, 385, 386, 389, 391, 392, 396], "unknown": [3, 149, 213, 239, 280, 310, 345, 373, 386, 389], "bug": [3, 121, 148, 155, 156, 159, 195, 231, 252, 279, 286, 287, 291, 327, 363, 371, 382, 383], "suffici": [3, 38, 75, 93, 121, 161, 197, 243, 252, 279, 293, 329, 382, 386], "again": [3, 14, 29, 31, 36, 42, 44, 45, 46, 47, 61, 71, 73, 75, 76, 81, 89, 93, 98, 102, 109, 119, 128, 154, 155, 156, 165, 174, 185, 187, 196, 207, 217, 220, 228, 258, 285, 286, 287, 297, 300, 306, 317, 319, 328, 339, 349, 352, 360, 372, 382, 386, 387, 389, 391, 392], "arg": [3, 28, 29, 52, 72, 76, 123, 131, 133, 134, 144, 149, 150, 151, 154, 155, 159, 160, 161, 163, 165, 166, 168, 169, 171, 172, 173, 175, 177, 178, 181, 182, 184, 186, 187, 193, 196, 197, 199, 200, 201, 202, 204, 208, 210, 211, 212, 213, 217, 220, 222, 223, 226, 230, 232, 233, 234, 239, 241, 245, 253, 261, 263, 264, 265, 275, 280, 281, 282, 285, 286, 291, 292, 293, 297, 298, 300, 301, 303, 304, 305, 307, 309, 310, 313, 314, 316, 318, 319, 325, 328, 329, 331, 332, 333, 334, 336, 337, 340, 342, 343, 344, 345, 349, 352, 354, 355, 358, 364, 365, 366], "rel": [3, 25, 29, 42, 58, 75, 76, 83, 94, 99, 122, 142, 146, 148, 149, 150, 154, 155, 156, 158, 161, 164, 165, 172, 197, 217, 226, 228, 230, 233, 252, 273, 277, 279, 280, 281, 285, 286, 287, 293, 297, 304, 329, 349, 358, 360, 362, 365, 371, 380, 382, 383, 386], "common": [3, 24, 36, 42, 47, 52, 65, 76, 81, 89, 95, 98, 119, 121, 128, 135, 142, 149, 155, 192, 198, 208, 224, 226, 228, 243, 252, 258, 273, 280, 286, 289, 324, 330, 340, 356, 358, 360, 382, 383, 392], "prepend": [3, 169, 171, 181, 239, 301, 303, 311, 313], "onto": [3, 27, 29, 32, 36, 45, 46, 52, 54, 69, 71, 75, 99, 117, 148, 150, 154, 155, 175, 178, 197, 217, 228, 234, 252, 279, 281, 285, 286, 296, 307, 310, 329, 349, 360, 366, 382, 386, 387, 388, 389, 392], "export": [3, 7, 38, 60, 78, 84, 94, 122, 153, 155, 208, 238, 239, 243, 245, 265, 272, 284, 286, 332], "pythonpath": [3, 7, 208, 238, 243], "each": [3, 5, 9, 10, 11, 12, 13, 25, 27, 28, 29, 32, 33, 36, 37, 38, 39, 42, 43, 46, 47, 49, 51, 52, 54, 59, 61, 65, 68, 69, 70, 71, 73, 75, 76, 79, 81, 83, 88, 90, 91, 94, 95, 98, 100, 102, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 133, 134, 137, 139, 142, 143, 144, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 171, 172, 176, 184, 186, 187, 190, 194, 196, 197, 201, 202, 214, 215, 216, 217, 220, 221, 222, 224, 226, 227, 228, 230, 231, 233, 234, 240, 246, 247, 252, 254, 255, 256, 258, 259, 263, 264, 268, 270, 273, 274, 275, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 297, 300, 301, 303, 304, 308, 316, 318, 319, 322, 326, 328, 329, 331, 333, 334, 339, 344, 346, 347, 348, 349, 352, 353, 354, 356, 358, 359, 360, 362, 363, 365, 366, 373, 376, 378, 382, 386, 387, 388, 389, 391, 392], "custom": [3, 7, 19, 26, 31, 45, 61, 65, 89, 91, 95, 98, 119, 121, 158, 243, 280], "debug": [3, 45, 52, 76, 135, 155, 158, 201, 217, 220, 240, 266, 286, 289, 333, 349, 352, 386, 392], "fast": [3, 9, 32, 36, 58, 104, 155, 161, 164, 194, 197, 205, 217, 226, 230, 233, 252, 286, 293, 326, 329, 337, 349, 358, 362, 365, 384], "mean": [3, 9, 25, 28, 34, 39, 47, 52, 53, 54, 71, 76, 81, 89, 90, 91, 93, 95, 99, 102, 114, 115, 121, 126, 128, 129, 146, 148, 149, 150, 151, 155, 156, 160, 164, 168, 171, 178, 184, 194, 196, 197, 204, 212, 217, 226, 228, 234, 243, 252, 256, 258, 259, 277, 279, 280, 281, 282, 286, 287, 292, 300, 303, 310, 316, 326, 328, 329, 330, 331, 344, 349, 358, 360, 366, 371, 378, 382, 383, 385, 386, 387], "o2": [3, 21, 22, 28, 163, 181, 197, 202, 217, 313, 334], "optim": [3, 7, 29, 42, 71, 82, 90, 98, 119, 121, 128, 129, 130, 149, 155, 197, 224, 239, 251, 252, 258, 259, 260, 280, 286, 329, 356, 395], "o0": [3, 238, 239, 243], "gdb": [3, 166, 240, 298], "otherwis": [3, 7, 54, 76, 103, 128, 129, 144, 148, 155, 156, 159, 160, 163, 168, 178, 181, 182, 186, 192, 193, 194, 197, 199, 201, 204, 207, 211, 213, 217, 223, 228, 232, 236, 258, 259, 275, 279, 280, 285, 286, 287, 289, 291, 292, 295, 299, 300, 310, 313, 314, 318, 324, 325, 326, 329, 331, 333, 336, 339, 343, 345, 349, 355, 360, 364, 372, 373, 374, 375, 382, 383, 386], "awai": [3, 25, 37, 61, 75, 76, 91, 105, 106, 128, 131, 149, 160, 185, 190, 207, 224, 228, 258, 261, 280, 292, 317, 322, 339, 356, 360, 382], "dndebug": [3, 243], "latter": [3, 33, 54, 59, 91, 98, 119, 122, 149, 154, 155, 156, 193, 207, 208, 210, 217, 224, 280, 285, 286, 287, 289, 293, 325, 339, 342, 349, 356, 371], "elimin": [3, 29, 33, 60, 74, 121, 122, 146, 149, 150, 155, 197, 215, 217, 239, 252, 277, 280, 281, 286, 329, 347, 349], "assert": [3, 4, 155, 222, 247, 265, 286, 349, 354], "statement": [3, 4, 10, 11, 13, 28, 37, 42, 45, 46, 47, 52, 61, 71, 72, 78, 85, 91, 98, 114, 115, 119, 120, 121, 122, 128, 129, 133, 144, 145, 147, 148, 150, 151, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 176, 180, 187, 189, 190, 193, 197, 199, 201, 202, 204, 205, 208, 217, 220, 221, 222, 227, 230, 239, 247, 258, 259, 263, 275, 276, 278, 279, 281, 282, 285, 286, 287, 291, 296, 297, 298, 308, 312, 318, 319, 321, 322, 325, 329, 333, 334, 336, 337, 340, 349, 352, 354, 359, 362, 373, 382, 383], "cmake_c_flag": 3, "cmake_cxx_flag": 3, "releasedebugautoflag": 3, "super": 3, "comput": [3, 6, 7, 9, 13, 25, 33, 36, 39, 40, 42, 47, 52, 53, 61, 71, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 94, 95, 96, 114, 115, 120, 122, 124, 129, 131, 144, 146, 148, 149, 150, 155, 156, 159, 160, 161, 164, 169, 185, 191, 194, 196, 197, 203, 215, 217, 220, 221, 222, 226, 227, 228, 229, 233, 239, 243, 251, 252, 254, 259, 260, 261, 275, 277, 279, 280, 281, 286, 287, 291, 292, 293, 301, 317, 323, 326, 328, 329, 335, 347, 349, 352, 353, 354, 358, 359, 360, 361, 365, 368, 376, 382, 387, 389], "machin": [3, 7, 31, 35, 36, 39, 47, 55, 61, 76, 95, 131, 153, 155, 156, 159, 166, 176, 191, 197, 201, 208, 220, 224, 228, 237, 244, 245, 252, 261, 284, 286, 287, 291, 298, 308, 323, 329, 333, 352, 360, 386, 387, 388, 389], "rough": 3, "powerbook": 3, "arm64": [3, 243, 244, 245], "39": [3, 153, 200, 243, 244, 245, 247, 252, 279, 284, 332, 347, 376, 378, 380, 386, 391, 392], "35": [3, 33, 41, 161, 197, 239, 252, 279, 280, 293, 329, 347, 376, 386, 391, 392], "touch": [3, 252], "src": [3, 32, 37, 52, 54, 58, 76, 77, 78, 80, 107, 108, 110, 134, 145, 146, 148, 149, 150, 153, 155, 159, 170, 193, 197, 208, 216, 217, 220, 230, 238, 239, 243, 244, 247, 264, 265, 276, 277, 278, 279, 280, 281, 284, 286, 291, 302, 325, 329, 348, 349, 352, 362, 382], "nrnoc": [3, 52, 77, 78, 134, 146, 148, 149, 150, 217, 220, 239, 243, 247, 264, 265, 277, 279, 280, 281, 349, 352], "4": [3, 10, 11, 21, 22, 27, 28, 35, 36, 49, 52, 53, 60, 63, 67, 76, 88, 95, 103, 114, 115, 120, 121, 128, 129, 133, 144, 148, 149, 154, 155, 156, 158, 159, 161, 164, 168, 169, 172, 178, 181, 182, 187, 192, 193, 196, 197, 201, 208, 210, 213, 217, 220, 225, 226, 227, 230, 232, 239, 245, 247, 250, 251, 252, 258, 259, 263, 275, 279, 280, 282, 286, 287, 289, 291, 292, 293, 296, 300, 301, 304, 310, 313, 314, 323, 324, 325, 328, 329, 331, 333, 340, 342, 345, 347, 349, 352, 357, 358, 359, 362, 364, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 390, 391, 397], "On": [3, 7, 10, 11, 13, 27, 36, 41, 46, 48, 53, 65, 76, 77, 87, 101, 133, 154, 155, 159, 166, 169, 193, 197, 207, 217, 222, 224, 228, 237, 239, 243, 244, 245, 247, 252, 263, 285, 286, 291, 298, 325, 329, 339, 349, 354, 356, 358, 360, 362, 378, 382, 389], "brew": [3, 36, 241, 243, 244], "print": [3, 10, 13, 16, 17, 18, 19, 28, 29, 36, 44, 45, 46, 47, 52, 53, 54, 61, 64, 65, 72, 76, 81, 82, 91, 95, 98, 114, 115, 119, 122, 124, 129, 132, 133, 143, 144, 145, 148, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 178, 181, 182, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 226, 227, 230, 232, 234, 239, 244, 250, 252, 254, 259, 262, 263, 265, 274, 275, 276, 277, 279, 280, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 310, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 356, 358, 359, 362, 364, 366, 371, 373, 376, 380, 386, 387, 389, 391, 392], "built": [3, 4, 9, 10, 11, 48, 52, 54, 61, 76, 82, 85, 103, 120, 128, 139, 148, 149, 150, 153, 155, 156, 158, 178, 189, 208, 211, 224, 236, 239, 243, 244, 245, 252, 258, 270, 279, 280, 281, 284, 286, 287, 289, 310, 323, 340, 343, 356, 371, 376, 386, 387, 388, 392], "individu": [3, 14, 29, 40, 45, 47, 60, 61, 75, 81, 89, 121, 128, 139, 143, 149, 153, 155, 158, 161, 176, 193, 196, 197, 226, 251, 252, 258, 270, 274, 280, 284, 286, 289, 293, 308, 325, 328, 358, 371, 382, 383, 391, 392], "1": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 35, 37, 42, 43, 44, 45, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 71, 72, 76, 81, 84, 85, 86, 88, 90, 94, 95, 98, 100, 104, 105, 109, 111, 112, 114, 115, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 133, 134, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 178, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 239, 241, 243, 245, 247, 249, 250, 251, 252, 254, 255, 257, 258, 259, 261, 263, 264, 265, 274, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 310, 313, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391], "doe": [3, 7, 8, 9, 10, 11, 13, 25, 28, 29, 32, 33, 36, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 65, 74, 76, 81, 82, 89, 91, 93, 95, 98, 119, 122, 128, 129, 131, 132, 140, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 168, 171, 178, 181, 182, 184, 187, 190, 193, 197, 200, 201, 207, 208, 213, 217, 218, 221, 222, 226, 228, 229, 231, 233, 234, 239, 244, 247, 252, 258, 259, 261, 262, 271, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 298, 300, 302, 303, 310, 313, 314, 316, 318, 322, 325, 329, 332, 333, 339, 340, 342, 343, 345, 349, 350, 353, 354, 356, 358, 360, 361, 362, 363, 365, 366, 371, 372, 374, 375, 378, 382, 383, 385, 386, 389, 391, 392], "non": [3, 4, 7, 32, 36, 52, 53, 65, 76, 82, 90, 94, 128, 131, 146, 148, 149, 154, 155, 156, 161, 170, 184, 187, 190, 193, 201, 208, 217, 231, 244, 251, 252, 258, 261, 277, 279, 280, 285, 286, 287, 289, 293, 302, 316, 319, 322, 325, 333, 340, 342, 349, 363, 371, 382, 383, 386, 391, 392], "show": [3, 10, 11, 13, 17, 24, 25, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 46, 47, 53, 59, 60, 61, 62, 65, 71, 75, 76, 81, 84, 85, 88, 89, 91, 94, 95, 96, 99, 100, 102, 103, 109, 110, 114, 115, 118, 125, 126, 128, 129, 139, 140, 142, 144, 148, 149, 161, 168, 169, 171, 172, 178, 184, 197, 213, 216, 224, 226, 228, 229, 231, 232, 234, 235, 239, 252, 255, 256, 258, 259, 270, 271, 273, 275, 279, 280, 293, 300, 303, 304, 310, 316, 329, 331, 345, 348, 356, 360, 361, 363, 364, 365, 366, 367, 370, 371, 372, 373, 375, 376, 377, 381, 386, 387, 388, 389, 391, 392], "automat": [3, 4, 7, 14, 31, 46, 47, 52, 61, 62, 74, 76, 81, 91, 121, 122, 124, 144, 146, 148, 149, 150, 155, 158, 161, 164, 168, 178, 184, 197, 207, 208, 217, 220, 226, 228, 230, 234, 239, 241, 243, 244, 245, 252, 254, 275, 277, 279, 280, 281, 286, 289, 292, 293, 300, 310, 316, 329, 339, 340, 349, 350, 352, 358, 360, 362, 366, 376, 382, 383, 385, 386, 392], "subproject": 3, "iv": [3, 153, 155, 252, 284, 286, 345], "actual": [3, 14, 16, 25, 31, 32, 41, 42, 45, 46, 52, 54, 61, 65, 71, 75, 76, 77, 78, 89, 91, 95, 96, 98, 100, 103, 108, 118, 119, 121, 129, 131, 146, 148, 149, 150, 154, 155, 156, 159, 161, 168, 193, 197, 199, 202, 207, 210, 217, 226, 227, 228, 231, 239, 252, 259, 261, 277, 279, 280, 281, 286, 287, 291, 293, 300, 325, 329, 331, 334, 339, 340, 342, 349, 358, 359, 360, 363, 374, 375, 382, 386, 388, 392], "purpos": [3, 5, 10, 11, 40, 52, 71, 74, 76, 82, 84, 91, 95, 139, 149, 150, 154, 155, 161, 164, 197, 200, 201, 217, 226, 228, 245, 252, 265, 270, 280, 281, 285, 286, 293, 329, 332, 333, 349, 358, 360, 368, 374, 382, 383], "wish": [3, 29, 88, 128, 149, 153, 154, 155, 159, 161, 168, 193, 197, 200, 201, 203, 217, 219, 226, 243, 258, 280, 284, 285, 286, 291, 293, 300, 329, 332, 333, 335, 349, 351, 358, 371, 381, 387, 392], "independ": [3, 9, 25, 36, 65, 68, 82, 84, 89, 114, 115, 124, 126, 129, 148, 150, 155, 168, 194, 196, 197, 199, 224, 228, 251, 252, 254, 256, 259, 279, 281, 286, 300, 310, 326, 328, 329, 331, 356, 360, 382, 386, 392], "div_dir": 3, "home": [3, 7, 21, 22, 36, 46, 91, 153, 155, 208, 213, 230, 239, 241, 243, 244, 284, 286, 362, 378], "ivcmak": 3, "share": [3, 4, 10, 11, 14, 49, 53, 54, 60, 77, 78, 84, 87, 95, 121, 148, 154, 155, 156, 164, 193, 202, 208, 213, 226, 239, 243, 252, 265, 279, 280, 285, 286, 287, 296, 325, 331, 334, 340, 345, 349, 358, 360, 378, 382], "static": [3, 4, 8, 52, 148, 150, 155, 200, 245, 247, 252, 265, 279, 281, 332, 340], "incorpor": [3, 52, 71, 76, 84, 121, 158, 160, 252, 289, 292, 382, 386], "libnrniv": [3, 52, 239, 243], "dlopen": [3, 243], "xquartz": [3, 243, 244], "": [3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 19, 21, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 45, 49, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 91, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 114, 115, 118, 121, 129, 131, 132, 139, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 163, 164, 165, 168, 169, 173, 181, 184, 186, 194, 197, 199, 200, 202, 204, 206, 208, 210, 211, 216, 217, 218, 220, 221, 224, 225, 226, 228, 231, 232, 234, 236, 237, 239, 243, 244, 245, 250, 251, 252, 259, 261, 262, 270, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 310, 313, 314, 316, 318, 319, 323, 326, 329, 331, 332, 334, 336, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 357, 358, 360, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 391, 393, 395, 397], "graphic": [3, 14, 29, 32, 33, 39, 45, 60, 61, 65, 71, 76, 81, 87, 91, 94, 98, 107, 119, 122, 142, 149, 150, 176, 185, 192, 199, 206, 217, 224, 226, 230, 237, 239, 250, 252, 273, 280, 281, 308, 317, 324, 331, 338, 349, 356, 358, 362, 364, 371, 372, 375, 376, 378, 386, 387, 388, 389, 391, 392], "suddenli": [3, 61, 374], "remak": 3, "brittl": 3, "stabl": [3, 13, 24, 33, 36, 38, 149, 220, 252, 280, 352, 370, 371, 374, 382, 383, 385], "ever": [3, 39, 150, 197, 252, 281, 382], "push": [3, 20, 29, 52, 54, 67, 75, 148, 150, 154, 164, 173, 208, 234, 279, 281, 285, 293, 296, 305, 340, 366, 382, 392], "respositori": 3, "mpich": [3, 10, 11, 153, 155, 245, 284, 286], "mpi4pi": [3, 5, 286], "cannot": [3, 4, 8, 36, 39, 54, 76, 93, 95, 114, 115, 131, 145, 149, 155, 156, 160, 164, 172, 178, 181, 182, 193, 197, 201, 208, 216, 217, 218, 220, 226, 228, 239, 243, 247, 252, 261, 263, 276, 279, 280, 281, 282, 286, 287, 292, 304, 310, 313, 314, 321, 325, 329, 333, 340, 348, 349, 350, 352, 358, 360, 382, 383, 385, 391], "mix": [3, 42, 71, 93, 98, 119, 184, 217, 252, 286, 316, 349, 374], "mostli": [3, 161, 244, 252, 293, 301, 382, 391, 396], "distibut": 3, "semicolon": 3, "against": [3, 10, 11, 25, 28, 89, 226, 239, 244, 252, 314, 358, 372, 382, 383], "found": [3, 13, 35, 39, 46, 47, 52, 76, 93, 114, 115, 128, 129, 133, 134, 149, 156, 197, 201, 208, 211, 217, 224, 228, 243, 244, 247, 258, 259, 263, 264, 280, 287, 329, 333, 343, 349, 356, 360, 376, 382], "know": [3, 27, 29, 35, 39, 41, 46, 47, 52, 54, 75, 76, 81, 84, 85, 89, 90, 91, 114, 115, 118, 121, 149, 150, 155, 156, 159, 201, 208, 226, 228, 236, 244, 250, 252, 280, 281, 286, 287, 291, 329, 333, 358, 360, 370, 375, 376, 382, 386, 388, 389, 391, 392], "about": [3, 4, 10, 11, 13, 25, 36, 40, 41, 43, 46, 47, 49, 52, 53, 54, 58, 59, 61, 62, 65, 71, 72, 74, 76, 77, 81, 84, 89, 92, 95, 99, 100, 110, 114, 115, 121, 122, 128, 131, 133, 137, 139, 148, 149, 150, 155, 156, 157, 160, 163, 165, 168, 197, 207, 217, 220, 222, 224, 226, 230, 231, 234, 236, 238, 239, 247, 252, 258, 261, 263, 268, 270, 279, 280, 281, 286, 287, 288, 289, 292, 293, 297, 300, 329, 333, 339, 349, 352, 354, 356, 358, 362, 363, 366, 371, 382, 386, 387, 388, 391, 392, 396, 397], "msmpi": [3, 246], "loader": 3, "tri": [3, 7, 71, 89, 150, 155, 239, 243, 281, 286], "libmpi": [3, 243], "libmpich": [3, 243], "symbol": [3, 52, 75, 76, 128, 129, 169, 174, 178, 182, 208, 211, 220, 226, 228, 239, 258, 259, 301, 306, 314, 340, 343, 352, 360, 392], "determin": [3, 4, 13, 28, 36, 42, 43, 49, 54, 61, 90, 91, 94, 114, 115, 126, 139, 144, 149, 150, 154, 155, 156, 161, 172, 178, 192, 193, 197, 202, 207, 217, 226, 228, 230, 251, 252, 256, 270, 275, 280, 281, 285, 286, 287, 289, 293, 304, 310, 324, 325, 329, 334, 339, 349, 358, 360, 362, 391, 397], "whether": [3, 10, 11, 27, 33, 37, 39, 49, 51, 53, 65, 71, 76, 83, 89, 91, 93, 95, 114, 115, 118, 121, 125, 126, 127, 128, 129, 149, 150, 155, 161, 178, 197, 201, 207, 217, 226, 252, 255, 256, 257, 258, 259, 280, 281, 286, 293, 310, 329, 333, 339, 349, 358, 374, 382, 391], "libnrnmp_xxx": 3, "dnrn_mpi_dynam": 3, "hine": [3, 35, 71, 76, 83, 84, 95, 120, 121, 153, 155, 197, 200, 208, 213, 239, 241, 243, 244, 251, 252, 284, 286, 329, 332, 382, 389], "soft": [3, 243, 252], "ignor": [3, 9, 13, 16, 17, 18, 25, 36, 66, 91, 129, 144, 146, 148, 149, 150, 168, 193, 197, 216, 217, 218, 226, 244, 259, 275, 277, 279, 280, 281, 289, 300, 321, 325, 329, 348, 349, 350, 358, 371, 375, 386, 387, 392], "multi": [3, 150, 200, 217, 252, 281, 332, 349], "coordin": [3, 28, 32, 81, 94, 126, 149, 161, 168, 170, 172, 175, 193, 206, 224, 225, 226, 228, 230, 233, 234, 252, 256, 280, 289, 293, 300, 302, 304, 307, 325, 338, 356, 357, 358, 360, 362, 365, 366, 368, 373, 378], "hint": [3, 12, 25, 28, 29, 33, 38, 39, 41, 43, 45, 46, 59, 61, 62, 76, 108, 110, 122, 137, 149, 155, 159, 239, 268, 280, 286, 291, 386], "switch": [3, 4, 25, 38, 39, 45, 66, 89, 91, 94, 96, 121, 135, 142, 146, 155, 158, 184, 186, 196, 217, 252, 265, 266, 273, 277, 286, 289, 290, 310, 316, 318, 328, 349, 381, 387, 392], "branch": [3, 14, 25, 38, 40, 47, 60, 61, 62, 81, 121, 161, 207, 213, 217, 241, 243, 245, 251, 252, 289, 293, 339, 345, 349, 383, 384, 385, 395], "cython": [3, 243, 244], "python_prefix": 3, "my": [3, 36, 78, 87, 155, 194, 208, 217, 243, 244, 286, 326, 347, 349, 391], "pwd": [3, 155, 238, 245, 286], "musicinstal": 3, "framework": [3, 81, 156, 243, 252, 287], "disabl": [3, 91, 239, 243, 244], "anysourc": 3, "find": [3, 4, 7, 10, 11, 13, 25, 26, 28, 35, 39, 40, 46, 47, 52, 76, 77, 78, 81, 82, 84, 89, 91, 94, 95, 121, 128, 150, 155, 164, 166, 197, 200, 228, 239, 243, 244, 245, 258, 280, 281, 286, 289, 296, 298, 329, 332, 360, 365, 375, 386, 391], "its": [3, 4, 6, 9, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 65, 68, 69, 74, 75, 76, 81, 82, 84, 86, 88, 89, 91, 93, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 128, 129, 133, 143, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 165, 168, 170, 178, 181, 182, 184, 186, 187, 191, 193, 196, 197, 201, 202, 204, 207, 208, 211, 217, 218, 222, 224, 226, 228, 231, 234, 239, 243, 244, 245, 249, 250, 252, 254, 258, 259, 263, 265, 274, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 297, 300, 310, 313, 314, 316, 318, 319, 323, 328, 329, 333, 334, 336, 337, 339, 340, 343, 349, 350, 354, 356, 358, 360, 363, 366, 371, 373, 374, 375, 376, 377, 379, 382, 386, 387, 388, 389, 391, 392], "augment": [3, 149, 155, 252, 280, 286], "dcmake_prefix_path": [3, 239, 243, 244, 246], "dmusic_root": 3, "libmus": 3, "dcmake_c_compil": [3, 7, 244], "clang": [3, 7, 239, 241, 243, 244], "dcmake_cxx_compil": [3, 7, 244], "dpython_execut": [3, 7, 238, 243, 244, 246], "dnrn_enable_rx3d": [3, 7, 243, 246], "dnrn_enable_test": [3, 53, 238, 239], "dnrn_enable_mus": 3, "dnrn_enable_mpi_dynam": [3, 244, 246], "nrnmusic": 3, "runtim": [3, 8, 121, 129, 149, 154, 155, 156, 165, 239, 243, 244, 246, 251, 259, 280, 286, 287, 297], "prior": [3, 13, 16, 17, 18, 28, 31, 61, 76, 129, 131, 133, 148, 149, 150, 151, 154, 155, 158, 160, 161, 170, 178, 184, 193, 197, 206, 207, 217, 222, 226, 252, 259, 261, 263, 279, 280, 281, 282, 285, 286, 292, 293, 302, 307, 316, 325, 329, 338, 339, 348, 349, 352, 354, 358, 371, 382, 391], "fallback": 3, "below": [3, 4, 8, 13, 19, 25, 28, 29, 37, 42, 44, 54, 63, 65, 76, 81, 84, 91, 93, 94, 98, 99, 105, 119, 121, 125, 128, 139, 148, 150, 155, 158, 161, 164, 168, 181, 197, 224, 226, 238, 239, 243, 244, 245, 255, 258, 270, 279, 281, 286, 289, 290, 292, 293, 297, 300, 310, 313, 329, 347, 356, 358, 371, 375, 381, 386, 387, 388, 391, 392], "els": [3, 10, 11, 17, 21, 22, 24, 28, 29, 44, 47, 52, 54, 58, 61, 65, 72, 76, 77, 78, 91, 122, 131, 147, 148, 150, 154, 155, 164, 181, 187, 193, 194, 197, 201, 203, 207, 208, 216, 217, 220, 221, 222, 226, 228, 231, 247, 249, 261, 278, 279, 281, 285, 286, 289, 293, 296, 299, 313, 319, 325, 326, 329, 333, 339, 340, 348, 349, 353, 354, 356, 358, 360, 363, 365, 371, 372, 376, 378, 380, 386, 389, 392], "eg": [3, 28, 76, 114, 115, 129, 131, 133, 144, 148, 149, 150, 151, 153, 155, 156, 161, 164, 171, 181, 182, 184, 193, 195, 197, 201, 207, 208, 211, 215, 217, 220, 224, 226, 227, 228, 233, 243, 259, 261, 263, 275, 279, 280, 281, 282, 284, 286, 287, 296, 303, 313, 314, 316, 325, 327, 329, 333, 339, 340, 343, 349, 352, 356, 358, 359, 360, 365, 382, 383], "bldnrnmacpkgcmak": [3, 244], "dnrn_python_dynam": [3, 244, 246], "By": [3, 7, 52, 59, 61, 71, 85, 89, 95, 99, 149, 153, 155, 156, 168, 193, 200, 230, 233, 250, 279, 280, 284, 286, 287, 292, 300, 325, 332, 362, 365, 374, 378, 391, 392], "py": [3, 5, 8, 11, 24, 44, 45, 61, 95, 117, 146, 155, 159, 200, 208, 239, 241, 243, 244, 245, 247, 277, 280, 286, 291, 329, 332, 340, 389, 397], "extens": [3, 25, 31, 47, 71, 76, 88, 95, 121, 122, 131, 135, 141, 145, 147, 149, 185, 200, 208, 224, 230, 234, 243, 252, 261, 266, 272, 276, 278, 280, 290, 317, 329, 332, 356, 362, 366, 390, 391], "rx3d": [3, 243], "No": [3, 24, 54, 76, 91, 94, 110, 155, 161, 182, 187, 197, 200, 208, 213, 217, 220, 228, 241, 243, 244, 252, 286, 293, 314, 319, 329, 332, 340, 345, 349, 352, 360, 386, 391], "reason": [3, 4, 31, 36, 41, 42, 52, 73, 76, 81, 83, 89, 91, 95, 106, 114, 115, 120, 121, 122, 131, 148, 149, 150, 155, 156, 161, 170, 181, 196, 197, 217, 224, 239, 243, 245, 261, 279, 280, 281, 286, 287, 293, 302, 313, 328, 329, 349, 356, 374, 382, 383, 385, 386, 387, 391], "turn": [3, 14, 24, 25, 27, 28, 32, 36, 40, 45, 47, 61, 62, 69, 71, 75, 76, 85, 88, 89, 91, 96, 110, 114, 115, 122, 128, 129, 142, 149, 154, 155, 165, 166, 177, 178, 191, 197, 217, 221, 226, 252, 258, 259, 273, 279, 280, 285, 286, 294, 297, 298, 309, 310, 323, 329, 349, 353, 358, 371, 373, 382, 392, 397], "significantli": [3, 155, 252, 286, 386], "increas": [3, 10, 11, 13, 16, 25, 31, 33, 41, 47, 52, 54, 89, 90, 91, 121, 122, 131, 149, 155, 160, 161, 178, 197, 217, 221, 228, 239, 252, 261, 280, 286, 289, 292, 293, 310, 329, 349, 353, 360, 371, 373, 374, 378, 382, 386, 388], "due": [3, 4, 29, 39, 41, 42, 59, 76, 98, 114, 115, 119, 148, 149, 155, 156, 158, 161, 195, 197, 217, 218, 226, 239, 243, 244, 245, 250, 252, 279, 280, 286, 287, 289, 291, 293, 321, 327, 329, 331, 342, 349, 350, 358, 371, 373, 378, 382, 383, 388, 397], "zero": [3, 28, 29, 35, 47, 76, 93, 128, 134, 146, 148, 149, 154, 155, 156, 166, 184, 186, 193, 197, 201, 258, 264, 277, 279, 280, 285, 286, 287, 289, 298, 316, 318, 325, 329, 330, 333, 342, 378, 382, 391], "slowli": [3, 9, 148, 217, 252, 279, 349], "me": [3, 87, 156, 168, 193, 244, 287, 300, 310, 325], "less": [3, 25, 33, 36, 39, 73, 76, 86, 114, 115, 131, 149, 155, 156, 181, 197, 201, 208, 213, 217, 226, 228, 231, 252, 261, 280, 281, 286, 287, 313, 329, 333, 340, 345, 349, 358, 360, 363, 382, 383, 386], "dnrn_rx3d_opt_level": [3, 244, 246], "2": [3, 4, 10, 11, 15, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 43, 44, 45, 47, 49, 52, 53, 54, 58, 59, 60, 63, 64, 66, 67, 72, 73, 76, 82, 85, 88, 90, 93, 94, 95, 103, 105, 109, 113, 114, 115, 120, 121, 122, 131, 133, 134, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 169, 171, 172, 173, 178, 181, 182, 184, 185, 187, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 208, 210, 213, 214, 215, 216, 217, 218, 220, 224, 225, 226, 227, 228, 230, 232, 234, 239, 243, 244, 245, 246, 247, 249, 250, 251, 252, 261, 263, 264, 265, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 298, 300, 303, 304, 308, 310, 313, 314, 316, 317, 318, 319, 321, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 340, 342, 344, 345, 347, 348, 349, 350, 352, 356, 357, 358, 359, 360, 362, 364, 365, 366, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391], "threadsaf": [3, 4, 36, 147, 148, 155, 248, 279, 286, 376], "promot": [3, 84, 144, 150, 252, 275, 281, 371], "appear": [3, 14, 25, 27, 31, 37, 40, 42, 46, 47, 50, 52, 61, 65, 74, 75, 76, 81, 84, 87, 89, 91, 93, 94, 98, 99, 103, 104, 105, 108, 109, 110, 114, 115, 118, 119, 121, 122, 124, 128, 129, 144, 148, 149, 150, 161, 162, 168, 174, 178, 181, 182, 193, 197, 202, 207, 208, 224, 225, 226, 227, 228, 231, 234, 244, 252, 254, 258, 259, 265, 275, 279, 280, 281, 286, 293, 294, 300, 301, 306, 310, 313, 314, 325, 329, 334, 339, 340, 356, 357, 358, 359, 360, 362, 363, 366, 386, 387, 388, 389, 392], "right": [3, 14, 25, 27, 28, 32, 33, 37, 42, 47, 50, 52, 61, 65, 71, 73, 74, 75, 76, 80, 81, 89, 91, 94, 95, 98, 99, 100, 101, 102, 105, 107, 109, 114, 115, 118, 119, 126, 129, 139, 142, 149, 150, 155, 158, 161, 164, 170, 181, 186, 190, 191, 192, 197, 201, 211, 218, 220, 226, 228, 230, 233, 243, 244, 256, 259, 270, 273, 280, 281, 286, 289, 293, 302, 313, 318, 322, 323, 324, 329, 333, 343, 344, 350, 352, 358, 360, 362, 365, 372, 374, 378, 382, 386, 387, 391, 392], "hand": [3, 27, 37, 42, 47, 71, 99, 121, 148, 149, 150, 174, 181, 185, 190, 193, 197, 201, 204, 207, 220, 244, 252, 279, 280, 281, 289, 306, 313, 317, 322, 325, 333, 336, 339, 352, 371, 377, 386, 391, 392, 395], "side": [3, 25, 42, 61, 65, 91, 95, 99, 105, 122, 126, 148, 149, 150, 155, 164, 181, 190, 193, 197, 201, 204, 207, 217, 220, 237, 239, 250, 252, 256, 279, 280, 281, 286, 289, 313, 322, 325, 329, 333, 336, 339, 349, 352, 368, 371, 382, 391, 392], "becom": [3, 9, 27, 36, 37, 45, 47, 59, 75, 76, 81, 91, 102, 108, 110, 121, 125, 131, 148, 149, 150, 151, 155, 159, 160, 161, 163, 164, 166, 174, 177, 178, 187, 197, 208, 211, 217, 218, 222, 226, 228, 234, 239, 255, 261, 279, 280, 281, 282, 286, 291, 292, 293, 296, 298, 306, 309, 310, 319, 329, 340, 343, 349, 350, 354, 358, 360, 366, 382, 383, 391], "There": [3, 10, 11, 13, 14, 25, 28, 29, 40, 47, 61, 71, 76, 84, 93, 95, 98, 114, 115, 119, 121, 128, 131, 149, 154, 155, 156, 158, 161, 164, 187, 188, 191, 197, 216, 218, 220, 224, 228, 239, 245, 258, 261, 280, 285, 286, 287, 289, 293, 301, 319, 320, 323, 329, 337, 340, 344, 348, 350, 352, 356, 360, 373, 382, 386, 389, 391, 392, 397], "blob": [3, 10, 47, 81, 360], "cmakelist": [3, 243, 244, 382], "ones": [3, 41, 42, 71, 289, 378, 382, 388], "particular": [3, 7, 24, 25, 28, 32, 39, 40, 42, 43, 47, 50, 54, 61, 71, 81, 84, 88, 89, 91, 95, 98, 114, 115, 119, 121, 126, 128, 131, 139, 148, 149, 150, 151, 154, 155, 156, 158, 168, 172, 197, 199, 200, 208, 217, 224, 228, 239, 252, 256, 258, 261, 270, 274, 279, 280, 281, 282, 285, 286, 287, 289, 300, 304, 329, 331, 332, 340, 349, 356, 360, 370, 371, 374, 386, 387, 388, 391, 392], "interest": [3, 4, 25, 29, 32, 34, 35, 46, 47, 52, 77, 78, 81, 88, 89, 95, 121, 122, 217, 239, 247, 289, 349, 371, 375, 382, 386, 392], "line": [3, 14, 25, 27, 28, 29, 31, 32, 37, 45, 47, 52, 61, 65, 74, 76, 79, 81, 84, 87, 88, 89, 91, 93, 94, 96, 99, 102, 104, 108, 110, 114, 115, 121, 122, 126, 128, 129, 146, 148, 149, 155, 156, 164, 181, 184, 185, 186, 187, 192, 193, 194, 196, 197, 201, 202, 206, 207, 208, 213, 216, 217, 224, 225, 226, 228, 230, 231, 232, 233, 234, 238, 243, 244, 246, 252, 256, 258, 259, 265, 277, 280, 286, 287, 300, 301, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 333, 334, 337, 338, 339, 340, 345, 348, 349, 356, 357, 358, 360, 362, 363, 364, 365, 366, 371, 378, 382, 386, 387, 389, 391, 392], "corenrn_enable_nmodl": 3, "corenrn_enable_gpu": 3, "thei": [3, 4, 9, 12, 14, 25, 28, 29, 34, 39, 40, 41, 42, 46, 47, 52, 53, 54, 59, 61, 62, 65, 66, 71, 72, 76, 77, 78, 79, 81, 83, 84, 89, 91, 93, 94, 98, 99, 100, 105, 114, 115, 119, 121, 122, 134, 143, 148, 149, 150, 154, 155, 156, 158, 159, 161, 164, 168, 169, 178, 182, 187, 195, 197, 201, 207, 208, 212, 215, 216, 217, 220, 226, 228, 230, 239, 243, 244, 245, 252, 264, 274, 279, 280, 281, 285, 286, 287, 289, 291, 293, 300, 301, 314, 319, 327, 329, 333, 339, 340, 344, 347, 348, 349, 352, 358, 360, 362, 365, 371, 372, 374, 375, 376, 382, 383, 385, 386, 387, 389, 391, 392], "definit": [3, 25, 52, 61, 65, 76, 81, 87, 89, 91, 102, 104, 128, 131, 134, 149, 150, 165, 178, 181, 193, 220, 230, 239, 252, 258, 261, 264, 280, 281, 297, 313, 340, 352, 362, 372, 374, 376, 383, 384, 386, 387, 391, 392], "incomplet": [3, 36, 40, 71, 148, 239, 243, 252, 279, 374], "sdk_root": 3, "xcrun": [3, 244], "macosx": [3, 243, 244], "got": [3, 14, 47, 49, 81, 155, 286, 387], "habit": 3, "gcc": [3, 7, 52, 76, 239, 243], "stdio": [3, 210, 342], "inithoc": 3, "plu": [3, 9, 10, 11, 14, 31, 46, 52, 71, 76, 91, 102, 131, 148, 161, 190, 252, 261, 279, 293, 322, 391], "hard": [3, 42, 82, 84, 94, 98, 119, 122, 239, 368, 382, 388], "anyth": [3, 4, 7, 10, 11, 34, 43, 46, 61, 76, 82, 87, 91, 155, 164, 168, 194, 197, 208, 226, 228, 236, 279, 286, 300, 326, 329, 340, 358, 360, 365, 386, 392], "result": [3, 4, 5, 10, 11, 16, 17, 18, 24, 25, 27, 29, 31, 40, 42, 46, 47, 49, 51, 71, 76, 81, 86, 88, 89, 91, 94, 95, 96, 97, 98, 110, 114, 115, 119, 121, 122, 125, 126, 128, 129, 131, 148, 149, 150, 155, 156, 158, 159, 160, 161, 166, 186, 191, 193, 196, 197, 201, 204, 211, 215, 217, 222, 226, 240, 243, 244, 245, 252, 255, 256, 258, 259, 261, 265, 279, 280, 281, 286, 287, 289, 290, 291, 292, 293, 298, 306, 318, 323, 325, 328, 329, 333, 336, 343, 347, 349, 354, 358, 374, 382, 387, 390, 397], "These": [3, 4, 7, 8, 10, 11, 25, 26, 29, 40, 52, 54, 60, 61, 66, 76, 84, 86, 88, 93, 95, 100, 101, 102, 109, 111, 121, 122, 125, 129, 146, 149, 150, 158, 164, 165, 169, 181, 186, 191, 197, 207, 208, 216, 217, 220, 224, 226, 227, 228, 243, 244, 245, 247, 255, 259, 277, 280, 281, 286, 289, 290, 297, 301, 313, 318, 319, 323, 329, 331, 339, 340, 348, 349, 352, 356, 359, 360, 362, 371, 374, 377, 381, 382, 389, 392, 397], "situ": [3, 193, 252, 325], "tree": [3, 4, 10, 11, 27, 29, 33, 43, 47, 52, 61, 63, 77, 81, 84, 89, 91, 99, 100, 121, 146, 151, 155, 161, 217, 220, 239, 252, 277, 281, 282, 286, 292, 293, 340, 349, 352], "accident": [3, 105, 139, 270], "logic": [3, 28, 76, 155, 159, 161, 181, 195, 207, 217, 222, 252, 286, 291, 293, 313, 327, 339, 349, 354, 381, 382, 389], "discard": [3, 52, 62, 148, 155, 160, 218, 228, 279, 286, 329, 350, 360, 382], "shorthand": 3, "sensibl": [3, 150, 281], "impli": [3, 12, 114, 115, 131, 155, 197, 217, 245, 252, 261, 286, 329, 349, 371], "too": [3, 29, 31, 37, 52, 54, 73, 76, 80, 82, 84, 91, 104, 114, 115, 120, 121, 122, 134, 155, 156, 161, 174, 182, 197, 207, 217, 218, 226, 228, 230, 232, 239, 264, 280, 286, 287, 293, 306, 314, 329, 339, 349, 350, 358, 360, 362, 364, 387], "dnrn_enable_docs_with_external_instal": 3, "assum": [3, 4, 10, 11, 29, 33, 53, 59, 61, 69, 71, 76, 90, 91, 117, 122, 131, 144, 149, 150, 153, 154, 155, 156, 161, 168, 181, 184, 196, 197, 200, 204, 222, 226, 233, 235, 261, 275, 280, 281, 284, 285, 286, 287, 289, 293, 300, 313, 316, 328, 329, 332, 336, 337, 349, 354, 358, 365, 367, 371, 374, 387, 388, 392], "unlik": [3, 40, 75, 84, 89, 114, 115, 149, 158, 280, 289, 294, 382, 392, 397], "tune": [3, 121, 239, 252, 382], "thing": [3, 16, 25, 27, 28, 29, 32, 37, 38, 39, 41, 51, 52, 54, 60, 61, 62, 71, 75, 76, 78, 81, 89, 91, 93, 103, 110, 114, 115, 124, 131, 155, 156, 158, 164, 168, 178, 197, 201, 208, 211, 217, 220, 221, 228, 234, 254, 261, 286, 287, 289, 300, 302, 310, 329, 333, 340, 343, 349, 352, 353, 354, 360, 366, 382, 391], "warn": [3, 14, 36, 46, 53, 62, 71, 93, 144, 149, 150, 181, 191, 197, 217, 222, 228, 239, 243, 275, 279, 280, 281, 289, 313, 321, 323, 329, 349, 354, 360, 371, 382, 389, 391], "nocmodl": [3, 76, 149, 243, 280], "tool": [3, 9, 12, 14, 26, 29, 30, 31, 32, 36, 37, 38, 40, 44, 45, 46, 53, 59, 60, 65, 75, 77, 78, 82, 83, 84, 87, 95, 98, 100, 103, 106, 107, 109, 114, 118, 119, 120, 121, 124, 126, 127, 128, 129, 135, 137, 139, 145, 156, 169, 172, 206, 207, 214, 217, 218, 226, 227, 228, 231, 236, 239, 241, 243, 244, 251, 252, 254, 256, 257, 258, 259, 266, 268, 270, 276, 287, 301, 304, 338, 339, 346, 349, 350, 358, 359, 360, 363, 374, 378, 382, 383, 386, 391, 392, 396], "cluster": [3, 7, 10, 11, 47, 53, 81, 121, 155, 156, 239, 243, 252, 286, 287], "architectur": [3, 6, 8, 14, 25, 29, 32, 40, 61, 62, 81, 95, 103, 106, 107, 112, 113, 121, 194, 243, 244, 252, 326, 382, 388], "login": [3, 53, 153, 155, 243, 245, 284, 286], "node": [3, 12, 33, 53, 61, 71, 84, 134, 141, 146, 148, 149, 151, 153, 155, 163, 200, 217, 220, 234, 243, 245, 252, 264, 272, 277, 279, 280, 282, 284, 286, 293, 295, 332, 349, 352, 354, 366, 372, 373, 375, 378, 380, 389], "append": [3, 13, 16, 17, 18, 21, 22, 28, 29, 58, 67, 122, 128, 129, 148, 150, 154, 155, 156, 158, 161, 162, 164, 169, 184, 186, 197, 208, 217, 220, 226, 233, 234, 247, 258, 259, 279, 281, 285, 286, 287, 289, 292, 293, 294, 301, 311, 316, 318, 319, 320, 329, 330, 331, 340, 349, 352, 358, 365, 366, 382, 387, 388, 389, 391], "knl": [3, 243], "skylak": 3, "dcmake_cxx_flag": [3, 7, 238, 239, 243], "xmic": [3, 243], "avx512": [3, 243], "dnrn_nmodl_cxx_flag": [3, 243], "xhost": [3, 243], "give": [3, 12, 28, 29, 35, 36, 62, 65, 71, 74, 94, 95, 114, 115, 122, 148, 149, 155, 156, 159, 161, 164, 170, 172, 174, 191, 196, 197, 208, 217, 220, 222, 226, 228, 231, 239, 245, 252, 279, 280, 286, 287, 289, 291, 293, 302, 304, 306, 323, 328, 329, 340, 349, 352, 354, 358, 360, 363, 378, 382, 386, 391, 392], "arch": [3, 243, 244, 345], "pgi": [3, 7], "newer": [3, 7, 150, 243, 245, 249, 281, 392], "dreadline_librari": 3, "gnu": [3, 76, 122, 196, 213, 239, 328, 345, 378], "libreadlin": [3, 378], "catch2": 3, "catchorg": 3, "pytest": 3, "ters": [3, 155, 286], "verbos": [3, 133, 263, 286], "seen": [3, 33, 50, 52, 54, 76, 91, 103, 121, 164, 252, 310, 386, 392], "vv": [3, 238, 239], "name_of_the_test": 3, "testfil": 3, "termin": [3, 13, 14, 16, 30, 31, 33, 35, 36, 43, 46, 47, 48, 54, 61, 63, 71, 76, 81, 117, 124, 154, 161, 176, 180, 183, 185, 197, 213, 228, 239, 243, 244, 252, 254, 293, 308, 312, 315, 317, 329, 345, 358, 360, 388, 389, 396, 397], "ensur": [3, 7, 24, 25, 38, 43, 61, 63, 91, 111, 148, 149, 150, 161, 162, 185, 230, 238, 241, 243, 252, 279, 280, 281, 293, 294, 316, 317, 350, 362, 382, 383, 386, 392], "last": [3, 13, 16, 17, 18, 28, 29, 32, 36, 46, 47, 51, 52, 61, 65, 68, 76, 89, 91, 114, 115, 118, 122, 131, 148, 149, 154, 155, 156, 158, 160, 161, 163, 164, 168, 174, 178, 181, 182, 184, 185, 193, 196, 197, 201, 203, 206, 207, 208, 211, 213, 217, 218, 222, 224, 226, 228, 231, 234, 243, 244, 245, 247, 252, 261, 279, 280, 285, 286, 287, 289, 292, 293, 296, 300, 306, 310, 313, 314, 316, 317, 325, 328, 329, 333, 335, 338, 339, 342, 343, 345, 349, 350, 354, 356, 358, 360, 363, 365, 366, 368, 372, 373, 377, 382, 386, 387, 388, 389, 391, 392, 397], "mention": [3, 4, 13, 36, 52, 63, 85, 99, 121, 243, 245, 374, 382, 383, 392], "dnrn_enable_python_dynam": [3, 244, 246], "parallel_test": 3, "pynrn": 3, "test_curr": 3, "lcov": [3, 238], "apt": [3, 238, 241, 243], "simplifi": [3, 14, 29, 43, 61, 71, 91, 103, 121, 154, 158, 217, 240, 252, 285, 289, 349, 382, 392, 396], "repeat": [3, 14, 31, 39, 45, 46, 47, 75, 79, 81, 89, 91, 95, 122, 155, 159, 178, 208, 217, 231, 236, 286, 291, 310, 340, 349, 363], "examin": [3, 10, 11, 14, 25, 40, 45, 47, 49, 50, 71, 77, 78, 81, 88, 89, 91, 104, 109, 114, 122, 139, 155, 156, 224, 236, 270, 286, 287, 356, 374, 397], "cover_begin": [3, 238], "eras": [3, 29, 146, 155, 185, 194, 196, 197, 225, 226, 230, 232, 234, 277, 286, 308, 317, 326, 328, 329, 357, 358, 362, 364, 366], "data": [3, 4, 10, 11, 13, 14, 16, 17, 18, 19, 26, 38, 49, 52, 53, 58, 62, 63, 73, 76, 82, 84, 88, 90, 94, 121, 122, 124, 128, 129, 133, 141, 148, 149, 150, 155, 156, 158, 160, 184, 197, 202, 217, 222, 224, 226, 228, 238, 239, 250, 251, 252, 254, 258, 259, 263, 272, 279, 280, 281, 286, 287, 289, 292, 316, 319, 320, 329, 334, 339, 349, 354, 356, 358, 360, 365, 374, 379, 382, 386, 387, 389, 391, 392, 395, 397], "gcda": 3, "baselin": [3, 10, 11, 91, 238, 376], "cmake_binary_dir": 3, "ran": [3, 10, 11, 252], "cover_html": [3, 238], "sum": [3, 9, 28, 89, 102, 128, 148, 149, 155, 158, 161, 168, 197, 201, 217, 252, 258, 279, 280, 286, 289, 293, 300, 329, 330, 333, 349, 371, 376], "url": [3, 201, 245, 333], "past": [3, 17, 36, 65, 89, 91, 145, 154, 155, 208, 227, 239, 244, 276, 285, 286, 359], "browser": [3, 10, 11, 12, 14, 42, 47, 71, 75, 81, 84, 91, 118, 124, 129, 139, 169, 173, 184, 224, 231, 235, 238, 254, 259, 270, 301, 305, 311, 316, 356, 363, 367, 378], "review": [3, 61, 83, 95, 131, 245, 251, 252, 261, 384], "combin": [3, 52, 54, 59, 71, 76, 84, 95, 103, 121, 148, 156, 166, 181, 196, 197, 199, 220, 224, 228, 238, 239, 243, 252, 279, 287, 289, 292, 298, 310, 313, 314, 328, 329, 331, 352, 356, 360, 379, 389, 391, 392], "explain": [3, 8, 25, 32, 42, 53, 71, 98, 119, 122, 244, 252, 382], "limit": [3, 4, 33, 39, 40, 41, 51, 71, 76, 89, 91, 124, 129, 131, 148, 150, 154, 155, 156, 158, 159, 170, 178, 184, 208, 213, 215, 217, 218, 220, 226, 227, 230, 249, 252, 254, 259, 261, 279, 281, 285, 286, 287, 290, 291, 295, 302, 316, 331, 340, 345, 347, 349, 350, 352, 358, 359, 362, 371, 375, 378, 392], "project_source_dir": 3, "dnrn_coverage_fil": [3, 238], "partran": [3, 238], "parsact": [3, 238], "nrnpython": [3, 8, 54, 158, 208, 213, 238, 340, 345, 353, 356, 392], "nrnpy_hoc": [3, 54, 238], "addresssanit": [3, 239], "leaksanit": [3, 239], "undefinedbehaviorsanit": [3, 239], "accept": [3, 31, 54, 61, 75, 78, 89, 91, 94, 98, 102, 103, 118, 119, 124, 129, 155, 167, 168, 169, 173, 174, 184, 187, 197, 207, 217, 228, 243, 244, 254, 259, 286, 289, 299, 300, 305, 306, 316, 319, 329, 339, 349, 360, 373, 382], "comma": [3, 28, 76, 201, 202, 333, 334, 391, 392], "address": [3, 4, 71, 121, 150, 155, 170, 178, 181, 182, 184, 193, 197, 201, 208, 217, 226, 239, 252, 281, 286, 313, 316, 333, 340, 349, 358, 371, 382, 383, 392], "leak": [3, 61, 197, 239, 252, 329, 371, 376, 386, 387, 388, 392], "undefin": [3, 65, 76, 164, 227, 239, 243, 245, 359], "diagnosi": [3, 240], "inform": [3, 4, 7, 10, 11, 12, 14, 25, 36, 39, 40, 42, 46, 49, 52, 53, 61, 62, 65, 71, 74, 76, 77, 81, 84, 91, 98, 103, 119, 121, 122, 128, 137, 149, 150, 151, 154, 155, 158, 160, 161, 165, 185, 196, 197, 202, 207, 208, 213, 217, 222, 224, 226, 228, 231, 238, 239, 243, 244, 252, 258, 268, 279, 280, 281, 282, 285, 286, 289, 290, 292, 293, 297, 299, 317, 328, 329, 331, 334, 339, 340, 345, 349, 354, 356, 358, 360, 363, 385, 386, 391, 392], "observ": [3, 10, 11, 25, 29, 32, 39, 45, 91, 97, 201, 232, 234, 252, 333, 364, 366, 371], "subclass": [3, 158, 208, 289, 340, 391], "discreteev": 3, "space": [3, 14, 24, 25, 27, 28, 29, 30, 33, 36, 37, 45, 46, 47, 52, 61, 62, 63, 65, 74, 76, 99, 116, 121, 124, 128, 141, 143, 148, 161, 165, 168, 176, 187, 197, 207, 211, 213, 224, 226, 228, 231, 232, 233, 244, 252, 254, 258, 272, 274, 279, 293, 297, 300, 308, 319, 329, 339, 343, 345, 347, 356, 358, 360, 363, 364, 365, 368, 371, 373, 374, 378, 382, 383, 391, 392], "lot": [3, 14, 27, 46, 60, 61, 71, 91, 114, 115, 128, 149, 155, 156, 161, 258, 280, 287, 293, 382, 386], "destruct": [3, 42, 54, 98, 119, 197, 217, 329], "notifi": [3, 44, 81, 129, 146, 148, 154, 155, 169, 193, 197, 217, 226, 230, 259, 277, 279, 285, 286, 301, 329, 349, 358, 362, 375], "watch": [3, 24, 37, 40, 71, 77, 89, 143, 147, 154, 155, 220, 237, 239, 247, 274, 278, 285, 286, 352], "piec": [3, 33, 35, 36, 41, 45, 61, 71, 76, 155, 156, 193, 228, 286, 287, 325, 360, 386, 389, 392], "faradai": [3, 28, 52, 76, 114, 115, 149, 189, 247, 265, 280, 321, 352, 392], "etc": [3, 4, 8, 14, 16, 29, 32, 41, 42, 45, 46, 59, 60, 61, 76, 77, 78, 80, 82, 89, 91, 98, 107, 109, 114, 115, 119, 121, 129, 141, 144, 145, 149, 150, 155, 159, 164, 178, 193, 194, 197, 200, 208, 211, 217, 220, 224, 226, 228, 230, 232, 233, 239, 243, 247, 259, 272, 275, 276, 280, 281, 286, 291, 296, 310, 325, 326, 329, 332, 340, 343, 349, 352, 356, 358, 360, 362, 364, 365, 371, 372, 373, 374, 376, 382, 383, 385, 386, 387, 391, 392, 397], "nist": [3, 149, 280], "constant": [3, 9, 12, 24, 25, 31, 32, 37, 41, 52, 59, 61, 71, 76, 84, 90, 91, 95, 102, 104, 114, 115, 118, 120, 121, 124, 128, 129, 140, 148, 150, 155, 158, 159, 160, 171, 193, 197, 198, 220, 224, 226, 228, 235, 248, 252, 254, 258, 259, 265, 271, 279, 281, 289, 291, 292, 303, 325, 329, 330, 331, 352, 356, 358, 360, 367, 370, 371, 373, 374, 376, 378, 387], "absenc": [3, 75, 114, 115, 155, 208, 226, 252, 286, 340, 358], "nrnunit_use_legaci": [3, 149, 280, 321, 352, 392], "0or1": [3, 160, 165, 168, 169, 178, 213, 217, 297, 300, 301, 345], "At": [3, 8, 9, 14, 25, 27, 31, 32, 33, 37, 40, 45, 46, 47, 52, 61, 71, 72, 81, 88, 89, 91, 95, 96, 102, 110, 114, 115, 118, 124, 142, 143, 148, 149, 150, 155, 156, 170, 175, 178, 193, 194, 196, 197, 205, 207, 208, 214, 220, 227, 231, 244, 254, 273, 274, 279, 280, 281, 286, 287, 307, 325, 326, 328, 329, 337, 339, 346, 352, 359, 363, 382, 383], "nrnmech": [3, 48, 76, 224, 356], "pthread": [3, 155, 286, 378], "float": [3, 28, 52, 54, 65, 76, 86, 166, 181, 192, 194, 195, 197, 210, 228, 239, 286, 289, 293, 295, 298, 313, 324, 325, 326, 327, 328, 329, 342, 360, 364, 391, 392], "bu": [3, 53, 166, 298], "view": [3, 10, 18, 24, 25, 27, 29, 31, 32, 41, 47, 50, 65, 67, 68, 71, 73, 81, 84, 100, 107, 118, 122, 128, 146, 154, 155, 161, 197, 224, 226, 227, 228, 231, 232, 234, 237, 238, 252, 258, 277, 286, 293, 356, 358, 359, 363, 364, 365, 366, 382], "nrn_feenableexcept": [3, 166, 298, 392], "transpar": [4, 6, 184, 193, 243, 316, 325], "handl": [4, 9, 13, 29, 52, 54, 65, 68, 71, 81, 131, 135, 141, 144, 148, 149, 150, 154, 156, 159, 200, 207, 208, 217, 218, 226, 243, 250, 252, 261, 266, 272, 275, 279, 280, 281, 285, 287, 291, 301, 310, 314, 329, 332, 339, 340, 349, 350, 358, 382, 387, 391, 392], "spike": [4, 5, 8, 9, 10, 11, 13, 16, 17, 18, 28, 32, 37, 51, 53, 61, 69, 70, 75, 77, 78, 82, 83, 90, 109, 111, 112, 113, 121, 148, 154, 155, 156, 196, 197, 216, 217, 239, 243, 247, 251, 252, 279, 285, 286, 287, 328, 329, 348, 349, 376, 387, 388, 390, 395, 397], "network": [4, 5, 6, 9, 21, 22, 26, 35, 36, 40, 42, 45, 47, 51, 61, 71, 74, 78, 82, 94, 95, 96, 97, 102, 103, 105, 109, 111, 112, 137, 141, 151, 154, 156, 169, 196, 200, 222, 224, 237, 243, 248, 251, 252, 268, 272, 279, 282, 285, 287, 301, 328, 332, 354, 356, 386, 389, 390, 392, 395], "gap": [4, 33, 38, 65, 121, 131, 155, 161, 239, 243, 252, 261, 286, 293], "junction": [4, 33, 38, 121, 131, 155, 161, 243, 252, 261, 286, 293], "coupl": [4, 11, 25, 46, 51, 61, 75, 87, 102, 103, 131, 146, 148, 149, 150, 155, 243, 252, 261, 277, 279, 280, 281, 286, 391], "fix": [4, 24, 32, 33, 36, 38, 39, 44, 46, 59, 65, 76, 82, 91, 93, 102, 103, 121, 126, 131, 148, 154, 155, 158, 159, 168, 178, 197, 205, 217, 220, 226, 228, 231, 239, 243, 246, 252, 256, 261, 279, 281, 285, 286, 289, 291, 300, 310, 328, 329, 337, 349, 352, 358, 360, 363, 370, 374, 382, 383, 385, 386, 397], "summaris": 4, "present": [4, 13, 27, 33, 41, 42, 47, 61, 76, 81, 84, 88, 89, 91, 93, 95, 98, 100, 101, 119, 121, 124, 129, 131, 132, 133, 139, 142, 146, 148, 150, 151, 154, 155, 156, 158, 160, 161, 162, 165, 169, 173, 184, 193, 194, 196, 197, 199, 208, 213, 217, 220, 224, 226, 228, 233, 243, 244, 252, 254, 259, 261, 262, 263, 270, 273, 277, 279, 281, 282, 285, 286, 287, 289, 290, 292, 293, 294, 297, 301, 305, 316, 325, 326, 328, 329, 331, 340, 345, 349, 352, 356, 358, 360, 365, 371, 372, 374, 382, 386, 396, 397], "remark": 4, "ida": [4, 121, 146, 155, 217, 277, 286, 349], "i_membran": [4, 148, 217, 279, 349, 392], "sole": [4, 61, 74, 207, 339, 362, 382, 386], "use_fast_imem": [4, 148, 217, 279, 349], "i_membrane_": [4, 148, 217, 279, 349, 392], "linear": [4, 26, 27, 38, 39, 89, 91, 100, 121, 131, 146, 148, 155, 190, 193, 194, 196, 197, 217, 248, 252, 261, 277, 279, 286, 322, 325, 326, 328, 329, 349, 382], "per": [4, 41, 53, 59, 66, 67, 76, 87, 89, 128, 129, 144, 149, 150, 154, 155, 158, 170, 187, 193, 194, 197, 216, 217, 221, 226, 245, 252, 258, 259, 275, 280, 281, 285, 286, 289, 302, 319, 325, 326, 329, 331, 348, 349, 353, 374, 375, 376, 378, 382, 383], "timestep": [4, 39, 148, 155, 197, 222, 239, 279, 286, 329, 354, 378], "calcul": [4, 13, 16, 17, 18, 25, 29, 30, 41, 52, 76, 81, 82, 84, 88, 89, 91, 125, 126, 127, 128, 129, 131, 132, 133, 134, 144, 149, 150, 154, 155, 161, 192, 197, 217, 224, 226, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 275, 280, 281, 286, 289, 293, 324, 329, 349, 356, 358, 386, 391], "vector": [4, 8, 13, 16, 17, 18, 38, 51, 52, 54, 59, 67, 76, 82, 89, 91, 93, 95, 122, 129, 131, 133, 134, 135, 145, 146, 148, 149, 150, 154, 155, 156, 158, 184, 191, 193, 194, 195, 196, 198, 200, 201, 202, 205, 206, 208, 216, 217, 218, 220, 222, 226, 228, 230, 232, 233, 247, 250, 259, 261, 263, 264, 266, 276, 277, 279, 280, 281, 285, 286, 287, 289, 293, 314, 316, 323, 325, 326, 327, 328, 330, 332, 333, 334, 337, 338, 340, 343, 347, 348, 349, 350, 352, 354, 358, 360, 362, 364, 365, 370, 371, 375, 376, 377, 378, 380, 381, 386, 387, 388, 389, 391, 392], "record": [4, 5, 8, 13, 16, 17, 18, 25, 29, 33, 38, 49, 51, 59, 64, 72, 77, 82, 88, 91, 95, 125, 128, 129, 131, 146, 148, 154, 155, 156, 158, 197, 208, 216, 217, 218, 220, 237, 239, 247, 250, 252, 255, 258, 259, 261, 277, 279, 281, 283, 285, 286, 287, 289, 329, 330, 340, 347, 348, 349, 350, 352, 370, 377, 380, 381, 388, 389, 397], "plai": [4, 28, 58, 59, 82, 129, 148, 149, 194, 196, 197, 207, 208, 216, 217, 218, 220, 222, 239, 252, 259, 279, 280, 326, 328, 329, 330, 339, 340, 348, 349, 350, 352, 354, 371, 374], "ok": [4, 61, 89, 91, 95, 155, 159, 244, 286, 291, 373, 382, 383], "displai": [4, 10, 11, 13, 14, 18, 25, 28, 38, 42, 54, 58, 62, 65, 71, 75, 81, 82, 89, 91, 94, 95, 100, 102, 114, 118, 125, 128, 129, 139, 140, 142, 149, 169, 174, 175, 176, 178, 197, 201, 207, 221, 226, 228, 232, 234, 235, 243, 247, 250, 252, 255, 258, 259, 270, 271, 273, 280, 292, 301, 306, 307, 308, 310, 314, 329, 331, 333, 337, 339, 349, 350, 353, 358, 360, 364, 366, 367, 370, 375, 378, 386, 387, 389, 392, 397], "trajectori": [4, 8, 29, 39, 75, 89, 91, 156, 252, 286, 287, 370], "callback": [4, 146, 159, 205, 226, 277, 291, 331, 337, 349, 358], "improv": [4, 89, 91, 128, 149, 156, 197, 228, 243, 252, 258, 280, 287, 329, 360, 382, 383], "feel": [4, 135, 176, 243, 266, 308, 375], "free": [4, 52, 71, 76, 89, 93, 121, 122, 155, 197, 217, 239, 243, 252, 279, 286, 289, 329, 349, 374, 375, 377, 378, 394, 397], "feedback": [4, 121, 252, 382], "dir": [4, 148, 184, 200, 208, 243, 279, 314, 315, 316, 332, 340, 343, 386], "fine": [4, 30, 40, 47, 61, 62, 81, 91, 104, 197, 252, 329, 391], "incompat": [4, 8, 82, 122, 148, 150, 222, 249, 279, 281, 354, 382], "instanc": [4, 13, 16, 28, 32, 33, 36, 37, 38, 42, 53, 54, 61, 95, 98, 112, 114, 115, 118, 119, 123, 129, 131, 139, 143, 148, 149, 150, 154, 155, 159, 160, 161, 168, 169, 170, 178, 182, 196, 197, 199, 201, 202, 208, 216, 217, 218, 224, 226, 228, 232, 234, 253, 259, 261, 270, 274, 279, 280, 281, 285, 286, 289, 291, 292, 293, 300, 301, 302, 310, 314, 316, 328, 329, 331, 333, 334, 340, 348, 349, 350, 356, 358, 360, 364, 366, 371, 382, 383, 388, 391, 392], "synaps": [4, 22, 25, 29, 38, 70, 71, 75, 83, 90, 97, 103, 109, 110, 112, 121, 148, 149, 150, 151, 154, 155, 156, 169, 196, 201, 216, 224, 251, 252, 279, 280, 281, 282, 285, 286, 287, 289, 301, 328, 333, 348, 356, 376, 388, 389, 390, 395, 397], "simd": [4, 150, 281], "instruct": [4, 5, 6, 10, 11, 32, 37, 42, 52, 61, 75, 77, 98, 100, 106, 107, 119, 121, 129, 197, 220, 237, 239, 240, 243, 245, 252, 259, 329, 352, 389], "cpu": [4, 6, 7, 53, 150, 153, 155, 156, 197, 208, 239, 245, 252, 279, 281, 284, 286, 287, 329], "certain": [4, 6, 45, 59, 114, 158, 202, 223, 228, 233, 239, 243, 289, 290, 334, 355, 360, 365, 371, 373, 381, 382, 392], "mkthreadsaf": [4, 36], "addit": [4, 8, 10, 11, 41, 52, 59, 65, 71, 76, 84, 114, 115, 121, 145, 150, 154, 155, 156, 159, 161, 181, 196, 197, 199, 207, 217, 220, 238, 239, 245, 252, 276, 281, 285, 286, 287, 289, 291, 293, 313, 328, 329, 331, 339, 349, 352, 358, 365, 371, 375, 376, 378, 382, 386, 387, 392], "breakpoint": [4, 38, 52, 64, 72, 114, 115, 131, 143, 148, 150, 155, 197, 217, 220, 248, 261, 274, 279, 281, 286, 329, 349, 352, 376, 378], "deriv": [4, 28, 39, 76, 88, 102, 131, 146, 148, 158, 197, 213, 217, 248, 252, 261, 277, 279, 289, 321, 329, 330, 345, 349, 371, 376], "writen": 4, "defin": [4, 7, 13, 14, 25, 27, 29, 33, 37, 39, 42, 52, 53, 54, 60, 61, 62, 65, 69, 70, 71, 76, 81, 83, 93, 98, 104, 105, 112, 113, 114, 115, 119, 121, 125, 129, 131, 134, 139, 141, 143, 145, 146, 148, 150, 154, 155, 156, 159, 160, 164, 165, 168, 169, 170, 171, 178, 181, 182, 188, 190, 192, 196, 197, 200, 201, 202, 207, 208, 214, 217, 222, 224, 226, 227, 228, 230, 234, 248, 249, 252, 255, 259, 261, 264, 270, 272, 274, 276, 277, 279, 281, 285, 286, 287, 290, 291, 292, 297, 300, 301, 302, 303, 310, 313, 314, 320, 322, 324, 328, 329, 332, 333, 334, 339, 340, 346, 347, 349, 350, 354, 356, 358, 359, 360, 362, 365, 366, 370, 371, 372, 373, 374, 376, 378, 382, 383, 390, 391, 392, 397], "As": [4, 7, 8, 28, 29, 51, 52, 59, 65, 76, 93, 95, 99, 100, 105, 121, 149, 150, 151, 155, 168, 184, 193, 196, 197, 224, 239, 243, 245, 246, 250, 252, 265, 280, 281, 282, 286, 293, 300, 310, 316, 321, 325, 328, 331, 344, 356, 371, 373, 374, 375, 376, 382, 383, 386, 387, 388, 392], "minf": [4, 131, 217, 261, 349, 376], "procedur": [4, 13, 32, 36, 46, 52, 81, 82, 91, 93, 95, 114, 115, 118, 121, 129, 143, 150, 154, 155, 156, 160, 163, 164, 168, 181, 185, 188, 197, 200, 201, 202, 208, 217, 220, 221, 224, 226, 227, 230, 248, 249, 252, 259, 274, 281, 285, 286, 287, 300, 313, 317, 320, 327, 329, 332, 333, 334, 340, 349, 352, 353, 356, 358, 359, 362, 376], "suffix": [4, 36, 42, 76, 98, 114, 115, 119, 143, 147, 148, 149, 155, 199, 208, 216, 228, 248, 274, 279, 280, 286, 331, 340, 348, 360, 376, 378, 382, 383], "mv": [4, 10, 11, 16, 17, 18, 25, 31, 33, 37, 43, 44, 47, 58, 61, 62, 63, 71, 91, 95, 103, 104, 114, 115, 125, 131, 132, 146, 148, 149, 154, 200, 220, 247, 255, 261, 262, 277, 279, 280, 285, 332, 352, 354, 370, 372, 373, 375, 376, 381, 386, 387, 388, 389, 392], "across": [4, 7, 14, 41, 61, 93, 121, 122, 148, 149, 156, 158, 161, 164, 252, 279, 280, 287, 289, 293, 296, 350, 371, 374, 389, 392], "race": [4, 150, 155, 159, 197, 239, 281, 286, 291, 329], "condit": [4, 6, 24, 31, 36, 39, 41, 59, 146, 148, 149, 150, 155, 159, 197, 201, 217, 247, 252, 277, 279, 280, 281, 286, 289, 291, 329, 333, 349, 370, 371, 372, 373, 374, 375, 391], "simpli": [4, 7, 13, 39, 45, 53, 61, 65, 81, 91, 93, 161, 174, 181, 186, 201, 243, 289, 293, 306, 313, 318, 329, 333, 340, 371, 382, 386, 391, 392], "access": [4, 8, 15, 21, 22, 25, 28, 29, 54, 55, 59, 64, 72, 74, 76, 83, 84, 93, 95, 121, 125, 131, 132, 135, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 168, 171, 173, 174, 180, 183, 193, 196, 197, 199, 200, 201, 203, 207, 217, 220, 224, 226, 228, 232, 233, 234, 243, 245, 252, 255, 261, 266, 274, 279, 280, 281, 282, 284, 285, 286, 292, 293, 295, 296, 300, 306, 310, 312, 315, 328, 329, 331, 332, 333, 334, 335, 339, 345, 349, 356, 358, 360, 366, 371, 374, 378, 391, 394, 396, 397], "syntax": [4, 93, 114, 115, 121, 129, 131, 132, 133, 135, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 259, 261, 262, 263, 266, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 355, 357, 358, 360, 361, 362, 364, 365, 366, 386, 391, 392], "accordingli": [4, 52, 61, 197, 243, 329, 382, 383], "overcom": [4, 12, 84, 161, 252, 293, 295], "languag": [4, 26, 28, 52, 71, 76, 78, 86, 93, 114, 115, 121, 135, 141, 143, 147, 150, 181, 200, 248, 249, 251, 252, 266, 272, 274, 278, 281, 313, 332, 374, 382, 391, 392], "treat": [4, 52, 54, 71, 76, 89, 91, 124, 128, 143, 144, 148, 149, 150, 155, 158, 161, 178, 181, 186, 189, 195, 208, 233, 252, 254, 258, 274, 275, 279, 280, 281, 286, 289, 293, 295, 310, 313, 318, 321, 327], "header": [4, 52, 93, 94, 172, 223, 228, 239, 245, 304, 355, 360, 373, 382, 392], "earli": [4, 77, 78, 98, 119, 121, 155, 239, 252, 286, 382, 383], "endverbatim": [4, 36, 93, 149, 150, 216, 247, 249, 280, 281, 348], "0": [4, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 109, 111, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 239, 241, 243, 244, 245, 247, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 273, 274, 275, 277, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 313, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 391, 392], "But": [4, 10, 11, 13, 25, 27, 30, 33, 45, 46, 47, 61, 71, 75, 81, 89, 90, 91, 95, 99, 114, 115, 129, 131, 154, 155, 156, 159, 161, 193, 197, 238, 243, 259, 261, 281, 285, 286, 287, 291, 293, 325, 329, 382], "henc": [4, 150, 155, 194, 210, 233, 238, 281, 286, 326, 342], "keywork": 4, "safer": [4, 195, 285, 327], "solv": [4, 36, 39, 76, 131, 143, 146, 148, 149, 150, 155, 156, 193, 197, 198, 201, 207, 217, 220, 222, 230, 248, 252, 261, 274, 277, 279, 280, 281, 286, 287, 325, 329, 330, 333, 339, 349, 352, 354, 362, 374, 376, 382, 392, 397], "euler": [4, 36, 39, 76, 121, 149, 155, 161, 189, 197, 220, 247, 252, 280, 286, 293, 321, 329, 352, 397], "best": [4, 7, 12, 25, 36, 37, 38, 47, 59, 61, 62, 72, 76, 81, 82, 98, 119, 121, 124, 129, 133, 142, 148, 155, 156, 161, 164, 197, 217, 218, 220, 224, 226, 230, 252, 254, 259, 263, 273, 279, 286, 287, 289, 293, 329, 337, 340, 349, 350, 352, 356, 358, 362, 373, 384, 386], "practic": [4, 32, 36, 40, 42, 59, 61, 98, 119, 122, 129, 149, 154, 159, 164, 230, 252, 259, 280, 281, 285, 290, 291, 318, 328, 362, 373, 383, 384, 386, 387, 392], "cnexp": [4, 36, 148, 217, 279, 349, 376], "equat": [4, 12, 36, 39, 76, 89, 114, 115, 121, 131, 144, 146, 148, 149, 150, 155, 158, 190, 197, 201, 217, 220, 251, 252, 261, 275, 277, 279, 280, 281, 286, 289, 322, 329, 333, 349, 352, 371, 374], "derivimplicit": [4, 36, 149, 280], "other": [4, 14, 25, 27, 29, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 59, 61, 62, 63, 65, 68, 76, 77, 78, 79, 81, 82, 84, 89, 90, 91, 94, 95, 98, 104, 106, 107, 114, 115, 118, 119, 121, 122, 125, 131, 132, 142, 144, 148, 149, 150, 153, 155, 156, 158, 159, 160, 164, 166, 168, 170, 176, 178, 181, 184, 187, 191, 193, 197, 199, 201, 202, 206, 211, 213, 216, 217, 220, 222, 224, 225, 226, 231, 233, 234, 237, 239, 243, 244, 248, 252, 255, 261, 262, 265, 273, 275, 279, 280, 281, 284, 285, 286, 287, 289, 291, 292, 298, 300, 302, 308, 310, 313, 316, 319, 323, 325, 329, 331, 333, 334, 338, 343, 345, 348, 349, 352, 354, 356, 357, 358, 363, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 384, 386, 387, 389, 391, 392, 395, 397], "effici": [4, 6, 8, 9, 36, 54, 61, 71, 76, 83, 89, 128, 131, 146, 148, 149, 150, 154, 155, 159, 162, 164, 165, 178, 193, 194, 196, 197, 205, 208, 215, 216, 217, 224, 228, 232, 233, 234, 237, 251, 252, 258, 261, 277, 279, 280, 281, 285, 286, 289, 291, 293, 297, 310, 325, 326, 328, 329, 337, 340, 347, 348, 349, 356, 360, 364, 365, 366, 386, 389, 391, 392], "accuraci": [4, 61, 91, 121, 131, 149, 155, 156, 210, 217, 252, 261, 280, 286, 287, 342, 349, 395], "comment": [4, 28, 40, 42, 45, 61, 71, 76, 98, 119, 131, 148, 180, 194, 215, 236, 247, 252, 279, 312, 326, 347, 376, 382], "oper": [4, 25, 33, 37, 42, 52, 65, 71, 76, 91, 98, 119, 122, 150, 155, 158, 164, 181, 193, 195, 197, 211, 213, 224, 226, 228, 243, 244, 247, 252, 281, 286, 290, 292, 296, 313, 325, 327, 329, 343, 344, 345, 356, 360, 371, 384, 389, 391, 392], "mtau": [4, 131, 217, 261, 349, 376], "hinf": [4, 131, 261, 376], "htau": [4, 131, 261, 376], "ninf": [4, 36, 289, 376], "ntau": [4, 289, 376], "celsiu": [4, 36, 38, 76, 114, 115, 132, 149, 155, 220, 262, 280, 352, 376, 392], "100": [4, 9, 10, 11, 15, 22, 25, 30, 31, 32, 33, 37, 38, 39, 41, 43, 48, 61, 76, 90, 91, 114, 120, 122, 143, 149, 155, 156, 161, 168, 178, 187, 193, 196, 197, 200, 202, 207, 217, 225, 226, 227, 228, 230, 247, 252, 274, 279, 280, 286, 287, 293, 300, 310, 325, 328, 329, 332, 334, 339, 349, 357, 358, 359, 360, 362, 373, 376, 380, 381, 386, 387, 388, 389, 391, 392], "TO": [4, 149, 150, 239, 248, 280, 281, 376, 382, 383], "WITH": [4, 149, 248, 280, 376, 384], "200": [4, 18, 22, 33, 37, 41, 43, 52, 58, 61, 63, 67, 87, 88, 91, 96, 149, 154, 161, 196, 197, 226, 228, 230, 232, 247, 252, 265, 280, 293, 328, 329, 358, 360, 362, 364, 373, 376, 386, 387, 388], "aspect": [4, 76, 94, 149, 217, 220, 226, 228, 234, 240, 243, 252, 280, 349, 352, 358, 360, 366, 382], "progress": [4, 13, 16, 17, 129, 155, 226, 251, 252, 259, 286, 358], "read": [4, 14, 19, 28, 38, 40, 42, 46, 58, 59, 61, 75, 76, 77, 78, 82, 85, 87, 89, 91, 94, 95, 98, 107, 108, 110, 114, 115, 119, 128, 129, 141, 144, 148, 155, 156, 158, 160, 175, 180, 183, 184, 185, 188, 193, 197, 199, 201, 210, 216, 220, 222, 225, 227, 236, 237, 239, 248, 258, 259, 272, 275, 279, 286, 287, 289, 292, 299, 306, 307, 310, 312, 315, 316, 317, 320, 325, 329, 331, 333, 340, 348, 352, 354, 357, 359, 365, 366, 376, 378, 379, 382, 386, 391, 392, 395], "input": [4, 7, 9, 12, 25, 29, 32, 33, 37, 38, 52, 53, 54, 59, 66, 69, 70, 71, 81, 95, 98, 105, 112, 113, 119, 121, 125, 127, 131, 148, 149, 155, 168, 180, 187, 193, 197, 201, 207, 217, 223, 239, 245, 252, 255, 257, 260, 261, 279, 280, 285, 286, 297, 300, 312, 319, 325, 329, 333, 339, 349, 355, 373, 378, 386, 388, 390, 391], "heavili": [4, 129, 155, 165, 259, 286, 297, 377], "structur": [4, 6, 25, 33, 46, 52, 65, 72, 76, 81, 84, 121, 122, 134, 160, 161, 196, 202, 207, 217, 220, 222, 239, 251, 252, 264, 280, 292, 293, 328, 334, 339, 349, 352, 354, 386, 391, 392], "won": [4, 32, 37, 66, 73, 76, 77, 78, 178, 239, 245, 375, 382, 383], "usabl": [4, 32, 36, 158, 196, 328], "bar": [4, 25, 61, 75, 76, 99, 118, 125, 172, 175, 197, 208, 226, 228, 252, 255, 281, 304, 307, 329, 340, 358, 360], "exclud": [4, 382, 383, 391], "condition": 4, "macro": [4, 54, 93, 149, 150, 249, 252, 280, 281, 382], "nrnbbcore": 4, "ifndef": [4, 150, 249, 281], "endif": [4, 134, 148, 150, 249, 264, 279, 281], "hide": [4, 46, 47, 81, 93, 102, 103, 105, 172, 213, 224, 252, 304, 311, 345, 356, 382], "old": [4, 36, 42, 52, 61, 71, 88, 93, 98, 119, 121, 135, 145, 148, 149, 154, 155, 156, 157, 160, 161, 176, 192, 197, 205, 207, 222, 228, 230, 232, 243, 252, 265, 276, 279, 280, 285, 286, 287, 288, 292, 293, 308, 324, 329, 337, 339, 354, 360, 362, 364, 387, 391], "cai": [4, 144, 149, 150, 158, 222, 247, 252, 275, 280, 281, 289, 354, 371, 374], "_ion_cai": [4, 149, 280], "implicit": [4, 12, 33, 39, 121, 149, 150, 160, 161, 217, 220, 227, 251, 280, 281, 292, 293, 349, 352, 359, 374], "transpil": 4, "pseudo": [4, 95, 198, 330], "varieti": [4, 81, 102, 172, 196, 222, 243, 304, 328, 354], "alloc": [4, 52, 53, 131, 149, 160, 161, 193, 197, 205, 217, 239, 245, 247, 252, 261, 280, 292, 293, 308, 325, 329, 337, 349], "complex": [4, 10, 11, 14, 29, 36, 42, 46, 54, 60, 71, 76, 81, 82, 84, 89, 90, 95, 121, 128, 131, 155, 197, 207, 252, 258, 261, 286, 329, 339, 374, 386, 389], "nativ": [4, 5, 243, 252, 316, 368, 374], "anoth": [4, 5, 10, 11, 13, 24, 28, 32, 36, 37, 38, 42, 47, 49, 51, 52, 65, 71, 75, 76, 81, 85, 87, 89, 91, 94, 95, 96, 98, 101, 105, 114, 115, 119, 121, 122, 131, 139, 144, 149, 150, 151, 154, 155, 156, 158, 159, 161, 168, 169, 171, 178, 181, 184, 185, 187, 193, 197, 199, 201, 206, 217, 220, 226, 228, 230, 231, 239, 243, 247, 261, 270, 275, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 300, 301, 303, 310, 313, 316, 317, 319, 329, 331, 333, 338, 340, 343, 349, 352, 358, 360, 362, 363, 365, 382, 383, 387, 389, 391], "commonli": [4, 135, 155, 196, 197, 217, 239, 266, 286, 328, 329, 349], "hold": [4, 16, 47, 50, 52, 61, 65, 71, 74, 79, 81, 105, 106, 107, 108, 110, 131, 142, 156, 160, 163, 168, 193, 196, 197, 204, 206, 208, 226, 228, 261, 272, 273, 286, 287, 292, 328, 329, 336, 338, 340, 358, 360, 368, 382], "itself": [4, 37, 45, 65, 71, 76, 89, 91, 93, 95, 149, 150, 155, 182, 197, 201, 202, 207, 217, 221, 226, 250, 280, 281, 286, 314, 329, 333, 334, 339, 349, 353, 365, 371, 372, 382, 385, 391, 392], "knowledg": [4, 155, 286, 368], "layout": [4, 6, 75, 80, 106, 107, 108, 110, 179, 311], "size": [4, 16, 17, 18, 19, 28, 29, 37, 42, 47, 52, 61, 65, 67, 68, 71, 73, 81, 89, 94, 98, 114, 115, 119, 121, 122, 131, 133, 146, 149, 154, 155, 156, 158, 168, 170, 172, 181, 186, 193, 194, 196, 197, 199, 201, 202, 205, 208, 216, 217, 223, 226, 228, 230, 232, 233, 234, 239, 252, 261, 265, 277, 280, 285, 286, 287, 289, 300, 302, 304, 311, 313, 318, 325, 326, 328, 329, 330, 331, 333, 334, 337, 340, 348, 349, 355, 358, 360, 362, 364, 365, 366, 374, 378, 387, 392], "furtheremor": 4, "between": [4, 5, 9, 10, 11, 16, 17, 25, 27, 28, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 54, 65, 66, 74, 75, 76, 82, 84, 88, 89, 91, 94, 95, 96, 105, 114, 115, 121, 122, 125, 128, 131, 133, 134, 138, 142, 148, 149, 150, 154, 155, 156, 158, 161, 168, 178, 181, 184, 186, 190, 191, 192, 194, 196, 197, 201, 202, 208, 217, 222, 224, 226, 228, 231, 232, 233, 243, 244, 247, 252, 255, 258, 261, 263, 264, 265, 269, 273, 279, 280, 281, 285, 286, 287, 289, 293, 300, 310, 313, 316, 318, 322, 323, 324, 326, 328, 329, 331, 333, 334, 340, 349, 354, 356, 358, 360, 363, 364, 365, 371, 372, 374, 381, 382, 383, 387, 388, 389, 391, 392], "would": [4, 7, 10, 11, 13, 14, 25, 29, 37, 39, 40, 41, 42, 45, 46, 47, 54, 59, 60, 61, 62, 71, 73, 75, 76, 81, 84, 91, 93, 94, 98, 99, 102, 103, 114, 115, 119, 122, 128, 131, 144, 148, 149, 150, 154, 155, 156, 158, 159, 161, 168, 193, 197, 200, 201, 217, 226, 233, 239, 243, 246, 250, 258, 261, 275, 279, 280, 281, 285, 286, 287, 289, 291, 293, 300, 302, 325, 329, 332, 333, 340, 345, 349, 365, 371, 374, 375, 376, 377, 382, 383, 385, 386, 391, 392], "promin": [4, 121, 131, 261], "stream": [4, 9, 37, 82, 121, 154, 188, 193, 194, 196, 197, 207, 213, 217, 285, 320, 325, 326, 328, 329, 339, 345, 349], "bbcorepoint": [4, 147, 247], "behav": [4, 250, 252, 290, 387], "exactli": [4, 39, 46, 61, 89, 91, 95, 143, 149, 150, 155, 156, 159, 161, 177, 197, 201, 208, 213, 217, 220, 224, 234, 249, 274, 280, 281, 286, 287, 291, 293, 309, 329, 333, 340, 345, 349, 352, 356, 366, 370, 371, 375], "addition": [4, 7, 29, 158, 239, 243, 245, 250, 289, 364, 382, 383], "write": [4, 13, 14, 24, 28, 29, 36, 38, 51, 59, 60, 61, 63, 71, 76, 77, 78, 83, 85, 91, 95, 114, 115, 121, 144, 148, 149, 155, 158, 168, 180, 183, 184, 186, 193, 197, 217, 220, 222, 230, 239, 243, 244, 248, 250, 275, 279, 280, 286, 300, 312, 315, 316, 318, 319, 325, 329, 340, 349, 352, 354, 362, 375, 376, 378, 386, 387, 389, 391, 392], "inde": [4, 40, 53, 150, 281, 382], "serial": [4, 5, 10, 11, 13, 16, 17, 95, 155, 166, 185, 239, 247, 252, 286, 298, 317, 388, 390], "deseri": 4, "void": [4, 52, 54, 239, 247], "doubl": [4, 25, 28, 31, 33, 52, 54, 62, 71, 75, 76, 86, 89, 91, 93, 118, 128, 129, 133, 139, 149, 150, 155, 160, 168, 169, 173, 181, 182, 184, 185, 191, 192, 193, 197, 200, 201, 203, 208, 210, 216, 217, 226, 228, 235, 239, 243, 247, 252, 258, 259, 263, 265, 270, 280, 281, 286, 292, 301, 305, 313, 314, 316, 317, 323, 324, 329, 332, 333, 335, 340, 348, 349, 360, 367, 382, 391, 392], "int": [4, 22, 52, 54, 76, 93, 120, 155, 159, 182, 191, 195, 196, 197, 200, 203, 208, 247, 252, 279, 286, 291, 293, 295, 296, 314, 323, 325, 327, 328, 329, 330, 332, 342, 347, 358, 373, 378, 391, 392], "d": [4, 13, 16, 17, 23, 25, 32, 41, 46, 52, 53, 59, 60, 61, 75, 76, 81, 82, 83, 87, 91, 95, 120, 121, 131, 133, 146, 155, 156, 159, 160, 164, 168, 169, 178, 184, 186, 192, 193, 197, 199, 208, 210, 216, 217, 228, 231, 234, 239, 243, 247, 251, 252, 261, 277, 279, 280, 286, 287, 289, 291, 292, 300, 301, 310, 316, 318, 324, 325, 328, 329, 331, 340, 342, 344, 348, 349, 354, 358, 360, 363, 366, 371, 372, 374, 375, 378, 380, 382, 386, 387, 391], "d_offset": [4, 247], "x_offset": [4, 247], "_threadargsproto_": [4, 247], "referenc": [4, 139, 142, 145, 149, 163, 168, 169, 182, 206, 228, 234, 270, 273, 276, 280, 295, 300, 301, 314, 338, 360, 366, 391], "through": [4, 9, 13, 14, 25, 27, 29, 33, 49, 52, 59, 65, 75, 77, 78, 81, 84, 85, 88, 91, 94, 103, 114, 115, 121, 148, 149, 150, 154, 155, 156, 158, 160, 161, 165, 168, 197, 208, 217, 224, 226, 234, 244, 247, 248, 250, 252, 279, 280, 281, 285, 286, 287, 289, 290, 292, 293, 295, 297, 300, 308, 310, 321, 329, 340, 349, 356, 358, 366, 371, 382, 386, 387, 390, 392, 393, 397], "twice": [4, 36, 121, 146, 149, 155, 160, 196, 200, 217, 220, 226, 251, 277, 280, 286, 292, 328, 329, 332, 349, 352, 358, 397], "sweep": [4, 65, 221, 353, 397], "arrai": [4, 6, 52, 54, 59, 61, 76, 122, 133, 149, 154, 168, 181, 182, 184, 193, 195, 197, 199, 200, 201, 205, 208, 216, 217, 250, 252, 263, 279, 280, 285, 289, 300, 313, 314, 316, 323, 325, 327, 329, 331, 332, 333, 337, 340, 348, 349, 371, 391], "second": [4, 8, 9, 16, 17, 25, 28, 31, 36, 38, 39, 41, 42, 46, 61, 65, 71, 75, 76, 83, 84, 85, 93, 98, 103, 114, 115, 119, 121, 131, 133, 134, 144, 149, 155, 156, 160, 161, 164, 165, 168, 169, 171, 174, 178, 181, 182, 187, 188, 193, 194, 197, 200, 201, 204, 208, 211, 213, 214, 217, 220, 221, 222, 226, 228, 231, 233, 234, 239, 245, 247, 250, 252, 261, 263, 264, 275, 280, 286, 287, 289, 292, 293, 294, 297, 300, 301, 303, 306, 310, 313, 314, 319, 320, 325, 326, 329, 332, 333, 336, 340, 343, 345, 346, 349, 352, 353, 354, 358, 360, 363, 365, 366, 371, 377, 378, 382, 386, 387, 391, 396, 397], "fill": [4, 28, 40, 59, 65, 68, 71, 133, 155, 161, 193, 197, 205, 208, 217, 225, 226, 232, 234, 244, 263, 286, 293, 325, 329, 330, 337, 340, 349, 357, 358, 364, 366, 378, 382, 386, 391, 392], "descript": [4, 11, 61, 65, 76, 84, 102, 114, 115, 121, 131, 132, 133, 141, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 247, 249, 252, 261, 262, 263, 272, 274, 275, 276, 277, 278, 279, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 368, 376, 382], "real": [4, 32, 67, 75, 76, 82, 83, 84, 85, 86, 91, 93, 121, 122, 128, 150, 155, 156, 162, 193, 197, 207, 216, 252, 258, 281, 286, 287, 294, 325, 329, 339, 348, 368, 371, 374, 382], "nullptr": [4, 52, 93], "yet": [4, 7, 32, 42, 61, 71, 87, 94, 98, 102, 119, 122, 137, 156, 217, 239, 243, 268, 287, 349, 382, 383, 386, 392], "integ": [4, 28, 52, 54, 65, 76, 95, 114, 115, 149, 154, 155, 156, 160, 163, 168, 182, 185, 186, 191, 193, 194, 195, 196, 197, 200, 201, 205, 208, 217, 220, 226, 232, 265, 280, 285, 286, 287, 290, 292, 293, 300, 314, 317, 318, 323, 325, 326, 327, 328, 329, 332, 333, 337, 340, 349, 352, 358, 364, 371, 382, 389, 391], "offset": [4, 27, 47, 52, 81, 184, 252, 316], "expect": [4, 13, 25, 41, 45, 81, 86, 93, 122, 128, 131, 155, 156, 158, 197, 228, 239, 243, 244, 252, 258, 261, 286, 287, 289, 293, 329, 360, 374, 382], "placehold": [4, 391], "_iml": 4, "_cntml_pad": 4, "_p": 4, "datum": [4, 52, 217, 349], "_ppvar": 4, "threaddatum": 4, "_thread": 4, "_nt": 4, "_v": 4, "put": [4, 28, 29, 36, 42, 45, 52, 61, 71, 76, 78, 80, 89, 91, 94, 105, 155, 156, 168, 172, 174, 178, 193, 197, 211, 217, 222, 239, 243, 244, 252, 286, 287, 289, 300, 304, 306, 310, 325, 329, 343, 349, 354, 372, 376, 386], "togeth": [4, 28, 29, 32, 36, 45, 52, 65, 95, 117, 121, 122, 147, 155, 156, 160, 161, 197, 201, 217, 226, 239, 243, 252, 278, 286, 287, 292, 293, 329, 333, 349, 358, 371, 374, 382, 392], "minim": [4, 8, 13, 29, 46, 88, 89, 129, 133, 156, 197, 211, 221, 252, 259, 263, 287, 329, 343, 353], "titl": [4, 76, 89, 91, 98, 119, 168, 169, 172, 175, 178, 224, 226, 228, 247, 300, 301, 304, 307, 310, 319, 320, 356, 358, 360, 376], "my_data": [4, 247], "someth": [4, 28, 32, 36, 37, 45, 54, 61, 63, 73, 76, 82, 89, 91, 93, 95, 118, 122, 128, 149, 150, 155, 156, 158, 181, 197, 208, 217, 218, 239, 247, 258, 280, 281, 286, 287, 289, 313, 314, 329, 349, 350, 358, 366, 373, 386, 392], "x_i": [4, 247], "_p_my_data": [4, 247], "reserv": [4, 76, 247, 392], "buffer": [4, 14, 41, 60, 61, 76, 121, 155, 158, 200, 219, 228, 230, 247, 252, 286, 332, 351, 360, 362, 374, 378, 379], "somehow": [4, 247], "malloc": [4, 93, 239, 247], "sizeof": [4, 93, 197, 247, 329], "dilig": 4, "act": [4, 9, 27, 158, 169, 173, 193, 208, 224, 252, 289, 340, 356, 371], "reus": [4, 43, 45, 47, 77, 78, 193, 325, 331, 375, 386, 387, 397], "applic": [4, 32, 71, 76, 84, 95, 117, 121, 155, 239, 243, 244, 251, 252, 286, 333, 368, 376, 382, 383], "humanbrainproject": 4, "nrnhine": 4, "nrntraub": 4, "suni": 4, "downstat": 4, "medic": [4, 76, 251, 252], "center": [4, 12, 29, 38, 41, 47, 59, 65, 76, 81, 98, 106, 119, 122, 126, 148, 150, 160, 161, 167, 184, 197, 201, 216, 217, 222, 226, 228, 232, 234, 247, 252, 256, 279, 281, 289, 292, 293, 299, 316, 329, 333, 340, 348, 349, 358, 360, 364, 366, 386, 387, 392, 397], "m1_neuron_pap": 4, "main": [4, 13, 25, 30, 31, 36, 39, 42, 46, 47, 52, 61, 74, 75, 76, 81, 82, 89, 90, 91, 94, 98, 100, 102, 103, 107, 118, 119, 122, 129, 148, 149, 155, 158, 160, 193, 197, 207, 213, 214, 217, 221, 227, 228, 234, 239, 252, 259, 279, 280, 286, 289, 292, 325, 329, 339, 345, 346, 349, 353, 359, 360, 366, 368, 371, 382, 383, 386, 389, 397], "testcorenrn": [4, 243], "reduced_dent": 4, "u": [4, 10, 11, 39, 46, 47, 52, 58, 60, 61, 62, 63, 75, 76, 81, 90, 91, 99, 100, 101, 102, 106, 107, 114, 178, 193, 228, 243, 250, 251, 252, 294, 310, 325, 360, 370, 371, 375, 377, 382, 386, 387, 388, 391, 392], "illustr": [5, 37, 38, 44, 51, 61, 62, 69, 71, 75, 76, 84, 116, 148, 161, 207, 216, 279, 293, 339, 348, 371, 389], "test_direct": 5, "simpl": [5, 7, 24, 25, 29, 32, 45, 51, 52, 61, 71, 76, 83, 89, 91, 93, 95, 98, 105, 109, 113, 119, 121, 142, 148, 149, 150, 155, 156, 161, 197, 207, 217, 224, 230, 245, 247, 252, 273, 279, 280, 281, 286, 287, 293, 314, 329, 339, 349, 356, 362, 376, 378, 382, 383, 386, 388, 389, 392], "demonstr": [5, 24, 25, 28, 49, 52, 62, 76, 78, 84, 91, 121, 161, 197, 216, 250, 252, 289, 293, 329, 348, 382, 387, 391, 392, 393], "voltag": [5, 8, 9, 24, 25, 26, 28, 29, 30, 31, 33, 37, 44, 45, 61, 71, 74, 75, 77, 78, 91, 98, 114, 118, 119, 121, 122, 125, 126, 127, 128, 131, 139, 142, 146, 148, 149, 150, 154, 155, 161, 164, 191, 196, 197, 208, 217, 220, 222, 224, 227, 233, 252, 255, 256, 257, 258, 261, 270, 273, 277, 279, 280, 281, 286, 293, 323, 329, 340, 347, 349, 352, 354, 356, 359, 365, 376, 386, 392, 397], "membran": [5, 9, 10, 11, 24, 25, 31, 33, 37, 38, 43, 45, 52, 61, 63, 74, 76, 82, 83, 102, 118, 121, 122, 131, 134, 140, 141, 143, 146, 148, 149, 150, 151, 154, 155, 159, 160, 161, 178, 197, 199, 200, 201, 207, 213, 217, 222, 224, 252, 261, 264, 271, 272, 274, 277, 279, 280, 281, 282, 285, 286, 291, 292, 293, 310, 329, 331, 332, 333, 339, 345, 347, 349, 354, 356, 371, 374, 375, 376, 386, 387, 388, 389, 392], "Then": [5, 7, 10, 11, 13, 14, 25, 37, 38, 45, 46, 47, 61, 62, 69, 70, 71, 73, 76, 78, 79, 81, 89, 91, 94, 96, 97, 100, 107, 109, 111, 114, 115, 122, 126, 128, 144, 149, 150, 155, 161, 185, 187, 197, 200, 217, 218, 226, 227, 239, 244, 246, 256, 258, 275, 280, 281, 286, 293, 317, 319, 329, 332, 349, 350, 358, 359, 371, 382], "written": [5, 40, 42, 46, 47, 61, 76, 84, 98, 114, 115, 119, 121, 131, 146, 149, 150, 181, 188, 197, 201, 207, 222, 239, 261, 277, 280, 281, 286, 292, 313, 318, 320, 329, 333, 339, 340, 354, 371, 376, 378, 392], "test_spik": 5, "similar": [5, 25, 29, 33, 38, 39, 43, 46, 61, 63, 76, 84, 88, 91, 94, 95, 109, 128, 131, 139, 145, 149, 150, 154, 155, 161, 165, 181, 187, 188, 194, 196, 197, 201, 217, 226, 227, 239, 243, 245, 247, 252, 258, 261, 270, 276, 280, 281, 285, 286, 293, 297, 313, 319, 320, 326, 328, 329, 333, 337, 344, 349, 358, 359, 373, 375, 382, 386, 391], "connect": [5, 9, 12, 15, 22, 33, 36, 38, 45, 46, 47, 61, 65, 69, 70, 76, 81, 83, 95, 103, 104, 105, 106, 107, 112, 113, 121, 147, 148, 149, 154, 155, 156, 160, 161, 162, 163, 168, 169, 185, 197, 201, 208, 216, 217, 218, 224, 230, 231, 247, 252, 272, 278, 279, 280, 285, 286, 287, 292, 293, 294, 295, 300, 301, 317, 329, 333, 340, 348, 349, 350, 356, 362, 363, 365, 372, 373, 375, 388, 389, 390, 391, 392, 397], "rank": [5, 8, 53, 131, 146, 155, 193, 216, 239, 261, 277, 286, 325, 348], "compar": [5, 9, 10, 11, 25, 32, 39, 40, 44, 45, 47, 49, 54, 84, 89, 128, 148, 155, 159, 181, 197, 212, 217, 226, 252, 258, 279, 286, 291, 313, 329, 344, 349, 374, 375, 382, 383, 386, 388, 391], "mpiexec": [5, 8, 10, 11, 13, 35, 155, 286, 389, 397], "n": [5, 8, 10, 11, 13, 16, 17, 23, 25, 33, 35, 36, 39, 46, 52, 53, 54, 64, 72, 76, 84, 95, 120, 121, 133, 145, 146, 148, 149, 151, 154, 155, 156, 160, 162, 164, 169, 171, 172, 173, 178, 181, 184, 186, 187, 188, 192, 193, 196, 197, 199, 201, 208, 210, 211, 216, 217, 220, 226, 228, 230, 234, 239, 245, 247, 251, 252, 263, 276, 279, 280, 282, 285, 286, 287, 293, 294, 300, 303, 304, 310, 313, 316, 318, 320, 325, 328, 329, 331, 333, 340, 342, 343, 348, 352, 358, 360, 362, 373, 375, 376, 382, 383, 387, 388, 389, 391, 392, 397], "num_process": [5, 8], "ring": [5, 35, 53, 156, 239, 252, 287, 386, 389, 390], "ball": [5, 10, 11, 14, 24, 26, 248, 252], "stick": [5, 10, 11, 14, 24, 26, 60, 82, 248], "scale": [5, 12, 41, 46, 47, 49, 58, 65, 68, 82, 85, 87, 91, 94, 121, 125, 128, 129, 131, 148, 149, 158, 161, 172, 197, 217, 224, 225, 226, 228, 230, 231, 232, 234, 247, 251, 252, 255, 258, 259, 261, 279, 280, 289, 293, 304, 311, 329, 330, 349, 356, 357, 358, 360, 362, 363, 364, 366, 371, 373, 374, 381, 395], "arbitrarili": [5, 39, 76, 374, 381], "port": [5, 53, 94, 185, 216, 228, 317, 348, 360, 382, 383], "readm": [5, 46, 49, 71, 122], "miglior": [5, 36, 84, 121, 251, 252], "et": [5, 25, 35, 36, 41, 49, 83, 87, 121, 239, 247, 371, 374, 375, 377], "al": [5, 25, 35, 36, 41, 49, 83, 87, 121, 239, 247, 252, 343, 371, 374, 375, 377], "2014": [5, 155, 252, 286, 382], "engin": [6, 96, 121, 252, 386, 392], "optimis": [6, 7, 88, 243, 252], "kei": [6, 13, 29, 45, 50, 65, 71, 76, 102, 121, 155, 158, 176, 178, 187, 226, 228, 231, 234, 239, 252, 286, 289, 308, 310, 319, 358, 360, 363, 366, 371, 375, 386, 389, 391, 392], "goal": [6, 10, 11, 61, 81, 89, 121, 216, 252, 348, 382], "larg": [6, 10, 11, 32, 33, 35, 36, 53, 59, 61, 63, 76, 77, 78, 82, 84, 85, 94, 120, 122, 125, 128, 129, 134, 149, 150, 155, 156, 159, 161, 169, 170, 182, 191, 193, 196, 197, 217, 220, 228, 231, 239, 244, 251, 252, 255, 258, 259, 264, 280, 281, 286, 287, 289, 291, 293, 301, 302, 314, 323, 325, 328, 329, 349, 352, 360, 363, 374, 378, 382, 383, 389, 392], "specialis": [6, 7], "hardwar": [6, 35, 49, 95, 121, 155, 243, 251, 252, 286, 389], "vectoris": [6, 7], "Of": [6, 155, 156, 197, 208, 286, 287, 329, 340], "tightli": [6, 25, 148, 279, 374], "met": [6, 149, 280], "cover": [6, 45, 61, 238, 243, 252], "unsupport": [6, 310], "safe": [6, 36, 37, 45, 76, 91, 93, 105, 128, 143, 150, 155, 160, 201, 217, 220, 258, 274, 281, 286, 289, 292, 333, 349, 352, 378, 382], "tabl": [6, 28, 52, 61, 62, 105, 114, 144, 182, 201, 217, 220, 248, 252, 275, 314, 333, 349, 352, 368, 376, 391], "explicit": [6, 28, 39, 71, 93, 114, 115, 121, 129, 133, 149, 150, 155, 161, 164, 197, 200, 210, 215, 217, 226, 228, 238, 247, 259, 263, 280, 281, 286, 289, 293, 332, 342, 349, 360, 382, 383, 392], "ion": [6, 31, 60, 61, 71, 76, 77, 78, 82, 84, 121, 131, 141, 145, 148, 149, 150, 160, 200, 220, 222, 247, 252, 261, 272, 276, 278, 279, 280, 281, 290, 292, 329, 332, 352, 354, 371, 373, 374, 377, 379, 386, 395], "mcellran4": [6, 133, 194, 196, 263, 326, 328], "virtualenv": 7, "safest": [7, 47, 81, 155, 286], "mod2c": [7, 53, 243], "dcorenrn_enable_nmodl": 7, "bison": [7, 52, 243, 244], "flex": [7, 243, 244], "reli": [7, 8, 52, 155, 239, 245, 286], "auto": [7, 52, 250], "formerli": [7, 65], "gain": [7, 33, 40, 71, 148, 149, 155, 165, 239, 252, 279, 280, 286, 297, 386, 397], "download": [7, 38, 46, 49, 78, 88, 95, 135, 153, 155, 237, 243, 244, 245, 246, 284, 286, 379, 382, 389, 392], "oneapi": 7, "toolkit": [7, 252, 368], "base": [7, 13, 14, 25, 29, 32, 39, 40, 45, 47, 52, 62, 76, 82, 84, 86, 87, 90, 93, 102, 104, 141, 144, 147, 149, 150, 155, 158, 161, 176, 186, 191, 197, 200, 208, 216, 217, 238, 239, 243, 245, 247, 252, 272, 275, 278, 280, 281, 286, 289, 290, 292, 293, 294, 302, 308, 318, 323, 329, 332, 333, 340, 345, 348, 349, 368, 371, 373, 374, 375, 382, 383, 386, 387, 389, 392, 393, 397], "openacc": [7, 8, 53, 239], "backend": [7, 239], "nvc": [7, 245], "experiment": [7, 16, 17, 18, 25, 40, 41, 43, 61, 63, 66, 71, 84, 88, 95, 121, 222, 252, 354], "openmp": [7, 8, 53, 239], "offload": [7, 13], "dcorenrn_enable_openmp_offload": 7, "off": [7, 28, 32, 35, 36, 50, 52, 53, 61, 62, 65, 66, 68, 71, 75, 76, 88, 89, 91, 100, 103, 114, 115, 128, 129, 142, 148, 149, 154, 155, 158, 159, 164, 165, 166, 168, 177, 178, 184, 191, 192, 196, 197, 207, 213, 217, 218, 220, 221, 226, 228, 230, 239, 243, 244, 245, 247, 252, 258, 259, 273, 279, 280, 285, 286, 289, 290, 291, 296, 297, 298, 300, 301, 309, 310, 316, 323, 324, 328, 329, 339, 345, 349, 350, 352, 353, 358, 360, 362, 373, 374, 378, 382], "simplest": [7, 28, 41, 42, 51, 76, 88, 98, 119, 155, 156, 286, 287, 371, 372, 382], "outlin": [7, 46, 53, 61, 65, 71, 94], "And": [7, 12, 47, 61, 62, 75, 81, 91, 95, 122, 135, 143, 149, 150, 154, 155, 160, 165, 176, 204, 207, 208, 217, 238, 244, 247, 266, 274, 280, 281, 285, 286, 292, 297, 308, 339, 340, 349, 370, 387, 389, 391, 392], "cuda": [7, 8, 53, 239, 245], "standardis": 7, "almost": [7, 45, 61, 76, 89, 91, 109, 111, 121, 148, 155, 159, 164, 168, 197, 208, 224, 279, 286, 291, 300, 329, 340, 356, 382, 389], "certainli": [7, 32, 114, 115, 128, 156, 195, 217, 258, 287, 327, 349], "spider": 7, "discov": [7, 25, 47, 49, 91, 95, 118, 121, 193, 325], "bundl": [7, 252], "four": [7, 9, 25, 46, 65, 76, 121, 131, 168, 178, 197, 226, 232, 234, 252, 261, 300, 310, 329, 358, 364, 366, 371, 377, 389], "driver": [7, 53, 230, 362], "encount": [7, 243], "nvlink": 7, "fatal": 7, "snip": 7, "112": [7, 252], "110": [7, 121, 187, 226, 252, 358, 372, 373], "sm_60": 7, "onc": [7, 8, 42, 52, 61, 65, 76, 91, 98, 102, 119, 129, 139, 155, 156, 158, 162, 164, 184, 185, 196, 197, 201, 204, 217, 224, 235, 243, 245, 250, 259, 270, 280, 286, 287, 289, 294, 316, 317, 321, 328, 329, 333, 336, 337, 349, 356, 367, 376, 382, 385, 387, 389, 391], "readi": [7, 16, 26, 32, 45, 61, 62, 89, 91, 99, 103, 105, 106, 107, 109, 111, 155, 224, 238, 286, 356, 382], "forget": [7, 25, 71, 76, 78, 118, 228, 239, 360, 386], "icc": [7, 252], "icpc": 7, "dmpi_c_compil": 7, "dmpi_cxx_compil": 7, "dcorenrn_enable_gpu": [7, 239], "dcmake_cuda_compil": 7, "nvcc": 7, "lead": [7, 29, 40, 84, 93, 99, 243, 252, 382, 392], "fragil": [7, 150, 249, 252, 281], "surpris": [7, 40, 47, 61, 76, 81, 91, 161, 197, 217, 252, 293, 329, 349], "behaviour": [7, 150, 224, 228, 239, 252, 281, 356, 360], "therebi": [7, 29, 121, 329], "come": [7, 11, 13, 29, 33, 36, 42, 52, 61, 62, 63, 71, 77, 78, 83, 87, 89, 91, 94, 105, 106, 107, 114, 115, 134, 145, 146, 149, 155, 161, 184, 217, 224, 228, 231, 244, 264, 276, 277, 279, 280, 286, 293, 316, 349, 356, 360, 363, 371, 389, 391, 392], "mileag": 7, "vari": [7, 10, 11, 13, 25, 27, 38, 41, 61, 63, 71, 89, 99, 100, 105, 121, 128, 129, 131, 133, 142, 148, 149, 158, 161, 217, 224, 252, 258, 259, 261, 263, 273, 279, 280, 289, 293, 329, 349, 356, 371, 378, 379, 386, 392, 396], "devic": [7, 12, 76, 83, 153, 155, 160, 185, 201, 230, 252, 284, 286, 292, 317, 333, 362], "capabl": [7, 76, 121, 226, 243, 252, 378], "steer": [7, 239, 252], "dcmake_cuda_architectur": 7, "string": [7, 12, 37, 42, 46, 52, 54, 61, 65, 75, 76, 89, 91, 98, 102, 114, 115, 118, 119, 124, 128, 129, 132, 135, 145, 155, 160, 161, 164, 165, 168, 169, 172, 175, 178, 181, 184, 185, 186, 187, 188, 193, 197, 199, 200, 201, 202, 204, 208, 213, 217, 225, 226, 228, 230, 239, 243, 246, 254, 258, 259, 262, 266, 276, 282, 286, 289, 292, 293, 297, 299, 300, 301, 304, 306, 307, 310, 313, 316, 317, 318, 319, 320, 325, 329, 331, 332, 333, 334, 336, 337, 340, 345, 349, 357, 358, 360, 362, 386, 392, 397], "60": [7, 187, 197, 225, 252, 280, 329, 357, 391], "70": [7, 24, 31, 53, 61, 89, 91, 149, 187, 220, 247, 252, 279, 280, 329, 352, 365, 382, 391, 392], "80": [7, 18, 22, 28, 37, 58, 67, 83, 91, 154, 187, 197, 247, 252, 280, 285, 289, 329, 364, 376, 391], "dcmake_c_flag": [7, 238, 239], "dcmake_cuda_flag": 7, "o3": [7, 28, 197, 226, 243], "temporari": [7, 36, 42, 65, 155, 165, 182, 184, 188, 197, 200, 226, 233, 297, 314, 316, 320, 332, 358, 382, 386, 391], "cmakefil": 7, "entir": [7, 25, 29, 33, 41, 42, 59, 61, 65, 89, 91, 98, 118, 119, 124, 128, 148, 149, 150, 154, 155, 158, 161, 165, 171, 181, 197, 207, 208, 224, 226, 228, 230, 234, 254, 258, 279, 280, 281, 285, 286, 289, 293, 297, 303, 313, 329, 339, 340, 356, 360, 362, 366, 372, 392], "done": [7, 10, 11, 12, 13, 14, 16, 23, 25, 31, 35, 36, 37, 40, 47, 52, 54, 61, 75, 77, 78, 79, 82, 85, 91, 94, 104, 105, 106, 108, 110, 118, 121, 149, 150, 153, 155, 156, 164, 166, 170, 178, 181, 193, 196, 197, 208, 210, 213, 216, 217, 220, 222, 230, 236, 244, 245, 265, 280, 281, 283, 284, 286, 287, 289, 292, 296, 298, 302, 310, 313, 325, 328, 329, 340, 342, 345, 348, 349, 352, 354, 358, 362, 368, 378, 382, 383, 386, 389, 392, 393], "new": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 27, 29, 32, 36, 37, 42, 43, 45, 46, 48, 51, 52, 53, 54, 58, 61, 62, 64, 65, 67, 72, 74, 75, 76, 79, 81, 82, 83, 84, 88, 89, 91, 93, 94, 95, 97, 98, 99, 103, 104, 106, 107, 108, 110, 119, 121, 128, 133, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 182, 184, 192, 193, 194, 196, 197, 199, 200, 201, 205, 206, 207, 208, 211, 214, 215, 217, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 238, 243, 245, 251, 252, 258, 270, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 300, 301, 307, 308, 310, 312, 314, 316, 319, 325, 328, 329, 332, 333, 337, 338, 339, 340, 343, 344, 347, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 365, 373, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395], "varaibl": 7, "importerror": 7, "correctli": [7, 76, 148, 149, 150, 153, 155, 159, 216, 217, 239, 250, 279, 280, 281, 284, 286, 291, 348, 349, 382, 387, 388], "forc": [7, 14, 36, 44, 66, 75, 91, 92, 121, 125, 144, 149, 155, 156, 166, 168, 243, 252, 255, 275, 280, 286, 287, 298, 300], "even": [8, 9, 25, 28, 29, 32, 36, 40, 47, 52, 54, 59, 61, 71, 73, 75, 76, 91, 114, 128, 146, 149, 154, 155, 156, 160, 161, 165, 166, 168, 175, 182, 194, 197, 207, 217, 218, 238, 243, 258, 277, 280, 285, 286, 287, 289, 292, 293, 297, 298, 300, 307, 314, 326, 328, 329, 339, 349, 350, 371, 374, 375, 382, 383, 386, 391, 392], "builtin": [8, 52, 76, 197, 329, 391], "still": [8, 13, 16, 28, 29, 38, 46, 54, 71, 73, 76, 81, 89, 91, 99, 100, 103, 104, 107, 114, 115, 120, 133, 134, 148, 149, 150, 155, 156, 160, 168, 193, 197, 217, 225, 239, 243, 244, 252, 263, 264, 279, 280, 281, 286, 287, 292, 300, 325, 329, 340, 349, 357, 374, 375, 382, 386, 391], "link": [8, 10, 11, 28, 40, 46, 52, 53, 57, 76, 84, 85, 91, 93, 121, 149, 150, 184, 201, 224, 237, 239, 243, 244, 251, 252, 280, 281, 316, 333, 356, 378, 382, 389], "consult": [8, 121, 239, 244, 385, 389], "explan": [8, 75, 375, 386], "usual": [8, 28, 39, 41, 61, 63, 73, 76, 91, 95, 114, 115, 126, 148, 149, 150, 156, 158, 168, 181, 193, 196, 197, 213, 217, 226, 228, 230, 231, 233, 244, 256, 279, 280, 281, 287, 300, 313, 325, 328, 329, 331, 340, 345, 349, 358, 360, 362, 363, 365, 372, 375, 376, 382, 387, 391, 392], "cache_effici": [8, 155, 205, 217, 286, 337, 349], "true": [8, 13, 28, 39, 54, 59, 61, 76, 95, 133, 148, 149, 155, 159, 178, 181, 184, 188, 194, 195, 197, 200, 201, 208, 216, 217, 226, 239, 243, 245, 263, 277, 279, 280, 285, 286, 289, 291, 295, 300, 301, 307, 310, 313, 316, 320, 324, 326, 327, 329, 332, 333, 340, 343, 348, 349, 352, 358, 371, 373, 374, 375, 378, 382, 383, 386, 387, 388, 391], "final": [8, 10, 11, 27, 45, 61, 65, 76, 81, 84, 89, 91, 103, 110, 133, 149, 150, 161, 181, 184, 200, 208, 218, 219, 227, 228, 263, 280, 281, 293, 313, 316, 332, 340, 350, 351, 359, 360, 374, 375, 380, 384, 386, 389, 391], "psolv": [8, 155, 156, 216, 217, 239, 279, 283, 286, 287, 348, 349, 389], "stdinit": [8, 64, 67, 72, 156, 216, 220, 221, 286, 287, 348, 352, 353], "pc": [8, 10, 11, 13, 16, 23, 48, 49, 52, 121, 122, 155, 156, 185, 216, 230, 279, 286, 287, 317, 348, 362, 389], "tstop": [8, 13, 16, 17, 18, 24, 28, 32, 37, 47, 61, 67, 91, 95, 96, 97, 122, 146, 155, 156, 158, 200, 215, 216, 217, 222, 239, 277, 279, 286, 287, 329, 332, 347, 348, 349, 354, 380], "netcon": [8, 9, 13, 16, 17, 18, 21, 22, 29, 32, 35, 36, 38, 66, 71, 95, 135, 141, 148, 149, 150, 151, 152, 155, 156, 216, 217, 222, 224, 247, 266, 272, 279, 280, 281, 282, 283, 286, 287, 348, 349, 354, 356, 376, 387, 388, 389, 392, 397], "weight": [8, 9, 21, 22, 29, 32, 37, 69, 70, 75, 89, 90, 91, 97, 102, 103, 104, 108, 109, 110, 111, 124, 129, 148, 149, 150, 154, 155, 156, 197, 217, 222, 252, 254, 259, 279, 280, 281, 283, 285, 286, 287, 329, 349, 354, 376, 387, 388, 389], "regular": [8, 66, 76, 82, 160, 164, 217, 226, 252, 289, 290, 292, 294, 316, 342, 349, 358, 392], "spike_record": [8, 155, 156, 279, 283, 286, 287], "primarili": [8, 29, 128, 150, 197, 217, 252, 258, 281, 329, 349, 397], "py_obj": 8, "pythonobject": [8, 158, 160, 197, 208, 329, 340, 392], "your_script": 8, "becaus": [8, 9, 14, 25, 29, 31, 35, 42, 45, 52, 53, 58, 61, 62, 65, 71, 75, 76, 83, 89, 93, 95, 98, 99, 102, 119, 121, 128, 131, 142, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 164, 169, 181, 193, 194, 197, 201, 208, 216, 217, 222, 226, 228, 231, 239, 243, 245, 258, 261, 273, 279, 280, 281, 282, 285, 286, 287, 289, 292, 293, 301, 313, 318, 325, 326, 329, 333, 340, 348, 349, 354, 360, 363, 371, 374, 382, 386, 388, 389, 391, 392], "nthread": [8, 155, 158, 197, 217, 240, 272, 283, 286, 289, 329, 349, 378], "launcher": 8, "srun": 8, "mpirun": [8, 153, 155, 239, 284, 286], "serv": [9, 40, 76, 77, 78, 93, 148, 154, 197, 226, 279, 285, 329, 358, 382, 391], "net_rec": [9, 71, 83, 150, 151, 154, 155, 217, 222, 224, 248, 281, 282, 285, 286, 349, 354, 356], "discret": [9, 26, 32, 38, 41, 47, 59, 60, 61, 77, 78, 81, 83, 91, 96, 100, 150, 155, 158, 160, 161, 196, 197, 217, 248, 251, 252, 281, 286, 289, 292, 293, 328, 329, 349, 374, 379, 386, 388], "event": [9, 26, 29, 32, 37, 44, 53, 66, 77, 78, 82, 83, 95, 96, 98, 102, 104, 119, 121, 129, 143, 148, 149, 154, 155, 156, 159, 196, 197, 216, 218, 220, 222, 226, 229, 239, 244, 247, 251, 252, 259, 274, 279, 280, 281, 283, 285, 286, 287, 291, 328, 329, 348, 350, 352, 354, 356, 358, 361, 376, 382, 383, 387, 389, 395], "deliv": [9, 25, 31, 66, 82, 118, 122, 149, 154, 155, 156, 217, 220, 239, 279, 280, 285, 286, 287, 349, 352, 387, 389], "computation": [9, 53, 83, 121, 149, 150, 252, 280, 281, 382, 389], "hundr": [9, 47], "whose": [9, 13, 40, 61, 71, 75, 76, 81, 84, 102, 149, 154, 155, 161, 193, 197, 215, 217, 224, 280, 285, 286, 293, 325, 329, 347, 349, 356, 365, 374, 382], "consequ": [9, 29, 81, 121, 150, 159, 161, 197, 217, 252, 281, 291, 293, 329, 349, 382], "conduct": [9, 10, 11, 25, 31, 37, 43, 46, 63, 71, 77, 78, 89, 90, 99, 100, 104, 114, 121, 122, 131, 145, 147, 148, 150, 154, 155, 197, 217, 220, 252, 261, 276, 278, 279, 281, 285, 286, 329, 349, 352, 376, 382, 383, 386, 388], "dt": [9, 24, 28, 31, 32, 36, 37, 39, 41, 45, 47, 52, 67, 76, 91, 96, 114, 115, 121, 131, 143, 146, 148, 149, 150, 155, 158, 159, 170, 191, 197, 215, 217, 220, 224, 247, 261, 274, 277, 279, 280, 281, 283, 286, 289, 291, 302, 310, 323, 329, 347, 349, 352, 356, 358, 378, 392], "100000": [9, 155, 286, 324, 345], "hour": [9, 40, 244, 375, 397], "take": [9, 10, 11, 27, 28, 29, 36, 37, 41, 44, 49, 52, 54, 71, 76, 81, 84, 89, 91, 95, 107, 114, 115, 121, 128, 131, 133, 144, 146, 148, 149, 154, 155, 156, 159, 160, 161, 163, 164, 165, 168, 170, 177, 181, 191, 193, 197, 204, 213, 214, 216, 217, 218, 220, 222, 224, 226, 228, 239, 243, 244, 245, 252, 258, 261, 263, 265, 275, 277, 279, 280, 281, 283, 285, 286, 287, 291, 292, 293, 296, 297, 300, 302, 309, 313, 321, 323, 325, 329, 336, 345, 346, 348, 349, 350, 352, 354, 356, 358, 360, 365, 366, 371, 372, 378, 386, 387, 388, 389], "total": [9, 10, 11, 13, 29, 32, 36, 53, 84, 88, 89, 91, 102, 121, 122, 128, 129, 131, 148, 149, 150, 155, 161, 196, 197, 217, 233, 238, 239, 252, 258, 259, 261, 279, 280, 281, 286, 293, 328, 329, 349, 365, 371, 375, 385, 392], "proport": [9, 25, 65, 131, 149, 155, 161, 220, 261, 280, 286, 293, 352, 371, 374, 378], "interv": [9, 13, 22, 29, 32, 37, 44, 66, 73, 75, 82, 89, 91, 95, 102, 103, 121, 124, 129, 148, 149, 155, 156, 196, 197, 213, 214, 217, 220, 252, 254, 259, 279, 280, 286, 287, 328, 329, 345, 346, 349, 352, 376, 378, 391], "netstim": [9, 21, 22, 32, 37, 66, 69, 71, 75, 83, 85, 95, 102, 103, 148, 156, 216, 278, 279, 287, 348, 376, 388, 389, 390, 392], "produc": [9, 10, 11, 13, 25, 33, 37, 40, 47, 48, 49, 65, 73, 76, 82, 89, 90, 91, 93, 95, 102, 114, 115, 121, 122, 148, 149, 150, 158, 160, 168, 181, 196, 197, 215, 226, 230, 252, 279, 280, 281, 286, 289, 292, 293, 300, 313, 328, 329, 337, 347, 358, 362, 374, 391, 392], "trigger": [9, 29, 38, 52, 58, 66, 109, 122, 148, 159, 197, 245, 252, 279, 291, 329, 376, 382, 387, 389, 395, 397], "intfire1": [9, 21, 32, 148, 156, 224, 278, 279, 287, 343, 356, 392, 397], "leaki": [9, 148, 197, 279, 329, 386, 392], "driven": [9, 70, 71, 75, 89, 105, 148, 252, 279, 395], "delta": [9, 39, 131, 252, 261, 382], "decai": [9, 25, 29, 32, 91, 102, 104, 148, 252, 279, 387, 388], "exponenti": [9, 27, 29, 32, 76, 86, 89, 104, 124, 148, 181, 191, 196, 217, 226, 252, 254, 279, 313, 323, 328, 349, 381, 387], "toward": [9, 24, 25, 29, 31, 33, 47, 52, 81, 102, 108, 110, 148, 191, 197, 228, 252, 279, 323, 329, 360, 370, 382, 383], "arriv": [9, 29, 66, 102, 148, 149, 155, 217, 279, 280, 281, 286, 349], "w": [9, 28, 29, 76, 88, 90, 102, 121, 148, 154, 155, 184, 188, 197, 226, 228, 245, 247, 251, 252, 279, 286, 316, 329, 358, 360, 378, 382, 392], "abrupt": [9, 40, 121, 161, 293], "exce": [9, 29, 102], "enter": [9, 10, 11, 13, 14, 27, 30, 31, 32, 36, 37, 41, 45, 61, 62, 65, 75, 82, 84, 89, 91, 103, 121, 122, 124, 128, 129, 139, 155, 159, 170, 178, 182, 187, 197, 201, 207, 221, 224, 227, 228, 231, 243, 250, 254, 258, 259, 270, 286, 291, 299, 310, 314, 319, 329, 333, 339, 353, 356, 359, 360, 363, 374, 382], "refractori": [9, 102, 148, 197, 252, 279, 329], "period": [9, 65, 66, 148, 197, 217, 252, 279, 329, 349, 382, 383, 386], "further": [9, 29, 39, 76, 84, 89, 91, 98, 102, 107, 119, 121, 149, 154, 155, 197, 252, 280, 285, 286, 289, 290, 329, 337, 371, 382, 383, 387], "reset": [9, 29, 84, 124, 154, 197, 252, 254, 285, 293, 329, 371, 384], "intfire2": [9, 148, 278, 279, 392, 397], "taum": [9, 148, 279], "settabl": [9, 27, 102, 148, 279, 392], "bia": [9, 40, 148, 228, 279, 360], "net": [9, 20, 26, 66, 85, 102, 104, 106, 110, 148, 155, 156, 239, 252, 279, 286, 287], "synapt": [9, 25, 29, 32, 38, 71, 89, 104, 105, 108, 110, 121, 148, 150, 154, 169, 217, 252, 279, 281, 285, 286, 301, 349, 388, 389, 392, 395], "tau": [9, 22, 29, 37, 38, 102, 104, 148, 217, 239, 252, 279, 349, 376, 387, 388], "potenti": [9, 10, 11, 24, 25, 30, 31, 32, 33, 37, 38, 41, 43, 44, 45, 47, 48, 61, 63, 74, 82, 90, 91, 95, 102, 110, 114, 115, 118, 121, 122, 128, 131, 132, 141, 142, 143, 144, 146, 148, 149, 150, 154, 155, 159, 161, 165, 197, 200, 201, 207, 217, 250, 252, 258, 261, 262, 272, 273, 274, 275, 277, 279, 280, 281, 285, 286, 291, 293, 297, 314, 329, 332, 333, 339, 347, 349, 368, 371, 374, 375, 376, 382, 386, 387, 388, 389, 392], "equilibr": [9, 148, 279], "abruptli": [9, 148, 279], "amount": [9, 28, 29, 41, 65, 90, 104, 148, 149, 150, 155, 156, 161, 197, 221, 234, 247, 252, 279, 280, 281, 286, 287, 289, 293, 329, 353, 366, 382, 383, 388, 391], "intfire4": [9, 148, 278, 279, 392, 397], "excit": [9, 10, 11, 30, 37, 43, 69, 75, 102, 131, 148, 252, 261, 279, 376], "rise": [9, 29, 41, 89, 104, 148, 247, 252, 279], "slower": [9, 29, 124, 143, 226, 229, 233, 239, 254, 274, 358, 361, 365], "alpha": [9, 11, 41, 76, 121, 148, 194, 196, 243, 252, 279, 289, 326, 328, 370, 371, 373, 376, 384], "inhibit": [9, 37, 38, 69, 75, 111, 252], "context": [9, 52, 54, 72, 76, 131, 138, 143, 149, 155, 160, 163, 164, 165, 168, 169, 173, 178, 181, 182, 196, 216, 217, 220, 226, 227, 228, 234, 239, 243, 252, 261, 269, 274, 280, 283, 286, 292, 295, 297, 300, 305, 310, 313, 314, 328, 329, 348, 349, 352, 358, 359, 360, 366, 382, 388, 389, 391], "conceptu": [9, 32, 76, 81, 84, 98, 105, 119, 121, 135, 141, 149, 150, 155, 158, 160, 164, 208, 272, 280, 281, 286, 289, 292, 340, 368, 388, 389], "irrelev": [9, 103, 161, 293, 382, 391], "builder": [9, 14, 26, 30, 37, 38, 42, 61, 74, 75, 78, 82, 83, 96, 97, 102, 103, 105, 108, 109, 110, 111, 112, 121, 145, 155, 156, 168, 251, 274, 276, 286, 287, 300], "instanti": [9, 21, 22, 29, 59, 75, 103, 131, 145, 151, 158, 163, 202, 261, 276, 282, 286, 289, 295, 334, 373, 378], "dummi": [9, 32, 75, 146, 205, 277, 337], "acell_home_": [9, 32, 37, 75], "sooner": [10, 11, 61], "later": [10, 11, 32, 36, 37, 38, 42, 45, 61, 65, 71, 75, 84, 89, 91, 94, 98, 105, 111, 119, 121, 155, 158, 160, 164, 193, 197, 207, 226, 252, 286, 289, 292, 296, 325, 329, 339, 358, 365, 374, 378, 382, 383, 386, 387, 391], "grind": [10, 11, 95], "challeng": [10, 11, 38, 39, 91, 121, 252, 382], "reward": [10, 11, 252], "consum": [10, 11, 71, 84], "learn": [10, 11, 24, 25, 29, 45, 62, 81, 82, 85, 248, 252, 390, 391], "virtu": [10, 11, 382], "least": [10, 11, 13, 32, 33, 39, 40, 47, 49, 54, 61, 71, 77, 78, 81, 89, 95, 97, 129, 131, 133, 149, 155, 161, 184, 197, 214, 218, 222, 228, 234, 244, 259, 261, 263, 280, 286, 289, 293, 316, 329, 346, 350, 354, 360, 366, 382, 383, 385, 386], "unix": [10, 11, 47, 52, 62, 71, 76, 78, 81, 94, 114, 115, 117, 121, 122, 149, 153, 155, 166, 170, 172, 176, 184, 213, 223, 228, 243, 246, 280, 284, 286, 298, 302, 304, 308, 316, 345, 355, 360], "mswin": [10, 11, 31, 36, 46, 47, 52, 62, 71, 77, 78, 81, 87, 121, 122, 172, 184, 213, 223, 224, 304, 316, 345, 355, 356], "microsoft": [10, 168, 226, 243, 246, 300, 358, 382], "workstat": [10, 11, 36, 76, 121, 155, 156, 286, 287], "supercomput": [10, 11, 53, 155, 251, 252, 286], "ask": [10, 11, 40, 51, 61, 77, 81, 82, 84, 89, 95, 103, 149, 155, 156, 200, 207, 219, 228, 230, 244, 280, 286, 287, 332, 339, 351, 360, 362, 386, 387, 391, 392], "administr": [10, 11, 72, 145, 155, 220, 224, 246, 276, 286, 352, 356], "se": [10, 11, 20, 22, 24, 30, 37, 45, 47, 61, 62, 81, 82, 91, 99, 116, 122, 128, 207, 224, 227, 228, 252, 258, 339, 356, 359, 360, 364], "host": [10, 11, 13, 49, 59, 75, 155, 156, 208, 213, 222, 243, 245, 286, 287, 345, 354, 389], "dendrit": [10, 11, 14, 24, 25, 29, 37, 41, 43, 45, 46, 47, 61, 62, 63, 69, 81, 103, 105, 110, 155, 160, 161, 164, 234, 252, 286, 289, 293, 296, 366, 387, 388, 391], "inject": [10, 11, 25, 31, 33, 38, 45, 47, 59, 91, 125, 126, 127, 131, 142, 146, 148, 224, 247, 252, 255, 256, 257, 261, 273, 277, 279, 328, 356, 386], "steadi": [10, 11, 31, 111, 149, 220, 227, 247, 252, 280, 352, 359, 379], "depolar": [10, 11, 75, 116, 148, 150, 247, 252, 279, 281, 386], "relationship": [10, 11, 25, 27, 29, 38, 39, 46, 91, 149, 192, 197, 252, 280, 324, 329, 382, 386], "amplitud": [10, 11, 13, 16, 17, 18, 25, 31, 38, 46, 59, 66, 75, 131, 142, 197, 227, 252, 261, 273, 329, 359, 392], "appli": [10, 11, 16, 25, 40, 47, 61, 62, 65, 71, 76, 89, 91, 95, 99, 121, 122, 149, 158, 164, 197, 211, 217, 252, 280, 289, 290, 292, 296, 329, 330, 337, 343, 347, 349, 373, 374, 378, 382, 383, 397], "frequenc": [10, 11, 13, 16, 17, 18, 28, 29, 71, 75, 91, 95, 120, 125, 126, 127, 131, 197, 252, 255, 256, 257, 261, 329, 382, 383, 389], "distal": [10, 11, 16, 17, 18, 25, 27, 37, 61, 99, 149, 150, 252, 280, 281, 365, 386, 392], "properti": [10, 11, 14, 24, 34, 37, 43, 46, 47, 52, 60, 61, 62, 71, 75, 76, 81, 82, 84, 85, 91, 95, 105, 112, 121, 128, 148, 155, 156, 158, 161, 162, 164, 170, 178, 182, 197, 207, 224, 226, 231, 233, 252, 258, 272, 279, 286, 287, 289, 292, 293, 294, 302, 310, 314, 329, 339, 349, 356, 358, 363, 365, 370, 371, 373, 374, 376, 386, 397], "l": [10, 11, 14, 15, 22, 25, 28, 30, 37, 38, 43, 45, 50, 52, 61, 62, 63, 68, 84, 94, 103, 105, 114, 120, 121, 129, 143, 146, 148, 155, 160, 161, 164, 169, 170, 178, 193, 201, 207, 208, 210, 213, 216, 220, 225, 231, 239, 245, 247, 250, 251, 252, 259, 272, 274, 277, 279, 285, 286, 290, 292, 293, 296, 302, 310, 333, 339, 340, 345, 347, 348, 352, 357, 363, 365, 368, 371, 372, 373, 374, 375, 376, 378, 380, 382, 386, 387, 388, 389, 392], "\u03bcm": [10, 41, 47, 252, 371, 392], "diam": [10, 11, 14, 15, 22, 28, 30, 37, 38, 43, 45, 47, 61, 62, 63, 103, 105, 114, 115, 120, 129, 143, 148, 160, 161, 163, 164, 170, 178, 201, 207, 231, 247, 250, 259, 272, 274, 279, 285, 292, 293, 302, 310, 333, 339, 347, 363, 365, 374, 375, 376, 386, 387, 388, 391, 392], "1831": [10, 11], "area": [10, 11, 15, 22, 31, 37, 46, 47, 48, 50, 61, 65, 71, 75, 76, 81, 99, 110, 120, 122, 134, 139, 146, 148, 149, 155, 158, 161, 184, 197, 203, 217, 226, 228, 230, 252, 264, 270, 272, 277, 279, 280, 286, 289, 292, 293, 316, 329, 335, 340, 349, 358, 360, 362, 371, 374, 378, 382, 386, 392], "cm": [10, 11, 14, 15, 22, 24, 25, 33, 37, 41, 43, 45, 47, 60, 61, 62, 63, 91, 103, 105, 114, 115, 120, 132, 146, 148, 149, 161, 197, 224, 262, 277, 279, 280, 293, 310, 329, 356, 364, 376, 386, 387, 388, 392], "\u03bcf": [10, 392], "ra": [10, 11, 14, 15, 22, 24, 33, 37, 43, 45, 47, 52, 60, 61, 62, 63, 91, 103, 105, 114, 120, 128, 148, 161, 170, 178, 202, 220, 224, 251, 258, 272, 279, 292, 293, 302, 310, 334, 352, 356, 386, 387, 388, 392], "ohm": [10, 11, 24, 25, 33, 37, 43, 45, 47, 61, 62, 63, 91, 103, 105, 114, 115, 161, 224, 293, 310, 356, 386, 387, 388, 392], "nseg": [10, 11, 14, 15, 22, 30, 33, 41, 43, 45, 46, 52, 58, 60, 61, 82, 84, 120, 121, 122, 148, 151, 155, 160, 161, 164, 182, 201, 203, 208, 272, 279, 282, 286, 292, 293, 296, 314, 333, 335, 340, 354, 365, 371, 372, 373, 374, 378, 380, 392], "kinet": [10, 29, 75, 104, 121, 131, 137, 145, 148, 217, 248, 252, 261, 268, 276, 279, 289, 292, 349, 370, 371, 375, 376, 386, 392, 397], "hodgkin": [10, 24, 38, 39, 45, 114, 115, 132, 141, 148, 149, 160, 250, 252, 262, 272, 279, 280, 290, 292, 347, 371, 376, 386, 392, 396, 397], "huxlei": [10, 24, 38, 39, 45, 114, 115, 148, 149, 160, 250, 252, 279, 280, 289, 290, 292, 347, 376, 386, 392, 396, 397], "dend": [10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 37, 38, 45, 58, 61, 103, 105, 160, 164, 173, 199, 208, 215, 289, 292, 293, 305, 331, 340, 347, 365, 371, 380, 386, 387, 388], "1000": [10, 11, 15, 24, 25, 32, 45, 47, 52, 91, 103, 127, 146, 156, 161, 168, 193, 194, 196, 197, 201, 213, 217, 226, 228, 230, 232, 257, 265, 277, 286, 287, 293, 300, 304, 325, 326, 328, 329, 333, 345, 349, 358, 360, 362, 373, 378, 380, 381], "try": [10, 11, 25, 28, 31, 34, 36, 44, 45, 46, 47, 54, 61, 63, 66, 71, 73, 81, 87, 89, 91, 97, 99, 114, 115, 122, 129, 155, 178, 181, 184, 200, 207, 208, 227, 243, 259, 286, 310, 313, 314, 316, 332, 339, 340, 359, 382, 383, 387, 389, 391, 392], "program": [10, 11, 13, 14, 26, 29, 31, 32, 35, 45, 46, 47, 48, 51, 52, 60, 62, 71, 77, 78, 83, 91, 94, 95, 114, 121, 122, 134, 148, 149, 155, 161, 164, 168, 172, 177, 178, 180, 181, 185, 194, 195, 196, 200, 201, 213, 219, 220, 226, 228, 236, 239, 243, 244, 250, 251, 252, 264, 279, 280, 286, 293, 300, 304, 309, 310, 312, 313, 317, 326, 327, 328, 329, 332, 333, 345, 351, 352, 358, 360, 374, 391, 392], "explor": [10, 11, 29, 34, 40, 46, 49, 59, 71, 82, 84, 121, 122, 124, 224, 237, 252, 254, 289, 356, 371, 374, 386, 390, 395], "collect": [10, 11, 40, 47, 53, 59, 76, 77, 78, 85, 88, 91, 95, 129, 131, 139, 150, 155, 156, 164, 168, 193, 197, 224, 228, 239, 251, 252, 259, 261, 270, 281, 286, 287, 300, 325, 329, 356, 360, 371, 387], "measur": [10, 11, 25, 40, 47, 59, 71, 81, 88, 89, 99, 125, 126, 127, 131, 148, 156, 161, 184, 217, 224, 252, 255, 256, 257, 261, 279, 287, 293, 316, 349, 356, 373, 375, 386, 392], "verifi": [10, 11, 13, 27, 38, 42, 43, 45, 48, 61, 62, 63, 91, 98, 99, 119, 207, 243, 252, 339], "properli": [10, 11, 12, 31, 44, 45, 61, 89, 121, 148, 149, 155, 159, 168, 185, 201, 202, 217, 220, 226, 228, 279, 280, 286, 291, 300, 317, 333, 334, 349, 352, 358, 360], "gaug": [10, 11], "success": [10, 11, 54, 65, 71, 149, 153, 155, 161, 164, 165, 184, 186, 196, 197, 208, 213, 228, 244, 252, 280, 284, 286, 293, 297, 314, 316, 318, 328, 329, 340, 345, 360, 382, 392], "our": [10, 11, 12, 25, 32, 41, 44, 61, 62, 63, 71, 75, 77, 81, 91, 95, 96, 99, 100, 105, 109, 111, 112, 149, 156, 185, 241, 280, 287, 289, 317, 354, 372, 375, 376, 377, 378, 382, 383, 386, 389, 390, 391, 392], "effort": [10, 11, 14, 32, 46, 61, 91, 98, 119, 128, 156, 228, 258, 287, 360, 382], "shorten": [10, 11, 65, 121, 392], "detect": [10, 11, 25, 47, 54, 154, 155, 197, 217, 239, 252, 285, 286, 329, 349, 387], "defici": [10, 11, 252], "correct": [10, 11, 14, 40, 42, 43, 47, 49, 81, 89, 93, 98, 103, 114, 115, 119, 134, 146, 148, 149, 150, 154, 155, 159, 161, 178, 197, 217, 220, 224, 238, 243, 244, 247, 252, 264, 277, 279, 280, 281, 286, 290, 291, 293, 310, 329, 349, 352, 356, 365, 371, 382, 389], "accord": [10, 11, 12, 14, 16, 25, 32, 41, 61, 63, 65, 105, 121, 124, 144, 148, 151, 155, 159, 168, 172, 197, 217, 226, 232, 234, 241, 243, 254, 275, 279, 282, 286, 291, 300, 304, 329, 337, 349, 358, 364, 366, 382, 383], "three": [10, 11, 13, 27, 33, 37, 42, 50, 61, 63, 65, 71, 83, 91, 94, 95, 103, 110, 112, 125, 128, 139, 142, 148, 150, 155, 156, 158, 161, 164, 178, 184, 186, 187, 197, 199, 208, 217, 226, 230, 245, 247, 252, 255, 258, 270, 273, 279, 281, 286, 287, 289, 293, 310, 316, 318, 329, 331, 340, 349, 358, 362, 365, 371, 382, 383, 391, 392, 396], "brief": [10, 11, 12, 44, 51, 61, 76, 77, 91, 94, 116, 149, 224, 252, 280, 356, 378, 391, 392, 397], "walkthrough": [10, 11], "fourth": [10, 11, 114, 115, 122, 133, 144, 217, 263, 275, 349, 371], "plot": [10, 11, 12, 13, 16, 17, 18, 19, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 58, 61, 64, 67, 69, 70, 72, 73, 74, 76, 81, 82, 84, 89, 91, 95, 98, 99, 100, 103, 105, 110, 112, 113, 119, 121, 122, 123, 125, 126, 127, 134, 135, 146, 149, 154, 161, 168, 185, 196, 197, 218, 220, 221, 224, 226, 228, 231, 232, 233, 250, 253, 255, 256, 257, 264, 266, 277, 279, 280, 286, 293, 300, 317, 328, 329, 330, 337, 350, 352, 353, 356, 358, 363, 364, 365, 370, 371, 372, 373, 378, 380, 381, 388, 389, 390, 391, 395], "stimulu": [10, 11, 13, 16, 17, 18, 31, 32, 37, 42, 45, 46, 66, 98, 119, 122, 128, 131, 142, 156, 197, 252, 258, 261, 273, 279, 287, 329, 347, 349, 387, 388, 389], "onerun": [10, 11, 13, 18], "prompt": [10, 11, 13, 28, 30, 31, 36, 45, 46, 52, 61, 62, 75, 76, 82, 87, 89, 91, 178, 187, 200, 243, 299, 308, 310, 319, 332], "na": [10, 11, 13, 16, 17, 18, 31, 47, 48, 59, 61, 62, 71, 84, 91, 114, 122, 142, 148, 150, 187, 217, 247, 252, 273, 279, 281, 349, 373, 376, 386, 392], "f": [10, 11, 13, 16, 17, 22, 27, 28, 36, 39, 44, 58, 63, 76, 88, 95, 100, 114, 115, 131, 133, 145, 146, 149, 155, 184, 186, 193, 197, 210, 216, 217, 224, 228, 233, 245, 251, 252, 261, 263, 276, 277, 278, 280, 286, 316, 318, 325, 329, 342, 348, 349, 356, 360, 365, 370, 371, 372, 373, 381, 382, 386, 391, 392], "either": [10, 13, 14, 44, 52, 59, 65, 76, 85, 89, 90, 114, 115, 121, 129, 131, 133, 139, 148, 149, 150, 151, 155, 156, 158, 165, 176, 182, 184, 186, 193, 196, 197, 200, 208, 217, 224, 228, 243, 245, 250, 252, 259, 261, 263, 270, 279, 280, 281, 282, 286, 287, 289, 295, 296, 297, 308, 310, 314, 316, 318, 325, 328, 329, 332, 337, 340, 349, 356, 360, 371, 372, 374, 376, 382, 386, 388, 389, 391, 392], "task": [10, 11, 13, 14, 26, 32, 42, 49, 60, 63, 76, 88, 89, 95, 103, 106, 107, 155, 226, 236, 252, 286, 358, 382], "processor": [10, 11, 13, 36, 49, 95, 121, 155, 216, 243, 251, 252, 286, 348, 389], "carri": [10, 11, 13, 88, 131, 142, 149, 150, 155, 252, 261, 273, 280, 281, 286, 377], "multicor": [10, 11, 13, 36, 155, 239, 286], "equal": [10, 11, 13, 24, 25, 28, 29, 33, 39, 52, 65, 75, 86, 91, 102, 104, 124, 129, 131, 146, 149, 155, 156, 159, 161, 163, 165, 178, 181, 187, 193, 196, 197, 201, 216, 217, 223, 224, 226, 247, 252, 254, 259, 261, 277, 280, 286, 287, 291, 293, 295, 297, 310, 313, 314, 319, 325, 328, 329, 333, 348, 349, 355, 356, 358, 365, 371, 377, 386, 391, 392], "respond": [10, 11, 66, 75, 82, 155, 252, 286, 376, 386, 387], "smallest": [10, 11, 39, 40, 47, 86], "largest": [10, 11, 32, 47, 86], "stimuli": [10, 11, 71, 95, 121, 141, 148, 150, 252, 272, 279, 281, 289], "elicit": [10, 11, 32, 91, 148, 252, 279], "repetit": [10, 11, 13, 75, 228, 252, 360, 387], "hasn": [10, 11, 382], "broken": [10, 11, 95, 155, 286], "fi": [10, 11, 13, 16, 17, 216, 348], "fiser": [10, 11], "finompi": [10, 11], "fimpi4": [10, 11], "cmp": [10, 11], "fc": [10, 11, 374], "cmd": [10, 155, 165, 178, 246], "power": [10, 25, 28, 47, 60, 68, 71, 76, 77, 78, 82, 84, 86, 88, 98, 114, 115, 118, 119, 143, 145, 193, 197, 200, 201, 224, 239, 252, 274, 276, 278, 290, 325, 329, 332, 333, 356, 371, 374, 382, 383, 388, 392], "shell": [10, 31, 46, 48, 76, 149, 158, 208, 213, 239, 243, 246, 247, 265, 280, 289, 345, 371], "evalu": [10, 11, 13, 76, 89, 99, 114, 115, 133, 150, 154, 155, 181, 193, 201, 208, 217, 226, 252, 263, 281, 285, 286, 289, 297, 313, 325, 333, 340, 349, 358, 382, 391], "266b5a0": [10, 286], "2017": [10, 239, 252, 286], "05": [10, 17, 19, 67, 94, 122, 200, 228, 247, 252, 279, 286, 293, 332, 360, 371, 373, 387, 391], "22": [10, 67, 154, 155, 159, 197, 200, 213, 245, 252, 286, 291, 329, 332, 345, 347, 378, 386, 387, 391, 392], "subsystem": [10, 237, 242], "quad": [10, 11, 91, 128, 133, 197, 258, 263, 329], "desktop": [10, 11, 71, 78, 245], "16": [10, 11, 29, 65, 76, 95, 155, 159, 194, 197, 247, 250, 251, 252, 286, 289, 291, 326, 329, 378, 382, 386, 387, 391, 392], "speedup": [10, 11, 13, 36, 96, 121, 156, 287], "41": [10, 197, 251, 252, 279, 293, 329, 386, 391, 392], "77": [10, 251, 252, 293, 391, 392], "62": [10, 21, 226, 252, 358, 378, 391], "94": [10, 150, 239, 252, 281], "insert": [10, 11, 13, 14, 15, 22, 28, 30, 31, 46, 47, 48, 58, 61, 62, 64, 65, 67, 72, 76, 83, 84, 91, 122, 136, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 168, 169, 197, 199, 201, 207, 208, 217, 220, 221, 222, 226, 228, 233, 247, 250, 267, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 289, 292, 293, 300, 301, 306, 329, 331, 333, 339, 340, 347, 349, 352, 354, 358, 360, 365, 376, 378, 386, 387, 388, 397], "reveal": [10, 11, 40, 46, 47, 75, 81, 110, 252], "sequenc": [10, 11, 13, 39, 42, 45, 60, 61, 76, 82, 89, 95, 98, 119, 128, 148, 149, 155, 160, 161, 164, 184, 194, 196, 197, 216, 217, 222, 226, 234, 236, 252, 258, 279, 280, 286, 292, 293, 316, 326, 328, 329, 348, 349, 354, 358, 366, 377], "whatev": [10, 11, 31, 61, 62, 87, 122, 156, 164, 185, 215, 217, 238, 287, 289, 317, 347, 349, 389], "think": [10, 11, 43, 46, 61, 62, 71, 89, 91, 114, 115, 121, 131, 149, 217, 228, 261, 280, 349, 360, 388, 392], "understand": [10, 11, 12, 26, 65, 71, 81, 84, 95, 120, 121, 139, 155, 161, 224, 252, 270, 286, 293, 316, 356, 374, 375, 382, 383, 387], "flow": [10, 11, 25, 45, 82, 125, 148, 158, 161, 164, 252, 255, 279, 289, 293, 349, 383, 384], "suggest": [10, 11, 29, 71, 75, 89, 91, 114, 115, 149, 155, 156, 197, 237, 252, 280, 286, 287, 329, 382, 383, 387, 392], "ident": [10, 11, 13, 25, 28, 29, 61, 89, 110, 121, 146, 148, 149, 155, 158, 160, 163, 165, 181, 193, 197, 212, 217, 226, 228, 233, 252, 265, 277, 279, 280, 286, 292, 295, 297, 313, 318, 325, 329, 330, 344, 349, 358, 360, 365, 392], "id": [10, 11, 13, 15, 16, 17, 18, 19, 23, 42, 53, 95, 98, 119, 122, 153, 154, 155, 156, 200, 217, 222, 228, 243, 279, 283, 284, 285, 286, 287, 292, 332, 349, 354, 360, 364, 382, 383, 389], "proc": [10, 11, 16, 17, 18, 21, 22, 28, 29, 52, 64, 71, 72, 76, 83, 91, 120, 143, 146, 154, 155, 161, 163, 165, 168, 169, 173, 178, 180, 185, 186, 188, 192, 193, 194, 196, 197, 199, 201, 202, 208, 211, 214, 220, 221, 226, 227, 230, 232, 234, 252, 274, 297, 312, 327, 333, 334, 340, 352, 353, 356, 359, 392], "func": [10, 11, 16, 17, 21, 22, 28, 52, 71, 76, 91, 120, 133, 155, 165, 180, 197, 201, 202, 203, 265, 297, 312, 329, 333, 334, 392], "illumin": [10, 11], "dark": [10, 11], "littl": [10, 11, 13, 47, 73, 81, 89, 91, 98, 104, 119, 121, 161, 228, 234, 236, 252, 293, 360, 366, 377, 386], "corner": [10, 11, 25, 31, 42, 61, 65, 81, 94, 100, 170, 172, 226, 228, 230, 234, 252, 302, 304, 358, 360, 362, 366, 378], "neurosci": [10, 11, 26, 35, 83, 84, 88, 95, 121, 237, 251, 252, 301, 389], "focu": [10, 11, 121, 156, 228, 252, 287, 360, 382, 386, 387], "princip": [10, 11, 27, 32, 47, 69, 77, 81, 88, 91, 128, 129, 133, 193, 220, 224, 252, 258, 259, 263, 325, 352, 356], "job": [10, 11, 13, 16, 53, 60, 61, 73, 91, 100, 155, 220, 236, 239, 243, 245, 286, 352], "worker": [10, 11, 13, 16, 155, 156, 286, 287], "nrun": [10, 11, 13, 16, 17], "happen": [10, 11, 14, 24, 25, 28, 30, 31, 32, 36, 41, 42, 44, 46, 61, 84, 89, 91, 94, 95, 96, 97, 98, 99, 110, 111, 114, 115, 119, 129, 149, 150, 155, 156, 161, 185, 187, 197, 199, 217, 234, 259, 280, 281, 286, 287, 293, 317, 319, 329, 331, 349, 353, 356, 366, 372, 373, 382, 383, 387, 389, 391, 392], "monitor": [10, 11, 13, 42, 59, 71, 91, 94, 114, 228, 286, 293, 356, 360, 386, 387, 389], "sens": [10, 11, 14, 61, 76, 89, 91, 114, 115, 139, 149, 150, 154, 155, 161, 168, 170, 181, 193, 208, 228, 230, 252, 270, 280, 281, 285, 286, 291, 293, 300, 302, 313, 325, 340, 360, 362, 374, 382, 391], "curv": [10, 11, 13, 16, 17, 89, 91, 128, 129, 197, 224, 225, 226, 252, 258, 259, 329, 356, 357, 370, 386], "initplotfi": [10, 11, 19], "advantag": [10, 11, 29, 46, 82, 89, 91, 93, 95, 120, 194, 197, 217, 226, 243, 252, 326, 329, 340, 370, 371, 382, 388], "um": [11, 25, 31, 33, 37, 43, 46, 59, 63, 208, 239, 247, 289, 293, 310, 340, 372, 376], "um2": [11, 15, 31, 37, 161, 247], "uf": [11, 37, 43, 63, 91, 114, 115, 148, 149, 279, 280], "cm2": [11, 61, 62, 87, 91, 114, 115, 132, 146, 148, 150, 161, 178, 217, 247, 262, 277, 279, 281, 310, 349, 376, 378, 386, 387, 388, 392], "appropri": [11, 13, 16, 17, 24, 30, 38, 39, 41, 52, 59, 71, 76, 91, 100, 144, 148, 149, 150, 155, 159, 165, 197, 200, 201, 207, 217, 220, 226, 227, 239, 243, 245, 275, 279, 280, 281, 286, 289, 291, 297, 329, 332, 333, 339, 340, 349, 352, 359, 371, 374, 376, 382, 386, 387, 392], "d_lambda": [11, 24, 30, 37, 43, 61, 62, 71, 91, 103, 105, 121], "hz": [11, 13, 25, 61, 120, 126, 127, 131, 197, 252, 256, 257, 261, 329], "nrngui": [11, 20, 46, 64, 67, 71, 72, 91, 98, 117, 119, 122, 146, 154, 156, 178, 197, 200, 208, 211, 214, 220, 224, 243, 329, 332, 340, 343, 356], "oc": [11, 28, 37, 52, 54, 61, 76, 81, 82, 87, 89, 91, 149, 165, 176, 197, 213, 265, 280, 297, 308, 329], "mpd": 11, "508": [11, 252], "9756f32df7d0": 11, "426": [11, 252, 347], "7b4f020b29e8": 11, "2010": [11, 15, 155, 213, 251, 252, 345, 382], "dual": [11, 121, 155, 252, 286], "laptop": 11, "nrnxx": [11, 87], "pop": [12, 20, 32, 36, 37, 46, 52, 61, 67, 75, 79, 89, 91, 94, 102, 103, 124, 128, 129, 139, 148, 150, 154, 164, 167, 171, 172, 173, 174, 178, 182, 184, 201, 207, 208, 218, 224, 227, 228, 231, 234, 235, 244, 254, 258, 259, 270, 279, 281, 296, 299, 303, 304, 305, 306, 310, 314, 316, 333, 339, 340, 350, 356, 359, 360, 363, 366, 367, 392], "style": [12, 13, 25, 32, 37, 65, 71, 76, 93, 121, 122, 133, 139, 144, 145, 150, 154, 155, 156, 161, 164, 175, 178, 179, 181, 184, 185, 193, 197, 207, 208, 213, 217, 225, 226, 228, 231, 234, 243, 252, 263, 270, 275, 276, 281, 285, 286, 287, 289, 293, 306, 307, 310, 311, 313, 316, 317, 325, 329, 339, 340, 345, 349, 357, 358, 360, 363, 366, 382], "arrang": [12, 33, 42, 61, 94, 105, 122, 139, 223, 228, 233, 252, 270, 286, 355, 360, 365, 387], "renam": [12, 32, 37, 89, 102, 103, 104, 105, 149, 224, 279, 280, 356, 382, 383], "clearli": [12, 24, 29, 39, 114, 115, 122, 149, 244, 280, 382, 386, 387], "associ": [12, 54, 71, 74, 75, 76, 90, 102, 121, 131, 144, 149, 150, 154, 155, 156, 158, 161, 172, 178, 181, 194, 197, 199, 200, 202, 208, 216, 217, 220, 224, 226, 228, 235, 238, 252, 261, 275, 279, 280, 281, 285, 286, 287, 289, 293, 304, 310, 313, 326, 329, 331, 332, 334, 340, 348, 349, 352, 356, 358, 360, 367, 374, 382, 389, 392, 397], "puls": [12, 30, 31, 33, 38, 41, 44, 58, 61, 62, 66, 82, 85, 91, 122, 142, 148, 197, 217, 252, 273, 279, 329, 349, 386], "protocol": [12, 33, 42, 71, 88, 91, 98, 119, 121, 128, 155, 252, 258], "batteri": [12, 33, 200, 252, 332], "button": [12, 14, 25, 28, 29, 31, 32, 34, 36, 37, 42, 45, 46, 47, 48, 50, 61, 62, 65, 71, 74, 75, 79, 80, 81, 89, 91, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 124, 125, 126, 128, 129, 137, 139, 142, 151, 168, 169, 174, 178, 181, 184, 200, 207, 218, 219, 221, 223, 224, 226, 227, 231, 235, 243, 254, 255, 256, 258, 259, 268, 270, 273, 282, 300, 301, 306, 310, 313, 316, 332, 339, 350, 351, 353, 355, 356, 358, 359, 363, 367], "basic": [12, 22, 29, 30, 32, 37, 52, 53, 61, 71, 76, 82, 83, 91, 95, 122, 131, 141, 147, 150, 153, 155, 156, 200, 208, 216, 217, 218, 226, 252, 261, 272, 278, 281, 284, 286, 287, 332, 340, 348, 349, 350, 358, 373, 382, 383, 388, 389, 391, 393, 395], "panel": [12, 14, 25, 27, 28, 29, 31, 32, 36, 37, 42, 45, 46, 47, 61, 71, 81, 89, 91, 94, 98, 99, 100, 101, 102, 107, 109, 118, 119, 123, 124, 125, 126, 127, 129, 138, 139, 140, 142, 144, 149, 150, 168, 170, 171, 174, 178, 199, 207, 217, 224, 226, 227, 229, 235, 253, 254, 255, 256, 257, 259, 266, 269, 270, 271, 273, 275, 280, 281, 300, 302, 303, 306, 310, 331, 339, 349, 356, 358, 359, 361, 367, 375], "left": [12, 25, 31, 32, 33, 37, 41, 42, 46, 47, 52, 61, 62, 65, 74, 75, 76, 79, 80, 81, 89, 91, 94, 98, 99, 100, 104, 105, 107, 109, 118, 119, 124, 126, 128, 129, 139, 142, 148, 149, 150, 161, 168, 170, 172, 174, 175, 181, 184, 186, 190, 192, 193, 197, 201, 204, 211, 213, 218, 220, 226, 227, 228, 230, 231, 233, 234, 235, 252, 254, 256, 258, 259, 270, 273, 279, 280, 281, 289, 293, 300, 302, 304, 306, 307, 313, 316, 318, 322, 324, 325, 329, 333, 336, 343, 344, 345, 350, 352, 358, 359, 360, 362, 363, 365, 366, 367, 371, 372, 374, 378, 386, 391, 392], "scene": [12, 67, 139, 140, 142, 226, 227, 231, 234, 235, 240, 270, 271, 273, 286, 358, 359, 363, 366, 367], "drag": [12, 27, 32, 37, 42, 47, 50, 61, 62, 65, 68, 71, 75, 80, 81, 91, 94, 99, 100, 104, 105, 106, 107, 108, 110, 117, 118, 128, 129, 168, 172, 173, 218, 226, 228, 231, 235, 243, 258, 259, 300, 301, 304, 305, 350, 358, 360, 363, 367, 386], "unconnect": 12, "red": [12, 25, 27, 28, 29, 42, 46, 47, 61, 65, 79, 81, 89, 91, 94, 96, 99, 100, 105, 122, 126, 127, 139, 140, 161, 177, 197, 226, 230, 232, 234, 235, 243, 256, 257, 270, 271, 279, 293, 309, 329, 358, 362, 364, 366, 367, 386, 387, 388], "circl": [12, 29, 61, 65, 103, 105, 197, 225, 226, 234, 329, 357, 358, 366, 387], "overlap": [12, 37, 105, 107, 196, 328, 386], "fact": [12, 37, 39, 40, 59, 71, 76, 89, 91, 103, 148, 150, 155, 156, 160, 161, 164, 193, 197, 217, 220, 227, 228, 279, 281, 286, 287, 292, 293, 325, 349, 352, 359, 360, 371, 382, 383, 386, 387], "small": [12, 29, 32, 39, 40, 42, 47, 53, 61, 65, 71, 73, 75, 76, 89, 91, 100, 121, 122, 128, 129, 131, 143, 149, 150, 155, 156, 159, 181, 197, 217, 220, 225, 227, 231, 236, 239, 252, 258, 259, 261, 274, 280, 281, 286, 287, 291, 313, 329, 349, 352, 357, 359, 363, 378, 382, 383, 386], "black": [12, 25, 27, 61, 65, 87, 89, 91, 96, 108, 110, 122, 140, 197, 226, 230, 241, 271, 279, 329, 358, 362, 386, 387, 388], "squar": [12, 25, 29, 31, 47, 65, 76, 81, 86, 89, 118, 128, 129, 133, 146, 158, 161, 181, 191, 193, 197, 201, 217, 226, 232, 252, 258, 259, 263, 277, 289, 290, 293, 313, 323, 325, 329, 333, 349, 358, 364, 371, 391, 392], "rotat": [12, 25, 38, 40, 58, 65, 68, 146, 197, 225, 226, 231, 232, 234, 277, 329, 330, 337, 357, 358, 363, 364, 366, 386, 387, 388], "attempt": [12, 42, 54, 73, 76, 84, 98, 119, 131, 133, 148, 150, 155, 160, 161, 170, 182, 207, 217, 261, 263, 279, 281, 286, 289, 292, 293, 314, 318, 339, 349, 382, 389, 391], "fairli": [12, 29, 32, 91], "topologi": [12, 14, 36, 37, 45, 46, 47, 60, 62, 76, 81, 135, 141, 146, 161, 163, 207, 224, 252, 266, 272, 277, 286, 293, 339, 349, 356, 386], "pleasingli": 12, "format": [12, 13, 28, 47, 52, 59, 65, 71, 76, 81, 89, 94, 114, 115, 121, 122, 124, 135, 145, 155, 156, 160, 180, 182, 183, 184, 185, 193, 197, 210, 212, 213, 216, 222, 224, 228, 240, 243, 252, 254, 266, 276, 286, 287, 291, 292, 293, 305, 312, 315, 316, 317, 325, 328, 329, 331, 342, 344, 345, 348, 353, 354, 356, 358, 360, 371, 380, 382, 386, 387, 388, 389, 391, 392, 397], "unlabel": [12, 228, 360], "probabl": [12, 14, 27, 32, 47, 53, 54, 61, 71, 77, 88, 91, 93, 131, 134, 154, 155, 164, 194, 196, 197, 207, 208, 214, 217, 221, 252, 261, 264, 285, 286, 289, 290, 296, 326, 328, 329, 339, 340, 346, 349, 353, 391], "organ": [13, 29, 45, 51, 60, 95, 117, 150, 155, 168, 169, 193, 197, 228, 247, 251, 252, 281, 286, 300, 301, 325, 329, 360, 382, 387, 392], "modular": [13, 43, 45, 51, 60, 71, 83, 85, 91, 252], "fashion": [13, 76], "highlight": [13, 25, 42, 81, 84, 94, 99, 100, 139, 155, 169, 173, 178, 184, 228, 231, 235, 270, 286, 301, 305, 310, 316, 360, 363, 367], "fire": [13, 16, 32, 38, 46, 70, 75, 85, 95, 102, 111, 148, 156, 197, 252, 279, 287, 291, 329, 376, 387, 397], "settl": [13, 24, 73, 89, 91], "pattern": [13, 14, 32, 46, 47, 60, 61, 65, 68, 81, 82, 154, 155, 161, 197, 217, 226, 252, 285, 286, 293, 329, 349, 358, 374], "interspik": [13, 32, 75, 102, 252], "slightli": [13, 29, 61, 73, 93, 99, 145, 149, 158, 161, 197, 217, 230, 276, 280, 291, 293, 310, 323, 329, 349, 362, 392], "nsettl": [13, 16, 17, 18], "isi": [13, 16, 17, 18, 95], "slowest": [13, 231, 363], "sustain": [13, 251, 252], "40": [13, 18, 24, 58, 67, 154, 161, 187, 196, 197, 201, 252, 279, 280, 285, 293, 328, 329, 333, 347, 364, 376, 386, 391, 392], "longest": [13, 41, 197, 329], "375": [13, 252], "500": [13, 16, 17, 18, 22, 37, 41, 43, 61, 63, 67, 121, 131, 161, 193, 196, 226, 230, 252, 261, 279, 325, 328, 329, 358, 362, 376, 386, 392], "attach": [13, 25, 29, 37, 53, 66, 76, 91, 103, 105, 108, 110, 112, 122, 148, 149, 155, 161, 178, 226, 228, 244, 279, 280, 286, 292, 293, 295, 310, 358, 360, 386, 387], "iclamp": [13, 16, 17, 18, 28, 31, 33, 42, 43, 45, 58, 59, 61, 67, 76, 82, 84, 88, 98, 118, 119, 142, 143, 148, 150, 151, 154, 164, 170, 196, 208, 239, 247, 250, 272, 273, 274, 278, 279, 281, 282, 285, 296, 301, 302, 328, 329, 340, 347, 349, 365, 386, 392], "analysi": [13, 16, 17, 18, 26, 81, 82, 84, 95, 121, 149, 198, 239, 251, 252, 280, 330, 392, 395], "get_frequ": 13, "spvec": [13, 16, 17, 18], "enough": [13, 16, 17, 18, 32, 37, 45, 47, 51, 61, 81, 87, 95, 100, 122, 149, 150, 155, 156, 193, 197, 220, 243, 252, 280, 281, 286, 287, 325, 329, 352, 374], "occur": [13, 34, 42, 44, 75, 76, 83, 84, 93, 95, 97, 98, 102, 107, 119, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 166, 184, 197, 201, 217, 221, 239, 279, 280, 281, 285, 286, 287, 289, 291, 293, 298, 316, 321, 329, 333, 349, 353, 371, 372, 374, 381, 382, 383, 388, 389, 391], "freq": [13, 16, 17, 18, 120, 131, 197, 261, 329], "ninvl": [13, 16, 17, 18], "analyz": [13, 16, 17, 18, 49, 81, 84, 95, 239, 252], "batch": [13, 16, 17, 76, 220, 352, 395], "signific": [13, 25, 33, 45, 59, 81, 91, 149, 155, 228, 252, 280, 360, 374, 382, 383, 391], "plotresult": [13, 17], "amp0": [13, 16, 17, 142, 272, 273], "d_amp": 13, "increment": [13, 16, 17, 47, 50, 52, 54, 71, 76, 102, 149, 155, 169, 181, 194, 196, 197, 201, 207, 220, 226, 228, 234, 280, 286, 293, 301, 313, 326, 328, 329, 333, 337, 339, 349, 352, 360, 366, 382, 383], "setparam": [13, 16, 17], "run_id": 13, "Its": [13, 46, 50, 61, 109, 121, 149, 161, 207, 228, 252, 280, 293, 339, 360, 371, 382], "whole": [13, 25, 36, 81, 155, 181, 197, 226, 228, 234, 252, 286, 289, 292, 313, 329, 340, 358, 360, 366, 382, 386], "batchrun": [13, 16, 17], "discuss": [13, 29, 32, 40, 42, 47, 52, 71, 89, 91, 94, 98, 119, 121, 128, 131, 149, 150, 155, 156, 158, 164, 217, 252, 258, 280, 281, 286, 287, 289, 296, 349, 382, 383, 396], "trun": [13, 16, 17], "loop": [13, 16, 28, 29, 76, 91, 129, 150, 155, 160, 161, 164, 178, 181, 197, 201, 218, 224, 226, 245, 252, 259, 281, 286, 292, 293, 296, 310, 313, 329, 333, 350, 356, 358, 365, 373, 386, 388, 397], "counter": [13, 52, 155, 196, 239, 286, 328], "pair": [13, 51, 59, 69, 89, 94, 95, 103, 124, 129, 131, 148, 149, 154, 155, 161, 184, 193, 197, 217, 222, 224, 228, 252, 254, 259, 279, 280, 285, 286, 293, 308, 316, 325, 329, 349, 354, 356, 360, 386, 387, 391, 392], "messag": [13, 14, 36, 40, 46, 47, 52, 54, 61, 76, 81, 82, 84, 99, 105, 108, 110, 114, 115, 121, 131, 144, 145, 150, 153, 154, 155, 158, 163, 165, 166, 184, 191, 193, 199, 201, 207, 217, 220, 228, 239, 243, 244, 261, 275, 276, 281, 284, 286, 289, 295, 297, 298, 299, 316, 321, 323, 325, 331, 333, 339, 349, 352, 360, 371, 382, 383, 387, 389, 391], "saveresult": [13, 16, 17], "text": [13, 24, 32, 42, 46, 47, 61, 65, 68, 76, 79, 82, 84, 87, 94, 98, 119, 122, 146, 149, 155, 158, 174, 175, 179, 181, 184, 185, 197, 201, 228, 230, 277, 280, 289, 299, 306, 307, 310, 311, 313, 316, 317, 329, 333, 347, 360, 362, 373, 380, 382, 397], "menu": [13, 25, 29, 30, 31, 32, 37, 42, 46, 47, 50, 61, 65, 74, 75, 76, 79, 80, 81, 82, 89, 91, 94, 98, 100, 102, 103, 107, 118, 119, 122, 123, 124, 125, 126, 127, 129, 139, 140, 142, 148, 151, 172, 178, 179, 197, 207, 214, 217, 218, 221, 226, 227, 231, 234, 235, 243, 253, 254, 255, 256, 257, 259, 270, 271, 272, 273, 279, 282, 304, 310, 311, 329, 339, 346, 349, 350, 353, 358, 359, 363, 366, 367], "retriev": [13, 14, 16, 19, 42, 62, 76, 82, 89, 91, 121, 128, 129, 131, 155, 178, 181, 197, 204, 224, 252, 258, 259, 261, 286, 310, 313, 329, 336, 356, 391], "busi": [13, 46, 76, 149, 155, 213, 280, 286, 345], "commun": [13, 52, 84, 121, 153, 155, 156, 206, 252, 281, 284, 286, 287, 338, 368, 371, 374, 387, 390], "exchang": [13, 84, 149, 155, 156, 239, 251, 252, 280, 286, 287, 392], "seri": [13, 41, 71, 76, 91, 94, 98, 119, 148, 149, 161, 176, 201, 243, 248, 252, 279, 280, 286, 293, 308, 333, 347, 373, 382, 383, 387, 388, 389, 390, 391, 394, 396, 397], "set_param": 13, "stim": [13, 16, 17, 18, 28, 98, 119, 142, 143, 148, 150, 151, 155, 156, 164, 208, 239, 247, 273, 274, 279, 281, 282, 286, 287, 296, 329, 340, 376, 386, 387], "amp": [13, 16, 17, 18, 28, 31, 33, 58, 59, 67, 71, 91, 131, 142, 143, 148, 150, 154, 155, 170, 196, 247, 250, 252, 261, 272, 273, 274, 279, 281, 285, 286, 302, 329, 347, 365, 386, 392], "finish": [13, 27, 52, 99, 100, 103, 105, 109, 124, 129, 133, 143, 149, 154, 155, 218, 221, 254, 259, 263, 274, 280, 285, 286, 350, 353, 382, 383], "def": [13, 24, 29, 44, 58, 59, 87, 95, 133, 146, 155, 159, 216, 228, 247, 263, 277, 279, 282, 285, 286, 291, 292, 293, 300, 301, 305, 310, 317, 318, 319, 320, 324, 325, 326, 327, 328, 329, 331, 337, 346, 348, 349, 352, 353, 354, 356, 358, 360, 362, 364, 365, 366, 370, 371, 372, 373, 375, 378, 380, 386, 387, 388, 389, 391], "param": [13, 16, 27, 28, 29, 52, 63, 91, 207, 339, 388, 389], "notic": [13, 25, 28, 29, 31, 33, 36, 42, 46, 52, 61, 71, 76, 89, 94, 99, 100, 114, 115, 149, 150, 154, 155, 156, 160, 161, 164, 185, 187, 197, 208, 217, 221, 226, 279, 280, 281, 285, 286, 287, 292, 293, 317, 329, 340, 349, 353, 382, 383, 386, 391, 392], "overhead": [13, 131, 154, 155, 156, 165, 196, 197, 204, 215, 217, 239, 261, 285, 286, 287, 297, 328, 329, 347, 349], "tupl": [13, 208, 289, 310, 340, 368, 391], "obtain": [13, 37, 39, 41, 47, 88, 91, 128, 131, 149, 153, 155, 158, 164, 194, 202, 208, 217, 220, 226, 228, 230, 244, 252, 258, 261, 280, 284, 286, 289, 296, 297, 326, 334, 340, 349, 352, 360, 362, 373, 382, 383, 391], "unpack": [13, 16, 155, 283, 286], "recomput": [13, 161, 220, 247, 293, 352], "balanc": [13, 146, 155, 156, 220, 252, 277, 286, 287, 352, 373, 389], "conveni": [13, 14, 25, 27, 28, 32, 42, 47, 53, 54, 60, 61, 69, 76, 81, 82, 91, 94, 106, 107, 114, 115, 122, 145, 148, 149, 158, 161, 169, 174, 188, 197, 200, 201, 217, 220, 221, 226, 228, 244, 245, 276, 279, 280, 289, 293, 301, 306, 310, 320, 329, 332, 333, 349, 352, 353, 358, 360, 374, 375, 382, 391, 392], "aim": [13, 24, 53, 61, 91, 93, 122, 368, 382], "prealloc": 13, "length": [13, 24, 25, 27, 38, 40, 41, 45, 46, 52, 60, 61, 62, 63, 71, 89, 95, 99, 100, 114, 120, 121, 129, 133, 149, 155, 160, 161, 164, 184, 194, 196, 197, 201, 205, 208, 211, 213, 215, 216, 217, 218, 227, 232, 233, 234, 250, 252, 259, 263, 280, 286, 289, 292, 293, 296, 310, 316, 326, 328, 329, 333, 337, 340, 343, 345, 348, 349, 350, 359, 364, 365, 366, 371, 373, 374, 376, 378, 386, 391, 392], "store": [13, 28, 36, 38, 54, 59, 65, 71, 84, 129, 131, 155, 161, 193, 197, 200, 208, 217, 222, 226, 227, 230, 233, 239, 244, 245, 252, 259, 261, 286, 289, 293, 325, 329, 332, 339, 340, 347, 349, 354, 358, 359, 362, 365, 382, 386, 387, 388, 389, 392], "none": [13, 65, 95, 148, 150, 154, 155, 158, 168, 200, 208, 216, 247, 279, 281, 282, 285, 286, 289, 292, 295, 300, 318, 332, 340, 348, 349, 371, 373, 374, 378, 388, 389, 391, 392], "submit": [13, 16, 61, 155, 283, 286], "pyret": [13, 155, 283, 286], "noth": [13, 29, 61, 74, 89, 91, 128, 150, 155, 156, 161, 165, 166, 169, 171, 182, 184, 199, 231, 239, 258, 281, 286, 287, 293, 297, 298, 301, 303, 314, 316, 331, 363, 382, 386, 389, 392], "pick": [13, 16, 29, 43, 71, 73, 89, 91, 122, 133, 196, 197, 206, 236, 244, 263, 328, 329, 338, 372, 382, 383], "guarante": [13, 40, 149, 155, 156, 160, 164, 168, 280, 286, 287, 292, 296, 300, 382, 383, 389], "nerv": [14, 114, 115, 149, 251, 252, 280, 376], "control": [14, 16, 17, 18, 25, 27, 28, 31, 32, 33, 40, 42, 45, 61, 65, 71, 82, 87, 89, 95, 96, 98, 99, 101, 119, 125, 126, 128, 139, 148, 149, 151, 155, 156, 164, 168, 172, 177, 178, 180, 183, 186, 201, 207, 217, 221, 226, 228, 231, 234, 243, 252, 255, 256, 258, 270, 279, 280, 282, 286, 287, 296, 300, 304, 309, 310, 312, 315, 318, 333, 339, 349, 353, 358, 360, 363, 366, 374, 382, 386, 392], "biophys": [14, 24, 26, 27, 31, 34, 43, 45, 46, 47, 60, 69, 71, 81, 82, 83, 84, 85, 91, 95, 101, 105, 110, 112, 120, 220, 224, 252, 347, 352, 356, 395], "morphometr": [14, 26, 45, 62, 82, 91, 121, 252], "break": [14, 28, 51, 52, 60, 61, 71, 76, 155, 164, 194, 197, 201, 236, 239, 286, 326, 333, 382, 392], "analog": [14, 61, 76, 91, 95, 102, 121, 143, 154, 155, 197, 208, 217, 226, 252, 274, 285, 286, 329, 337, 349, 358, 373], "group": [14, 31, 37, 42, 46, 48, 60, 61, 65, 71, 76, 78, 82, 84, 89, 91, 94, 122, 128, 155, 172, 178, 181, 217, 224, 228, 252, 258, 286, 304, 310, 311, 313, 349, 356, 360, 382], "subset": [14, 22, 27, 32, 35, 46, 60, 63, 81, 84, 91, 101, 143, 156, 186, 197, 210, 228, 252, 274, 287, 318, 329, 342, 360], "anatom": [14, 25, 34, 40, 43, 47, 61, 62, 69, 71, 81, 91, 95, 105, 112, 121, 252], "criteria": [14, 40, 88, 121], "basilar": [14, 25, 43, 61, 62, 63], "apic": [14, 25, 27, 41, 43, 59, 61, 62, 63, 99, 100, 101, 252, 289, 296, 364, 391], "obliqu": [14, 252, 391], "spini": [14, 252], "aspini": 14, "passiv": [14, 24, 25, 31, 43, 45, 61, 91, 148, 149, 220, 252, 279, 280, 352, 386, 387, 388, 392], "conjunct": [14, 164, 226, 358, 368], "reconstruct": [14, 40, 42, 45, 47, 51, 59, 62, 98, 119, 161, 207, 231, 252, 293, 339, 363], "choic": [14, 25, 27, 38, 39, 59, 61, 73, 89, 94, 121, 122, 149, 174, 241, 252, 280, 306, 310, 370, 382], "neuronmainmenu": [14, 30, 32, 37, 42, 45, 98, 119, 172, 178, 224, 228, 304, 310, 356, 360], "asid": [14, 47, 59, 61, 81, 91, 386], "load_fil": [14, 24, 30, 31, 36, 38, 42, 45, 46, 58, 59, 61, 71, 72, 91, 95, 98, 114, 119, 143, 146, 154, 156, 158, 159, 165, 178, 197, 200, 208, 214, 220, 224, 227, 247, 250, 279, 287, 291, 297, 329, 332, 340, 343, 349, 350, 354, 356, 359, 364, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 386, 387, 388, 392], "celbild": 14, "makecellbuild": 14, "row": [14, 175, 193, 220, 228, 252, 307, 325, 352, 360, 376, 392], "radio": [14, 25, 31, 32, 42, 61, 62, 79, 80, 91, 94, 107, 108, 110, 126, 128, 168, 178, 226, 228, 256, 258, 300, 310, 358, 360], "checkbox": [14, 27, 47, 61, 81, 89, 91, 101, 120, 122, 124, 128, 129, 178, 217, 228, 254, 258, 259, 310, 349, 360], "label": [14, 16, 17, 19, 25, 32, 33, 37, 42, 61, 62, 74, 75, 89, 103, 105, 106, 107, 110, 118, 122, 139, 140, 151, 167, 168, 169, 171, 178, 181, 197, 199, 202, 224, 225, 226, 228, 230, 231, 232, 234, 235, 270, 271, 282, 286, 299, 300, 301, 303, 310, 313, 329, 330, 331, 334, 337, 356, 357, 358, 360, 362, 363, 364, 366, 367, 370, 375, 378, 382, 387], "continu": [14, 24, 26, 27, 31, 34, 36, 38, 39, 45, 47, 50, 52, 62, 67, 75, 76, 84, 89, 91, 96, 103, 107, 121, 128, 143, 146, 148, 149, 150, 153, 154, 155, 161, 164, 197, 201, 207, 216, 217, 220, 221, 222, 226, 230, 239, 252, 258, 274, 277, 279, 280, 281, 284, 285, 286, 290, 293, 329, 333, 339, 348, 349, 352, 353, 354, 358, 362, 373, 374, 381, 382, 383, 385, 392], "scan": [14, 165, 187, 197, 252, 297, 319, 329], "worri": [14, 197, 329], "isn": [14, 42, 47, 61, 75, 81, 89, 94, 100, 156, 211, 213, 228, 287, 301, 343, 345, 360], "immedi": [14, 34, 45, 61, 76, 81, 89, 129, 133, 148, 155, 159, 172, 197, 201, 220, 226, 228, 250, 259, 263, 279, 286, 291, 301, 304, 329, 333, 349, 352, 358, 360, 371, 374, 382], "obviou": [14, 29, 106, 114, 115, 150, 239, 281, 382], "reread": [14, 65, 226, 358], "blank": [14, 65, 252], "figur": [14, 25, 37, 38, 42, 46, 47, 49, 58, 60, 68, 76, 81, 82, 84, 95, 96, 116, 148, 155, 156, 200, 224, 226, 244, 252, 279, 286, 287, 332, 339, 356, 358, 364, 365, 372, 375, 378, 382, 383, 386, 387, 388, 389, 391, 392], "everi": [14, 25, 32, 33, 39, 46, 54, 58, 61, 63, 65, 71, 88, 89, 114, 115, 118, 125, 126, 128, 129, 131, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 159, 178, 185, 193, 195, 196, 197, 207, 217, 224, 226, 228, 230, 239, 245, 255, 256, 258, 259, 261, 274, 275, 277, 279, 280, 281, 284, 285, 286, 287, 289, 291, 293, 310, 317, 327, 328, 329, 339, 349, 356, 358, 360, 362, 373, 374, 382, 383, 386, 391, 392], "skip": [14, 53, 65, 187, 216, 319, 348, 349, 382, 386, 387, 389, 391, 392], "geometri": [14, 31, 43, 46, 47, 60, 62, 63, 81, 120, 141, 160, 207, 251, 252, 266, 272, 292, 329, 339, 347, 371, 374, 378, 388], "dimens": [14, 47, 61, 65, 76, 81, 114, 115, 146, 149, 158, 160, 161, 182, 193, 201, 217, 228, 252, 277, 280, 289, 292, 293, 314, 325, 333, 349, 360], "spatial": [14, 25, 27, 30, 40, 46, 47, 59, 60, 61, 81, 84, 91, 100, 134, 150, 158, 160, 161, 247, 252, 264, 281, 289, 292, 293, 370, 371, 374], "strategi": [14, 27, 31, 32, 37, 39, 43, 45, 47, 51, 60, 73, 83, 95, 100, 101, 121, 128, 155, 197, 207, 251, 252, 258, 286, 329, 339, 379, 382], "field": [14, 25, 31, 32, 33, 36, 54, 59, 61, 75, 76, 81, 82, 89, 91, 102, 103, 106, 107, 108, 109, 110, 118, 122, 124, 126, 128, 129, 139, 148, 149, 154, 155, 156, 158, 171, 177, 178, 179, 186, 197, 207, 208, 217, 221, 227, 228, 229, 231, 235, 252, 254, 256, 258, 259, 270, 279, 280, 285, 286, 287, 289, 303, 309, 310, 311, 318, 329, 339, 340, 349, 353, 359, 360, 361, 363, 367, 391], "endow": [14, 121, 252], "ionic": [14, 77, 78, 121, 131, 132, 134, 149, 150, 220, 224, 252, 261, 262, 264, 280, 281, 349, 352, 356, 392], "pump": [14, 46, 60, 61, 149, 158, 217, 247, 252, 280, 289, 349, 371, 374], "pa": [14, 22, 25, 31, 37, 43, 45, 47, 61, 62, 63, 76, 77, 78, 84, 91, 103, 148, 151, 199, 201, 208, 239, 279, 282, 329, 331, 333, 340, 386, 387, 388, 392], "until": [14, 28, 32, 45, 47, 61, 65, 75, 76, 81, 91, 93, 95, 96, 105, 154, 155, 167, 168, 172, 185, 197, 200, 202, 213, 217, 221, 236, 243, 244, 285, 286, 299, 300, 304, 317, 329, 332, 334, 345, 349, 353, 362, 376, 382, 383, 386, 389, 392], "pointprocessmanag": [14, 31, 42, 45, 46, 67, 91, 98, 118, 119, 122, 136, 148, 154, 168, 196, 267, 279, 300], "took": [14, 244], "ballstk": [14, 45], "bring": [14, 24, 25, 27, 28, 31, 34, 42, 45, 46, 47, 48, 60, 62, 65, 71, 74, 75, 81, 88, 91, 94, 96, 97, 100, 103, 105, 109, 118, 122, 142, 168, 197, 250, 273, 300, 329, 384], "selector": [14, 42, 164], "shown": [14, 25, 27, 28, 37, 38, 47, 61, 81, 84, 90, 91, 98, 108, 110, 119, 139, 161, 168, 173, 184, 208, 228, 234, 243, 245, 270, 274, 293, 296, 300, 305, 316, 340, 360, 366, 370, 371, 373, 378, 391, 392], "creation": [14, 42, 98, 119, 146, 154, 156, 158, 161, 168, 178, 202, 205, 208, 217, 222, 228, 277, 285, 287, 293, 300, 334, 337, 340, 354, 360, 391], "pre": [14, 29, 93, 110, 150, 154, 161, 169, 184, 197, 217, 240, 245, 247, 281, 283, 285, 293, 301, 316, 329, 349, 382, 383], "31": [15, 58, 76, 87, 197, 226, 252, 293, 329, 347, 358, 386, 391, 392], "51": [15, 22, 197, 252, 329, 354, 391], "ted": [15, 16, 17, 18, 19, 155, 197, 252, 286, 329], "exp": [15, 16, 17, 18, 19, 28, 76, 86, 89, 114, 115, 131, 132, 148, 149, 153, 158, 166, 191, 193, 197, 200, 217, 226, 239, 247, 261, 262, 279, 280, 284, 289, 290, 298, 323, 325, 329, 330, 332, 349, 358, 376, 378, 392], "pi": [15, 28, 52, 76, 114, 115, 120, 131, 143, 149, 161, 168, 178, 181, 186, 189, 191, 197, 207, 208, 225, 226, 230, 247, 261, 274, 280, 293, 300, 310, 313, 318, 321, 323, 329, 339, 340, 357, 358, 362, 386, 387, 388, 389, 391, 392], "gnabar": [15, 22, 44, 46, 67, 131, 164, 261, 296, 331, 376, 386, 387, 388, 392], "gkbar": [15, 22, 36, 46, 67, 279, 376, 386, 387, 388, 392], "gl": [15, 22, 46, 67, 197, 225, 279, 329, 357, 376, 386, 387, 388, 392], "foral": [15, 47, 61, 64, 72, 76, 91, 120, 128, 129, 140, 148, 155, 160, 161, 164, 186, 197, 199, 201, 202, 220, 224, 258, 259, 271, 333, 334, 356, 392], "initbatpar": 16, "06": [16, 17, 18, 19, 100, 148, 252, 279, 391], "46": [16, 18, 252, 386, 391, 392], "17": [16, 53, 88, 95, 121, 208, 239, 243, 247, 251, 252, 280, 289, 340, 347, 374, 378, 386, 387, 391, 392], "suitabl": [16, 32, 37, 40, 59, 71, 84, 121, 148, 149, 150, 165, 196, 197, 224, 233, 279, 280, 281, 297, 328, 329, 356, 365, 371, 381, 397], "correspond": [16, 17, 25, 27, 29, 42, 52, 59, 61, 65, 76, 81, 88, 91, 94, 99, 126, 139, 140, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 164, 193, 197, 200, 203, 217, 220, 224, 228, 235, 239, 243, 245, 246, 256, 270, 271, 277, 279, 280, 281, 285, 286, 287, 289, 291, 293, 296, 325, 329, 332, 335, 337, 349, 352, 356, 360, 362, 367, 371, 373, 376, 382, 383, 386, 392], "wrap": [16, 29, 105, 155, 156, 197, 200, 208, 286, 287, 329, 332, 340, 395], "undesir": [16, 94, 95, 291], "stdgui": [16, 17, 18, 19], "nmm": [16, 17, 18, 31], "toolbar": [16, 17, 18, 42, 45, 61, 71, 89, 91, 94, 99], "objref": [16, 17, 18, 19, 21, 22, 23, 32, 64, 67, 71, 72, 76, 83, 91, 129, 133, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 163, 164, 165, 168, 169, 173, 174, 180, 181, 182, 184, 192, 193, 194, 196, 197, 199, 200, 201, 208, 211, 214, 217, 220, 225, 226, 228, 232, 234, 259, 281, 297, 300, 312, 313, 314, 329, 332, 333, 340, 343, 392], "whenev": [16, 31, 42, 76, 89, 98, 119, 129, 149, 150, 155, 161, 178, 184, 202, 205, 207, 217, 220, 228, 234, 259, 280, 281, 286, 293, 310, 316, 334, 337, 339, 349, 352, 360, 366, 382, 391], "long": [16, 17, 18, 29, 33, 38, 40, 41, 49, 51, 71, 76, 89, 90, 91, 121, 125, 128, 146, 155, 156, 158, 161, 174, 187, 192, 194, 196, 197, 201, 213, 217, 220, 224, 226, 252, 255, 258, 277, 286, 287, 293, 306, 319, 324, 326, 328, 329, 333, 345, 349, 352, 356, 358, 374, 376, 382, 388, 391, 392], "instrument": [16, 17, 18, 45, 46, 61, 71, 95, 121, 240, 368, 390], "manipul": [16, 17, 18, 28, 36, 52, 54, 65, 95, 121, 124, 129, 141, 155, 160, 168, 169, 193, 197, 200, 201, 206, 212, 217, 218, 224, 228, 231, 245, 250, 254, 259, 272, 279, 286, 292, 300, 301, 316, 325, 332, 333, 336, 338, 344, 349, 350, 356, 360, 363], "del": [16, 17, 18, 29, 31, 67, 91, 142, 148, 154, 217, 247, 252, 272, 273, 279, 349, 378, 386, 387], "dur": [16, 17, 18, 24, 28, 31, 58, 59, 66, 67, 91, 142, 143, 148, 154, 196, 217, 247, 250, 272, 273, 274, 279, 285, 329, 347, 349, 365, 386, 392], "1e9": [16, 17, 18, 31, 59, 89, 128, 148, 217, 247, 258, 279, 329, 349, 376], "fstimamp": [16, 17], "nc": [16, 17, 18, 21, 22, 71, 95, 148, 154, 156, 197, 247, 252, 279, 285, 287, 329, 349, 376, 387, 388, 389], "nil": [16, 17, 18, 154, 155, 199, 202, 217, 331, 334], "threshold": [16, 17, 18, 29, 75, 148, 154, 155, 159, 197, 217, 239, 252, 279, 283, 285, 286, 289, 290, 291, 329, 349, 371, 379, 387, 389], "stabliz": [16, 17, 18], "nmin": [16, 17, 18], "fewer": [16, 17, 18, 129, 155, 197, 259, 286, 329], "postproc": [16, 17, 18], "nspike": [16, 17, 18, 155, 279, 286], "t1": [16, 17, 18, 148, 239, 279, 375], "t2": [16, 17, 18, 375], "1e3": [16, 17, 18, 24], "startsw": [16, 17, 76, 156, 213, 214, 232, 345, 392], "runwork": [16, 155, 156, 283, 286, 287], "beyond": [16, 32, 61, 93, 118, 201, 208, 244, 252, 289, 333, 340, 373], "bulletin": [16, 26, 155, 252, 286, 368], "board": [16, 26, 65, 155, 286, 368], "svec": [16, 17], "fvec": [16, 17, 197, 329], "ii": [16, 17, 28, 29, 71, 197, 252, 329, 382, 395], "tmp": [16, 184, 186, 197, 213, 216, 316, 318, 329, 345, 348], "retval": [16, 155, 283, 286], "boss": 16, "sortindex": [16, 197, 329, 330], "rearrang": 16, "sort": [16, 29, 45, 155, 156, 193, 197, 252, 286, 287, 325, 329, 330, 391], "localobj": [16, 17, 52, 181, 192, 201, 217, 313, 333, 392], "s1": [16, 17, 76, 148, 155, 163, 178, 181, 199, 202, 208, 211, 230, 279, 313, 334, 340, 343, 354, 362], "wopen": [16, 17, 28, 76, 184, 186, 188, 197, 312, 315, 316, 318, 320, 329, 392], "close": [16, 17, 25, 28, 37, 38, 39, 42, 47, 58, 65, 76, 80, 81, 89, 90, 91, 98, 102, 103, 104, 105, 107, 108, 109, 110, 119, 121, 128, 129, 148, 155, 160, 161, 168, 172, 178, 184, 185, 188, 197, 201, 202, 217, 222, 224, 225, 226, 230, 239, 243, 250, 252, 258, 259, 279, 286, 292, 293, 300, 304, 310, 311, 315, 316, 317, 320, 329, 333, 334, 349, 354, 356, 357, 358, 362, 378, 382, 389], "initbats": 17, "48": [17, 18, 67, 154, 252, 386, 391, 392], "track": [17, 89, 91, 100, 105, 143, 149, 174, 197, 252, 274, 280, 306, 329, 368, 382, 383, 388], "fig": [17, 19, 25, 94, 185, 279, 317, 372, 376, 378, 387], "plotfi": [17, 19], "initonerun": 18, "09": [18, 95, 148, 213, 251, 252, 279, 345], "49": [18, 36, 197, 251, 252, 329, 347, 391, 392], "ax": [18, 19, 28, 39, 65, 87, 122, 129, 208, 226, 228, 230, 232, 234, 252, 259, 279, 340, 358, 360, 362, 364, 366, 370], "120": [18, 67, 114, 115, 148, 154, 187, 196, 207, 252, 279, 328, 339], "105": [18, 22, 67, 197, 252, 329], "300": [18, 33, 43, 61, 63, 67, 154, 197, 226, 230, 252, 329, 358, 362], "throughout": [18, 24, 25, 43, 61, 62, 63, 84, 149, 280, 371, 374, 387], "graphlist": [18, 67, 154, 158, 226, 234, 329, 358, 366], "addexpr": [18, 67, 94, 154, 168, 226, 228, 285, 358, 360], "14": [19, 95, 159, 197, 208, 226, 239, 247, 252, 279, 291, 293, 310, 319, 320, 323, 329, 340, 358, 375, 377, 378, 382, 386, 387, 391, 392], "54": [19, 22, 67, 148, 154, 197, 252, 279, 329, 373, 376, 386, 387, 388, 391, 392], "clipboard": [19, 65, 89, 91, 128, 129, 218, 258, 259, 350], "obj": [19, 52, 54, 72, 148, 151, 154, 168, 169, 181, 192, 197, 202, 211, 220, 282, 300, 313, 324, 329, 334, 343], "insuffici": [19, 41, 134, 264, 342], "xvec": [19, 146, 196, 197, 217, 226, 233, 277, 293, 328, 329, 349, 358, 365], "yvec": [19, 217, 226, 233, 293, 349, 358, 365], "xy": [19, 121, 231, 234, 363, 366, 387], "coord": [19, 226, 358], "neuronhom": [20, 87, 155, 161, 165, 170, 176, 201, 207, 208, 213, 224, 228, 265, 293, 297, 302, 308, 333, 339, 345, 356, 360, 392], "net1": 20, "net1run": 20, "netgui": [20, 32, 37, 42, 75, 98, 103, 119, 155, 156, 168, 286, 287, 300], "wman": 20, "netedgegui": [20, 32, 37, 109], "artifici": [21, 22, 26, 29, 69, 70, 71, 74, 75, 77, 78, 83, 84, 85, 103, 106, 110, 121, 135, 139, 141, 147, 150, 151, 154, 155, 156, 201, 202, 216, 224, 252, 266, 270, 272, 278, 281, 282, 285, 286, 287, 333, 334, 343, 348, 356, 395, 397], "acel": [21, 22], "begintempl": [21, 22, 64, 72, 76, 83, 143, 165, 169, 173, 180, 211, 220, 274, 297, 312, 392], "pp": [21, 22, 29, 32, 95, 139, 151, 156, 251, 252, 270, 282, 287], "connect2target": [21, 22, 29, 32, 155, 156, 286, 287], "art": [21, 22, 196, 252, 328, 382], "o1": [21, 22, 28, 76, 155, 163, 168, 181, 193, 202, 208, 217, 313, 327, 334, 340], "endtempl": [21, 22, 64, 72, 76, 83, 143, 169, 173, 180, 211, 220, 274, 312, 392], "nclist": [21, 22, 29, 156, 279, 287], "srcindex": [21, 22], "tarcelindex": [21, 22], "synindex": [21, 22], "synlist": [21, 22, 154, 156, 283, 285, 287], "delai": [21, 22, 29, 32, 35, 36, 38, 47, 58, 59, 69, 70, 71, 81, 89, 95, 103, 108, 109, 110, 111, 148, 154, 155, 156, 178, 197, 217, 228, 247, 250, 252, 279, 283, 285, 286, 287, 310, 329, 347, 349, 360, 365, 386, 387, 388, 389, 392], "s0": [21, 32, 75, 80, 96, 106, 107, 108, 109, 110, 111], "c1": [21, 32, 96, 107, 108, 109, 148, 211, 247, 279, 343], "196": [21, 252], "b": [22, 25, 29, 37, 39, 58, 64, 65, 72, 76, 89, 90, 93, 121, 146, 148, 149, 154, 156, 161, 164, 168, 193, 197, 201, 205, 208, 220, 228, 239, 243, 245, 252, 277, 279, 280, 285, 287, 289, 293, 300, 310, 314, 325, 329, 333, 337, 340, 352, 360, 365, 371, 382, 383, 391], "ballstick": [22, 37, 45], "si": [22, 37, 181, 197, 252, 313, 329], "topol": 22, "shape": [22, 27, 28, 29, 30, 36, 38, 39, 40, 41, 46, 52, 61, 65, 76, 81, 82, 84, 89, 99, 100, 103, 105, 110, 125, 134, 135, 139, 140, 141, 142, 155, 158, 160, 162, 173, 221, 226, 228, 231, 232, 235, 252, 255, 264, 266, 270, 271, 272, 273, 286, 289, 292, 294, 305, 353, 358, 360, 363, 364, 367, 386, 392], "geom": 22, "memb": [22, 207, 339], "biophi": 22, "pt3dclear": [22, 76, 161, 272, 292, 293, 392], "pt3dadd": [22, 52, 76, 134, 161, 264, 272, 292, 293, 392], "sectionlist": [22, 61, 76, 135, 141, 146, 155, 158, 160, 164, 173, 202, 208, 232, 233, 234, 266, 272, 277, 286, 289, 292, 296, 305, 334, 340, 364, 365, 366, 371, 392], "forsec": [22, 61, 63, 76, 160, 162, 164, 199, 201, 233, 333, 392], "6157": [22, 386, 387, 388], "lambda": [22, 91, 120, 208, 289, 293, 300, 329, 340, 354, 378], "036": [22, 67, 100, 148, 154, 251, 252, 279, 376, 386, 387, 388, 392], "0003": [22, 67, 100, 148, 154, 279, 376, 386, 387, 388, 392], "el": [22, 41, 67, 197, 252, 279, 329, 376, 386, 387, 388, 392], "001": [22, 37, 73, 91, 114, 115, 131, 146, 149, 217, 220, 228, 247, 251, 252, 261, 277, 280, 349, 352, 360, 376, 386, 387, 388], "65": [22, 24, 31, 33, 37, 43, 58, 61, 62, 63, 67, 89, 94, 95, 103, 114, 148, 171, 197, 200, 247, 250, 252, 277, 279, 289, 293, 303, 323, 329, 332, 342, 347, 349, 354, 365, 370, 371, 372, 373, 375, 376, 380, 381, 386, 387, 388, 389, 391, 392], "n3d": [22, 47, 76, 120, 161, 272, 292, 293, 296, 378, 386, 387, 388, 392], "pt3dchang": [22, 161, 272, 292, 293, 387, 388, 392], "x3d": [22, 76, 161, 272, 289, 292, 293, 373, 378, 386, 387, 388, 392], "y3d": [22, 76, 161, 272, 289, 292, 293, 373, 378, 387, 388, 392], "z3d": [22, 76, 161, 272, 289, 292, 293, 373, 378, 387, 388, 392], "diam3d": [22, 47, 76, 120, 134, 161, 264, 272, 292, 293, 386, 387, 388, 392], "syn": [22, 38, 148, 149, 150, 154, 217, 243, 279, 280, 281, 283, 285, 343, 349, 376, 387, 388, 389], "e0": [22, 37, 110, 111, 149, 280], "expsyn": [22, 37, 38, 77, 78, 83, 104, 148, 178, 217, 224, 239, 247, 278, 279, 310, 343, 349, 356, 376, 387, 388, 392], "i1": [22, 37, 75, 97, 110, 111, 148, 193, 279, 325], "50": [22, 28, 29, 37, 38, 41, 46, 53, 58, 97, 102, 146, 156, 187, 196, 197, 201, 208, 210, 226, 227, 228, 230, 247, 252, 277, 279, 280, 287, 293, 328, 329, 333, 340, 342, 358, 359, 360, 362, 365, 376, 378, 380, 387, 388, 389, 391, 392], "b0": [22, 37, 247], "52": [22, 155, 239, 252, 279, 286, 391], "se1": [22, 37], "47": [22, 87, 153, 252, 284, 289, 371, 373, 386, 391, 392], "si2": [22, 37], "am": [23, 35, 153, 156, 202, 217, 243, 284, 286, 287, 310, 334, 349, 389, 391], "nhost": [23, 131, 155, 156, 222, 240, 261, 283, 286, 287, 354, 389], "approxim": [24, 36, 39, 41, 61, 89, 120, 128, 149, 155, 158, 197, 217, 252, 258, 280, 286, 289, 290, 294, 329, 343, 349, 381, 386, 392], "initializaton": 24, "natur": [24, 25, 29, 46, 54, 59, 76, 86, 91, 95, 114, 115, 121, 125, 149, 150, 168, 193, 197, 226, 228, 249, 252, 255, 280, 281, 290, 300, 325, 329, 331, 358, 360, 382, 383, 388], "rest": [24, 33, 38, 43, 47, 61, 63, 76, 81, 91, 104, 137, 148, 149, 165, 168, 181, 252, 268, 279, 280, 297, 300, 313, 371, 374, 376, 386, 392], "somat": [24, 25, 31, 45, 61, 75, 91, 97, 252], "sphere": [24, 61, 105, 161, 293, 378, 386], "cylind": [24, 61, 103, 161, 293, 374, 386, 392], "matter": [24, 25, 89, 91, 98, 114, 115, 119, 131, 155, 160, 217, 252, 261, 286, 292, 340, 349, 374], "v_init": [24, 91, 221, 227, 329, 353, 356, 359], "uniform": [24, 29, 43, 61, 76, 91, 155, 161, 196, 197, 224, 252, 286, 293, 328, 329, 356, 371, 379], "drift": [24, 29, 40], "nonuniform": [24, 46, 63, 121, 252, 374], "permiss": [24, 382], "custom_initi": 24, "cellbuild": [24, 26, 27, 30, 31, 33, 34, 42, 43, 46, 47, 60, 63, 75, 78, 81, 85, 91, 98, 99, 100, 101, 103, 105, 116, 119, 120, 121, 136, 168, 267, 300], "anatomi": [24, 25, 45, 46, 60, 71, 82, 84, 121, 252], "compartment": [24, 37, 45, 59, 61, 131, 161, 207, 252, 261, 293, 339], "\u00b5m": [24, 27, 38, 40, 41, 45, 48, 59, 61, 105, 114, 122, 289, 372, 373, 376, 380, 386], "diamet": [24, 33, 38, 40, 41, 45, 46, 47, 60, 61, 62, 81, 105, 120, 129, 131, 134, 160, 161, 163, 197, 231, 234, 252, 259, 261, 264, 289, 292, 293, 329, 363, 366, 374, 376, 386, 387, 392], "160": [24, 43, 45, 61, 62, 63, 103, 105, 187, 252], "\u00b5f": [24, 45, 61, 62, 103, 105], "rm": [24, 25, 45, 62, 91, 191, 216, 228, 323, 348, 360], "000": [24, 45, 53, 62, 121, 155, 226, 286, 358], "session": [24, 26, 27, 31, 37, 39, 45, 46, 47, 52, 60, 62, 77, 78, 81, 82, 89, 91, 94, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 122, 124, 128, 129, 138, 139, 142, 151, 165, 168, 170, 172, 178, 182, 199, 207, 220, 224, 226, 234, 250, 254, 258, 259, 269, 270, 273, 282, 297, 300, 302, 304, 310, 314, 331, 339, 352, 356, 358, 366, 397], "runcontrol": [24, 30, 31, 32, 37, 43, 45, 61, 67, 71, 91, 96, 97, 129, 196, 220, 224, 259, 352, 356], "axi": [24, 25, 27, 30, 31, 40, 47, 50, 61, 65, 68, 73, 74, 75, 76, 81, 84, 88, 89, 90, 91, 100, 118, 121, 122, 128, 129, 133, 196, 197, 224, 226, 227, 228, 230, 231, 252, 258, 259, 263, 328, 329, 337, 356, 358, 359, 360, 362, 363, 365, 378, 387, 388, 392], "pictur": [24, 37, 65, 84, 122, 125, 142, 155, 224, 231, 255, 273, 356, 363, 382], "drastic": 24, "init_ss": 24, "ss_init": 24, "t0": [24, 148, 214, 217, 222, 279, 349, 354, 375], "1e2": 24, "025": [24, 28, 67, 89, 91, 159, 252, 291, 347, 371], "finiti": [24, 52, 58, 64, 72, 76, 91, 95, 114, 129, 143, 144, 146, 148, 149, 150, 154, 155, 161, 196, 197, 200, 216, 217, 220, 221, 222, 239, 250, 259, 274, 275, 277, 279, 280, 281, 285, 286, 289, 293, 328, 329, 332, 347, 348, 349, 352, 353, 354, 356, 365, 370, 371, 372, 373, 375, 376, 378, 380, 381, 386, 387, 388, 389, 392], "far": [24, 25, 29, 36, 37, 91, 128, 129, 133, 155, 156, 161, 208, 238, 239, 258, 259, 263, 286, 287, 293, 340, 378, 382, 383, 388, 389], "jump": [24, 33, 40, 76, 90, 252, 382, 383], "back": [24, 27, 28, 32, 45, 50, 51, 52, 61, 62, 65, 69, 75, 79, 89, 90, 91, 94, 99, 100, 103, 109, 114, 115, 118, 129, 150, 155, 159, 169, 186, 208, 217, 222, 228, 231, 243, 244, 252, 259, 281, 286, 289, 291, 301, 318, 329, 340, 349, 354, 360, 363, 375, 378, 382, 387, 390], "old_cvode_st": 24, "fals": [24, 28, 36, 38, 39, 54, 58, 59, 76, 181, 191, 197, 200, 201, 207, 208, 216, 245, 285, 286, 289, 293, 295, 300, 307, 310, 313, 323, 324, 329, 332, 333, 339, 340, 343, 348, 349, 352, 364, 371, 373, 374, 386, 391], "fadvanc": [24, 76, 129, 131, 143, 144, 146, 148, 149, 150, 155, 160, 196, 197, 215, 217, 220, 221, 222, 224, 227, 259, 261, 274, 275, 277, 279, 280, 281, 286, 292, 328, 329, 347, 349, 352, 353, 354, 356, 359, 371, 378, 380, 392], "inact": [24, 154, 285, 286, 349], "re_init": [24, 44, 91, 158, 217, 220, 221, 272, 289, 349, 352, 353, 356, 371], "fcurrent": [24, 91, 131, 220, 221, 261, 352, 353, 356, 392], "frecord_init": [24, 91, 220, 221, 352, 353, 356, 392], "fih": [24, 44, 64, 71, 72, 159, 220, 291, 352], "finitializehandl": [24, 44, 64, 71, 72, 135, 155, 159, 221, 222, 266, 281, 286, 291, 353, 354, 373, 392], "exptl": 24, "rig": [24, 43, 61, 66, 71, 91], "satisfi": [24, 88, 121, 228, 289, 360, 371, 376, 389, 391], "criterion": [24, 25, 121, 128, 155, 197, 258, 286, 329], "flexibl": [25, 32, 71, 76, 82, 122, 156, 161, 216, 222, 252, 287, 348, 382, 387, 388], "imped": [25, 76, 91, 121, 123, 126, 127, 130, 135, 233, 252, 253, 256, 257, 260, 266, 365, 392], "zn": [25, 252], "zc": 25, "remot": [25, 43, 153, 239, 252, 284, 382], "ratio": [25, 76, 86, 94, 121, 131, 189, 226, 228, 234, 252, 260, 261, 321, 358, 360, 366], "k": [25, 36, 48, 76, 114, 115, 118, 148, 149, 150, 155, 156, 158, 189, 199, 228, 239, 247, 252, 279, 280, 281, 286, 287, 289, 290, 321, 329, 331, 360, 371, 373, 376, 378, 381, 382, 391, 392], "downstream": [25, 108, 382], "upstream": [25, 382], "opposit": [25, 65, 103, 131, 161, 228, 231, 261, 293, 360, 363, 374], "direct": [25, 40, 50, 99, 109, 125, 145, 148, 154, 155, 158, 185, 207, 208, 213, 226, 228, 231, 234, 250, 251, 252, 255, 274, 276, 279, 285, 286, 289, 291, 317, 329, 339, 340, 342, 345, 349, 358, 360, 363, 366, 378, 382], "attenu": [25, 125, 126, 127, 224, 252, 255, 256, 257, 356], "distanc": [25, 27, 36, 41, 43, 45, 63, 76, 84, 100, 105, 121, 125, 126, 133, 155, 161, 192, 224, 226, 233, 234, 247, 252, 255, 256, 263, 272, 286, 292, 293, 324, 356, 358, 365, 366, 372, 374, 392], "transform": [25, 121, 125, 197, 224, 252, 255, 329, 356, 381], "led": 25, "discoveri": [25, 252], "citat": 25, "classic": [25, 69, 71, 158, 161, 243, 252, 289, 293, 373], "infinit": [25, 76, 148, 155, 161, 178, 192, 279, 286, 293, 310, 324], "cylindr": [25, 41, 61, 149, 247, 252, 280, 386], "cabl": [25, 33, 38, 42, 61, 76, 98, 119, 121, 131, 149, 151, 161, 252, 261, 280, 282, 293, 392], "regardless": [25, 33, 71, 83, 94, 95, 149, 155, 193, 217, 280, 286, 289, 292, 325, 346, 349, 378], "cellular": [25, 33, 81, 121, 252], "wherea": [25, 52, 149, 150, 184, 197, 201, 226, 252, 280, 281, 289, 316, 329, 333, 358], "constraint": [25, 53, 88, 89, 148, 155, 252, 279, 286], "preserv": [25, 93, 94, 103, 122, 154, 156, 160, 161, 168, 193, 252, 285, 287, 292, 293, 300, 325, 382], "obscur": [25, 65, 75, 134, 239, 264], "neurondemo": [25, 50, 62, 76, 208, 234, 243, 340, 366], "pyramid": [25, 40, 41, 43, 47, 50, 59, 61, 62, 91, 156, 161, 234, 252, 287, 293, 366, 378, 391], "zoom": [25, 44, 50, 62, 65, 91, 197, 226, 228, 329, 358, 360, 386, 392], "vantag": 25, "screen": [25, 42, 47, 50, 61, 62, 65, 71, 76, 81, 94, 98, 105, 116, 119, 122, 139, 167, 168, 169, 170, 172, 174, 175, 178, 181, 185, 197, 201, 202, 207, 218, 223, 224, 226, 228, 229, 230, 231, 234, 252, 265, 270, 299, 300, 301, 302, 304, 306, 307, 310, 313, 317, 329, 333, 334, 339, 340, 350, 355, 356, 358, 360, 361, 362, 363, 366, 391, 392], "studi": [25, 71, 85, 252, 390, 392], "electr": [25, 33, 41, 88, 121, 148, 155, 161, 252, 279, 286, 293, 374], "suppos": [25, 42, 46, 71, 75, 76, 89, 91, 95, 97, 98, 100, 114, 115, 119, 144, 149, 150, 156, 185, 187, 197, 217, 226, 275, 280, 281, 287, 317, 319, 329, 349, 358, 370, 374, 377, 378, 381, 382], "signal": [25, 41, 52, 76, 95, 155, 161, 213, 228, 252, 286, 293, 345, 360, 371, 374, 386, 396], "electrod": [25, 26, 30, 33, 71, 84, 91, 121, 128, 131, 136, 141, 148, 150, 168, 247, 252, 258, 261, 267, 272, 279, 281, 300, 387], "necessarili": [25, 76, 154, 155, 159, 161, 163, 197, 226, 286, 289, 291, 293, 295, 329, 358, 373], "clamp": [25, 26, 28, 31, 33, 38, 44, 45, 61, 66, 82, 84, 88, 121, 122, 125, 128, 131, 139, 142, 146, 148, 217, 220, 227, 252, 255, 258, 261, 270, 273, 277, 279, 296, 301, 329, 347, 349, 352, 359, 368, 386, 392], "fluctuat": [25, 95, 252], "vm": [25, 33, 45, 47, 75, 91, 92, 94, 97, 122], "ic": [25, 59, 247, 250, 279, 285, 349, 365], "regul": [25, 252, 374, 375], "situat": [25, 75, 76, 93, 121, 149, 155, 197, 220, 280, 286, 289, 310, 329, 352, 382], "mind": [25, 61, 155, 216, 251, 348, 382, 383], "accur": [25, 40, 129, 148, 149, 154, 155, 160, 161, 185, 192, 197, 217, 224, 252, 259, 279, 280, 285, 290, 292, 293, 317, 324, 329, 349, 356, 391], "reflect": [25, 32, 65, 96, 120, 142, 148, 150, 151, 161, 178, 226, 234, 252, 273, 279, 281, 282, 289, 293, 310, 358, 366, 376, 382, 383], "site": [25, 37, 46, 71, 77, 88, 125, 126, 127, 155, 224, 252, 255, 256, 257, 286, 345, 356, 377], "effect": [25, 34, 40, 41, 45, 46, 52, 59, 63, 65, 73, 81, 82, 91, 95, 109, 121, 122, 131, 144, 149, 150, 155, 156, 158, 161, 164, 170, 171, 172, 178, 197, 207, 208, 217, 218, 220, 226, 229, 235, 238, 239, 243, 252, 261, 265, 275, 280, 281, 286, 287, 289, 293, 297, 302, 303, 304, 327, 339, 340, 349, 350, 352, 361, 367, 371, 373, 374, 382, 383, 386, 387, 390, 392], "elsewher": [25, 41, 47, 81, 91, 98, 119, 150, 281, 372], "captur": [25, 40, 51, 71, 91, 95, 197, 207, 238, 239, 247, 252, 329, 339], "affect": [25, 31, 36, 39, 40, 41, 45, 46, 59, 65, 71, 76, 83, 91, 95, 149, 155, 158, 161, 193, 194, 197, 201, 226, 232, 250, 252, 280, 286, 289, 293, 324, 325, 326, 329, 333, 358, 364, 370, 374, 382, 383, 385], "spread": [25, 252], "tell": [25, 29, 46, 52, 59, 61, 75, 87, 89, 91, 94, 99, 100, 118, 122, 134, 149, 150, 155, 156, 184, 226, 227, 244, 252, 264, 280, 281, 286, 287, 315, 316, 359, 364, 373, 374, 386, 387, 391, 392], "particularli": [25, 53, 121, 122, 149, 216, 220, 239, 243, 280, 348, 352, 374, 382], "mous": [25, 31, 37, 46, 47, 50, 61, 65, 74, 75, 76, 79, 80, 81, 89, 91, 94, 100, 105, 106, 107, 108, 110, 126, 128, 139, 142, 151, 168, 169, 172, 173, 175, 218, 226, 228, 231, 234, 235, 252, 256, 258, 270, 273, 282, 300, 301, 304, 305, 307, 350, 358, 360, 363, 366, 367], "middl": [25, 27, 31, 32, 61, 65, 71, 74, 75, 76, 91, 99, 107, 110, 118, 125, 126, 127, 139, 142, 161, 174, 197, 218, 220, 224, 226, 228, 229, 252, 255, 256, 257, 270, 273, 293, 306, 329, 350, 352, 356, 358, 360, 361, 378, 387, 392], "swap": [25, 127, 257, 391], "item": [25, 27, 31, 32, 37, 42, 45, 46, 47, 61, 68, 75, 76, 80, 81, 84, 89, 91, 94, 98, 99, 102, 104, 107, 118, 119, 125, 126, 127, 128, 129, 139, 142, 150, 151, 155, 156, 158, 168, 169, 172, 173, 176, 178, 193, 197, 199, 207, 208, 217, 218, 224, 226, 227, 228, 231, 235, 244, 250, 252, 255, 256, 257, 258, 259, 270, 273, 281, 282, 286, 287, 300, 301, 304, 305, 308, 310, 325, 329, 331, 339, 340, 343, 349, 350, 356, 358, 359, 360, 363, 367, 375, 386, 389, 391, 392], "zin": 25, "ztransfer": 25, "vmeasur": 25, "vinject": 25, "reciproc": [25, 29, 151, 155, 252, 282, 285, 286], "blue": [25, 42, 46, 47, 65, 79, 81, 89, 91, 94, 105, 110, 121, 122, 127, 128, 139, 142, 197, 226, 230, 232, 235, 251, 252, 257, 258, 270, 273, 329, 358, 362, 364, 367, 386, 387], "dot": [25, 46, 105, 110, 126, 127, 139, 141, 142, 160, 197, 208, 235, 252, 256, 257, 270, 272, 273, 292, 329, 330, 340, 367, 382, 383], "bottom": [25, 29, 42, 47, 62, 81, 91, 94, 99, 109, 125, 139, 169, 172, 175, 192, 226, 228, 244, 255, 270, 301, 304, 307, 324, 358, 360, 378, 386], "dc": [25, 91, 252], "nearli": [25, 121, 149, 280], "redraw": [25, 125, 226, 234, 255, 358, 366], "sensit": [25, 36, 118, 121, 131, 149, 155, 252, 261, 280, 286], "why": [25, 32, 41, 46, 47, 61, 75, 81, 82, 89, 91, 95, 97, 114, 115, 120, 122, 155, 239, 286, 327, 386, 389, 392], "known": [25, 41, 54, 76, 103, 131, 146, 155, 156, 166, 216, 226, 239, 261, 277, 279, 286, 287, 298, 314, 348, 371, 382, 386, 389, 391], "kind": [25, 28, 29, 32, 44, 45, 49, 53, 61, 76, 77, 78, 88, 91, 103, 112, 114, 115, 139, 148, 149, 150, 168, 169, 197, 224, 239, 243, 252, 270, 279, 280, 281, 300, 301, 356, 382], "analys": [25, 121, 252], "region": [25, 59, 89, 91, 124, 129, 141, 200, 230, 239, 252, 254, 259, 272, 332, 354, 362, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 392], "editor": [25, 31, 32, 42, 46, 65, 71, 76, 87, 98, 102, 103, 119, 122, 124, 126, 128, 129, 139, 149, 170, 171, 175, 177, 178, 197, 207, 221, 227, 229, 231, 235, 254, 256, 258, 259, 270, 280, 302, 303, 307, 309, 310, 329, 339, 353, 359, 361, 363, 367, 397], "ln": [25, 86, 125, 155, 255, 286], "vin": [25, 125, 126, 193, 255, 256, 325], "vout": [25, 125, 126, 193, 255, 256, 325], "green": [25, 47, 65, 81, 168, 226, 230, 232, 252, 300, 358, 362, 364, 386], "horizont": [25, 50, 65, 89, 90, 99, 122, 139, 168, 178, 228, 252, 270, 300, 310, 360], "closest": [25, 126, 256, 349, 382, 383, 392], "somatopet": 25, "rapidli": [25, 90, 91, 159, 218, 252, 291, 350, 382, 383], "steepest": [25, 28], "somatofug": 25, "magnitud": [25, 83, 89, 91, 121, 156, 197, 217, 239, 252, 286, 287, 329, 349], "resist": [25, 33, 38, 71, 114, 131, 155, 161, 239, 252, 261, 286, 293, 386, 387, 388, 392], "homogen": [25, 84, 235, 252, 367], "spec": [25, 32, 37, 139, 161, 220, 225, 270, 293, 352, 357], "mechtyp": [25, 136, 267], "axon": [25, 26, 30, 33, 38, 41, 43, 46, 47, 59, 61, 62, 63, 81, 103, 122, 148, 149, 150, 160, 163, 164, 173, 199, 201, 202, 208, 215, 217, 252, 279, 280, 281, 292, 296, 305, 331, 333, 334, 340, 347, 349, 376, 387, 391, 392], "g_pa": [25, 37, 47, 62, 84, 91, 103, 129, 148, 197, 199, 259, 279, 392], "0001": [25, 91, 129, 146, 247, 259, 277], "10000": [25, 91, 168, 194, 247, 265, 300, 326], "00002": [25, 252], "50000": [25, 52, 197, 329], "press": [25, 32, 36, 37, 50, 61, 71, 80, 91, 94, 105, 121, 128, 129, 137, 139, 142, 168, 172, 176, 178, 184, 196, 207, 217, 218, 221, 223, 224, 226, 227, 228, 231, 234, 235, 239, 250, 251, 252, 258, 259, 268, 270, 273, 300, 304, 308, 310, 316, 339, 349, 350, 353, 355, 356, 358, 359, 360, 363, 366, 367], "cytoplasm": [25, 91, 114, 121, 252], "axial": [25, 131, 161, 252, 261, 293, 349, 386, 387, 388, 392], "halv": [25, 31], "ultim": [25, 52, 89, 386], "approach": [25, 29, 38, 39, 71, 75, 85, 105, 121, 148, 149, 197, 217, 245, 252, 279, 280, 293, 329, 344, 349, 371, 373, 376, 378, 381, 382, 383, 386, 389, 396, 397], "let": [25, 27, 30, 36, 41, 52, 61, 62, 63, 65, 73, 84, 89, 91, 99, 100, 110, 118, 121, 149, 156, 196, 201, 217, 280, 287, 328, 333, 349, 370, 372, 375, 376, 377, 378, 382, 386, 387, 388, 391, 392], "neurit": [25, 40, 47, 81, 121, 252], "abscissa": [25, 126, 226, 230, 256, 358, 362], "box": [25, 27, 31, 37, 42, 47, 61, 65, 78, 81, 87, 89, 91, 94, 98, 119, 124, 129, 155, 168, 179, 192, 197, 224, 226, 228, 231, 234, 245, 254, 259, 286, 289, 300, 310, 311, 324, 329, 356, 358, 360, 363, 366, 378], "upper": [25, 31, 61, 65, 71, 81, 125, 139, 170, 193, 220, 226, 230, 252, 255, 270, 325, 352, 358, 362, 378, 389], "trace": [25, 46, 68, 76, 87, 89, 91, 94, 122, 166, 197, 239, 252, 298, 329, 347, 388], "tuft": [25, 252], "yourself": [25, 35, 39, 44, 61, 91, 153, 193, 207, 284, 325, 339, 389, 391, 392], "psp": [25, 252], "efficaci": [25, 252], "declin": 25, "aren": [25, 32, 42, 61, 73, 89, 236], "word": [25, 42, 61, 94, 122, 150, 187, 197, 201, 228, 281, 301, 319, 329, 333, 360], "therefor": [25, 29, 32, 39, 52, 91, 148, 149, 151, 153, 154, 155, 161, 164, 165, 169, 178, 181, 185, 193, 197, 217, 222, 226, 228, 239, 279, 280, 282, 284, 285, 286, 289, 293, 297, 301, 310, 313, 317, 329, 342, 349, 354, 358, 360, 374, 382, 383, 387, 392], "predict": [25, 239, 252], "predictor": [25, 252], "phenomenon": [25, 75], "david": [25, 193, 252, 325], "jaff": [25, 252], "variat": [25, 29, 60, 72, 82, 95, 100, 102, 120, 124, 149, 150, 155, 220, 252, 254, 280, 281, 352], "doesn": [25, 27, 28, 29, 31, 46, 75, 76, 82, 87, 91, 96, 105, 122, 148, 149, 155, 160, 193, 228, 236, 245, 279, 280, 286, 292, 325, 360, 382, 386], "paper": [25, 35, 40, 46, 47, 49, 95, 122, 129, 158, 172, 196, 223, 228, 259, 289, 304, 328, 355, 360, 378], "perhap": [25, 45, 76, 121, 155, 156, 159, 197, 286, 287, 289, 291, 329, 382], "intuit": [25, 39, 84, 91, 121, 148, 197, 252, 279, 329, 375, 387], "represent": [25, 31, 43, 62, 71, 76, 96, 121, 185, 197, 252, 317, 329, 374, 386, 392], "orient": [25, 65, 68, 76, 99, 121, 149, 161, 180, 228, 231, 252, 272, 280, 292, 293, 312, 315, 340, 349, 360, 363, 390, 392], "adjac": [25, 89, 91, 149, 161, 197, 217, 228, 280, 293, 329, 349, 360, 371, 392], "neuromorph": [25, 125, 252, 255], "render": [25, 81, 125, 225, 252, 255, 357, 372, 373, 376, 388], "warp": 25, "proxim": [25, 27, 37, 47, 81, 99, 252], "degre": [25, 40, 65, 76, 102, 121, 158, 220, 226, 231, 252, 289, 290, 352, 358, 363], "farther": [25, 228, 360], "apart": [25, 29, 76, 99, 121, 122, 131, 178, 187, 261, 310, 319, 376, 386], "overal": [25, 84, 91, 252], "form": [25, 38, 39, 41, 49, 60, 65, 76, 90, 91, 114, 115, 121, 124, 128, 129, 133, 146, 148, 149, 150, 154, 155, 158, 160, 161, 164, 168, 172, 175, 178, 181, 182, 184, 186, 188, 190, 193, 197, 199, 200, 201, 204, 208, 217, 218, 220, 226, 227, 228, 230, 233, 243, 252, 254, 258, 259, 263, 277, 279, 280, 281, 285, 286, 289, 292, 293, 300, 302, 304, 307, 310, 313, 314, 316, 318, 320, 322, 325, 329, 331, 332, 333, 336, 340, 349, 350, 352, 358, 359, 360, 362, 365, 366, 371, 374, 375, 381, 382, 389, 392], "easi": [25, 28, 42, 45, 75, 76, 79, 83, 89, 91, 95, 98, 100, 118, 119, 121, 131, 150, 159, 228, 249, 261, 281, 286, 291, 360, 368, 386], "identifi": [25, 28, 32, 39, 42, 47, 59, 65, 81, 84, 98, 119, 126, 129, 144, 155, 164, 196, 252, 256, 259, 275, 286, 289, 296, 308, 328, 339, 371, 374, 382, 385, 386, 389, 392], "visual": [25, 27, 38, 61, 87, 91, 161, 246, 252, 289, 293, 379, 386, 387, 392, 397], "repres": [25, 39, 40, 42, 52, 54, 71, 94, 98, 105, 119, 121, 125, 149, 158, 160, 161, 168, 193, 197, 199, 224, 228, 248, 255, 280, 289, 292, 293, 325, 329, 331, 356, 360, 374, 376, 377, 382, 383, 387, 391, 392], "logarithm": [25, 76, 86, 89, 191, 196, 197, 252, 290, 323, 328, 329], "calibr": [25, 47], "signifi": [25, 89, 134, 150, 197, 226, 264, 281, 358], "fold": [25, 197, 217, 252, 329, 349], "extent": [25, 91, 155, 252, 382], "carneval": [25, 35, 71, 83, 84, 95, 120, 121, 155, 197, 251, 252, 286, 329, 382, 389], "1995": [25, 121, 252], "tsai": [25, 252], "claiborn": [25, 252], "brown": [25, 217, 226, 230, 252, 349, 358, 362, 391], "neural": [25, 40, 47, 76, 151, 251, 252, 282, 382, 392], "vol": [25, 196, 247, 251, 328], "tesauro": [25, 252], "touretzki": [25, 252], "leen": [25, 252], "cambridg": [25, 121, 251, 252], "ma": [25, 95, 114, 121, 132, 148, 150, 178, 217, 247, 251, 252, 262, 279, 281, 349, 376, 378], "mit": [25, 121, 122, 251, 252], "p": [25, 27, 38, 40, 43, 47, 52, 58, 63, 64, 72, 76, 88, 99, 100, 114, 115, 121, 122, 139, 172, 178, 185, 186, 196, 197, 201, 208, 214, 220, 226, 228, 230, 232, 234, 239, 245, 246, 251, 252, 270, 279, 304, 317, 318, 328, 329, 333, 336, 340, 352, 360, 362, 364, 366, 368, 373, 382, 386, 387, 391, 392], "69": [25, 251, 252, 387, 391], "76": [25, 36, 91, 251, 252, 279, 387, 391], "nip": 25, "cc": [25, 371], "945": 25, "pdf": [25, 122, 196, 251, 252, 328, 375], "influenc": [25, 46, 252], "journal": [25, 40, 47, 95, 121, 251, 252, 375, 382, 389], "neurophysiologi": [25, 121, 251, 252], "82": [25, 252, 387, 391], "3268": [25, 252], "3285": [25, 252], "1999": [25, 121, 252, 375], "doi": [25, 40, 46, 47, 88, 90, 95, 251, 252, 375], "1152": [25, 90, 251, 252], "jn": [25, 90, 251, 252], "summer": [26, 71, 121, 286], "atlanta": 26, "georgia": 26, "lipid": [26, 31], "bilay": [26, 31], "squid": [26, 30, 122, 149, 252, 280, 376, 386, 392, 397], "compart": [26, 29, 33, 38, 41, 48, 105, 114, 115, 121, 122, 129, 131, 138, 154, 158, 160, 161, 208, 224, 247, 252, 259, 261, 269, 285, 289, 292, 293, 340, 347, 356, 371, 378, 386], "hhk": [26, 48], "modeldb": [26, 35, 38, 49, 77, 78, 83, 93, 95, 121, 237, 252, 280, 378, 392, 395], "neuroinformat": [26, 84, 251, 252], "inhomogen": [26, 46, 61, 252], "circuit": [26, 38, 71, 121, 148, 161, 252, 279, 293, 395], "embarrassingli": [26, 121, 155, 286], "multithread": [26, 150, 252, 281, 378], "paralel": [26, 131, 150, 281], "hopfield": [26, 36], "brodi": [26, 36, 252], "gatewai": [26, 237, 252], "nsg": 26, "portal": [26, 252, 382], "electroton": [26, 82, 91, 121, 252], "metric": [27, 43, 63, 100, 239, 252], "govern": [27, 43, 61, 63, 66, 93, 101, 118, 121, 149, 150, 252, 280, 281, 289, 375], "intermedi": [27, 39, 71, 129, 224, 231, 259, 356, 363, 382], "subsetdomainiter": [27, 63], "parameter": [27, 60, 82, 89, 99, 124, 197, 252, 254, 329, 381, 388], "name_x": 27, "cellbuid": 27, "root": [27, 39, 46, 61, 81, 84, 86, 99, 118, 126, 148, 151, 155, 156, 161, 162, 163, 191, 197, 208, 233, 245, 252, 256, 279, 282, 286, 287, 290, 292, 293, 294, 295, 323, 329, 340, 349, 365, 382], "slider": [27, 99, 168, 178, 218, 228, 300, 310, 350, 360], "forth": [27, 52, 94, 99, 100, 208, 340], "boundari": [27, 40, 65, 91, 129, 148, 161, 197, 217, 230, 259, 279, 289, 293, 329, 349, 362, 374, 386], "canva": [27, 31, 32, 37, 47, 61, 81, 91, 99, 107, 226, 228, 358, 360], "nnn": [27, 99], "cursor": [27, 31, 47, 50, 61, 74, 75, 76, 80, 81, 89, 91, 94, 100, 104, 105, 107, 108, 110, 172, 228, 230, 304, 360, 362], "nearest": [27, 61, 65, 100, 105, 150, 160, 182, 221, 228, 231, 232, 233, 234, 281, 290, 292, 314, 353, 360, 363, 364, 365, 366], "offer": [27, 40, 61, 71, 81, 94, 98, 100, 119, 121, 370, 371, 374, 392, 394, 397], "radial": [27, 63, 99, 121, 149, 247, 252, 280, 289, 371], "euclidian": 27, "plane": [27, 63, 99, 121, 226, 227, 228, 231, 234, 358, 359, 360, 363, 366, 378, 387], "orthogon": [27, 50, 99, 193, 325], "origin": [27, 28, 29, 36, 40, 43, 45, 54, 59, 61, 63, 65, 76, 84, 91, 99, 128, 131, 146, 148, 149, 155, 158, 161, 181, 184, 186, 196, 197, 216, 218, 226, 228, 230, 231, 233, 234, 243, 250, 252, 258, 261, 277, 279, 280, 286, 289, 293, 313, 316, 318, 328, 329, 348, 350, 358, 360, 362, 363, 365, 366, 376, 382, 387, 392], "intermezzo": 27, "own": [27, 40, 45, 47, 61, 63, 68, 71, 76, 81, 85, 87, 88, 91, 95, 98, 102, 119, 120, 121, 148, 149, 154, 155, 156, 168, 197, 208, 217, 222, 226, 228, 231, 243, 250, 279, 280, 285, 286, 287, 300, 329, 340, 349, 354, 358, 360, 363, 375, 377, 382, 386, 389, 397], "care": [27, 41, 121, 148, 149, 155, 161, 184, 193, 197, 200, 217, 239, 279, 280, 286, 293, 316, 329, 332, 349, 382, 389], "beneath": [27, 61, 75, 99, 184, 316], "paramt": 27, "boltzmann": [27, 100, 321], "ramp": [27, 100, 230, 252, 362], "confirm": [27, 28, 53, 75, 89, 91, 122, 155, 252, 286, 387], "ll": [27, 30, 31, 45, 46, 47, 61, 62, 69, 71, 77, 78, 81, 89, 91, 95, 97, 109, 111, 154, 250, 285, 370, 372, 375, 381, 386, 387, 388, 392], "although": [28, 29, 39, 66, 76, 89, 91, 114, 115, 121, 122, 139, 146, 150, 151, 154, 161, 170, 197, 207, 217, 243, 270, 277, 281, 282, 293, 302, 329, 339, 349, 371, 382, 386], "trivial": [28, 76, 81, 131, 159, 261, 291, 382, 385], "valuabl": [28, 382], "familiar": [28, 32, 51, 149, 207, 280, 339, 340, 389, 392], "ditto": 28, "5300": 28, "high": [28, 29, 33, 52, 71, 73, 75, 76, 84, 91, 95, 121, 128, 149, 155, 156, 168, 178, 196, 197, 207, 217, 231, 232, 252, 258, 280, 286, 287, 300, 310, 328, 329, 339, 349, 363, 364, 371, 374, 382, 386, 389], "precis": [28, 33, 39, 65, 76, 86, 90, 148, 149, 164, 181, 186, 191, 192, 197, 217, 226, 230, 252, 265, 279, 280, 313, 318, 323, 324, 329, 349, 358, 362, 382], "notat": [28, 114, 115, 141, 143, 149, 158, 160, 161, 193, 197, 208, 272, 274, 280, 292, 329, 340], "3e3": 28, "themselv": [28, 54, 121, 155, 197, 217, 243, 244, 286, 289, 329, 349, 376], "chosen": [28, 29, 65, 69, 98, 111, 119, 128, 131, 144, 149, 155, 165, 174, 207, 218, 224, 226, 228, 231, 258, 261, 275, 280, 297, 306, 339, 350, 356, 358, 360, 363, 381, 386, 389], "vec": [28, 29, 133, 145, 154, 155, 181, 193, 194, 196, 197, 201, 202, 208, 217, 232, 250, 276, 285, 286, 313, 325, 326, 328, 329, 333, 334, 337, 340, 349, 364, 392], "xo": [28, 217], "yo": 28, "capit": [28, 197, 226, 329, 358, 391], "oh": [28, 71, 382], "redeclar": [28, 201, 333], "destroi": [28, 29, 32, 42, 65, 76, 90, 98, 119, 128, 139, 142, 145, 151, 154, 155, 156, 159, 160, 161, 168, 169, 172, 184, 188, 196, 197, 202, 205, 218, 228, 232, 234, 258, 270, 273, 276, 282, 285, 286, 287, 291, 292, 293, 300, 301, 304, 316, 320, 328, 329, 334, 337, 350, 360, 364, 366], "gone": [28, 32], "foo": [28, 82, 93, 150, 159, 202, 208, 247, 249, 281, 291, 314, 334, 340, 346, 391], "ref": [28, 159, 168, 197, 208, 245, 282, 286, 291, 292, 299, 300, 306, 310, 311, 314, 316, 319, 325, 326, 328, 329, 331, 340, 342, 343, 344, 349, 382, 392], "objectvar": [28, 67, 76, 151, 154, 168, 180, 199, 226, 228, 233, 234, 300, 312, 331, 358, 360, 366, 392], "had": [28, 37, 41, 61, 73, 89, 121, 128, 148, 150, 154, 155, 164, 196, 207, 213, 216, 220, 258, 279, 281, 285, 286, 292, 328, 331, 339, 345, 348, 352, 391, 392], "statu": [28, 68, 185, 207, 243, 244, 245, 251, 252, 317, 339], "objarr": 28, "pile": [28, 122], "maintain": [28, 59, 72, 76, 93, 149, 197, 199, 220, 226, 228, 245, 247, 252, 280, 329, 331, 352, 358, 360, 362, 374, 382, 383, 386], "ie": [28, 114, 115, 129, 131, 133, 148, 153, 154, 155, 159, 161, 168, 169, 177, 193, 197, 201, 207, 208, 213, 217, 224, 226, 228, 234, 259, 261, 263, 279, 284, 285, 286, 291, 293, 300, 301, 309, 325, 329, 333, 339, 340, 345, 349, 356, 358, 360, 366], "reiniti": [28, 44, 158, 289, 371, 373], "derefer": [28, 208, 340], "though": [28, 29, 35, 73, 75, 76, 155, 156, 160, 193, 197, 213, 243, 245, 286, 287, 292, 296, 325, 328, 329, 345, 371, 375, 382, 383, 386, 392], "mystr": [28, 310], "hello": [28, 32, 35, 37, 76, 153, 155, 181, 197, 201, 202, 208, 284, 286, 310, 313, 319, 329, 333, 334, 340, 343, 346, 349, 358, 391], "strdef": [28, 76, 151, 155, 160, 164, 167, 168, 169, 172, 174, 175, 178, 181, 182, 184, 197, 199, 201, 202, 204, 208, 210, 211, 212, 213, 228, 282, 286, 296, 304, 306, 307, 313, 314, 333, 334, 340, 343, 344, 345, 360, 392], "tab": [28, 46, 89, 94, 186, 187, 224, 318, 319, 356], "newlin": [28, 76, 89, 184, 186, 187, 197, 201, 224, 230, 316, 318, 319, 329, 333, 356, 362], "overwrot": 28, "comparison": [28, 76, 122, 178, 181, 195, 197, 251, 252, 310, 313, 327, 329], "AND": [28, 76, 155, 165, 197, 286, 297, 329, 376], "OR": [28, 76, 217, 349], "NOT": [28, 87, 114, 115, 122, 148, 150, 154, 155, 156, 159, 163, 169, 172, 178, 197, 217, 234, 279, 281, 285, 286, 287, 291, 297, 301, 304, 310, 329, 349, 366, 391], "paren": 28, "sin": [28, 52, 76, 86, 146, 155, 158, 161, 168, 181, 186, 191, 197, 201, 213, 226, 227, 230, 277, 286, 289, 290, 293, 300, 313, 318, 323, 329, 330, 333, 337, 345, 358, 359, 362, 365, 387, 388, 389, 391, 392], "co": [28, 52, 76, 86, 132, 158, 161, 168, 181, 191, 197, 201, 226, 230, 252, 262, 289, 290, 293, 300, 313, 323, 329, 330, 333, 358, 362, 387, 388, 389, 392], "log": [28, 76, 86, 91, 125, 127, 128, 153, 155, 158, 191, 197, 207, 224, 243, 255, 257, 258, 284, 286, 289, 290, 323, 329, 330, 339, 356, 382, 392], "log10": [28, 76, 86, 158, 191, 197, 289, 290, 323, 329, 330, 392], "bracket": [28, 89, 168, 202, 217, 289, 300, 334, 349, 371, 391, 392], "clariti": [28, 62, 76, 105, 149, 280, 293, 371], "nest": [28, 52, 65, 76, 164, 178, 181, 213, 252, 265, 310, 313, 345, 391, 392], "prstuff": 28, "s2": [28, 148, 163, 178, 181, 197, 211, 230, 279, 295, 313, 329, 343, 354, 362], "averag": [28, 29, 41, 49, 53, 148, 149, 155, 161, 197, 252, 279, 280, 293, 329, 371, 378], "beginlin": [28, 197, 226, 228, 232, 234, 329, 358, 360, 364, 366], "thick": [28, 96, 108, 110, 122, 226, 247, 252, 358, 386], "draw": [28, 37, 61, 65, 71, 95, 99, 122, 161, 168, 172, 185, 225, 226, 228, 230, 231, 232, 234, 293, 300, 304, 317, 357, 358, 360, 362, 363, 364, 366, 392], "flush": [28, 129, 155, 168, 184, 194, 196, 197, 221, 224, 226, 228, 229, 230, 232, 233, 234, 259, 286, 300, 315, 316, 326, 328, 329, 337, 353, 356, 358, 360, 361, 362, 364, 365, 366], "color": [28, 47, 65, 68, 75, 82, 84, 96, 122, 126, 140, 161, 197, 225, 226, 228, 230, 231, 232, 233, 234, 235, 252, 256, 271, 279, 293, 329, 337, 357, 358, 360, 362, 363, 364, 365, 366, 367, 371, 386, 387, 388], "down": [28, 29, 46, 47, 50, 52, 61, 65, 71, 74, 75, 79, 80, 81, 94, 98, 100, 102, 104, 105, 106, 107, 108, 110, 119, 155, 201, 221, 226, 228, 234, 252, 286, 290, 333, 353, 358, 360, 366, 374, 387, 389], "resiz": [28, 29, 42, 148, 154, 155, 168, 193, 197, 205, 217, 220, 226, 228, 230, 233, 279, 285, 286, 300, 325, 329, 330, 337, 349, 352, 358, 360, 362, 365], "mul": [28, 89, 193, 197, 205, 325, 329, 330, 337], "div": [28, 29, 197, 329, 330], "sub": [28, 114, 115, 155, 197, 252, 286, 292, 329, 330, 371, 382, 391], "rid": [28, 47, 81, 94, 197, 252, 329, 373, 386], "element": [28, 68, 71, 76, 94, 95, 121, 122, 129, 131, 133, 146, 149, 154, 155, 168, 181, 184, 190, 193, 197, 200, 201, 205, 208, 216, 217, 220, 232, 252, 259, 261, 263, 277, 280, 285, 286, 300, 310, 313, 316, 322, 325, 329, 332, 333, 337, 340, 348, 349, 352, 364, 391, 392], "product": [28, 41, 51, 71, 114, 115, 149, 158, 181, 197, 252, 280, 313, 329, 371, 382, 383], "wrong": [28, 29, 32, 37, 54, 82, 91, 105, 128, 150, 168, 217, 258, 281, 300, 349, 391], "multipli": [28, 31, 160, 181, 193, 197, 217, 247, 290, 292, 313, 325, 329, 349, 372, 392], "sequenti": [28, 29, 76, 121, 155, 226, 234, 252, 286, 308, 358, 366, 377, 388], "indgen": [28, 193, 196, 197, 201, 205, 208, 325, 328, 329, 330, 333, 337, 340, 358], "aa": [28, 371], "vwrite": [28, 184, 197, 315, 316, 329, 330], "ropen": [28, 76, 184, 186, 187, 188, 193, 197, 201, 312, 315, 316, 318, 319, 320, 325, 329, 333, 392], "vread": [28, 184, 197, 315, 316, 329, 330], "eq": [28, 29, 150, 197, 249, 281, 329, 330], "tmpfile": 28, "aopen": [28, 184, 315, 316], "pointless": 28, "ismembran": [28, 160, 164, 199, 272, 292, 392], "seg": [28, 41, 208, 282, 285, 289, 292, 293, 296, 340, 349, 365, 380, 386, 387, 388], "gnabar_hh": [28, 43, 44, 61, 62, 63, 100, 101, 148, 154, 155, 201, 207, 286, 331, 333, 339, 386, 392], "cvode_act": [28, 38, 146, 154, 159, 277, 279, 285, 291, 349], "big": [28, 29, 31, 46, 73, 82, 89, 244], "1e10": [28, 220, 279, 352], "forev": [28, 39, 155, 286], "min": [28, 29, 76, 133, 155, 187, 197, 239, 252, 263, 280, 286, 310, 319, 329, 330, 378], "max": [28, 29, 76, 143, 187, 197, 201, 239, 274, 280, 310, 319, 325, 329, 330, 333, 378, 380, 382], "min_ind": [28, 197, 329, 330], "max_ind": [28, 197, 329, 330], "ap": [28, 43, 58, 61, 63, 84, 148, 252, 279], "gkbar_hh": [28, 43, 61, 62, 63, 100, 101, 114, 148, 154, 392], "regraph": [28, 76, 230, 362, 392], "reanalyz": 28, "seti": 28, "xpanel": [28, 46, 67, 76, 151, 161, 168, 177, 178, 193, 194, 196, 197, 199, 214, 226, 228, 282, 293, 300, 309, 310, 311, 326, 328, 329, 331, 337, 358, 360, 392], "xvalu": [28, 67, 76, 149, 161, 168, 177, 178, 193, 197, 199, 228, 280, 293, 309, 310, 311, 326, 328, 329, 331, 343, 360, 392], "xbutton": [28, 46, 67, 76, 168, 178, 194, 196, 197, 214, 228, 300, 310, 311, 326, 328, 329, 337, 360, 392], "student": [29, 40, 396, 397], "techniqu": [29, 40, 88, 217, 251, 252, 349, 382, 397], "distract": [29, 110, 121, 122], "popul": [29, 252, 329], "eas": [29, 76], "rather": [29, 75, 76, 114, 115, 121, 149, 158, 161, 168, 197, 200, 252, 280, 289, 293, 300, 329, 332, 337, 340, 370, 375], "qualiti": [29, 47, 71, 89, 121, 122, 194, 196, 228, 326, 328, 360, 382], "rope": 29, "difficult": [29, 36, 71, 76, 84, 107, 155, 158, 208, 231, 286, 340, 363], "lesson": [29, 71, 81], "quickli": [29, 39, 47, 71, 76, 81, 84, 121, 228, 239, 243, 360, 375, 381, 382, 383, 386, 387], "delv": 29, "deepli": [29, 52, 76], "realli": [29, 47, 51, 53, 61, 73, 75, 76, 81, 82, 89, 91, 94, 128, 154, 155, 182, 193, 208, 213, 217, 258, 285, 314, 325, 340, 345, 349, 382], "homework": [29, 397], "design": [29, 52, 56, 61, 76, 121, 135, 217, 231, 243, 252, 266, 349, 363, 368, 382, 386, 387, 396, 397], "asterisk": [29, 84, 392], "omit": [29, 65, 197, 252, 285, 289, 292, 293, 295, 302, 329, 373, 374, 382, 383, 386, 391], "realist": [29, 85, 131, 207, 252, 261, 339, 377, 392], "inhibitori": [29, 37, 38, 69, 75, 95, 104, 105, 110, 148, 252, 279], "hybrid": [29, 85, 158, 252, 289], "Such": [29, 40, 76, 149, 160, 161, 197, 217, 250, 280, 292, 293, 329, 337, 349, 382], "util": [29, 52, 53, 132, 153, 155, 211, 217, 239, 247, 252, 262, 284, 286, 343, 349], "stand": [29, 52, 181, 197, 226, 228, 234, 252, 313, 329, 358, 360, 366, 368, 382], "excitatori": [29, 37, 38, 69, 75, 90, 104, 105, 110, 148, 252, 279, 376, 387, 388, 389], "send": [29, 47, 61, 65, 81, 82, 94, 143, 148, 154, 155, 156, 201, 207, 217, 228, 244, 265, 274, 279, 285, 286, 287, 333, 339, 349, 360, 371, 376, 387, 389], "net_ev": [29, 83, 151, 154, 247, 282, 285], "spontan": [29, 252], "firetim": 29, "routin": [29, 32, 46, 52, 191, 193, 197, 200, 221, 323, 325, 329, 332], "invl": [29, 214], "perturb": [29, 95, 252], "enclos": [29, 76, 114, 115, 150, 156, 165, 168, 181, 185, 226, 281, 287, 297, 300, 313, 317, 358], "underli": [29, 35, 41, 54, 65, 125, 155, 239, 252, 255, 286, 289, 364], "mycel": [29, 61, 292, 378, 387], "hook": [29, 172, 304], "postsynapt": [29, 82, 109, 149, 154, 155, 252, 280, 285, 286, 387, 391], "neg": [29, 33, 39, 53, 76, 89, 126, 128, 131, 134, 148, 155, 161, 170, 193, 196, 197, 208, 212, 224, 252, 256, 258, 261, 264, 279, 286, 290, 293, 302, 325, 328, 329, 340, 344, 356, 382, 391], "highest": [29, 71, 149, 155, 164, 197, 280, 286, 329], "ncell": [29, 155, 156, 286, 287], "lowest": [29, 149, 252, 280, 377], "evenli": [29, 197, 329, 374, 391], "roughli": [29, 61, 374, 397], "cycl": [29, 71, 124, 168, 197, 226, 252, 254, 329, 358, 375, 383, 384], "intrins": [29, 252, 374], "magnifi": [29, 50, 65], "tempor": [29, 252, 374], "onset": [29, 71, 89, 95, 142, 148, 197, 217, 252, 273, 279, 329, 349], "trick": 29, "hyperpolar": [29, 75, 104, 148, 150, 252, 279, 281], "accomplish": [29, 46, 88, 155, 201, 208, 220, 236, 286, 333, 340, 352], "pacemak": [29, 252], "impos": [29, 197, 231, 329, 363], "within": [29, 32, 41, 54, 59, 65, 72, 76, 82, 86, 100, 115, 122, 129, 143, 148, 149, 150, 155, 160, 164, 165, 169, 176, 178, 181, 194, 195, 197, 201, 202, 205, 216, 217, 220, 226, 228, 230, 232, 243, 250, 252, 259, 265, 274, 279, 280, 281, 286, 289, 296, 297, 308, 313, 326, 327, 329, 331, 333, 334, 337, 348, 349, 352, 358, 360, 362, 364, 368, 373, 374, 382, 389, 391, 392], "enslav": 29, "member": [29, 40, 49, 52, 54, 61, 121, 139, 193, 217, 224, 226, 270, 325, 349, 356, 358, 392], "mass": [29, 128, 158, 252, 258, 289, 371, 375, 388], "recov": [29, 42, 75, 98, 119], "amplifi": [29, 33, 91, 148, 252, 279], "receiv": [29, 38, 54, 66, 69, 71, 75, 94, 95, 104, 105, 143, 148, 154, 155, 156, 200, 213, 217, 239, 252, 274, 279, 285, 286, 287, 332, 345, 349, 373, 376, 382, 383, 385, 389], "len": [29, 95, 161, 205, 211, 289, 293, 295, 301, 326, 329, 337, 340, 343, 344, 365, 371, 391], "sp": [29, 52, 289], "savspk": 29, "tvec": [29, 146, 154, 197, 216, 217, 247, 277, 279, 285, 329, 348, 349], "ind": [29, 197, 329, 330], "hit": [29, 155, 286], "wise": [29, 52, 155, 286], "precaut": 29, "screw": [29, 150, 281], "throw": [29, 61, 71, 76, 105, 128, 160, 185, 190, 258, 292, 317, 322], "showspk": 29, "fancier": 29, "syncer": 29, "np": [29, 153, 155, 239, 284, 286, 329], "arang": [29, 391], "5e": [29, 247, 373], "veclist": 29, "went": [29, 91], "ta": 29, "setpar": 29, "redefin": [29, 114, 115, 149, 280], "easier": [29, 45, 47, 61, 71, 76, 77, 78, 149, 150, 160, 197, 228, 238, 249, 280, 281, 286, 292, 329, 358, 360, 375, 382, 386], "overwrit": [29, 42, 45, 98, 119, 197, 329, 382], "low": [29, 33, 65, 71, 73, 76, 91, 121, 128, 178, 194, 196, 197, 207, 228, 230, 231, 232, 239, 252, 258, 289, 310, 326, 328, 329, 339, 343, 349, 360, 362, 363, 364, 371, 373, 374, 382, 386, 392], "wt": 29, "lectur": [29, 252, 289, 393], "rewrit": [29, 121, 382], "wire": [29, 155, 252, 286], "remove_al": [29, 169, 301, 311], "half": [29, 47, 71, 73, 81, 161, 197, 216, 247, 293, 329, 348, 388, 396, 397], "rdm": 29, "discunif": [29, 193, 196, 325, 328], "proj": 29, "repick": [29, 196, 328], "upward": [29, 86], "modulu": [29, 181, 290, 313, 391], "pij": 29, "densiti": [29, 30, 37, 40, 43, 46, 61, 63, 76, 83, 84, 99, 100, 114, 115, 129, 131, 143, 145, 148, 150, 151, 160, 161, 197, 199, 201, 208, 216, 217, 224, 252, 259, 261, 274, 276, 279, 280, 281, 282, 292, 293, 329, 331, 333, 340, 348, 349, 356, 392, 397], "netconlist": [29, 154, 217, 285, 349], "diverg": [29, 155, 252, 371], "conv": 29, "fconn": 29, "prevec": 29, "postvec": 29, "postsyn": 29, "central": [29, 39, 124, 197, 252, 254, 329, 382], "showdiv1": 29, "showconv1": 29, "animplot": 29, "shift": [29, 50, 62, 65, 76, 95, 99, 197, 226, 231, 234, 252, 329, 358, 363, 366, 376, 381], "afterward": [29, 91], "pulldown": 29, "jun": [29, 252], "2015": [29, 159, 252, 291, 374], "34": [29, 161, 196, 247, 252, 279, 293, 328, 329, 347, 373, 376, 378, 386, 391, 392], "giant": [30, 71, 252, 376, 392], "loligo": 30, "pealei": 30, "2e4": 30, "43": [30, 53, 239, 252, 279, 386, 387, 391, 392], "hhaxon": 30, "savesess": 30, "loadsess": 30, "stimul": [30, 32, 44, 45, 70, 71, 85, 102, 103, 148, 151, 156, 252, 279, 282, 287, 387], "propag": [30, 38, 41, 158, 252, 289, 371, 374, 387], "smooth": [30, 93, 197, 252, 329], "evolut": [30, 252, 382], "sodium": [30, 38, 59, 63, 100, 131, 148, 149, 150, 247, 252, 261, 279, 280, 281, 289, 329, 373, 376, 386, 387, 388, 392], "viewer": [30, 136, 267], "rule": [30, 52, 61, 62, 65, 71, 87, 93, 121, 131, 144, 149, 150, 155, 158, 193, 250, 252, 261, 275, 280, 281, 286, 289, 290, 292, 325, 372, 373, 374, 376, 382, 386, 391], "electrolyt": 31, "vesicl": [31, 252], "capacitor": [31, 33, 252], "consol": [31, 76, 154, 155, 187, 213, 228, 286, 319, 345, 360], "anniversari": 31, "bash": [31, 35, 36, 46, 153, 166, 216, 243, 244, 245, 246, 265, 284, 298, 348], "path_to_your_desktop": 31, "intro_to_gui": 31, "congratul": 31, "recreat": [31, 42, 61, 71, 91, 98, 119, 160, 171, 207, 252, 303, 339, 386], "Be": [31, 38, 41, 42, 71, 98, 100, 119, 120, 129, 148, 208, 239, 259, 340], "selectpointprocess": [31, 139, 270], "ppm": [31, 118], "divid": [31, 36, 73, 84, 149, 155, 161, 166, 197, 247, 280, 286, 293, 298, 329, 386, 391, 392], "durat": [31, 46, 47, 59, 66, 102, 142, 148, 197, 252, 273, 279, 329, 386], "checkmark": [31, 129, 138, 177, 224, 259, 269, 309, 356], "ow": 31, "tend": [31, 52, 76, 121, 155, 197, 286, 329, 370], "revers": [31, 37, 144, 148, 150, 155, 193, 197, 252, 275, 279, 281, 291, 325, 329, 330, 371, 376, 382, 383, 386, 387, 388, 391, 392], "rescal": [31, 81, 118, 122, 125, 172, 252, 255, 304], "1a": [31, 46, 53, 245, 252], "poor": [31, 62, 89], "1e4": 31, "cut": [31, 47, 65, 71, 91], "1e": [31, 39, 47, 59, 76, 89, 120, 128, 129, 131, 133, 146, 154, 158, 191, 195, 217, 247, 258, 259, 261, 263, 277, 285, 293, 323, 327, 349, 371, 373, 375, 376, 377, 380], "inreas": 31, "1e5": [31, 120], "etern": 31, "stop": [31, 36, 52, 67, 71, 76, 91, 93, 124, 128, 129, 131, 133, 148, 154, 176, 197, 201, 214, 216, 217, 218, 220, 226, 228, 234, 239, 254, 258, 259, 261, 263, 279, 285, 308, 329, 333, 346, 348, 349, 350, 352, 358, 360, 365, 366, 382, 383, 386, 392], "variablestepcontrol": [31, 32, 37, 217, 349], "clickin": 31, "didact": [31, 32], "readabl": [32, 53, 61, 128, 258, 279, 386, 392], "embodi": 32, "notion": [32, 121, 129, 155, 161, 164, 259, 286, 293], "complic": [32, 41, 75, 148, 149, 155, 158, 168, 221, 230, 279, 280, 286, 300, 353, 362, 386], "burst": [32, 70, 148, 155, 252, 279, 286], "world": [32, 35, 37, 153, 155, 160, 178, 208, 252, 284, 286, 310, 319, 340, 343, 358, 382, 391], "troubl": [32, 37, 114, 115, 244], "artcellgui": [32, 37, 102, 103, 106, 107], "networkcel": [32, 37], "artificialcel": [32, 37, 156, 168, 217, 222, 287, 300, 349, 354], "networkbuild": 32, "radiobutton": [32, 37, 226, 358], "explanatori": [32, 382], "greater": [32, 35, 36, 76, 86, 91, 104, 121, 148, 155, 159, 181, 194, 196, 197, 205, 211, 216, 217, 224, 226, 228, 279, 286, 291, 313, 326, 328, 329, 337, 343, 348, 349, 356, 358, 360], "possibli": [32, 128, 155, 165, 217, 220, 227, 239, 258, 286, 297, 316, 349, 352, 359, 382, 383], "behavior": [32, 61, 68, 82, 84, 95, 114, 154, 155, 158, 161, 197, 217, 251, 252, 285, 286, 289, 290, 293, 323, 329, 349, 371, 382, 386, 392], "pointprocess": [32, 37, 74, 83, 104, 136, 148, 149, 150, 151, 154, 159, 199, 200, 217, 222, 235, 267, 279, 280, 281, 282, 285, 291, 292, 331, 332, 349, 354, 367, 392], "confin": [32, 252], "simulat": [32, 103], "constantli": [32, 76, 155, 286], "substanti": [32, 121, 122, 145, 217, 276, 349], "tar": [32, 37, 49, 80, 107, 108, 110, 153, 155, 243, 284, 286], "spikeplot": [32, 37, 96, 97, 103, 168, 300], "relev": [32, 37, 53, 54, 61, 76, 89, 93, 149, 155, 184, 217, 228, 234, 236, 239, 244, 252, 265, 280, 286, 316, 349, 360, 366, 371, 382, 388, 392, 396], "showcellmap": [32, 37], "c_intfire1": 32, "thousand": [32, 36, 47, 155, 216, 226, 286, 348, 358, 382, 392], "postcel": [32, 154, 217, 283, 285, 349], "precel": [32, 154, 217, 283, 285, 349], "craft": 32, "investig": [32, 40, 84, 121, 217, 252, 349], "larger": [32, 37, 75, 76, 85, 134, 148, 149, 150, 161, 168, 196, 197, 205, 217, 226, 228, 235, 239, 252, 264, 279, 280, 281, 293, 300, 328, 329, 337, 349, 358, 360, 367, 374, 382, 392], "scope": [32, 52, 93, 149, 150, 155, 164, 165, 201, 208, 239, 280, 281, 286, 297, 329, 333, 340, 373, 382], "cell_append": 32, "nc_append": [32, 156, 283, 287], "wide": [32, 65, 71, 93, 121, 197, 243, 252, 329, 382, 392], "essenti": [32, 42, 51, 62, 95, 98, 119, 121, 149, 150, 155, 161, 207, 252, 280, 281, 286, 293, 339, 391, 392], "regard": [32, 61, 122, 148, 149, 155, 156, 159, 160, 161, 208, 217, 222, 244, 279, 280, 286, 287, 291, 292, 293, 340, 349, 354, 382], "consist": [33, 52, 54, 76, 89, 95, 114, 115, 122, 125, 129, 131, 139, 148, 149, 150, 155, 156, 161, 165, 166, 168, 172, 176, 181, 193, 197, 202, 207, 208, 213, 217, 218, 220, 221, 222, 223, 228, 231, 233, 243, 255, 259, 261, 270, 279, 280, 281, 286, 287, 289, 293, 297, 298, 300, 304, 308, 313, 325, 329, 334, 339, 340, 345, 349, 350, 352, 353, 354, 355, 360, 363, 365, 371, 382, 386, 391, 392], "ideal": [33, 71, 142, 146, 148, 273, 277, 279, 374], "resistor": [33, 252], "intra": [33, 155, 158, 252, 286, 289, 373, 397], "op": [33, 156, 287, 382], "linearmechan": [33, 131, 135, 141, 147, 148, 155, 217, 220, 261, 266, 272, 278, 279, 286, 349, 352, 392], "transcend": 33, "histor": [33, 121, 200, 217, 332, 349], "arbitrari": [33, 39, 82, 129, 150, 155, 165, 194, 197, 207, 228, 231, 259, 281, 286, 297, 314, 326, 329, 339, 349, 360, 363, 377, 387, 391], "unfortun": [33, 35, 36, 76, 131, 148, 149, 150, 155, 208, 228, 261, 279, 280, 281, 286, 310, 340, 360], "cost": [33, 62, 73, 121, 134, 239, 252, 264, 349, 385, 392, 393], "worst": 33, "gaussian": [33, 146, 155, 196, 197, 252, 277, 286, 328, 329], "plausibl": [33, 41, 46, 252], "realiz": [33, 149, 280], "volt": [33, 114, 115, 149, 280], "vc": [33, 142, 148, 273, 279, 382], "thu": [33, 39, 42, 59, 74, 76, 98, 114, 115, 119, 143, 146, 148, 155, 160, 161, 169, 170, 196, 197, 201, 202, 204, 208, 217, 220, 226, 274, 277, 279, 286, 289, 292, 293, 302, 310, 325, 328, 329, 333, 334, 336, 339, 340, 349, 352, 358, 371, 382, 392], "micron": [33, 38, 41, 45, 61, 114, 115, 149, 158, 161, 247, 280, 289, 293, 371, 372, 374, 376, 386, 387, 391, 392], "r1": [33, 158, 289], "sign": [33, 46, 47, 81, 89, 91, 104, 149, 186, 187, 197, 240, 252, 280, 290, 318, 319, 329, 382, 391], "r2": [33, 75, 97, 110, 111, 354], "goe": [33, 42, 52, 75, 76, 128, 148, 149, 155, 184, 197, 207, 208, 226, 228, 234, 252, 258, 279, 280, 286, 316, 329, 339, 358, 360, 366, 371, 386, 392], "ground": [33, 52, 65, 146, 148, 161, 217, 252, 277, 279, 293, 349], "10mv": 33, "lincir1": 33, "unfinish": 34, "test0": [35, 153, 155, 284, 286], "pu": 35, "sofwar": 35, "pathto": 35, "paranrn": [35, 155, 156, 213, 286, 287, 345, 389], "2008": [35, 95, 155, 200, 251, 252, 332, 389], "meth": [35, 285, 349], "169": [35, 95, 251, 252, 389], "425": [35, 95, 251, 252, 389], "465": [35, 252], "reprint": [35, 76], "handout": 35, "booklet": 35, "Or": [35, 76, 105, 149, 166, 245, 252, 280, 298, 340], "entri": [35, 46, 47, 52, 65, 71, 76, 81, 98, 102, 109, 119, 124, 129, 133, 144, 149, 158, 175, 184, 197, 228, 236, 252, 254, 259, 263, 275, 280, 290, 296, 301, 307, 316, 329, 342, 360, 382, 386, 392], "especiali": 35, "parallelnetwork": 35, "head": [35, 98, 119, 211, 243, 244, 245, 252, 343, 344, 371, 382], "portion": [35, 48, 65, 128, 139, 140, 217, 220, 228, 252, 258, 270, 271, 289, 349, 352, 360], "parallelnetmanag": [35, 135, 141, 152, 155, 266, 272, 283, 286], "wrapper": [35, 155, 156, 160, 196, 200, 208, 213, 274, 286, 287, 328, 332, 340, 345], "mine": [35, 71, 121, 252], "idiom": [35, 36, 148, 149, 154, 155, 156, 165, 181, 208, 213, 228, 279, 280, 285, 286, 287, 297, 313, 340, 345, 349, 360, 392], "vogel": [35, 252], "abbott": [35, 252], "brett": [35, 83, 95, 251, 252], "purkinj": [36, 252, 391], "miyasho": [36, 252], "2001": [36, 84, 120, 121, 251, 252], "wall": [36, 155, 243, 252, 286], "did": [36, 40, 46, 49, 61, 89, 91, 93, 106, 148, 155, 207, 222, 243, 279, 286, 336, 339, 354, 375, 376, 382, 387], "parallelcomput": 36, "refresh": [36, 37, 103, 104, 231, 363], "1e8": 36, "chanc": [36, 62, 114, 115, 149, 163, 280, 295], "imbal": [36, 155, 252, 286], "split": [36, 155, 156, 161, 216, 251, 280, 282, 286, 287, 293, 348, 371, 382, 386, 387, 392, 396, 397], "multisplit": [36, 155, 161, 216, 217, 283, 286, 293, 348, 349], "26": [36, 41, 84, 197, 200, 244, 252, 329, 332, 386, 387, 391, 392], "cad": 36, "repair": [36, 47, 81, 252], "aid": [36, 84, 150, 155, 252, 281, 286, 368], "rxvt": 36, "icon": [36, 48, 62, 65, 71, 117, 122, 129, 172, 223, 228, 259, 304, 355, 360], "prknj": 36, "complain": 36, "k22": 36, "never": [36, 65, 71, 75, 76, 89, 93, 107, 148, 149, 150, 155, 226, 279, 280, 281, 286, 339, 340, 358, 362, 382, 389], "peopl": [36, 49, 76, 316, 382, 396], "safeti": [36, 150, 155, 201, 281, 286, 333], "k23": 36, "k2": [36, 89, 90, 247, 375], "kc2": 36, "kc3": 36, "kc": 36, "khh": 36, "useion": [36, 144, 147, 248, 275, 376, 378], "ik": [36, 67, 114, 122, 148, 220, 247, 279, 352, 376, 378, 392], "gk": [36, 67, 75, 122, 247, 376, 392], "nexp": 36, "37": [36, 53, 252, 280, 329, 386, 387, 391, 392], "temporarili": [36, 165, 245, 293, 297, 331, 340], "assumpt": [36, 59, 217, 349, 374], "calciump": 36, "bother": [36, 61, 62], "dll": [36, 48, 52, 76, 151, 200, 213, 224, 282, 332, 345, 356], "superlinear": [36, 156, 287], "cash": [36, 252], "worthwhil": [36, 217, 239, 349], "cortex": [36, 252], "sensori": [36, 252], "moment": [36, 62, 91, 239, 252], "transient": [36, 44, 89, 90, 91, 228, 252, 360], "synchroni": [36, 252], "michel": [36, 252], "elaps": [36, 128, 155, 258, 286], "walltim": [36, 155, 286], "mosinit": [36, 38, 46], "start_tim": 36, "run_u": 36, "storag": [36, 52, 65, 95, 154, 155, 161, 193, 197, 199, 222, 252, 285, 286, 293, 325, 329, 331, 354, 374, 397], "mindelai": 36, "sadli": [36, 244], "fortun": [36, 95, 244, 286, 375], "critic": [36, 89, 129, 239, 252, 259, 382, 383], "netreadycellgui": [37, 103, 104, 105, 106], "syntypegui": [37, 103, 104, 105], "continuous_simulations_of_net": 37, "e_pa": [37, 43, 61, 62, 63, 84, 91, 103, 148, 279, 392], "polici": [37, 155, 156, 207, 241, 286, 287, 339, 384], "celltyp": 37, "classnam": [37, 54, 75, 178, 310, 334], "fromcellbuild": 37, "request": [37, 77, 78, 129, 155, 156, 166, 168, 182, 193, 197, 207, 218, 224, 227, 228, 241, 244, 259, 286, 287, 298, 300, 314, 325, 329, 339, 350, 356, 359, 360, 371, 373, 378, 383, 384], "nrc": 37, "info": [37, 53, 103, 134, 155, 157, 160, 161, 163, 167, 217, 222, 226, 231, 238, 239, 244, 264, 265, 279, 286, 288, 292, 293, 349, 354, 358, 363, 378, 382, 383, 391], "duplic": [37, 65, 71, 84, 162, 294], "5m": 37, "syntyp": 37, "font": [37, 65, 94, 170, 172, 226, 302, 304, 358], "detach": 37, "analogi": [37, 149, 193, 280, 325, 368], "easili": [37, 39, 40, 42, 59, 63, 65, 73, 98, 119, 121, 149, 155, 156, 166, 193, 224, 228, 239, 265, 280, 286, 287, 298, 325, 356, 360, 372, 375, 376, 382, 383, 387, 391], "drawn": [37, 65, 161, 196, 197, 224, 225, 226, 228, 231, 232, 234, 293, 328, 329, 356, 357, 358, 360, 363, 364, 366, 382], "si1": 37, "b_ballstick": 37, "sec": [38, 46, 47, 53, 54, 58, 61, 67, 114, 115, 148, 149, 154, 155, 158, 159, 163, 164, 203, 208, 247, 261, 262, 270, 272, 273, 275, 277, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 305, 318, 329, 331, 335, 340, 349, 352, 364, 365, 366, 373, 374, 378, 386, 387, 388], "odd": [38, 61, 82, 120, 160, 197, 292, 329, 386, 392], "plotshap": [38, 58, 135, 224, 266, 356, 373, 386, 387, 388, 392], "bonu": [38, 39], "json": 38, "consid": [38, 39, 40, 41, 59, 61, 63, 76, 77, 78, 82, 89, 95, 114, 115, 122, 146, 148, 149, 150, 151, 155, 157, 158, 159, 161, 181, 197, 199, 200, 208, 217, 245, 252, 277, 279, 280, 281, 282, 286, 288, 289, 290, 291, 293, 313, 319, 323, 329, 331, 332, 339, 340, 342, 349, 362, 371, 372, 376, 381, 382, 383, 387, 391, 392], "potassium": [38, 59, 148, 149, 247, 252, 279, 280, 289, 373, 376, 378, 386, 387, 388, 392], "mammalian": [38, 75, 252, 386, 392], "m\u03c9": 38, "strongest": 38, "reposit": [38, 79, 91], "126814": 38, "solver": [38, 39, 121, 146, 158, 200, 217, 239, 277, 289, 332, 349, 371, 375], "csv": [38, 397], "excel": [38, 42, 98, 119, 228, 360, 382, 392, 397], "matlab": [38, 392], "e_": 38, "role": [38, 149, 194, 197, 226, 252, 280, 326, 358, 371, 374, 391, 397], "e_syn": 38, "strength": [38, 71, 95, 108, 110, 121, 131, 155, 252, 261, 286], "point_process": [38, 131, 143, 147, 148, 154, 155, 164, 197, 199, 208, 211, 216, 217, 248, 261, 274, 279, 285, 286, 296, 329, 331, 340, 343, 348, 349, 392], "vgap": 38, "electrode_curr": [38, 147, 148, 248, 279, 349], "megohm": [38, 91, 114, 115, 131, 149, 161, 247, 261, 280, 293], "millivolt": [38, 71, 114, 115, 142, 247, 273, 376], "nanoamp": [38, 71, 114, 115, 146, 148, 161, 247, 277, 279, 293], "differenti": [39, 121, 131, 146, 149, 158, 197, 217, 252, 261, 277, 280, 289, 329, 349, 371, 374], "frac": [39, 145, 146, 191, 276, 277, 278, 323, 371, 381, 386], "dy": [39, 131, 146, 161, 217, 261, 277, 293, 349, 378], "stai": [39, 41, 65, 75, 80, 155, 230, 286, 362, 392], "likewis": [39, 59], "analyt": [39, 83, 148, 149, 217, 252, 279, 280, 349, 371], "subject": [39, 40, 91, 102, 252, 382], "solut": [39, 44, 83, 122, 148, 149, 155, 193, 200, 252, 279, 280, 286, 301, 325, 332, 346, 371, 382, 386, 389, 392], "singular": [39, 131, 149, 193, 261, 280, 325], "od": [39, 121, 149, 155, 252, 280, 286, 374], "exact": [39, 65, 75, 114, 115, 118, 149, 150, 155, 158, 159, 161, 164, 181, 197, 217, 247, 280, 281, 286, 289, 290, 291, 293, 313, 329, 349, 371, 382, 383, 387], "versu": [39, 252], "dx": [39, 155, 158, 161, 197, 252, 286, 289, 293, 329, 373, 378], "quadrat": [39, 124, 128, 254, 258], "bx": 39, "pm": 39, "sqrt": [39, 52, 76, 86, 120, 143, 158, 161, 191, 197, 201, 274, 289, 290, 293, 323, 329, 330, 333, 392], "4ac": 39, "2a": [39, 375], "decid": [39, 40, 42, 47, 51, 81, 93, 94, 95, 121, 155, 156, 213, 217, 286, 287, 345, 349], "subtract": [39, 76, 155, 181, 197, 252, 286, 313, 329], "recal": [39, 75, 91, 197, 228, 252, 329, 360, 374, 375, 386, 392], "midpoint": [39, 108], "y_": 39, "y_n": 39, "formula": [39, 43, 63, 131, 261, 289, 371, 386], "algebra": [39, 121, 122, 146, 149, 217, 277, 280, 349], "monoton": [39, 161, 217, 252, 293, 349], "displaystyl": [39, 381], "lim_": [39, 381], "infti": [39, 41, 381], "theorem": [39, 371], "convinc": 39, "newton": [39, 149, 217, 251, 252, 280, 349, 371, 393], "x_0": 39, "x_": 39, "x_n": 39, "slope": [39, 100, 252], "forward": [39, 95, 197, 228, 252, 289, 329, 360, 371, 384, 397], "approx": [39, 358], "arithmet": [39, 76, 114, 115, 250, 252, 289, 290, 329, 371], "ieee": [39, 251, 252], "754": 39, "quantiti": [39, 114, 115, 215, 347], "epsilon": [39, 217, 349], "ne": [39, 150, 249, 281], "pitfal": [40, 47], "await": [40, 201, 333, 373], "uninform": 40, "who": [40, 47, 88, 121, 149, 158, 194, 280, 289, 326, 377, 392, 394, 396, 397], "lack": [40, 122, 239, 252], "experi": [40, 45, 61, 71, 82, 88, 89, 98, 119, 142, 155, 156, 161, 239, 252, 273, 286, 287, 289, 293], "microscop": [40, 252], "neuroanatomi": [40, 252], "acquisit": [40, 252], "colleagu": 40, "person": [40, 239, 252, 391], "caveat": [40, 149, 150, 231, 280, 281, 363], "mayb": [40, 46, 47, 81, 92, 122, 382], "sake": [40, 62, 69, 105, 178, 374, 387], "mbf": 40, "bioscienc": [40, 252], "literatur": 40, "perspect": [40, 89, 252, 340, 382], "articl": [40, 42, 77, 78, 84, 98, 119, 121, 371, 382], "artifact": [40, 47, 91, 129, 131, 244, 245, 259, 261], "frequenli": 40, "seriou": [40, 81, 91, 114, 115, 155, 156, 197, 207, 217, 224, 286, 287, 339, 349, 356, 382], "advers": [40, 252], "kaspirzhni": [40, 47, 252], "av": [40, 47], "gogan": [40, 47, 252], "horchol": [40, 47, 252], "bossavit": [40, 47, 252], "tyc": [40, 47, 252], "dumont": [40, 47, 252], "2002": [40, 47, 121, 239, 252], "morpholog": [40, 47, 252, 397], "nois": [40, 47, 91, 95, 102, 103, 148, 252, 279], "asses": [40, 47], "13": [40, 41, 47, 53, 65, 95, 155, 197, 208, 226, 241, 247, 252, 279, 319, 320, 329, 336, 340, 342, 358, 372, 375, 378, 382, 386, 387, 391, 392], "357": [40, 47, 252], "380": [40, 47, 252], "1088": [40, 47, 252], "0954": [40, 47], "898x_13_3_307": [40, 47], "scorcioni": [40, 47, 252], "lazarewicz": [40, 47, 252], "ascoli": [40, 47, 252], "quantit": [40, 252, 376, 386], "morphometri": [40, 46, 47, 252], "hippocamp": [40, 47, 252], "laboratori": [40, 47, 121, 197, 252], "neurologi": [40, 47, 251, 252], "473": [40, 47, 252], "177": [40, 47, 252], "193": [40, 47, 252], "2004": [40, 41, 47, 84, 213, 245, 251, 252, 345], "1002": [40, 47, 252, 365], "cne": [40, 47, 252], "20067": [40, 47], "chapter": [40, 52, 71, 76, 77, 78, 121, 251], "corinn": 40, "teeter": [40, 252], "dissert": 40, "character": [40, 252, 371], "arbor": [40, 252], "motiv": [40, 149, 280], "author": [40, 77, 78, 84, 121, 155, 156, 217, 286, 287, 349, 382], "lab": [40, 43, 45, 61, 71, 121], "came": [40, 65, 89, 155, 286], "acquir": [40, 245, 252], "paid": 40, "wage": 40, "career": 40, "didn": [40, 61, 71, 91, 148, 279, 386, 392], "neuromorpho": [40, 41, 47, 59, 373, 378, 395], "org": [40, 41, 46, 47, 52, 59, 84, 88, 146, 155, 193, 196, 239, 243, 244, 245, 246, 251, 252, 277, 286, 325, 328, 373, 375, 378, 382, 385, 395], "archiv": [40, 46, 91, 207, 243, 251, 252, 339], "complaint": [40, 114, 115], "anatomist": [40, 47, 103], "stain": 40, "overestim": 40, "reject": 40, "concern": [40, 82, 238, 374], "optic": [40, 252], "resolut": [40, 71, 76, 122, 129, 155, 156, 158, 178, 213, 214, 221, 226, 228, 252, 259, 286, 287, 289, 310, 345, 346, 353, 358, 360, 374, 382, 386, 392], "pt3d": [40, 46, 47, 61, 161, 293, 386], "finest": 40, "quantiz": [40, 47], "favorit": [40, 47, 392], "nice": [40, 45, 60, 81, 89, 122, 156, 226, 239, 286, 287, 382, 387], "bottleneck": 40, "unreason": [40, 156, 287], "ordinari": [40, 374], "light": [40, 114, 115, 149, 168, 230, 252, 280, 300, 362], "microscopi": [40, 252], "smaller": [40, 47, 59, 71, 78, 89, 91, 194, 197, 205, 326, 329, 337, 371, 374, 378, 382], "pai": [40, 53, 155, 286], "attent": [40, 53, 81, 239, 252, 382, 387], "resolv": [40, 252, 373, 391], "bogu": 40, "fiduci": 40, "bodi": [40, 63, 76, 150, 155, 181, 218, 233, 252, 281, 286, 313, 350, 365], "layer": [40, 63, 146, 148, 250, 252, 277, 279], "cortic": [40, 63, 252], "90": [40, 53, 65, 187, 197, 252, 280, 329, 372], "backlash": 40, "useless": [40, 160, 203, 222, 292, 335, 354], "molecul": [41, 158, 251, 289, 370, 371, 377], "ip3": [41, 252, 289, 290, 371, 374, 379, 381], "wagner": [41, 252], "coeffici": [41, 149, 155, 161, 280, 286, 289, 293, 352, 371, 374, 378], "cytosol": [41, 82, 158, 252, 289, 372, 374, 376], "283": [41, 252, 374], "biologist": 41, "electrophysiologi": [41, 252, 371, 375, 376, 386, 392], "101": [41, 161, 252, 293, 358, 362, 371, 372, 374, 380, 386], "concentr": [41, 82, 89, 90, 114, 115, 131, 134, 144, 149, 150, 158, 220, 224, 247, 252, 261, 264, 275, 280, 281, 289, 352, 354, 356, 371, 372, 374, 375, 376, 378, 379, 381, 392, 396, 397], "nm": [41, 375, 380], "peak": [41, 75, 89, 90, 104, 148, 227, 279, 359, 380, 386], "water": [41, 252], "calcium": [41, 59, 71, 90, 149, 150, 158, 160, 217, 247, 252, 280, 281, 289, 292, 349, 358, 371, 373, 377, 379], "97": [41, 76, 239, 252], "physiologyweb": 41, "answer": [41, 46, 51, 61, 77, 81, 84, 89, 95, 97, 156, 158, 193, 207, 287, 289, 319, 325, 339, 371], "glucos": 41, "spine": [41, 46, 134, 155, 161, 252, 264, 293, 395], "biolog": [41, 61, 69, 84, 95, 103, 121, 252, 371, 375, 392], "cubic": [41, 197, 252, 329, 374, 378], "1mm": 41, "602": [41, 252], "stochast": [41, 77, 78, 95, 121, 196, 252, 289, 328, 371], "percentag": [41, 238], "ca1": [41, 252, 378, 391, 392], "chemic": [41, 149, 252, 280, 371, 373, 374], "speci": [41, 59, 132, 149, 150, 158, 252, 262, 272, 280, 281, 289, 290, 354, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 392], "mm": [41, 114, 115, 132, 149, 247, 252, 262, 280, 370, 371, 372, 373, 375, 376, 380, 381, 392], "shapeplot": [41, 232, 364], "regen": [41, 252, 371, 396], "berridg": 41, "1998": [41, 251, 252, 375], "pure": [41, 82, 197, 211, 217, 252, 318, 329, 340, 343, 345, 349, 374, 392, 396], "travel": [41, 252, 371, 374], "meter": 41, "human": [41, 53, 84, 251, 252, 392], "wave": [41, 131, 197, 226, 251, 252, 261, 329, 358, 362, 379], "front": [41, 45, 65, 88, 89, 91, 128, 168, 169, 252, 258, 300, 301, 371, 378, 391], "ip": [41, 153, 208, 252, 284, 340], "accompani": [41, 71, 252, 382, 383, 386], "fertil": 41, "ca": [41, 59, 144, 150, 156, 158, 197, 208, 247, 252, 275, 279, 280, 281, 285, 289, 295, 296, 335, 340, 365, 366, 370, 371, 373, 374, 377, 392], "egg": [41, 218, 350], "frog": [41, 252], "xenopu": [41, 149, 252, 280], "laevi": [41, 252], "theoret": [41, 128, 252, 258], "433": [41, 252, 375], "447": [41, 252], "great": [42, 71, 98, 119, 128, 148, 149, 207, 210, 258, 279, 280, 339, 342, 374, 382, 386], "labor": [42, 98, 119], "lose": [42, 61, 89, 98, 119, 382], "fitter": [42, 82, 121, 124, 128, 129, 155, 165, 221, 254, 258, 259, 286, 297, 353], "pain": [42, 71, 252], "hidden": [42, 61, 62, 68, 91, 94, 98, 116, 118, 119, 150, 170, 172, 224, 252, 281, 302, 304, 356], "Near": [42, 62, 252], "distress": [42, 98, 119], "earlier": [42, 52, 61, 65, 71, 98, 119, 151, 154, 155, 207, 208, 226, 243, 281, 282, 285, 286, 339, 358], "conflict": [42, 62, 76, 98, 119, 150, 155, 252, 281, 286, 382], "aris": [42, 91, 98, 119, 150, 155, 184, 252, 281, 286, 316, 382, 383], "interfer": [42, 89, 91, 95, 98, 119, 128, 155, 252, 258, 286, 331], "drawback": 42, "variant": [42, 52, 98, 102, 119, 196, 252, 293, 328, 373, 382], "lastli": [42, 98, 114, 115, 119, 150, 220, 281, 352, 382], "unhid": [42, 94], "postscript": [42, 65, 71, 172, 185, 207, 223, 225, 226, 304, 317, 339, 355, 357, 358], "ascii": [42, 71, 87, 89, 122, 172, 186, 197, 216, 226, 286, 304, 318, 329, 342, 348, 358], "plain": [42, 71, 87, 89, 94, 100, 186, 318, 347, 373, 382], "focuss": [42, 61, 100], "lower": [42, 44, 65, 75, 94, 100, 125, 139, 140, 168, 170, 193, 197, 226, 230, 235, 252, 255, 270, 271, 289, 300, 325, 329, 358, 362, 367, 382], "rectangl": [42, 65, 94, 225, 226, 228, 232, 357, 358, 360, 364], "deselect": [42, 226, 358], "insid": [42, 46, 52, 54, 61, 64, 71, 72, 76, 81, 91, 93, 94, 149, 155, 158, 165, 178, 192, 197, 201, 202, 220, 226, 243, 245, 247, 250, 274, 280, 285, 286, 289, 297, 310, 324, 330, 333, 334, 352, 358, 371, 373, 374, 376, 391, 392], "distinguish": [42, 52, 54, 65, 79, 98, 114, 115, 119, 122, 150, 154, 155, 158, 182, 252, 281, 285, 286, 289, 314], "prerequisit": [42, 98, 119, 155, 208, 244, 286], "seclamp": [42, 61, 82, 98, 119, 128, 129, 148, 157, 217, 258, 259, 278, 279, 288, 349, 392], "mismatch": [42, 98, 119, 243, 244, 252], "invalid": [42, 76, 82, 98, 114, 115, 119, 148, 150, 158, 160, 166, 178, 193, 197, 217, 239, 244, 279, 281, 289, 292, 298, 310, 325, 329, 342, 343, 349], "styliz": [43, 46, 60, 62, 63, 82, 160, 231, 292, 363], "weakli": [43, 155, 252, 286], "400": [43, 61, 63, 252], "ba": [43, 61, 63], "800": [43, 61, 63], "gl_hh": [43, 62, 63, 100, 101, 148, 154, 220, 352, 392], "decreas": [43, 63, 91, 160, 178, 193, 197, 228, 234, 252, 292, 310, 325, 329, 360, 366], "linearli": [43, 63, 131, 149, 197, 217, 252, 261, 280, 293, 329, 349, 388, 392], "fall": [43, 63, 76, 81, 89, 91, 95, 148, 155, 197, 247, 252, 279, 286, 329, 386], "distant": [43, 63, 252], "emploi": [43, 91, 95, 121, 197, 207, 329, 339, 382], "gnabar_max": 43, "max_dist": 43, "gk_hh": [43, 392], "assess": [44, 252], "stabil": [44, 61, 121, 146, 149, 155, 156, 220, 252, 277, 280, 286, 287, 352, 382, 383, 395], "patch": [44, 91, 122, 148, 252, 279, 384, 392], "hh_patch": 44, "setup_discontinu": 44, "crank": [44, 121, 161, 217, 220, 293, 349, 352, 397], "nicholson": [44, 121, 161, 220, 252, 293, 352, 397], "oran": 45, "pyhon": 45, "overview": [45, 82, 135, 141, 160, 200, 208, 252, 272, 292, 332, 340, 378, 379, 392, 397], "innocu": 45, "eventu": [45, 52, 71, 91, 155, 159, 196, 224, 286, 291, 328, 356, 376, 378, 382, 385], "oop": [45, 52, 91], "establish": [45, 84, 110, 134, 155, 156, 161, 205, 252, 264, 286, 287, 293, 337, 382], "correspeond": 45, "pprint": [45, 46, 340, 392], "prettier": 45, "constitut": [45, 159, 172, 252, 291, 304, 368], "lost": [45, 65, 168, 197, 207, 239, 300, 329, 339], "prematur": [45, 252, 291], "reconstitut": 45, "pfwm": [45, 47, 71, 81, 94, 98, 119, 122], "overlai": 45, "restart": [45, 46, 62, 91, 185, 196, 217, 218, 220, 317, 328, 349, 350, 352], "consecut": 45, "tonight": 45, "fly": [45, 46, 224, 252, 356], "digit": [45, 184, 187, 197, 228, 230, 252, 316, 319, 329, 360, 362], "stem": 45, "evolutionari": [45, 252], "jw": [46, 131, 261], "stockbridg": 46, "westerfield": 46, "impuls": [46, 252], "physiol": [46, 376], "336": [46, 252], "301": [46, 252], "1113": [46, 252], "jphysiol": [46, 252], "sp014582": 46, "plenti": 46, "pubm": 46, "abstract": [46, 76, 103, 161, 252, 293], "clue": [46, 61, 122, 252], "allsec": [46, 47, 58, 59, 61, 158, 208, 286, 289, 292, 293, 318, 331, 340, 349, 352, 354, 364, 365, 371, 373, 374, 380, 386, 392], "browsabl": [46, 81, 121], "peer": [46, 252, 382], "subitem": 46, "shortcut": [46, 65, 78], "heterogen": [46, 84, 252], "search": [46, 84, 89, 121, 128, 155, 165, 197, 200, 217, 228, 237, 251, 252, 258, 286, 289, 297, 329, 332, 349, 360], "grep": [46, 160, 292], "modeldb_and_modelview": 46, "moore83": 46, "semi": [46, 245, 252], "scroll": [46, 47, 74, 75, 80, 94, 98, 100, 102, 118, 119, 169, 175, 178, 228, 301, 307, 310, 360], "agre": [46, 155, 286, 382, 383], "credit": [46, 155, 159, 200, 239, 286, 291, 332], "xvarlabel": [46, 76, 178, 228, 310, 311, 360, 392], "zf": 46, "tj": 46, "neocort": [46, 216, 252, 348], "382": [46, 154, 252], "363": [46, 252], "1038": [46, 252], "382363a0": 46, "patdemo": 46, "zip": [46, 49, 71, 91, 95, 116, 135, 243, 287, 329, 386, 387, 388, 391, 392], "unzip": [46, 71], "brows": [46, 65, 75, 84, 88, 237], "graft": 46, "myelin": [46, 148, 252, 279, 392], "compens": [46, 91, 252], "inconsist": [46, 114, 115, 155, 220, 252, 286, 289, 352, 375, 382], "seem": [46, 61, 68, 73, 75, 82, 91, 114, 115, 122, 151, 193, 207, 243, 282, 325, 339, 382, 383, 386, 387], "said": [47, 382, 385, 386], "wouldn": [47, 109, 386], "eutect": [47, 121], "neurolucida": [47, 121], "v1": [47, 67, 154, 193, 197, 252, 325, 329, 392], "v3": [47, 149, 197, 245, 280, 329], "morphml": [47, 84], "guidanc": [47, 252, 382], "using_morphometric_data": 47, "alredi": 47, "navig": [47, 48, 71, 75, 89, 91, 129, 176, 208, 228, 252, 259, 308, 340, 360], "111200a": 47, "asc": 47, "somewher": [47, 65, 77, 78, 128, 156, 258, 287, 391], "talli": [47, 81], "21549": [47, 81], "xterm": [47, 81, 129, 207, 239, 259, 339], "widget": [47, 81, 124, 129, 135, 139, 149, 165, 179, 197, 199, 227, 228, 254, 259, 270, 280, 297, 311, 329, 331, 359, 360], "convers": [47, 81, 89, 94, 114, 115, 186, 197, 250, 252, 274, 318, 329, 349, 392], "disappear": [47, 71, 74, 81, 91, 146, 228, 277, 360, 387], "dens": [47, 81, 217, 252, 349], "straight": [47, 61, 81, 161, 293], "futur": [47, 61, 81, 91, 121, 128, 149, 150, 159, 186, 200, 226, 251, 258, 280, 281, 289, 291, 318, 332, 358, 368, 371, 375, 382, 383], "diagon": [47, 81, 155, 193, 217, 286, 325, 349], "lie": [47, 65, 81, 87, 89, 105, 197, 199, 243, 329, 331, 371], "unpleas": [47, 81], "mistak": [47, 76, 81, 91, 114, 115, 207, 339, 382], "wasn": [47, 81], "parent": [47, 81, 148, 151, 155, 156, 160, 161, 162, 163, 208, 220, 228, 231, 252, 279, 282, 286, 287, 292, 293, 294, 295, 340, 349, 352, 360, 363, 382, 386, 392], "orphan": [47, 81], "children": [47, 53, 81, 162, 163, 292, 294, 295, 392], "ugli": [47, 81], "neither": [47, 76, 81, 149, 155, 156, 226, 280, 286, 287, 358], "obvious": [47, 81, 114, 115, 156, 218, 287, 350, 382], "optimist": [47, 81], "bottomcel": [47, 81], "topcel": [47, 81], "orang": [47, 81, 226, 358], "li": [47, 252, 289], "closer": [47, 81, 89, 91, 122, 376], "postion": [47, 81], "irregular": [47, 81, 252], "transvers": [47, 252], "fit": [47, 51, 65, 81, 88, 121, 123, 124, 129, 133, 155, 197, 223, 226, 228, 234, 247, 252, 253, 254, 259, 263, 286, 329, 330, 355, 358, 360, 366], "incorrectli": 47, "excess": [47, 197, 226, 329, 358, 392], "mho": [47, 148, 150, 279, 281], "haven": [47, 77, 84, 85, 89, 93, 102, 108, 110, 195, 327, 382, 383, 386], "toi": [47, 156, 236, 252, 287], "someon": [47, 61, 155, 286, 340, 391], "equival": [47, 54, 59, 61, 65, 71, 76, 88, 91, 93, 95, 142, 144, 148, 149, 151, 155, 156, 158, 161, 164, 171, 181, 196, 197, 201, 208, 217, 223, 226, 233, 239, 247, 250, 252, 273, 275, 279, 280, 282, 286, 287, 289, 290, 292, 293, 294, 295, 303, 310, 313, 318, 319, 328, 329, 333, 340, 342, 343, 349, 355, 358, 365, 371, 373, 382, 383, 386, 389, 391, 392], "secnam": [47, 76, 91, 151, 160, 161, 164, 173, 208, 234, 272, 292, 296, 340, 366, 392], "voila": 47, "histogram": [47, 155, 181, 194, 196, 197, 252, 286, 313, 326, 328, 329, 330], "outlier": 47, "systemat": [47, 52, 61, 63, 149, 252, 280], "reader": [47, 59, 62, 88, 100, 105, 216, 286, 348, 382, 392], "anywher": [47, 65, 81, 93, 114, 115, 148, 150, 181, 193, 211, 241, 247, 279, 281, 313, 325, 343], "carefulli": [47, 50, 148, 279, 386], "afflict": 47, "worth": [47, 74, 148, 155, 279, 286, 382], "hhkchan": 48, "mknrndll": [48, 71, 76, 117, 151, 200, 282, 332, 378], "toggl": [48, 61, 62, 65, 89, 91, 94, 128, 201, 217, 226, 228, 231, 258, 310, 333, 349, 358, 360, 363], "team": [49, 382], "everyon": [49, 134, 155, 264, 286], "jone": [49, 252], "2009": [49, 213, 251, 252, 345], "shoudl": 49, "log2": 49, "teammat": 49, "strong": [49, 93, 252], "weak": [49, 75, 252, 391], "kenneth59715": 49, "nsgneuron": 49, "upload": [49, 244], "comet": 49, "gz": [49, 153, 155, 243, 284, 286], "mu_output": 49, "guess": [49, 91, 133, 156, 239, 263, 287], "vertic": [50, 65, 89, 91, 122, 128, 168, 178, 197, 228, 258, 300, 310, 329, 360], "perpendicular": [50, 81, 231, 363], "lift": [50, 362], "pad": [50, 197, 329, 378], "atop": 50, "xside": 50, "viewdown": 50, "zside": 50, "wildli": [50, 91], "ctrl": [50, 98, 119], "secondari": [50, 80, 81, 118, 252], "newview": [50, 68, 226, 358], "focus": [50, 94, 239, 252, 382, 383], "inadvert": [50, 114, 115, 149, 160, 165, 280, 292, 297], "exceed": 51, "stuff": [51, 71, 75, 316], "gid": [51, 53, 154, 155, 156, 216, 239, 279, 285, 286, 287, 348, 386, 387, 388, 389], "subnet": [51, 156, 279, 287], "stori": [51, 122], "presum": [51, 71, 239], "shorter": [51, 83, 121, 293, 329, 382, 383, 388, 392], "overrun": 51, "refin": [51, 84, 128, 252, 258], "unfamilar": 51, "quot": [52, 76, 185, 197, 208, 230, 317, 329, 340, 362, 391], "wikipedia": [52, 290, 371], "acronym": 52, "1984": [52, 76, 121, 155, 159, 200, 239, 251, 252, 286, 291, 332], "book": [52, 76, 77, 78, 121, 251, 252], "yacc": 52, "stage": [52, 252, 383, 384], "appendix": [52, 76, 121], "hoc6": 52, "ivoc": [52, 54, 76, 170, 193, 201, 302, 325, 333], "todai": [52, 252, 397], "ivocmain": [52, 170, 302], "main1": 52, "const": [52, 54], "char": [52, 54, 197, 211, 226, 329, 343, 382], "ivocmain_sess": 52, "start_sess": 52, "hoc_main1": 52, "our_argc": 52, "our_argv": 52, "ypp": 52, "thank": [52, 382], "token": [52, 76, 155, 204, 336], "preced": [52, 65, 76, 107, 144, 160, 164, 168, 181, 252, 265, 275, 292, 300, 313, 382, 392], "express": [52, 61, 84, 86, 89, 114, 115, 121, 122, 124, 128, 141, 149, 150, 160, 164, 168, 180, 193, 197, 201, 208, 217, 224, 226, 227, 228, 230, 233, 234, 252, 254, 258, 259, 272, 280, 281, 292, 295, 297, 312, 325, 329, 333, 340, 342, 349, 356, 358, 359, 360, 362, 365, 366, 371, 374, 375], "recognis": 52, "depth": [52, 63, 247, 265, 378], "stack": [52, 54, 76, 122, 141, 148, 150, 154, 160, 166, 182, 201, 208, 234, 252, 265, 279, 281, 285, 296, 298, 314, 333, 340, 366], "operand": 52, "ti": 52, "inst": 52, "union": 52, "sym": [52, 54], "narg": [52, 54], "ptr": [52, 204, 336], "typedef": 52, "yystyp": 52, "lexer": 52, "tokenis": 52, "yylex": 52, "parser": [52, 71, 76, 181, 201, 313, 333], "yypars": 52, "yylval": 52, "autoobj": 52, "numzero": 52, "argref": 52, "internalsectionnam": 52, "pysec": 52, "pysecnam": 52, "pysecobj": 52, "expr": [52, 76, 149, 193, 197, 201, 204, 226, 227, 280, 329, 333, 336, 358, 359], "stmt": [52, 72, 76, 148, 154, 164, 178, 181, 197, 201, 204, 214, 220, 310, 313, 329, 333, 336], "asgn": 52, "prlist": 52, "delsym": 52, "stmtlist": 52, "strnasgn": 52, "redef": 52, "redefinit": 52, "hocdec": 52, "struct": [52, 155, 265, 286], "subtyp": [52, 182, 252, 289, 314], "defined_on_the_fli": 52, "otherw": 52, "borland": 52, "oboff": 52, "pval": [52, 133, 263], "alia": [52, 211, 252, 289, 343, 344], "scalar": [52, 76, 146, 149, 155, 181, 182, 193, 197, 199, 208, 211, 277, 280, 286, 313, 314, 325, 329, 331, 337, 340, 343, 378], "hocstruct": 52, "object_": 52, "cstr": 52, "pnum": 52, "pvalint": 52, "pvalfloat": 52, "u_auto": 52, "bltin": 52, "u_proc": 52, "prop": 52, "rng": [52, 196, 328], "ppsym": 52, "unsign": [52, 186, 244, 318], "s_varn": 52, "indep": [52, 227, 359], "arrayinfo": 52, "arayinfo": 52, "hocsymextens": 52, "pfri": 52, "pfrv": 52, "pfrd": 52, "pfro": 52, "pfr": 52, "pfri_vp": 52, "pfrv_vp": 52, "pfrd_vp": 52, "pfro_vp": 52, "pfrs_vp": 52, "pf": 52, "pfd": 52, "pfo": 52, "pfv_vp": 52, "pfd_vp": 52, "pfo_vp": 52, "pfs_vp": 52, "hocunion": 52, "stackdatum": 52, "val": [52, 145, 187, 193, 199, 204, 205, 226, 276, 286, 310, 319, 325, 331, 336, 337, 358, 391, 392], "pobj": 52, "pstr": 52, "nullptr_t": 52, "stkobj_unref": 52, "nprog": 52, "prog": 52, "progp": 52, "spot": [52, 65, 228, 360], "progbas": 52, "subprogram": 52, "prog_parse_recov": 52, "hoc_return": 52, "namespac": [52, 201, 208, 333, 340, 375], "frame": [52, 76, 118, 168, 252, 300, 378], "retpc": 52, "resum": [52, 155, 286], "argn": 52, "th": [52, 54, 95, 151, 154, 155, 161, 168, 172, 193, 197, 217, 282, 285, 286, 293, 300, 304, 325, 329, 342, 349, 389], "iter_stmt_begin": 52, "iter_stmt_ob": 52, "ob": [52, 235, 367], "nframe": [52, 265], "fp": 52, "framelast": 52, "lookup": [52, 149, 155, 208, 280, 286, 340, 389], "symlist": [52, 54], "hoc_built_in_symlist": [52, 54], "hoc_top_level_symlist": 52, "p_symlist": 52, "temp": [52, 53, 114, 115, 155, 156, 159, 185, 186, 197, 226, 243, 280, 286, 287, 291, 317, 318, 329], "leakag": [52, 148, 252, 279, 376, 392], "nstack": [52, 265], "suppli": [52, 65, 76, 112, 150, 155, 159, 191, 197, 216, 217, 281, 286, 291, 318, 323, 329, 348, 349], "higher": [52, 75, 146, 156, 160, 168, 226, 252, 277, 287, 291, 292, 300, 358, 382, 392], "deeper": 52, "caller": 52, "gamma": [52, 76, 158, 189, 252, 289, 290, 321, 392], "sscanf": [52, 187, 212, 319, 344, 392], "nrnversion": [52, 207, 213, 224, 265, 339, 345, 356, 392], "var": [52, 76, 129, 150, 164, 165, 178, 187, 196, 197, 201, 205, 215, 217, 227, 239, 247, 259, 281, 297, 308, 310, 319, 328, 329, 330, 333, 337, 349, 359, 387, 392], "spinit": 52, "hocusr": [52, 76], "finalis": 52, "rallbranch": [52, 220, 352, 392], "modl": [52, 149, 280], "reg": 52, "mech": [52, 208, 340, 392], "registr": 52, "classreg": 52, "regist": [52, 121, 129, 169, 173, 200, 205, 239, 259, 305, 332, 337], "matrix": [52, 131, 135, 146, 149, 150, 155, 161, 190, 198, 201, 217, 220, 226, 228, 239, 245, 252, 261, 266, 277, 280, 281, 286, 293, 322, 330, 333, 349, 352, 358, 360, 371, 378, 392], "moreinput": 52, "hoc_run1": 52, "run1": 52, "initcod": 52, "hoc_yypars": 52, "opcod": 52, "arglist": 52, "codesym": 52, "codei": 52, "pn": [52, 197, 329], "hoc_cal": 52, "isec": 52, "execerror": [52, 166, 298, 392], "frames": 52, "lldb": [52, 239], "0x00006000017092c0": 52, "0x000000010038c060": 52, "0x0000600000014480": 52, "280": [52, 252], "fun_bltin": 52, "cpublic": 52, "2163136": 52, "0x00006000002101c0": 52, "u00000010": 52, "u0000001a": 52, "xea": 52, "448": [52, 251, 252, 375], "24576": 52, "ctemplat": [52, 54], "0x0000600001709300": 52, "fun": [52, 197, 227, 329, 359], "objectfunc": 52, "stringfunc": 52, "slot": 52, "nauto": 52, "push_valu": 52, "defn": 52, "hoc_errno_check": 52, "hoc_warn": 52, "errno": 52, "15255": 52, "queue": [52, 71, 216, 217, 220, 222, 286, 348, 349, 352, 354, 389], "0x0000000100e7cba0": 52, "dylib": [52, 243], "1400": 52, "1402": [52, 252], "1404": 52, "1405": [52, 252], "1406": [52, 252], "0x0000000100ea1a18": 52, "hoc_printf": 52, "fileio": 52, "316": [52, 252], "313": [52, 252], "buf": [52, 155, 158, 286, 377], "314": [52, 53, 252], "315": [52, 252], "hoc_sprint1": 52, "317": [52, 252], "strlen": 52, "318": [52, 239, 252], "not_parallel_sub": 52, "plprint": 52, "319": [52, 252], "fflush": 52, "stdout": [52, 155, 156, 184, 186, 213, 286, 287, 316, 318, 345], "sprint1": 52, "ret": [52, 155, 286, 378], "hoc_ret": 52, "unref": [52, 155, 202, 286, 312, 334], "nobjauto": 52, "deepest": 52, "shallowest": 52, "hoc_obj_unref": [52, 54], "hoc_look_inside_stack": 52, "pop_valu": 52, "frameobj_clean": 52, "hoc_nopop": 52, "hoc_pc": 52, "calip": [53, 239], "nsight": [53, 239], "smi": 53, "460": [53, 251, 252], "91": [53, 154, 252], "disp": 53, "volatil": [53, 206, 252, 338], "uncorr": 53, "ecc": 53, "fan": [53, 252], "perf": 53, "pwr": 53, "cap": 53, "mig": 53, "quadro": 53, "p2200": 53, "00000000": 53, "00": [53, 245, 382, 391], "45": [53, 58, 197, 201, 252, 280, 293, 329, 333, 386, 391, 392], "33c": 53, "p8": 53, "4w": 53, "75w": 53, "71mib": 53, "5049mib": 53, "univers": [53, 76, 84, 121, 155, 194, 244, 251, 252, 286, 326], "schedul": 53, "bluebrain5": 53, "slurm": 53, "volta": [53, 245], "salloc": [53, 245], "grant": [53, 71, 84, 217, 252, 349, 382, 383], "294001": 53, "470": [53, 252], "57": [53, 189, 226, 252, 321, 358, 391], "tesla": 53, "v100": 53, "sxm2": 53, "failur": [53, 76, 166, 184, 188, 243, 244, 252, 298, 316, 320, 382], "filter": [53, 158, 184, 185, 193, 197, 216, 223, 224, 252, 289, 316, 317, 325, 329, 330, 348, 355, 356, 391], "42": [53, 76, 93, 150, 186, 197, 247, 249, 252, 279, 281, 293, 310, 318, 319, 320, 323, 329, 336, 343, 373, 386, 391, 392], "coreneuron_modtest": 53, "direct_py_gpu": 53, "53": [53, 76, 252, 373, 391], "98": [53, 76, 83, 121, 196, 251, 252, 328], "direct_hoc_gpu": 53, "44": [53, 200, 226, 252, 332, 358, 386, 391, 392], "spikes_py_gpu": 53, "ringtest": [53, 239, 243, 286], "friend": [53, 122, 391], "statist": [53, 95, 128, 148, 155, 196, 217, 252, 258, 279, 286, 328, 349, 391], "nsy": [53, 239], "nvprof": 53, "num": [53, 76, 95, 210, 295, 342], "stddev": 53, "127": [53, 87, 251, 252], "723": 53, "623": [53, 252], "136": [53, 251, 252], "038": [53, 252], "640": [53, 58], "630": 53, "224": [53, 252], "59": [53, 153, 197, 252, 284, 293, 329, 391], "860": [53, 252], "culaunchkernel": 53, "kernel": [53, 197, 200, 239, 252, 329, 332, 382], "346": [53, 252], "133": [53, 239, 252, 373], "266": [53, 239, 252], "175": [53, 87, 251, 252, 371], "080": [53, 252], "435": [53, 252], "nvkernel__zn10coreneuron18solve_interleaved1ei_f1l653_4": 53, "155": [53, 91, 252], "806": [53, 155, 252], "002": [53, 73, 252, 372, 373], "015": [53, 95, 111, 252], "615": [53, 252], "099": 53, "738": [53, 252], "544": [53, 252, 376], "nvkernel__zn10coreneuron14nrn_cur_expsynepns_9nrnthreadepns_9memb_listei_f1l375_7": 53, "111": [53, 87, 114, 115, 252, 373], "258": [53, 252], "439": [53, 251, 252], "903": [53, 251, 252], "199": [53, 89, 252, 373], "489": [53, 252], "73": [53, 94, 252, 391], "556": 53, "nvkernel__zn10coreneuron11nrn_cur_pasepns_9nrnthreadepns_9memb_listei_f1l274_4": 53, "108": [53, 252], "647": [53, 252], "844": [53, 252], "581": [53, 252], "391": [53, 155, 252, 286], "274": [53, 252], "394": [53, 252], "309": [53, 252], "nvkernel__zn10coreneuron16nrn_state_expsynepns_9nrnthreadepns_9memb_listei_f1l418_10": 53, "substr": [53, 211, 217, 343, 344, 349], "solve_interleaved1": 53, "solve_interleaved2": 53, "nrn_cur_": 53, "nrn_state_": 53, "heavi": [53, 131, 172, 252, 261, 304, 382], "dataset": 53, "extrem": [53, 61, 71, 77, 78, 83, 90, 128, 149, 155, 193, 217, 239, 258, 280, 286, 325, 349, 382, 383, 387], "nvkernel__zn10coreneuron": 53, "sophist": [53, 252, 371, 391], "cpython": 54, "funciton": [54, 301], "nrnpy_pyobj_sym_": 54, "pyobject_typecheck": 54, "po": 54, "hocobject_typ": 54, "nrnpy_ho2po": 54, "pyhocobject": 54, "pyfloat_fromdoubl": 54, "pylong_fromlong": 54, "nrnpy_po2ho": 54, "py_refcnt": 54, "datatyp": 54, "nrnpy_numbercheck": 54, "semant": [54, 114, 115, 148, 155, 158, 164, 168, 197, 207, 208, 279, 286, 289, 300, 329, 339, 340, 383, 384], "pynumber_check": 54, "hoc_obj_ref": 54, "hoc_oop": 54, "oc_ansi": 54, "prototyp": [54, 83, 121, 149, 226, 243, 280, 358, 382], "ifarg": 54, "hoc_is_object_arg": 54, "hoc_is_pdouble_arg": 54, "hoc_is_str_arg": 54, "hoc_is_double_arg": 54, "hoc_obj_getarg": 54, "hoc_objgetarg": 54, "vector_arg": 54, "vect": 54, "hoc_pgetarg": [54, 216, 348], "gargstr": 54, "getarg": 54, "bool": [54, 149, 168, 243, 280, 286, 300, 329, 352], "bad": [54, 76, 89, 155, 164, 286], "runtimeerror": [54, 285, 296, 342], "class2oc": 54, "con": [54, 65], "retobj_memb": 54, "constructor": [54, 150, 154, 155, 158, 159, 160, 196, 197, 211, 248, 281, 282, 285, 286, 289, 291, 328, 329, 336, 343, 364, 365, 366, 387], "destructor": [54, 150, 196, 248, 281, 328], "member_func": 54, "hoc_return_type_cod": 54, "retobj_method": 54, "member_ret_obj_func": 54, "hoc_lookup": 54, "vector_sym": 54, "is_obj_typ": 54, "type_nam": 54, "check_obj_typ": 54, "former": [54, 91, 155, 181, 193, 217, 230, 286, 289, 313, 325, 349, 362], "strcmp": [54, 76, 181, 212, 313, 344, 392], "objcmd": 54, "callabl": [54, 76, 133, 146, 149, 150, 155, 208, 263, 277, 280, 281, 286, 289, 340, 362, 373], "func_cal": 54, "perr": 54, "upon": [54, 77, 78, 84, 217, 228, 252, 349, 360, 374, 382, 383, 391], "pushx": 54, "hoc_push_object": 54, "hoc_push_str": 54, "hoc_pushpx": 54, "hoc_execerror": 54, "hoc_table_lookup": 54, "background": [55, 65, 68, 82, 228, 252, 360, 371, 382], "grammar": [55, 392], "pyobject": [55, 250], "hoccommand": 55, "tip": [55, 61, 71, 102, 103, 121, 252], "resourc": [55, 65, 115, 149, 228, 252, 272, 280, 360, 373, 378, 391, 392, 395], "rtd": 56, "theme": 56, "nbconvert": 56, "recommonmark": 56, "matplotlib": [56, 95, 279, 364, 365, 370, 371, 372, 375, 376, 378, 380, 381, 386, 387, 388, 389], "ipython": [56, 58, 200, 208, 332, 378], "plotnin": [56, 371, 372, 376, 392], "plotli": [56, 364, 372, 373, 376], "jinja2": 56, "ipynb": 58, "googl": [58, 237, 252, 370, 372, 373, 375, 376, 381, 382, 393, 396], "colab": [58, 237, 370, 372, 373, 375, 376, 381, 393, 396], "vertical_axi": 58, "wget": [58, 373], "raw": [58, 197, 243, 244, 329, 373, 378], "githubusercont": [58, 243, 244, 373, 378], "ramcdoug": 58, "dentategranulevideo": 58, "n275": 58, "pyplot": [58, 95, 279, 364, 365, 370, 371, 375, 378, 380, 381, 386, 387, 388, 389, 392], "plt": [58, 76, 95, 185, 230, 279, 317, 329, 362, 364, 370, 375, 381, 386, 387, 388, 389, 391, 392], "tqdm": 58, "base64": 58, "b64encod": 58, "rcparam": 58, "figsiz": [58, 95, 279, 375, 387], "stdrun": [58, 67, 95, 114, 156, 158, 159, 197, 200, 217, 218, 222, 224, 226, 234, 247, 250, 279, 287, 291, 329, 332, 343, 349, 350, 354, 356, 358, 366, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 386, 387, 388, 392], "stop_tim": 58, "save_everi": 58, "fire_tim": 58, "23": [58, 83, 84, 95, 114, 115, 153, 154, 155, 244, 251, 252, 284, 286, 293, 386, 387, 391, 392], "neuron_imag": 58, "theta": [58, 146, 252, 277, 293, 387, 388, 389], "360": [58, 252], "gca": [58, 365, 370], "view_init": 58, "yield": [58, 76, 129, 131, 155, 197, 252, 259, 261, 286, 329, 374], "continuerun": [58, 67, 95, 114, 200, 217, 221, 222, 224, 250, 279, 329, 332, 349, 353, 354, 356, 365, 370, 371, 372, 375, 376, 378, 380, 381, 386, 387, 388, 389, 392], "save_all_imag": 58, "enumer": [58, 95, 279, 292, 331, 387, 388, 391], "savefig": [58, 375], "04d": 58, "png": 58, "240": [58, 197, 252, 329], "twelv": 58, "minut": [58, 244], "ffmpeg": 58, "vcodec": 58, "libx264": 58, "crf": 58, "pix_fmt": 58, "yuv420p": 58, "neuron_movi": 58, "stackoverflow": 58, "57377185": 58, "show_video": 58, "video_path": 58, "video_url": 58, "decod": [58, 252], "width": [58, 65, 76, 168, 175, 186, 197, 226, 252, 300, 307, 318, 329, 358, 386], "170k": 59, "programmat": [59, 81, 135, 142, 200, 247, 266, 273, 332, 350, 392], "pyr": 59, "c91662": [59, 364, 373, 378], "__init__": [59, 200, 208, 292, 310, 326, 329, 332, 340, 352, 378, 386, 387, 388, 389, 391, 392], "self": [59, 66, 76, 197, 208, 217, 222, 247, 252, 292, 310, 326, 329, 337, 340, 349, 352, 354, 378, 382, 386, 387, 388, 389, 391], "load_morphologi": 59, "import3d_swc_read": [59, 373, 378], "i3d": [59, 373, 378], "import3d_gui": [59, 373, 378], "import3d_neurolucida3": 59, "import3d_morphml": 59, "import3d_eutectic_read": 59, "occupi": [59, 65, 289, 371], "_ref_i": [59, 208, 279, 293, 329, 340, 358, 387], "inaccess": [59, 168, 300], "garbag": [59, 387], "runnabl": [59, 158, 279, 289, 290, 329], "scenario": [59, 243, 252], "i_stim": 59, "t_stim": 59, "t_stim_vec": 59, "ation": 59, "_ref_amp": [59, 279, 328, 329], "interpol": [59, 149, 159, 160, 161, 197, 217, 252, 280, 291, 292, 293, 329, 330, 349], "homeostat": [59, 252, 374], "intracellular": [59, 71, 90, 141, 150, 252, 272, 281, 286, 371, 373, 374, 376, 378], "circumst": [59, 89, 98, 114, 115, 119, 134, 161, 178, 217, 221, 264, 293, 310, 349, 353], "warrant": [59, 289], "patholog": [59, 252], "ischem": [59, 252, 378], "stroke": [59, 225, 357, 378], "cyt": [59, 158, 289, 354, 370, 371, 373, 374, 376, 377, 380, 381], "nrn_region": [59, 158, 289, 370, 371, 373, 374, 375, 376, 377, 380, 381], "talk": [59, 114, 115, 156, 287], "alter": [59, 65, 252, 374], "contrast": [59, 93, 150, 184, 252, 281, 316, 371], "atolscal": [59, 131, 217, 224, 261, 289, 349, 356, 371, 373, 374, 375], "seek": [59, 184, 315, 316], "term": [59, 63, 65, 84, 89, 90, 91, 114, 115, 121, 131, 146, 149, 150, 155, 158, 161, 197, 217, 222, 252, 261, 277, 280, 281, 286, 289, 293, 329, 349, 354, 382], "wholetre": [59, 162, 208, 272, 289, 292, 294, 340, 372, 373, 376, 386, 387, 388, 392], "belong": [59, 81, 98, 101, 103, 118, 119, 128, 178, 258, 286, 289, 310, 371, 382, 386], "basi": [59, 144, 150, 154, 170, 217, 252, 275, 281, 285, 302, 349, 382, 383], "synonym": [59, 76, 148, 149, 155, 158, 197, 202, 280, 286, 289, 329, 334, 371], "geometr": [60, 196, 252, 328], "pretti": [60, 62, 81, 91, 122, 139, 194, 207, 270, 289, 326, 339, 392], "prone": [60, 114, 115, 121, 224, 356], "typgin": 60, "ptyngi": 60, "reusabl": [60, 71, 78, 121, 387], "trunk": [61, 155, 286], "lump": 61, "el_hh": [61, 148, 154, 220, 352, 392], "equilibrium": [61, 247, 252], "64": [61, 84, 94, 144, 159, 160, 197, 203, 240, 243, 244, 252, 275, 279, 291, 292, 319, 320, 329, 335, 347, 358, 391], "white": [61, 65, 76, 87, 226, 230, 252, 358, 362], "spawn": [61, 71, 102], "basenam": [61, 217, 349], "spring": 61, "rubber": [61, 108, 110], "band": [61, 108, 110, 193, 252, 325], "undo": [61, 65, 382], "grai": [61, 65, 168, 226, 230, 232, 252, 300, 358, 362, 364], "alon": [61, 89, 129, 230, 252, 259, 362, 371, 374], "subtre": [61, 62, 81, 155, 156, 161, 162, 272, 286, 287, 292, 293, 294, 392], "unselect": [61, 65], "quick": [61, 71, 81, 88, 95, 100, 382, 386, 389], "overwritten": [61, 382, 387], "physic": [61, 71, 114, 115, 149, 155, 189, 224, 234, 252, 280, 286, 321, 356, 366, 371, 374], "plan": [61, 83, 84, 252, 382], "physiolog": [61, 150, 252, 281], "subdivis": [61, 81], "painless": 61, "d_x": 61, "round": [61, 86, 159, 192, 197, 217, 221, 226, 228, 280, 286, 290, 291, 324, 329, 349, 353, 358, 360, 389], "ac": [61, 67, 71, 120, 252, 375], "halfwai": [61, 397], "faq": [61, 82, 98, 119, 121, 242], "glanc": [61, 386], "distinct": [61, 84, 95, 122, 154, 155, 194, 197, 217, 252, 285, 286, 291, 326, 329, 349, 382, 383, 392], "spinner": [61, 109], "tenth": [61, 155, 286], "attribut": [61, 69, 84, 89, 91, 93, 103, 128, 133, 170, 200, 208, 252, 258, 263, 301, 302, 332, 340, 370, 386, 391], "column": [61, 65, 75, 79, 128, 175, 193, 197, 226, 228, 252, 258, 307, 325, 329, 358, 360, 368, 392], "remind": [61, 91, 149, 280], "indent": [61, 76, 99, 386, 391, 392], "proce": [61, 100, 245, 382, 383, 386], "lai": [61, 107, 252], "bat": [61, 185, 317], "65mv": 61, "specifc": 61, "crude": [61, 62], "printout": [61, 94, 122], "interconnect": [61, 252], "summari": [61, 149, 217, 224, 238, 239, 280, 349, 356], "dictionari": [61, 208, 292, 331, 340, 375, 392, 397], "airlin": 61, "ticket": 61, "seller": 61, "tinker": 61, "destin": [61, 155, 156, 159, 193, 197, 205, 217, 286, 287, 291, 325, 329, 337, 349, 382], "departur": 61, "flight": [61, 252], "presto": [61, 75], "echo": [61, 216, 243, 244, 348], "revis": [61, 71, 91, 121, 188, 200, 207, 236, 320, 332, 339, 374, 382, 383, 387], "bog": 61, "slow": [61, 89, 91, 104, 164, 165, 178, 197, 217, 239, 252, 297, 310, 329, 349, 378], "concret": [61, 71, 76], "iclamprig": [61, 116], "wet": [61, 71], "experimentalist": [61, 121], "brain": [61, 71, 84, 121, 251, 252, 378], "slice": [61, 71, 200, 252, 329, 332, 391], "tissu": [61, 71, 252], "cultur": [61, 71, 252], "imagin": [61, 114, 115, 125, 150, 191, 255, 281, 323], "vclamprig": 61, "initiclamp": 61, "initvclamp": 61, "benefit": [61, 89, 114, 115, 121, 134, 156, 159, 178, 217, 264, 287, 291, 310, 349], "perfect": [61, 89, 91, 252, 382], "deciph": [61, 252], "idiosyncrat": 61, "somebodi": 61, "wait": [61, 75, 76, 91, 129, 148, 155, 156, 213, 218, 221, 259, 286, 287, 345, 350, 353, 389], "Not": [61, 95, 131, 155, 161, 168, 169, 182, 193, 196, 201, 217, 219, 220, 222, 225, 226, 239, 261, 286, 293, 300, 301, 314, 325, 328, 333, 349, 351, 352, 354, 357, 358], "mold": 61, "invest": [61, 149, 280], "borrow": 62, "333e": 62, "apcial": 62, "demo": [62, 71, 76, 77, 149, 161, 208, 214, 217, 234, 280, 293, 310, 349, 366, 379, 397], "ahead": [62, 89, 91, 110, 252, 386, 387, 388], "messi": 62, "bit": [62, 65, 66, 71, 73, 81, 83, 91, 95, 148, 150, 155, 160, 189, 194, 196, 197, 203, 217, 226, 234, 236, 244, 279, 281, 286, 292, 321, 326, 328, 329, 335, 349, 358, 366], "clearer": [62, 114, 197, 293], "ourselv": [62, 81, 91], "rawpyr": 62, "dendrite_5": 62, "meaning": [62, 76, 114, 115, 128, 149, 150, 258, 280, 281, 373, 382], "nonzero": [62, 89, 91, 156, 160, 190, 193, 196, 201, 203, 286, 287, 292, 322, 325, 328, 333, 335, 392], "hack": [62, 121], "expedi": 62, "trade": [62, 252], "unnecessari": [62, 114, 115, 148, 149, 279, 280], "haspa": 62, "pyrfin": 62, "evid": [63, 252], "manner": [63, 65, 71, 114, 115, 149, 197, 252, 280, 382], "restat": 63, "mathemat": [63, 114, 115, 121, 135, 141, 146, 149, 181, 189, 197, 217, 252, 266, 272, 277, 280, 313, 321, 329, 349, 388], "l0x": 63, "lmax": 63, "centroid": [63, 161, 231, 234, 293, 363, 366], "rangevar_suffix": 63, "fi0": [64, 72, 220, 352], "fi1": [64, 72, 220, 352], "fi2": [64, 72, 220, 352], "allprint": [64, 72, 220, 352], "idraw": [65, 71, 172, 226, 304, 358], "synopsi": [65, 76], "spline": [65, 197, 329], "rec": 65, "tangl": 65, "polygon": 65, "ellips": [65, 225, 357], "printer": [65, 94, 122, 197, 207, 224, 228, 252, 329, 339, 356, 360], "typ": 65, "ing": [65, 148, 279], "portrait": [65, 94, 172, 228, 252, 304, 360], "landscap": [65, 94, 172, 223, 228, 304, 311, 355, 360], "inch": [65, 114, 115, 149, 230, 280, 362], "panner": 65, "pan": [65, 252, 392], "engag": [65, 252], "invert": [65, 226, 358], "stretch": [65, 68, 91, 252], "multilin": [65, 175, 307], "visi": 65, "ble": 65, "invers": [65, 193, 197, 252, 290, 325, 329, 330], "surround": [65, 114, 115, 150, 165, 249, 252, 281, 297, 391], "demarc": [65, 391], "endpoint": [65, 91, 124, 254], "rubberband": [65, 172, 304], "ty": 65, "angl": [65, 86, 191, 225, 226, 323, 357, 358], "radii": 65, "rectangular": [65, 82, 193, 252, 325], "emac": [65, 76, 175, 228, 307, 360], "keystrok": 65, "esc": [65, 176, 308], "constrain": [65, 121, 252, 289], "vertex": [65, 252], "strain": [65, 150, 252, 281], "trol": 65, "brush": [65, 79, 96, 122, 197, 226, 252, 329, 337, 358], "pat": 65, "tern": 65, "fgcolor": 65, "bgcolor": 65, "troll": 65, "fol": 65, "unnam": [65, 89, 91, 128, 258], "revert": [65, 164, 289, 354], "unsav": [65, 76, 230, 362], "filechoos": [65, 129, 259], "3i": 65, "bold": 65, "tiff": [65, 122], "pgmtop": 65, "ppmtop": 65, "bitmap": [65, 71, 122], "mat": 65, "unidraw": 65, "redo": [65, 217, 349], "undon": 65, "redon": 65, "soon": [65, 89, 106, 148, 279, 371, 382, 385], "opera": 65, "tion": 65, "clip": [65, 228, 230, 360, 362], "flip": [65, 67, 168, 300], "mirror": [65, 155, 158, 252, 286, 289, 290, 301], "clockwis": 65, "countercw": 65, "counterclockwis": 65, "movement": [65, 100, 105, 231, 252, 363, 371, 391], "pixel": [65, 168, 170, 172, 226, 234, 252, 300, 302, 304, 358, 366], "cen": 65, "timet": 65, "magnif": 65, "factor": [65, 89, 91, 114, 115, 125, 128, 131, 148, 149, 150, 155, 160, 161, 172, 193, 197, 217, 224, 228, 230, 232, 234, 247, 252, 255, 258, 261, 279, 280, 281, 286, 289, 292, 293, 304, 325, 329, 349, 356, 360, 362, 364, 366, 374, 382], "hor": 65, "izont": 65, "newli": [65, 84, 151, 161, 193, 252, 282, 293, 325, 392], "hierarchi": [65, 228, 252, 360], "ungroup": [65, 98, 119, 122], "dissolv": [65, 228, 360], "behind": [65, 76, 91, 240, 286], "nonexist": 65, "invis": [65, 197, 329, 382], "arrowhead": 65, "solid": [65, 382], "halfton": 65, "shade": 65, "unfil": 65, "foreground": [65, 68], "fore": [65, 252], "dash": [65, 226, 358, 382, 386, 392], "synchron": [65, 141, 155, 200, 252, 272, 286, 332], "mand": 65, "uniti": [65, 76, 128, 234, 258, 366], "vice": [65, 83, 121, 397], "versa": [65, 83, 121, 397], "centimet": [65, 114, 115, 252], "spac": 65, "graviti": [65, 68], "visibl": [65, 68, 79, 118, 169, 172, 173, 226, 228, 301, 304, 305, 358, 360], "undoabl": 65, "databas": [65, 114, 115, 149, 189, 252, 280, 321, 382, 391, 397], "paint": 65, "concaten": [65, 142, 156, 197, 216, 273, 287, 329, 348], "pattern8": 65, "overrid": [65, 208, 340, 356], "histori": [65, 193, 252, 325, 384], "initialfont": 65, "startup": [65, 76, 243], "fonti": 65, "ith": [65, 133, 155, 158, 161, 163, 172, 181, 193, 199, 201, 205, 217, 226, 263, 286, 293, 295, 300, 304, 313, 325, 331, 333, 337, 349, 358], "whitespac": [65, 76, 184, 187, 316, 319], "third": [65, 71, 76, 84, 114, 115, 122, 133, 134, 143, 144, 154, 155, 170, 178, 181, 193, 197, 211, 215, 217, 223, 226, 252, 261, 263, 264, 274, 275, 285, 286, 302, 310, 313, 325, 329, 331, 343, 347, 349, 355, 358, 371, 382, 388, 391], "font3": 65, "8x13bold": 65, "courier": 65, "initialbrush": 65, "brushi": 65, "hexadecim": [65, 186, 318], "decim": [65, 91, 170, 186, 187, 197, 228, 230, 302, 318, 319, 329, 360, 362, 391], "brush2": 65, "ffff": 65, "initialpattern": 65, "patterni": 65, "16x16": 65, "8x8": 65, "4x4": 65, "grayscal": 65, "sixteen": 65, "eight": [65, 178, 197, 252, 310, 329], "hexad": 65, "cimal": 65, "exam": 65, "ple": 65, "8421": 65, "diago": 65, "nalli": 65, "hatch": [65, 218, 252, 350], "initialfgcolor": 65, "iden": 65, "tifi": 65, "fgcolori": 65, "65535": 65, "intens": [65, 84, 121, 232, 252, 364], "sy": [65, 155, 200, 208, 250, 265, 286, 310, 332, 340], "tem": 65, "fgcolor8": 65, "indigo": 65, "48896": 65, "65280": 65, "mixtur": 65, "initialbgcolor": 65, "bgcolori": 65, "web": [65, 252, 382], "vectaport": [65, 122], "ivtool": 65, "ipulse1": [66, 71], "ipulse2": [66, 71], "chief": [66, 122], "ton": 66, "toff": 66, "interpuls": [66, 252], "stimlu": 66, "ipulse3": [66, 71], "deliveri": [66, 71, 121, 143, 149, 154, 197, 217, 222, 252, 274, 280, 285, 329, 349, 354], "ongo": [66, 252], "rvp": [67, 233, 365], "ocbox": 67, "pwman": 67, "409": [67, 252], "singlecompart": [67, 154, 168, 300], "mt": [67, 151, 154, 199, 282, 331, 375], "mechanismstandard": [67, 135, 138, 139, 151, 154, 207, 217, 266, 269, 270, 282, 339, 349, 392], "mstate": [67, 154], "maction": [67, 154], "donotifi": [67, 76, 154, 161, 178, 196, 197, 214, 226, 229, 232, 293, 310, 328, 329, 337, 358, 361, 364, 392], "endbox": [67, 154], "vbox": [67, 76, 135, 142, 154, 167, 168, 197, 211, 226, 266, 273, 299, 300, 311, 329, 343, 358, 392], "107": [67, 252], "93": [67, 155, 252, 286], "96": [67, 76, 91, 154, 155, 239, 252, 286], "pointman": [67, 154, 199, 331], "d1": [67, 120, 154, 247, 252], "71": [67, 252, 391], "497": [67, 239, 252], "208": [67, 154, 252], "326": [67, 154, 252], "stoprun": [67, 133, 154, 220, 227, 263, 285, 352, 359, 392], "runstopat": 67, "til": [67, 76, 155, 197, 217, 228, 286, 329, 349, 360], "runstopin": 67, "steprun": 67, "setdt": 67, "xcheckbox": [67, 76, 161, 178, 228, 293, 310, 311, 360, 392], "quiet": 67, "235": [67, 252], "addvar": [67, 94, 158, 226, 228, 329, 358, 360, 371], "541214": 67, "919169": 67, "ina": [67, 92, 114, 122, 131, 148, 220, 261, 279, 289, 329, 352, 376, 392], "276038": 67, "248243": 67, "il": [67, 376, 392], "336741": 67, "789776": 67, "003": [67, 247, 252], "043": [67, 252], "629": [67, 300, 358], "gna": [67, 75, 122, 247, 376, 392], "563578": 67, "592332": 67, "861661": 67, "ena": [67, 92, 131, 132, 148, 222, 247, 261, 262, 279, 354, 376, 392], "113099": 67, "909585": 67, "stationari": [68, 196, 252, 328], "counterpart": [68, 76, 155, 186, 318], "recurr": [69, 75, 252], "micronet": 69, "motoneuron": [69, 105, 112, 252], "interneuron": [69, 252], "renshaw": [69, 103, 252], "drive": [69, 82, 92, 252, 329, 371, 387, 392], "disclaim": 69, "strictli": [69, 89, 155, 286, 289, 349, 392], "constitu": 69, "palest": 69, "imit": [69, 71], "affer": [70, 95, 112, 252], "internet": [71, 155, 286, 289, 382, 392], "theori": [71, 251, 252, 389, 395], "compuat": 71, "biologi": [71, 82, 251, 252, 371], "autom": [71, 121, 149, 197, 245, 252, 280, 329, 382, 383], "dropdown": 71, "exploit": [71, 121, 252], "afraid": 71, "noon": 71, "accus": 71, "girli": 71, "man": [71, 76, 122, 176, 243, 252, 308], "advantang": 71, "overwhelm": 71, "demand": [71, 129, 201, 244, 252, 259, 333, 382], "greatli": [71, 121, 149, 280], "maintent": 71, "grow": [71, 76, 121, 155, 197, 252, 286, 329, 382], "customiz": [71, 82, 252], "steal": 71, "ansi": 71, "encod": [71, 155, 252, 286, 392], "byte": [71, 155, 196, 197, 239, 286, 289, 328, 329], "notepad": 71, "win2k": 71, "unicod": 71, "gag": 71, "dirti": 71, "encapsul": [71, 76, 83, 122, 156, 197, 226, 234, 287, 310, 329, 331, 358, 366, 388, 391], "coreldraw": [71, 122], "sampl": [71, 155, 194, 196, 197, 252, 286, 326, 328, 329], "neuroscientist": [71, 84, 120, 121, 251], "easiest": [71, 89, 100, 122, 149, 197, 226, 243, 280, 329, 358, 391], "rgb": [71, 87], "workaround": [71, 243], "buildcel": 71, "chop": 71, "chunk": [71, 194, 197, 236, 326, 329, 374], "buildcell_1": 71, "buildcell_2": 71, "subfold": [71, 216, 348], "millisecond": [71, 89, 90, 91, 142, 197, 221, 252, 273, 329, 353], "chart": 71, "micromolar": 71, "nanomolar": 71, "messeng": [71, 377], "curiou": 71, "popular": [71, 121, 382], "bright": [71, 168, 300], "yellow": [71, 226, 228, 230, 231, 358, 360, 362, 363], "tau2": [71, 104, 148, 247, 279, 280], "____rstim____": [71, 148, 279], "___": [71, 148, 279], "__": [71, 148, 279, 386, 392], "___from": [71, 148, 279], "tau1": [71, 104, 148, 149, 247, 279, 280], "artefact": 71, "amp1": [71, 142, 148, 273, 279], "vecplai": 71, "dai": [71, 76, 121, 252, 382, 383], "subdirectori": [71, 207, 216, 243, 339, 348], "vectorplai": [71, 224, 356], "arbforc": 71, "pulsedistrib": 71, "test_1_and_2": 71, "ipulse3rig": 71, "test_3": 71, "pertain": [71, 155, 286], "precomput": 71, "vecstim": 71, "hot": [71, 382, 383], "dozen": [71, 131, 238, 261], "dump": [71, 220, 226, 352, 358, 391, 392], "fiinitializehandl": 71, "syntim": 71, "loadqueu": 71, "latenc": [71, 252], "clampex": 71, "clampexdata": 71, "year": [71, 121, 145, 244, 276, 289, 382, 391], "ago": 71, "os": 71, "parenthes": [71, 89, 114, 115, 158, 181, 197, 201, 208, 289, 313, 318, 329, 333, 340], "handler": [72, 220, 352], "allevi": [72, 220, 352], "m_hh": [72, 148, 217, 220, 224, 232, 233, 349, 352, 356, 364, 365, 392], "tick": [73, 122, 243, 387], "maxim": [73, 155, 156, 252, 286, 287], "standpoint": 73, "ration": 73, "clever": [73, 91], "005": [73, 252, 388], "035": [73, 252], "wider": 73, "041": [73, 252], "satisfactori": [73, 89], "042": 73, "alphabet": [74, 89, 391], "currentlyaccessedsect": 74, "acell_hom": [74, 75], "plotlist": [74, 91], "unintend": [74, 75, 218, 350], "crosshair": [74, 75, 79, 89, 118, 206, 218, 226, 338, 350, 358], "m_cell": 75, "r_cell": 75, "inhibiton": 75, "netreadycel": 75, "deliber": 75, "chose": 75, "clutter": [75, 102, 156, 287], "m1_e0": 75, "recogn": [75, 91, 252], "instantli": 75, "saw": [75, 91], "told": [75, 89, 386], "m_cell_": 75, "partli": [75, 329], "epsp": [75, 252], "summat": [75, 148, 217, 252, 279, 349], "unoppos": 75, "barrag": [75, 252], "inactiv": [75, 148, 252, 279, 376], "attest": 75, "precari": 75, "abil": [75, 121, 145, 158, 168, 252, 276, 289, 300, 391], "ipsp": 75, "undiminish": 75, "shunt": [75, 104, 252], "h_hh": [75, 148, 392], "n_hh": [75, 148, 224, 356, 392], "outcom": [75, 122, 252], "pronounc": 76, "hoak": 76, "kernighan": [76, 121], "pike": [76, 121], "prentic": [76, 88, 121], "hall": [76, 88, 121, 252], "philosophi": 76, "bc": 76, "consider": [76, 91, 128, 155, 156, 217, 221, 252, 258, 286, 287, 349, 353, 382, 383], "hi": [76, 114, 115, 194, 289, 326, 349], "polymorph": 76, "inherit": [76, 114, 115, 208, 252, 340], "neuron3": 76, "oak": 76, "superset": 76, "devot": 76, "depart": [76, 84], "meant": [76, 197, 329, 382], "discours": [76, 149, 280], "reliev": [76, 252], "confus": [76, 102, 148, 154, 155, 161, 164, 168, 207, 220, 230, 279, 285, 286, 293, 300, 339, 352, 362, 382], "mental": 76, "energi": [76, 217, 252, 349, 371], "concept": [76, 121, 149, 196, 280, 328, 378, 391, 392, 395], "bare": [76, 155, 156, 243, 286, 287], "ought": [76, 182], "mswindow": [76, 78, 87, 94, 165, 184, 221, 224, 228, 297, 316, 353, 360], "workhors": 76, "file1": [76, 149, 184, 280, 316, 382], "file2": [76, 149, 184, 280, 316, 382], "loadabl": 76, "ivmodl": 76, "ocmodl": 76, "makeiv": 76, "anymor": [76, 156, 217, 287, 349, 376], "incident": 76, "nrnocmodl": 76, "makeoc": 76, "fragment": [76, 91, 114, 115, 156, 208, 216, 252, 287, 340, 348, 349], "filenam": [76, 129, 134, 149, 165, 172, 184, 186, 193, 213, 215, 216, 220, 223, 225, 226, 228, 234, 243, 259, 264, 280, 289, 297, 304, 316, 318, 325, 345, 347, 348, 352, 355, 357, 358, 360, 366, 378], "eof": [76, 184, 187, 197, 315, 316, 319, 329], "trail": [76, 186, 193, 197, 207, 217, 318, 325, 329, 339, 349, 392], "mere": [76, 91, 149, 159, 161, 184, 193, 197, 202, 217, 221, 228, 280, 291, 293, 316, 329, 334, 353, 360], "winio": 76, "undocu": [76, 216, 348], "andrew": [76, 252], "schulman": 76, "banner": [76, 184, 207, 316, 339, 382, 383], "2003": [76, 251, 252, 377], "john": [76, 78, 121, 134, 155, 196, 252, 264, 286, 328], "moor": [76, 78, 121, 155, 252, 286], "duke": [76, 121, 155, 159, 200, 239, 286, 291, 332], "michael": [76, 84, 121, 155, 197, 244, 286, 329, 382], "copyright": [76, 155, 159, 200, 239, 286, 291, 332], "1994": [76, 251, 252], "appreci": [76, 105, 382], "facil": [76, 155, 220, 286, 352], "symptom": [76, 252], "carat": 76, "chain": [76, 193, 197, 221, 224, 252, 325, 329, 353, 356, 392], "offend": [76, 114, 115, 155, 286], "interrupt": 76, "halt": [76, 163, 295], "necessit": [76, 131, 261], "cnrniv": 76, "succeed": [76, 286, 392], "backslash": 76, "256": [76, 155, 252, 286], "alphanumer": 76, "authorit": [76, 121, 155, 161, 286, 293], "hoc_init": [76, 265], "capac": [76, 252, 349], "extcel": [76, 148], "neuronnhom": 76, "oc_class": 76, "nrn_class": 76, "iterator_stat": [76, 181, 217, 313, 392], "depvar": [76, 201, 333, 392], "eqn": [76, 190, 201, 322, 333, 376, 392], "em": 76, "setpoint": [76, 149, 150, 201, 208, 280, 281, 333, 340, 392], "uninsert": [76, 201, 224, 333, 356, 392], "ifsec": [76, 160, 164, 201, 333, 392], "deg": [76, 189, 225, 321, 357, 392], "phi": [76, 189, 252, 321, 392], "atan": [76, 86, 158, 191, 289, 290, 323, 330, 392], "erf": [76, 158, 191, 289, 290, 323, 330, 392], "erfc": [76, 158, 191, 289, 290, 323, 330, 392], "prmat": [76, 190, 322, 330, 392], "wqinit": 76, "plotx": [76, 230, 362, 392], "ploti": [76, 230, 362, 392], "xred": [76, 187, 201, 312, 315, 319, 333, 392], "sred": [76, 187, 312, 315, 319, 392], "fprint": [76, 186, 188, 193, 312, 315, 318, 320, 325, 330, 392], "fscan": [76, 184, 187, 188, 193, 201, 312, 315, 316, 319, 320, 325, 333, 392], "graphmod": [76, 230, 362, 392], "fmenu": [76, 176, 308, 311, 392], "lw": [76, 185, 230, 312, 315, 317, 362, 392], "getstr": [76, 187, 188, 201, 312, 315, 319, 320, 333, 392], "setcolor": [76, 230, 362, 392], "stopsw": [76, 213, 232, 345, 392], "object_id": [76, 151, 181, 182, 282, 313, 314, 392], "allobjectvar": [76, 182, 314, 392], "allobjext": 76, "xstatebutton": [76, 178, 228, 310, 311, 360, 392], "xlabel": [76, 95, 178, 228, 310, 311, 360, 370, 371, 375, 380, 381, 392], "xmenu": [76, 178, 228, 310, 311, 360, 392], "xpvalu": [76, 177, 178, 193, 194, 196, 197, 214, 300, 309, 310, 311, 329, 392], "xradiobutton": [76, 161, 168, 178, 197, 226, 228, 293, 300, 310, 311, 329, 358, 360, 392], "xfixedvalu": [76, 178, 310, 311, 392], "xslider": [76, 178, 228, 310, 311, 360, 392], "boolean_dialog": [76, 167, 299, 311, 392], "continue_dialog": [76, 167, 299, 311, 392], "string_dialog": [76, 167, 299, 311, 392], "doevent": [76, 226, 229, 358, 361, 392], "numarg": [76, 133, 181, 202, 263, 312, 313, 334, 392], "hoc_pointer_": [76, 182, 314, 392], "execute1": [76, 165, 166, 202, 210, 286, 297, 298, 334, 392], "load_proc": [76, 165, 224, 297, 392], "load_func": [76, 165, 297, 392], "load_templ": [76, 165, 297, 392], "machine_nam": [76, 213, 345, 392], "saveaudit": [76, 219, 351, 392], "retrieveaudit": [76, 219, 351, 392], "coredump_on_error": [76, 166, 298, 392], "checkpoint": [76, 207, 220, 339, 352, 368, 392], "object_push": [76, 154, 182, 314, 392], "object_pop": [76, 154, 182, 314, 392], "pwman_plac": [76, 154, 170, 228, 302, 311, 360, 392], "show_errmess_alwai": [76, 165, 166, 297, 298, 392], "numproc": [76, 155, 286, 389], "myproc": 76, "psync": 76, "settext": [76, 230, 362], "float_epsilon": [76, 181, 195, 197, 201, 291, 313, 327, 329, 330, 333, 392], "hoc_ac_": [76, 154, 155, 169, 199, 204, 206, 208, 234, 286, 301, 312, 331, 336, 338, 340, 366, 392], "clamp_resist": [76, 220, 247, 352, 392], "secondord": [76, 148, 149, 182, 217, 220, 224, 279, 280, 314, 349, 352, 356, 392], "diam_chang": [76, 161, 272, 292, 293, 349, 392], "node_data": [76, 392], "batch_run": [76, 215, 217, 347, 349, 392], "batch_sav": [76, 215, 347, 392], "arc3d": [76, 120, 161, 272, 292, 293, 392], "define_shap": [76, 161, 231, 272, 292, 293, 349, 363, 386, 387, 388, 392], "p3dconst": 76, "spine3d": [76, 161, 272, 292, 293, 392], "setspinearea": [76, 134, 161, 264, 272, 292, 293, 392], "getspinearea": [76, 161, 272, 292, 293, 392], "ri": [76, 91, 114, 161, 272, 292, 293, 392], "initnrn": [76, 220, 352, 392], "fstim": [76, 157, 272, 288, 392], "fstimi": [76, 157, 272, 288, 392], "ion_styl": [76, 144, 150, 272, 275, 281, 392], "nernst": [76, 89, 132, 144, 150, 252, 260, 262, 275, 281, 392], "ghk": [76, 132, 260, 262, 392], "sectionref": [76, 135, 141, 155, 160, 164, 203, 208, 266, 272, 286, 292, 296, 335, 340, 392], "vclamp": [76, 82, 142, 148, 151, 157, 170, 199, 217, 272, 273, 278, 279, 282, 288, 302, 331, 349, 392], "svclamp": 76, "alphasynaps": [76, 148, 151, 199, 278, 279, 282, 331, 392], "apcount": [76, 148, 278, 279, 392], "hbox": [76, 168, 197, 211, 300, 310, 311, 329, 343, 392], "deck": [76, 128, 135, 168, 258, 266, 300, 311, 392], "fit_praxi": [76, 124, 128, 129, 133, 197, 220, 254, 258, 259, 260, 263, 329, 352, 392], "kept": [76, 161, 205, 228, 293, 337, 360, 382], "lag": [76, 89, 147, 252, 278, 388], "coulomb": [76, 114, 115, 149, 189, 247, 280, 321], "mole": [76, 114, 115, 149, 189, 280, 289, 321], "molar": [76, 114, 115, 149, 189, 247, 280, 321], "ga": [76, 114, 115, 149, 189, 280, 321], "joul": [76, 114, 115, 149, 189, 280, 321], "180": [76, 226, 252, 290, 358], "radian": [76, 86, 189, 191, 197, 230, 234, 290, 321, 323, 329, 362, 366], "golden": [76, 189, 321], "circular": [76, 161, 293], "transcendent": 76, "cube": 76, "truncat": [76, 84, 161, 186, 191, 195, 197, 210, 293, 318, 323, 327, 329, 342], "minu": [76, 89, 91, 197, 329], "st1": 76, "st2": 76, "sprint": [76, 155, 165, 168, 178, 186, 208, 212, 228, 318, 340, 344, 360, 392], "compound": [76, 149, 181, 201, 252, 280, 313, 333], "realloc": [76, 197, 205, 217, 329, 337, 349], "embed": [76, 200, 208, 252, 332], "keyboard": [76, 149, 172, 280, 304], "unaryminu": 76, "divis": [76, 155, 181, 197, 252, 286, 290, 313, 329, 391], "remaind": [76, 86, 91, 187, 197, 290, 329, 391], "thought": [76, 131, 197, 217, 228, 261, 329, 349, 360, 382], "repeatedli": [76, 201, 228, 333, 360, 375], "inher": [76, 252, 382], "ambigu": [76, 155, 222, 286, 354], "roundoff": [76, 149, 195, 197, 280, 327, 329], "denot": [76, 126, 127, 149, 150, 160, 181, 197, 233, 256, 257, 280, 281, 289, 292, 313, 329, 374, 382, 391], "math": [76, 86, 89, 135, 146, 158, 192, 198, 266, 274, 277, 286, 289, 290, 293, 300, 318, 330, 345, 358, 362, 365, 379], "till": [76, 226, 230, 358], "stmt1": [76, 181, 201, 313, 333], "stmt2": [76, 181, 201, 313, 333], "expr1": [76, 201, 333], "expr2": [76, 201, 333], "expr3": 76, "iterator_nam": 76, "tt": [76, 214], "fortran": 76, "restrict": [76, 91, 146, 149, 155, 158, 161, 174, 178, 179, 182, 201, 216, 245, 277, 280, 286, 289, 293, 306, 310, 311, 314, 333, 348, 371, 379], "reevalu": 76, "nontrivi": 76, "unrel": [76, 239, 382], "tediou": [76, 155, 197, 286, 329], "formal": [76, 114, 115, 131, 252, 261], "letter": [76, 160, 252, 292, 342, 391], "arg1": [76, 155, 286, 291, 310, 365], "recurs": [76, 129, 165, 168, 178, 202, 218, 221, 252, 259, 279, 297, 300, 310, 334, 350, 353], "factori": [76, 158, 208, 289, 290, 340], "fac": [76, 131, 261], "besid": [76, 235, 293, 367, 371, 382, 383], "nonsens": [76, 217, 349], "overflow": [76, 155, 166, 239, 286, 298], "99": [76, 193, 239, 244, 252, 325], "placement": [76, 105, 168, 178, 179, 226, 252, 300, 310, 311, 358], "interior": [76, 161, 172, 225, 228, 231, 247, 289, 293, 304, 357, 360, 363, 371, 374], "insur": 76, "star": [76, 252], "slash": [76, 114, 115], "arg2": [76, 291, 310], "fprintf": 76, "dthi": 76, "dthat": 76, "scanf": [76, 193, 197, 325, 329, 330], "sentinel": [76, 197, 329], "strvar": [76, 160, 187, 292, 319], "lisp": 76, "ag": [76, 252, 391], "comfort": 76, "instantan": [76, 89, 90, 102, 104, 159, 291], "xb": 76, "x1": [76, 120, 149, 150, 225, 226, 280, 357, 358], "simultan": [76, 88, 93, 121, 129, 139, 146, 148, 149, 155, 201, 226, 252, 259, 270, 277, 279, 280, 286, 333, 358, 382, 389, 391], "hoceqn": 76, "hlp": 76, "anaconda": [77, 243], "deposit": [77, 78], "channelbuild": [77, 78, 118, 121, 145, 158, 276, 289], "ligand": [77, 78, 121, 145, 252, 276, 278], "gate": [77, 78, 95, 121, 131, 145, 158, 252, 261, 276, 278, 289, 371, 373, 386], "accumul": [77, 78, 149, 155, 158, 217, 238, 247, 252, 280, 286, 289, 349, 386], "repertoir": [77, 78, 251], "bunch": [77, 78], "dev": [77, 82, 213, 243, 252, 345, 369, 382, 383, 385], "curor": 79, "reappear": [79, 197, 329], "linestyl": [79, 387], "palett": [79, 104, 226, 228, 358, 360], "webinar": [81, 286, 394, 397], "broadli": 81, "speak": [81, 129, 259, 349, 392], "categori": [81, 95, 98, 103, 114, 119], "somewhat": [81, 91, 95, 195, 197, 208, 327, 329], "judgment": [81, 121, 207, 339], "closeup": 81, "bound": [81, 155, 181, 200, 208, 234, 251, 252, 286, 289, 313, 332, 340, 366, 377, 378, 389], "thin": [81, 108, 110, 252, 386], "perimet": [81, 252, 289], "enhanc": [82, 168, 252, 300, 382], "compact": [82, 144, 150, 164, 201, 208, 217, 252, 275, 281, 289, 333], "deprec": [82, 156, 158, 160, 200, 287, 289, 292, 329, 332, 368, 384], "frequent": [82, 155, 286, 382, 389], "ve": [82, 94, 103, 156, 194, 243, 244, 245, 287, 326, 386, 392], "stretegi": 82, "mecan": 82, "fooba": 82, "waveform": [82, 252], "overkil": 82, "precalcul": 82, "pclamp": 82, "artif": 83, "integratefir": [83, 102], "substitut": [83, 117, 221, 224, 353, 356, 386, 391], "rudolph": [83, 95, 251, 252], "beeman": [83, 95, 251, 252], "bower": [83, 95, 251, 252], "jm": 83, "diesmann": [83, 252], "morrison": [83, 252], "2007": [83, 95, 200, 251, 252, 332, 368], "comp": 83, "349": [83, 95, 251, 252], "83319": [83, 95], "sushil": 84, "kambampati": 84, "thoma": [84, 252, 391], "mors": [84, 251, 252], "school": 84, "medicin": [84, 252], "neurobiologi": [84, 197, 252], "scienc": [84, 252, 392], "connecticut": 84, "poster": 84, "annual": [84, 121, 252], "confer": [84, 95, 252, 397], "april": 84, "27": [84, 213, 252, 345, 347, 386, 387, 391, 392, 395], "prioriti": [84, 155, 168, 217, 286, 300, 311, 349, 389], "preview": [84, 122, 382], "hierarch": [84, 176, 252, 308], "receptor": [84, 90, 252, 374], "contract": [84, 244, 252], "occurr": [84, 149, 160, 197, 211, 252, 280, 292, 329, 343], "uniqu": [84, 95, 155, 156, 162, 196, 200, 202, 252, 286, 287, 289, 292, 294, 328, 332, 334, 389], "lengthi": [84, 155, 286, 289], "109": [84, 154, 252, 373], "simpler": [84, 156, 181, 208, 217, 226, 287, 313, 349, 373, 382, 392], "eca": [84, 144, 150, 275, 281], "140": [84, 187, 252, 392], "summar": [84, 392], "el_hha2": 84, "ar2_hha_old": 84, "preliminari": [84, 252], "xml": [84, 121], "collabor": [84, 121, 122, 252, 382], "evolv": [84, 382, 387, 388, 389], "catacomb": [84, 145, 276], "genesi": [84, 149, 252, 280], "adopt": [84, 121, 382], "neuroml": [84, 158, 252, 274, 289, 392], "brainml": 84, "cellml": 84, "grate": 84, "nih": 84, "5p01dc004732": 84, "neurobot": 84, "bio": [84, 243, 251, 252], "auth": 84, "gr": [84, 225, 357], "2006": [84, 121, 154, 251, 252, 285], "metaformat": 84, "123": [84, 95, 120, 121, 251, 252], "135": [84, 120, 121, 226, 251, 252, 358], "tm": [84, 155, 251, 252, 286], "davison": [84, 251, 252], "marenco": 84, "shepherd": [84, 251, 252], "gm": [84, 192, 324], "ml": [84, 95, 251], "publicli": [84, 382, 383], "131": [84, 252], "134": [84, 252], "ncbi": 84, "nlm": [84, 146, 252, 277], "gov": [84, 121, 153, 155, 284, 286], "pmc": 84, "pmc6130779": 84, "deserv": 85, "microcircuit": [85, 252], "pkzip": 85, "aco": [86, 158, 289, 290], "arc": [86, 89, 100, 129, 143, 161, 191, 215, 228, 231, 233, 234, 259, 274, 293, 323, 360, 363, 366], "cosin": [86, 197, 201, 252, 290, 329, 333], "arcco": 86, "asin": [86, 158, 289, 290], "sine": [86, 131, 197, 201, 226, 261, 290, 329, 333, 358, 362, 391], "arcsin": 86, "tangent": [86, 158, 191, 197, 289, 290, 323, 329], "arctan": 86, "atan2": [86, 158, 191, 289, 290, 323, 330, 392], "ceil": [86, 158, 289, 290], "cosh": [86, 158, 289, 290], "hyperbol": [86, 158, 191, 197, 289, 290, 323, 329], "fab": [86, 158, 289, 290, 376], "floor": [86, 158, 197, 252, 280, 289, 290, 329, 330], "downward": 86, "fmod": [86, 158, 289, 290], "modulo": [86, 131, 261], "pow": [86, 158, 193, 197, 289, 290, 325, 329, 330], "sinh": [86, 158, 289, 290], "tan": [86, 158, 181, 252, 289, 290, 313], "tanh": [86, 158, 191, 197, 289, 290, 323, 329, 330, 373, 381, 392], "xx": [87, 228, 360, 371], "scene_background": 87, "ffffff": 87, "scene_foreground": 87, "000000": [87, 186, 318], "pseudocolor": 87, "shape_scale_fil": 87, "cm1": 87, "95": [87, 94, 161, 245, 252, 293, 387], "143": [87, 252], "159": [87, 252], "191": [87, 252], "79": [87, 252, 391], "207": [87, 252], "63": [87, 90, 252, 280, 293, 387, 391], "223": [87, 252], "239": [87, 252], "255": [87, 122, 232, 252, 342, 364], "247": [87, 252], "cook": [87, 90, 252], "scheme": [87, 104, 121, 137, 145, 148, 149, 155, 168, 217, 247, 252, 268, 276, 279, 280, 286, 300, 349, 371, 384], "rogowitz": 87, "treinish": 87, "assist": [87, 252], "bergman": 87, "neo": 88, "tighter": 88, "runfitt": [88, 123, 168, 224, 253, 300, 356], "praxi": [88, 89, 91, 124, 128, 129, 133, 254, 258, 259, 263], "brent": 88, "1976": [88, 252], "englewood": [88, 121], "cliff": [88, 121], "nj": [88, 121, 251, 252], "248": [88, 252], "unoptim": 88, "multiplerunfitt": 88, "bluepyopt": [88, 252], "van": [88, 252], "geit": [88, 252], "gevaert": [88, 252], "chindemi": [88, 252], "r\u00f6ssert": [88, 252], "courcol": [88, 252], "muller": [88, 251, 252], "eb": 88, "sch\u00fcrmann": [88, 251, 252], "segev": [88, 251, 252], "markram": [88, 121, 251, 252], "2016": [88, 251, 252, 286, 345], "leverag": [88, 149, 252, 280], "cloud": [88, 237, 252, 393], "neuroinform": [88, 252], "3389": [88, 251, 252], "fninf": [88, 251, 252], "00017": [88, 252], "k_1": 89, "k_2": 89, "gsyn": 89, "mulrunfitt": [89, 91, 98, 119, 123, 168, 224, 253, 300, 356], "mandatori": [89, 371, 382, 383], "anystr": [89, 224, 356], "absent": [89, 150, 217, 281, 349], "201": [89, 94, 252], "8269": 89, "realiti": [89, 91, 239, 382], "ampakin": 89, "promis": 89, "k1": [89, 90, 247, 375, 378], "ah": 89, "forgot": [89, 91], "harm": 89, "unbound": [89, 378], "apper": 89, "minima": 89, "fenc": 89, "nevertheless": [89, 157, 208, 288, 382], "capacit": [89, 91, 114, 148, 197, 217, 252, 279, 329, 349, 386, 387, 388, 392], "unstabl": [89, 149, 245, 280, 382], "strike": 89, "stipul": 89, "proceed": [89, 91, 95, 107, 252, 391, 392], "unresolv": 89, "research": [89, 121, 251, 252, 382, 396], "jugdement": 89, "empir": [89, 121, 200, 332, 374], "norm": [89, 128, 129, 133, 190, 217, 258, 259, 263, 322, 349], "span": [89, 121, 155, 156, 158, 161, 226, 286, 287, 289, 293, 358, 371, 382, 391], "flash": [89, 91], "condctanc": 89, "sigmoid": [89, 381], "discrep": [89, 197, 252, 329], "phase": [89, 91, 124, 131, 155, 197, 226, 227, 228, 239, 252, 254, 261, 286, 329, 358, 359, 360, 382, 383], "transmitt": [89, 95, 149, 150, 252, 280, 281], "finit": [89, 159, 252, 291], "bind": [89, 158, 252, 289, 374, 377, 392], "rc": [89, 90, 188, 200, 207, 224, 320, 332, 339, 356, 382, 383], "aro": [89, 90], "optimum": [89, 155, 286], "hoc_obj_": [89, 206, 224, 228, 312, 314, 338, 356, 360, 392], "unscal": [89, 125, 255], "smoothli": 89, "bounc": [89, 91], "nonphysiolog": 89, "pretend": [90, 155, 286], "razor": 90, "sharp": [90, 252], "transmiss": [90, 252, 395, 397], "nmda": [90, 252], "holm": [90, 252], "levi": [90, 252], "1990": [90, 121, 252], "presynapt": [90, 105, 109, 148, 149, 150, 154, 155, 252, 279, 280, 281, 285, 286, 387], "agonist": [90, 252], "undergo": [90, 128, 258], "conform": [90, 114, 115, 207, 339, 377], "dimensionless": [90, 114, 115], "overset": 90, "rightarrow": 90, "alp": 90, "underset": 90, "bet": [90, 91], "longleftrightarrow": 90, "gmax": [90, 145, 148, 199, 276, 278, 279, 331], "scalefactor": 90, "sudden": [90, 148, 279], "satur": [90, 252], "92651": 90, "insight": [90, 252, 382, 397], "mediat": [90, 252], "influx": [90, 252, 374], "neurophysiol": 90, "1148": 90, "1168": [90, 252], "rn": 91, "blocker": [91, 252], "match": [91, 93, 156, 160, 164, 178, 197, 207, 210, 217, 239, 252, 287, 289, 292, 310, 329, 339, 342, 349, 371, 375, 382, 383, 391], "loss": [91, 98, 119, 252, 293], "153": [91, 252], "emphas": [91, 155, 286], "toler": [91, 121, 128, 131, 133, 217, 224, 252, 258, 261, 263, 289, 349, 356, 371, 374, 375], "siemen": [91, 376], "rawmodel": 91, "tutorial2": 91, "cry": 91, "iclamp_rig": 91, "init_iclamprawmodel": 91, "zz": [91, 371], "loc": [91, 131, 148, 150, 208, 260, 261, 278, 279, 281, 386, 392], "6534218": 91, "nowher": 91, "init_makedata": 91, "inaccur": [91, 120, 131, 261], "tini": 91, "iclampfit": 91, "redrawn": [91, 161, 232, 234, 293, 364, 366], "init_iclampopt": 91, "mainten": [91, 121, 252, 382], "9076814": 91, "0005": [91, 111], "everywher": [91, 217, 372, 376, 386], "sync": [91, 289, 374, 382], "tutor": 91, "optimization2": 91, "simtooldb": 91, "8e2c5f1c3688e84ebd3fdc5e5e6bb722db204196": 91, "39958": 91, "dauntless": 91, "stuck": 91, "hardli": [91, 230, 362], "14481": 91, "157": [91, 252], "9155": [91, 252], "unbeliev": 91, "13613": 91, "9156": 91, "shouldn": 91, "blind": [91, 252], "inconsequenti": 91, "blip": 91, "domin": [91, 155, 252], "relianc": [91, 207, 339], "surmis": 91, "ballpark": 91, "pseudocod": 91, "brought": [91, 382], "9th": [91, 252], "013147": 91, "44123": 91, "150": [91, 187, 194, 196, 225, 226, 252, 326, 328, 357, 358, 362, 380], "07105": 91, "propiti": 91, "plummet": 91, "12th": 91, "1536e": 91, "137": [91, 252], "83841": 91, "35106": 91, "visibli": 91, "farm": 91, "squeez": 91, "reduct": [91, 217, 252, 349], "triskaidekaphobia": 91, "13th": 91, "indistinguish": [91, 252], "fell": 91, "0322e": 91, "85852": 91, "43060": 91, "38781": 91, "compel": [91, 252, 385], "modesti": 91, "conclud": 91, "156": [91, 252], "86": [91, 252, 293], "43000": 91, "overcompens": 91, "abandon": [91, 217, 349], "hopefulli": [91, 128, 207, 258, 339, 382], "startpoint": 91, "0125": [91, 122], "thereaft": [91, 196, 328], "poorer": 91, "game": 91, "merg": [91, 149, 150, 197, 217, 245, 252, 280, 281, 329, 349, 383, 384], "collid": 91, "emphazis": 91, "de": [91, 95, 217, 251, 252, 349], "reopen": [91, 128, 168, 258, 300], "cumbersom": [93, 158, 164, 217], "preprocessor": [93, 150, 249, 281, 368, 382], "prove": [93, 148, 279, 354], "modeldbrepositori": [93, 280], "2487": 93, "2730": 93, "2733": 93, "3658": 93, "7399": 93, "7400": 93, "8284": 93, "9889": 93, "12631": 93, "26997": 93, "35358": 93, "37819": 93, "51781": 93, "52034": 93, "64229": 93, "64296": 93, "87585": 93, "93321": 93, "97868": 93, "97874": 93, "97917": 93, "105507": 93, "106891": 93, "113732": 93, "116094": 93, "116830": 93, "116838": 93, "116862": 93, "123815": 93, "136095": [93, 280], "136310": 93, "137845": 93, "138379": 93, "139421": 93, "140881": 93, "141505": 93, "144538": 93, "144549": 93, "144586": 93, "146949": 93, "149000": 93, "149739": 93, "150240": 93, "150245": 93, "150551": 93, "150556": 93, "150691": 93, "151126": 93, "151282": 93, "153280": 93, "154732": 93, "155568": 93, "155601": 93, "155602": 93, "156780": 93, "157157": 93, "168874": 93, "181967": 93, "182129": 93, "183300": 93, "185355": 93, "185858": 93, "186768": 93, "187604": 93, "189154": 93, "194897": 93, "195615": 93, "223031": 93, "225080": 93, "231427": 93, "232097": 93, "239177": 93, "241165": 93, "241240": 93, "244262": 93, "244848": 93, "247968": 93, "249463": 93, "256388": 93, "259366": 93, "stricter": 93, "cast": [93, 121, 182, 208, 293, 314, 325], "discourag": [93, 149, 280], "similarli": [93, 121, 193, 216, 325, 348, 374, 382, 391, 392], "forbidden": 93, "manifest": [93, 207, 228, 339, 360], "some_funct": [93, 239], "harmless": 93, "some_method_taking_an_int": 93, "problemat": [93, 250], "rand": [93, 197, 329], "nrn_random_arg": 93, "clash": [93, 382], "nuanc": 93, "sink": [93, 149, 280, 371], "void_ptr": 93, "linker": 93, "thing_ptr": 93, "c23": 93, "vector_res": 93, "mech_api": 93, "transit": [93, 118, 121, 159, 247, 252, 272, 291], "vector_capac": 93, "ivocvect": 93, "emit": [93, 121, 149, 217, 280, 349], "composit": [94, 252], "land": [94, 228, 360], "proportion": [94, 289], "raster": [94, 95, 155, 279, 286, 387, 388, 389], "ghostscript": [94, 122], "enlarg": 94, "sent": [94, 148, 154, 155, 201, 207, 216, 217, 244, 279, 285, 286, 331, 333, 339, 348, 349, 373, 389], "lpr": [94, 228, 360], "chooser": [94, 128, 129, 174, 184, 224, 228, 258, 259, 306, 315, 316, 356, 360], "9985": 94, "9971": [94, 347], "841": 94, "7917": [94, 197, 252, 329], "broad": 95, "emul": [95, 245, 329], "phenomena": [95, 252, 370, 371], "extrins": 95, "recur": 95, "correl": [95, 194, 197, 252, 326, 329, 330], "nt": [95, 155, 251, 286], "1016": [95, 251, 252], "jneumeth": [95, 251, 252], "010": [95, 210, 217, 251, 252, 342, 349], "preprint": [95, 121], "nrnpub": 95, "96444": 95, "destexh": [95, 121, 251, 252], "398": [95, 251, 252], "1007": [95, 251, 252], "s10827": [95, 251, 252], "007": [95, 251, 252], "0038": [95, 251], "encourag": [95, 155, 286, 382], "347": [95, 252], "628": 95, "663": [95, 252], "913": [95, 252], "456": [95, 252], "245": [95, 197, 252, 329], "281": [95, 252], "295": [95, 197, 252, 329], "confound": [95, 155, 286], "luck": 95, "reliabl": [95, 217, 252, 349], "surrog": [95, 252], "initn": 95, "nsnum": 95, "ns_list": 95, "stim_t": [95, 388, 389], "stim_id": 95, "my_run": 95, "seed": [95, 117, 155, 194, 196, 286, 326, 328], "id_": [95, 200, 332], "3f": [95, 193, 325], "noisefromrandom123": 95, "essenc": 95, "attend": 95, "randomli": [95, 371], "salmon": 95, "jk": 95, "mora": 95, "dror": 95, "ro": [95, 252], "shaw": [95, 252], "1145": [95, 252], "2063384": 95, "2063405": 95, "independent_netstim": 95, "all_random_stream": 95, "vline": [95, 279, 387, 388, 389], "ytick": 95, "xlim": 95, "subplot": [95, 279, 376], "ylabel": [95, 370, 371, 375, 380, 381, 392], "603": 95, "226": [95, 252], "187": [95, 252], "459": [95, 252], "528": [95, 252], "19": [95, 114, 115, 122, 149, 155, 197, 208, 239, 252, 280, 286, 329, 340, 378, 386, 387, 391, 392], "546": [95, 252], "827": 95, "variabletimestep": [96, 121, 224, 356], "disast": [98, 119], "segreg": [98, 119, 252], "q": [98, 119, 193, 210, 252, 325, 368], "groupmanag": [98, 119], "bulk": [98, 119], "newgroup": [98, 119], "changenam": [98, 119], "savegroup": [98, 119], "relaunch": [98, 119, 239], "graf": [98, 119], "apicals_x": [99, 100, 101], "cb": [99, 282], "920": 99, "readout": 99, "reminisc": [99, 201, 225, 333, 357], "thermomet": 99, "temperatur": [99, 220, 224, 252, 280, 352, 356, 373, 376, 392, 397], "tapercel": [99, 116], "smart": [100, 228, 360], "dumb": 100, "p1": [100, 197, 247, 329, 375], "p0": [100, 375], "intercept": [100, 168, 197, 300, 310, 311, 329], "midwai": [100, 121, 247], "menuselect": 100, "poisson": [102, 196, 197, 232, 328, 329, 364], "progenitor": 102, "briefli": 102, "unrespons": [102, 387], "spikedur": 102, "refrac": [102, 148, 279], "vastli": 103, "sesion": 103, "unbranch": [103, 121, 161, 293, 392], "30um": 103, "15000": 103, "uncheck": 103, "grace": [103, 252], "oliv": [103, 252], "toothpick": 103, "mnemon": 103, "nondescript": 103, "exp2syn": [104, 148, 278, 279, 392], "ampa": [104, 252, 387], "67": [104, 252, 391], "10um": 105, "dead": 106, "entail": 108, "subtask": 108, "slight": 108, "bend": 108, "ko": [114, 222, 252, 354, 392], "ki": [114, 392], "understood": [114, 115, 121, 210, 342, 382, 383], "111e": [114, 115], "cm4": [114, 115], "denomin": [114, 115, 286, 376], "m2": [114, 115, 193, 325], "kg": [114, 115], "sec2": [114, 115], "coul": [114, 115, 149, 247, 280], "milliamp": [114, 115, 146, 161, 247, 277, 293, 376], "utest1": [114, 115], "fundament": [114, 115, 149, 155, 156, 221, 280, 286, 287, 349, 353, 382], "retransl": [114, 115], "outset": [114, 115, 168, 197, 300, 329], "WILL": [114, 115, 155, 286], "annoi": [114, 115], "overpow": [114, 115], "imposs": [114, 115, 155, 207, 286, 339], "syntact": [114, 115], "convent": [114, 115, 131, 134, 150, 158, 241, 243, 250, 252, 261, 264, 281, 331, 376, 383, 384, 391], "ommit": [114, 115, 158, 289], "necess": [114, 115, 129, 155, 197, 217, 259, 286, 329], "disambigu": [114, 115, 382], "feet": [114, 115], "silent": [114, 115, 252], "wrote": [114, 115, 155, 286], "misinterpret": [114, 115], "strict": [114, 115, 149, 243, 244, 280], "microfarad": [114, 115, 149, 280], "mohm": [114, 115, 148, 149, 279, 280], "liter": [114, 115, 149, 150, 160, 247, 249, 280, 281, 292], "millimolar": [114, 115, 149, 247, 280], "022169e": [114, 115], "652": [114, 115], "602192": [114, 115], "rydberg": [114, 115], "179846": [114, 115], "141593": [114, 115], "lambert": [114, 115, 252], "183099": [114, 115], "candela": [114, 115], "typo": [114, 115, 149, 280, 382], "scop": [114, 115, 149, 280], "degc": [114, 115, 149, 280, 376], "96520": [114, 115, 149, 189, 280, 321], "14159": [114, 115, 149, 280], "foot2inch": [114, 115, 149, 280], "foot": [114, 115, 149, 252, 280], "misunderstand": [114, 115], "checker": [114, 115], "overreach": [114, 115], "unitsoff": [114, 115, 376], "unitson": [114, 115, 376], "a1": [114, 115, 252], "u1": [114, 115], "a2": [114, 115], "u2": [114, 115], "ascertain": [114, 115], "reactant": [114, 115, 158, 371], "flux": [114, 115, 252, 289, 374, 378], "milli": [114, 115, 247], "numbersfootnot": 115, "fuli": 116, "parameterizedcod": 116, "your_starting_fil": 117, "iclamp_": 118, "mundan": 118, "handi": 118, "strang": 118, "mistyp": 118, "alias": [118, 197, 243, 329], "tauc2o": 118, "geom_nseg": 120, "lambda_f": 120, "x2": [120, 149, 150, 225, 280, 281, 357], "d2": [120, 247, 252], "lam": 120, "fixnseg": 120, "topolgi": 120, "theoretician": 121, "sound": [121, 252, 382], "he": [121, 194, 207, 252, 326, 339, 382, 383], "judici": 121, "neurophysiolog": [121, 252], "grasp": 121, "reformul": [121, 252], "incept": 121, "wrestl": 121, "lend": 121, "robust": [121, 161, 252, 293], "oscil": [121, 220, 252, 352, 374], "genericallli": 121, "hindmarsh": [121, 217, 349], "taylor": [121, 252], "serban": [121, 217, 349], "decis": [121, 150, 252, 281, 382], "judgement": 121, "defer": [121, 155, 286], "preoccup": 121, "pose": [121, 374], "122": [121, 252], "seq": [121, 196, 222, 328, 354], "tremend": [121, 217, 349], "multiprocessor": 121, "acceler": [121, 252], "furthermor": [121, 143, 197, 217, 243, 274, 349, 381, 382], "exploratori": 121, "noteworthi": [121, 150, 281], "pinpoint": 121, "ephapt": [121, 252], "textual": 121, "increasingli": 121, "interoper": [121, 251, 252, 295, 376], "transport": [121, 252, 371], "borg": [121, 252], "graham": [121, 252], "formul": [121, 382, 383], "Their": 121, "determinist": [121, 148, 222, 252, 279, 289, 354], "countabl": 121, "began": 121, "plastic": [121, 252, 374], "stepsiz": [121, 197, 329], "standalon": [121, 239, 382], "modif": [121, 149, 208, 252, 280, 340, 382, 386], "februari": [121, 252], "2400": 121, "mail": 121, "subscrib": 121, "2005": [121, 153, 155, 217, 251, 252, 284, 286, 349, 382], "gradual": 121, "supplant": 121, "1600": [121, 252], "4000": [121, 226, 358], "supplement": 121, "email": [121, 244, 391], "telephon": 121, "searchabl": 121, "venu": 121, "tos": 121, "expertis": 121, "sejnowski": [121, 252, 368, 397], "johnston": [121, 252], "wu": [121, 252], "lytton": [121, 155, 251, 252, 286, 393, 396], "stuart": [121, 252], "2000": [121, 148, 251, 252, 279, 374, 378], "satellit": [121, 252], "societi": [121, 252], "california": [121, 252], "san": [121, 252], "diego": [121, 252], "announc": [121, 382, 383], "seminar": [121, 252], "episod": [121, 252], "educ": [121, 252], "european": [121, 252], "beowulf": [121, 155, 286], "ibm": [121, 252, 382], "gene": [121, 251, 252, 374], "xt3": 121, "uk": [121, 252, 375], "thalamocort": [121, 252], "assembli": [121, 252], "york": [121, 251, 252], "oxford": [121, 252], "lawrenc": [121, 252], "livermor": 121, "nation": [121, 149, 252, 280, 368], "foundat": [121, 252], "springer": [121, 251, 252], "verlag": [121, 252], "cannia": [121, 251, 252], "119": [121, 251, 252], "neurolab": [121, 252], "sunderland": [121, 252], "sinauer": [121, 252], "sundial": [121, 217, 349, 374], "llnl": [121, 217, 349], "grafex": 122, "ileak": 122, "notch": 122, "hypothesi": [122, 239], "tire": 122, "montag": 122, "annot": [122, 150, 239, 281, 289, 382, 383], "hardcopi": [122, 207, 339], "serif": 122, "typefac": 122, "slide": [122, 252], "cern": 122, "ch": [122, 193, 245, 325], "pttool": 122, "grif": 122, "card": [122, 128, 142, 168, 252, 258, 273, 300, 368], "ep": [122, 155, 217, 226, 349], "boundingbox": 122, "temp1": [122, 156, 287], "163": [122, 251, 252], "htb": 122, "261": [122, 252], "161": [122, 252], "psfile": 122, "hoffset": 122, "voffset": 122, "caption": [122, 174, 306], "registri": 122, "gsview": 122, "extract": [122, 155, 252, 286, 383, 386, 391, 392, 397], "ghostview": 122, "sorri": [122, 217, 349], "amaz": [122, 391], "puzzl": [122, 252], "functionfitt": [123, 135, 168, 224, 253, 266, 300, 356], "independentvar": [123, 253], "yexpr": [123, 168, 253], "praxisfit": [123, 253], "stopatnextquadform": [123, 253], "watchthefit": [123, 253], "roughfit": [123, 253], "argvalu": [123, 253], "currentvaluesasdefault": [123, 253], "fittodata": [123, 253], "readdatafil": [123, 253], "commonfunctionalform": [123, 253], "fitcriterion": [123, 253], "parameterrangelimit": [123, 253], "dataweight": [123, 253], "saverestorefunct": [123, 253], "readdata": [123, 253], "variabletofit": [123, 128, 253, 258], "parameterstovari": [123, 253], "parameterrang": [123, 253], "changeparmfromlist": [123, 253], "removeparmfromlist": [123, 253], "saverestorefitparam": [123, 253], "numberofdataregion": [123, 253], "anothervariabletofit": [123, 253], "dofit": [123, 253], "singlerunfit": [123, 253], "bequiet": [123, 253], "impedanceratio": [123, 125, 224, 253, 255, 356], "impx": [123, 125, 224, 253, 255, 356], "logavsx": [123, 125, 253, 255], "impshap": [123, 224, 253, 356], "replot": [124, 254], "rightmost": [124, 254], "1e6": [124, 129, 254, 259, 377], "interval3": [124, 254], "adjustweightregion": [124, 129, 254, 259], "moviemod": [125, 255], "recalcul": [125, 149, 161, 168, 220, 255, 280, 293, 300, 352], "initrun": [125, 129, 224, 255, 259, 356], "autoscal": [125, 255], "1mv": [125, 131, 255, 261], "selectloc": [126, 127, 256, 257], "showposit": [126, 256], "shapeselectact": [126, 256], "moveelectrod": [126, 256], "selectmeasur": [127, 257], "selectinject": [127, 257], "swapmeasur": [127, 257], "companion": [128, 193, 252, 258, 325], "ft1": [128, 258], "fd1": [128, 258], "rebuild": [128, 239, 258, 382], "errorvalu": [128, 258], "some_procedur": [128, 258], "cai0_ca_ion": [128, 144, 150, 258, 275, 281, 373], "parameterpanel": [128, 258], "held": [128, 129, 142, 149, 252, 258, 259, 273, 280, 358], "domainpanel": [128, 258], "obviat": [128, 154, 155, 217, 258, 285, 286, 349], "difficulti": [128, 197, 217, 239, 258, 329, 349, 374, 397], "optimizerpanel": [128, 258], "stop_praxi": [128, 133, 258, 260, 263, 392], "attr_praxi": [128, 133, 258, 260, 263, 392], "maxsteps": [128, 133, 258, 263], "printmod": [128, 133, 258, 263], "eigenvalu": [128, 193, 258, 325], "eigenvector": [128, 193, 258, 325], "pval_praxi": [128, 133, 258, 260, 263, 392], "savepath": [128, 258], "famili": [128, 139, 142, 197, 217, 220, 226, 228, 252, 258, 270, 273, 329, 349, 352, 358, 360], "regionfit": [128, 258], "yfit": [128, 258], "slave": [129, 259], "alternativli": [129, 259], "datafromclipboard": [129, 259], "retrievefromfil": [129, 259], "defaultfieldeditor": [129, 259], "savefitparm": [129, 259], "savefitbrows": [129, 259], "printwindowmanag": [129, 179, 228, 259, 311, 360], "outputvari": [129, 259], "patient": [129, 252, 259], "instant": [131, 261], "di": [131, 247, 252, 261], "dv": [131, 197, 261, 329], "d2v": [131, 261], "dx2": [131, 261], "jwc": [131, 261], "i0": [131, 193, 261, 325], "jwt": [131, 261], "solvabl": [131, 261], "daspk": [131, 217, 261, 349], "deltafac": [131, 260, 261], "obei": [131, 148, 261, 279], "expens": [131, 149, 155, 222, 261, 280, 354, 374], "thumb": [131, 155, 261, 286], "cy": [131, 261], "qualif": [131, 261], "hang": [131, 261, 286], "target_var": [131, 155, 261, 283, 286], "transfer_phas": [131, 260, 261], "regret": [131, 261], "inconveni": [131, 155, 164, 228, 261, 286, 360], "jacobi": [131, 252, 261], "modest": [131, 149, 261, 280], "df": [131, 261], "1na": [131, 261], "2pi": [131, 168, 261], "yreal": 131, "iyimag": 131, "yimag": 131, "input_phas": [131, 260, 261], "ineffici": [131, 155, 193, 217, 224, 261, 286, 349, 389], "imp": [131, 233, 261, 365], "jacobian": [131, 134, 149, 217, 220, 261, 264, 280, 349, 352], "goldman": [132, 262], "katz": [132, 252, 262], "permeabl": [132, 252, 262, 289], "nai": [132, 144, 187, 262, 275, 392], "nao": [132, 144, 262, 275, 392], "rtf": [132, 262], "funnam": [133, 263], "efun_as_python_cal": [133, 263], "hoc_vector": 133, "scopmath": [133, 197, 263, 329], "varx": [133, 263], "efun": [133, 149, 263, 280], "paxi": [133, 263], "10g": [133, 186, 318, 371], "previous_index": [133, 263], "mcell_ran4_index": [133, 263], "x0": [133, 226, 263, 358], "reproduc": [133, 196, 197, 207, 252, 263, 328, 329, 339, 371], "mcell_ran4": [133, 196, 198, 263, 328, 330, 392], "method3": [134, 264], "hope": [134, 252, 264, 382], "diamlist": [134, 264], "extraeqn": [134, 264], "nts_spine": [134, 264], "spined3d": [134, 264], "presenc": [134, 148, 221, 247, 252, 264, 279, 353, 391], "spatial_method": [134, 264], "nemo": [134, 264], "neuron2nemo": [134, 264], "miller": [134, 251, 252, 264], "nemosi": [134, 264], "nemo2neuron": [134, 264], "mike": 135, "neubig": [135, 252], "glyph": [135, 226, 266, 358, 392], "guimath": [135, 198, 266, 330, 392], "ptrvector": [135, 209, 266, 341, 392], "pwmanag": [135, 170, 179, 223, 266, 302, 311, 355, 392], "stringfunct": [135, 156, 182, 187, 212, 266, 287, 319, 344, 392], "symchoos": [135, 167, 179, 182, 218, 266, 299, 311, 314, 350, 392], "texteditor": [135, 179, 266, 311, 392], "timer": [135, 155, 213, 239, 266, 286, 345, 392], "valuefieldeditor": [135, 179, 266, 311, 392], "kschan": [135, 141, 147, 158, 266, 272, 278, 289, 371, 392], "mechanismtyp": [135, 141, 155, 199, 211, 217, 266, 272, 286, 331, 343, 349, 392], "rangevarplot": [135, 161, 162, 226, 228, 266, 293, 294, 358, 360, 392], "sectionbrows": [135, 162, 179, 266, 294, 311, 392], "statetransitionev": [135, 141, 147, 266, 272, 392], "predeclar": [135, 180, 266, 312], "grapher": [135, 226, 266, 358], "notif": [135, 266], "menuexplor": [135, 224, 266, 356], "obsolet": [135, 141, 154, 179, 180, 181, 183, 208, 209, 213, 217, 220, 266, 272, 285, 311, 312, 313, 315, 340, 341, 345, 349, 352], "showmechan": [136, 224, 267, 356], "kineticbuild": [136, 224, 267, 356], "pointmanag": [136, 267], "pointgroup": [136, 267], "pointprocessgroupmanag": [136, 267], "subtool": [137, 268], "markov": [137, 252, 268], "cleaner": [139, 270, 292, 382, 392], "dismiss": [139, 142, 168, 171, 207, 218, 226, 228, 234, 270, 273, 300, 303, 339, 350, 358, 360, 366], "supersed": [139, 156, 160, 176, 197, 203, 224, 270, 287, 292, 308, 335, 356], "xplacement": [139, 142, 270, 273], "yplacement": [139, 142, 270, 273], "subpanel": [139, 270], "panelstyl": [139, 270], "viewselect": [139, 270], "globalspec": [139, 270], "NO": [139, 155, 161, 181, 270, 286, 293, 313], "viewonenam": [139, 270], "submenu": [139, 151, 178, 227, 270, 282, 310, 359], "wherev": [140, 271, 389], "ed": [140, 149, 165, 197, 233, 251, 271, 280, 297, 329, 365], "valueeditor": [140, 271], "frankenhaus": [141, 272], "protein": [141, 200, 252, 272, 332, 371, 372, 373, 374, 377, 397], "subworld": [141, 152, 272, 283, 388], "anonym": [142, 208, 273, 340], "dur0": [142, 272, 273], "dur1": [142, 148, 273, 279], "dur2": [142, 148, 273, 279], "vclampigraph": [142, 272, 273], "currentgraph": [142, 273], "vclampfamili": [142, 272, 273], "keeplin": [142, 273], "hoccod": [142, 273], "varyamp": [142, 273], "testlevel": [142, 272, 273], "returnlevel": [142, 272, 273], "amp2": [142, 148, 273, 279], "varlabel": [142, 273], "hocmech": 143, "make_mechan": [143, 272, 274, 278, 392], "parm1": [143, 274], "parm2": [143, 274], "parm3": [143, 274], "make_pointprocess": [143, 272, 274, 278, 392], "name_suffix": 143, "after_cvod": [143, 274], "after_step": [143, 274], "stagger": [143, 217, 274, 349], "noload": [143, 165, 197, 207, 297, 329, 339], "v_max": [143, 274, 280], "oldstyl": [144, 275], "name_ion": [144, 275], "c_style": [144, 275], "e_styl": [144, 275], "einit": [144, 275], "eadvanc": [144, 275], "cinit": [144, 275], "na_ion": [144, 239, 275, 329, 392], "k_ion": [144, 239, 275, 392], "ca_ion": [144, 160, 247, 275, 292], "nai0_na_ion": [144, 275, 392], "nao0_na_ion": [144, 275, 392], "cao": [144, 150, 252, 275, 281], "cao0_ca_ion": [144, 150, 275, 281, 373], "ion_regist": [144, 272, 275, 392], "inam": [144, 275], "nameo": [144, 275], "namei": [144, 226, 275], "enam": [144, 275], "diname_dv": [144, 275], "ion_charg": [144, 272, 275, 392], "java": [145, 276, 368], "albeit": [145, 276, 342], "setstructur": [145, 276, 278], "remove_st": [145, 276, 278], "ksstate": [145, 272, 276, 278, 392], "remove_transit": [145, 276, 278], "kstran": [145, 272, 276, 278, 392], "ngate": [145, 276, 278, 289], "nstate": [145, 159, 276, 278, 291], "ntran": [145, 276, 278], "nligand": [145, 276, 278], "iv_typ": [145, 276, 278], "erev": [145, 247, 276, 278], "add_hhstat": [145, 276, 278], "add_ksstat": [145, 276, 278], "add_transit": [145, 276, 278], "src_index": [145, 276], "target_index": [145, 276], "src_ksstate": [145, 276], "target_ksst": [145, 276], "tran": [145, 155, 252, 276, 278, 286], "ksgate": [145, 272, 276, 278, 392], "helper": [145, 200, 239, 276, 332], "sindex": [145, 276, 278], "set_f": [145, 276, 278], "ftype": [145, 276, 278], "parmvec": [145, 276], "vvec": [145, 276], "avec": [145, 247, 276], "bvec": [145, 276], "inftau": [145, 276, 278], "infvec": [145, 276], "tauvec": [145, 276], "parm": [145, 276, 278], "lm": [146, 252, 277], "y0": [146, 226, 277, 358], "sl": [146, 162, 164, 208, 232, 234, 277, 292, 294, 305, 340, 364, 366], "layervec": [146, 277], "pycal": [146, 159, 250, 277, 291, 349], "matric": [146, 193, 277, 325], "spars": [146, 149, 193, 217, 247, 252, 277, 280, 325, 349], "vext": [146, 148, 150, 155, 217, 247, 277, 279, 281, 286, 349, 392], "outward": [146, 148, 150, 277, 279, 281], "mathrm": [146, 277, 349, 371, 377], "mu": [146, 252, 277, 374], "nf": [146, 277], "kenneth": [146, 277], "kundert": [146, 277], "netlib": [146, 193, 277, 325], "pendulum": [146, 277], "omega": [146, 277], "cmat": [146, 277], "gmat": [146, 277], "setval": [146, 193, 205, 277, 325, 330, 337], "trajec": [146, 277], "_ref_x": [146, 205, 208, 263, 277, 286, 293, 316, 329, 336, 337, 340, 358, 364], "_ref_t": [146, 159, 208, 247, 250, 277, 281, 291, 329, 336, 340, 343, 347, 370, 375, 376, 377, 378, 380, 381, 386, 387, 388, 389, 392], "prun": [146, 156, 216, 277, 283, 287, 348], "theta0": [146, 277], "omega0": [146, 277], "atol": [146, 217, 224, 277, 349, 356], "9999": [146, 277], "exec_menu": [146, 226, 232, 234, 277, 358, 364, 365, 366], "nonspecific_curr": [147, 248, 376], "for_netcon": [147, 248, 278], "protect": [147, 148, 155, 248, 252, 278, 279, 286], "mutexlock": [147, 248, 278], "mutexunlock": [147, 248, 278], "paradigm": [147, 252, 278], "function_t": [147, 248, 278], "IF": [147, 247, 278], "artificial_cel": [148, 151, 154, 211, 217, 279, 282, 285, 343, 349], "pnt": [148, 150, 278, 279, 281], "get_loc": [148, 150, 151, 164, 278, 279, 281, 296, 386, 392], "pop_sect": [148, 150, 151, 154, 164, 208, 234, 279, 281, 285, 292, 293, 296, 340, 366, 392], "brace": [148, 149, 181, 201, 280, 313, 333, 391], "get_seg": [148, 278, 279, 282, 296, 386, 392], "pyseg": [148, 279], "has_loc": [148, 150, 278, 279, 281, 386, 392], "stimobj": [148, 279], "umho": [148, 150, 247, 279, 281], "micromho": [148, 247, 279], "rstim": [148, 279], "vclmp": [148, 217, 279, 349], "amplfier": [148, 279], "stiff": [148, 149, 217, 279, 280, 349], "straightforwardli": [148, 279], "clampobj": [148, 279], "dur3": [148, 279], "amp3": [148, 279], "svclmp": [148, 279], "exceedingli": [148, 279], "s3": [148, 181, 197, 279, 313, 329], "c2": [148, 247, 279, 354, 382], "c3": [148, 279, 382], "apc": [148, 279], "play_remov": [148, 197, 279, 329, 330], "thresh": [148, 197, 279, 329], "freed": [148, 150, 154, 159, 160, 193, 197, 204, 205, 226, 234, 279, 281, 286, 291, 292, 329, 336, 337, 358, 366], "condduct": [148, 279], "bath": [148, 279], "appoxim": [148, 279], "negexp": [148, 196, 197, 279, 328, 329], "m0": [148, 279], "infinitesim": [148, 217, 279, 349], "ib": [148, 187, 279], "taue": [148, 279], "taui1": [148, 279], "taui2": [148, 279], "i2": [148, 279], "relax": [148, 244, 252, 279], "isol": [148, 155, 168, 252, 279, 286, 300, 382], "setdata": [148, 279], "setdata_suffix": [148, 279], "setdata_hh": [148, 279, 392], "i_cap": [148, 279, 392], "ina_hh": 148, "ik_hh": 148, "rates_hh": [148, 227, 279, 359, 392], "mhn": [148, 279], "inf_hh": [148, 279], "tau_hh": [148, 279], "usetable_hh": [148, 279, 392], "ek": [148, 247, 279, 376, 392], "fastpa": [148, 201, 279, 333, 392], "passive0": [148, 279], "wast": [148, 155, 156, 182, 279, 286, 287], "xraxial": [148, 279, 392], "xg": [148, 279, 392], "xc": [148, 279, 392], "e_extracellular": [148, 279, 392], "seal": [148, 279, 349], "sheath": [148, 252, 279, 392], "nlayer": [148, 279], "violenc": [148, 279], "believ": [148, 149, 279, 280], "extcab": [148, 279], "xcaxial": [148, 279], "truth": [148, 252, 279, 329], "v4": [148, 197, 279, 329], "sav_g": [148, 279], "ndlist": [148, 279], "sav_rh": [148, 279], "rootnod": [148, 279], "extracellularli": [148, 252, 279], "recompil": [148, 230, 243, 362, 389], "nbsr": [149, 280], "cagk": [149, 280], "among": [149, 155, 252, 280, 286, 382, 383], "biomed": [149, 252, 280], "v2": [149, 193, 197, 252, 280, 325, 329, 392], "advent": [149, 280], "entitl": [149, 244, 280], "file3": [149, 184, 280, 316], "aros": [149, 280], "frankenhaeus": [149, 280, 371], "appar": [149, 153, 252, 280, 284, 382], "glean": [149, 280], "highli": [149, 239, 252, 280, 382], "instabl": [149, 150, 252, 280, 281], "cabpump": [149, 217, 280, 349], "endcom": [149, 247, 280, 376], "variable_nam": [149, 280], "integer_valu": [149, 280], "legibl": [149, 280], "nrnunit": [149, 265, 280], "nrn_dynamic_units_use_legaci": [149, 265, 280], "todo": [149, 150, 155, 247, 280, 281, 286], "enforc": [149, 280], "stylist": [149, 280], "substant": [149, 239, 280], "6021e": [149, 280], "q10": [149, 280, 376], "oca_ss": [149, 280], "section1": [149, 150, 280, 281], "var1_mech1": [149, 150], "section2": [149, 150, 280, 281], "var2_mech2": [149, 150], "everytim": [149, 150, 280, 281], "var2": [149, 150, 201, 211, 280, 281, 333, 343], "var1": [149, 150, 201, 280, 281, 333], "vpre": [149, 150, 201, 280, 281, 333], "somedendrit": [149, 150], "tpre": [149, 150, 247, 280, 281], "ach_releas": [149, 150], "inc": [149, 187, 251, 252, 280], "colon": [149, 165, 201, 252, 280, 297, 333, 391], "modl_includ": [149, 280], "inclus": [149, 197, 239, 280, 329, 391], "rung": [149, 280], "kutta": [149, 280], "cheap": [149, 280], "hh2": [149, 280], "microsiemen": [149, 280], "nor": [149, 226, 280, 289, 358], "infin": [149, 187, 197, 217, 226, 280, 329, 349, 358], "state1": [149, 280], "state2": [149, 280], "nonloc": [149, 280], "longitudin": [149, 247, 252, 280, 289], "flux_expr": [149, 280], "setdata_mechnam": [149, 280], "mechnam": [149, 171, 208, 280, 303, 331, 340], "pp_objref": [149, 280], "procnam": [149, 234, 280, 366], "uncommon": [149, 280, 382], "tables": [149, 280], "greatest": [149, 280, 316], "usetable_suffix": [149, 220, 280, 352], "spent": [149, 155, 280, 286], "repaid": [149, 280], "state0": [149, 280], "cai0": [149, 247, 280], "\u03bdmodl": [149, 280], "table_tau1_": [149, 280], "mod_suffix": [149, 280], "tau1_vec": [149, 247, 280], "v_vec": [149, 280], "tau1_k3st": [149, 280], "doubli": 149, "iclamp1": [149, 150, 280, 281], "_name": [150, 281], "underscor": [150, 281, 386, 392], "overload": [150, 158, 281], "omiss": [150, 281], "transmembran": [150, 247, 252, 281, 349], "iion": [150, 281], "ioni": [150, 281], "iono": [150, 281], "eion": [150, 265, 281], "treatment": [150, 252, 281, 376], "privileg": [150, 164, 252, 281], "conserv": [150, 197, 248, 252, 281, 329, 349, 371], "curi": [150, 281, 289], "uri": [150, 281, 289], "chebi": [150, 281, 289, 376], "29101": [150, 281, 289, 376], "BE": [150, 155, 281], "THE": [150, 155, 231, 281, 363], "danger": [150, 239, 281, 382], "wors": [150, 281, 382], "subtl": [150, 155, 252, 281, 286, 382], "reconnect": [150, 160, 281, 292], "fname_othermodelsuffix": [150, 281], "fornetcon": [150, 247, 281], "atom": [150, 281], "binary_oper": [150, 281], "factors_don": [150, 247, 281], "mutex": [150, 281], "vein": [150, 281], "adequ": [150, 155, 281, 286], "set_foo": [150, 249, 281], "exclus": [150, 178, 228, 243, 245, 249, 252, 281, 310, 360, 382, 383], "1762": [150, 249, 281, 382], "nrn_version_eq": [150, 249, 281], "nrn_version_n": [150, 249, 281], "nrn_version_gt": [150, 249, 281], "nrn_version_lt": [150, 249, 281], "nrn_version_gteq": [150, 249, 281], "nrn_version_lteq": [150, 249, 281], "nrn_version_gteq_8_2_0": [150, 249, 281], "nrn_version_": [150, 249, 281], "gt": [150, 247, 249, 281, 373, 376, 378, 386, 392], "lt": [150, 247, 249, 252, 281, 376, 378, 386, 392], "gteq": [150, 249, 281], "lteq": [150, 249, 281], "caution": [150, 155, 249, 281, 286, 397], "restraint": [150, 249, 281], "oppos": [151, 154, 226, 252, 282, 285, 290, 358, 391], "mname": [151, 282], "strarg": 151, "nop": 151, "is_netcon_target": [151, 272, 282], "boolean": [151, 154, 155, 160, 163, 166, 168, 172, 175, 184, 192, 194, 197, 207, 217, 226, 282, 285, 286, 292, 295, 298, 300, 304, 307, 324, 326, 329, 339, 349, 358], "has_net_ev": [151, 272, 282], "is_artifici": [151, 211, 272, 282, 343, 344], "patternstim": [151, 278, 279, 282, 392], "pp_begin": [151, 272, 282], "nullobject": [151, 154, 160, 180, 182, 282, 312, 314], "child": [151, 155, 160, 161, 163, 208, 282, 286, 292, 293, 295, 340, 382], "pp_next": [151, 272, 282], "internal_typ": [151, 155, 272, 282, 286], "lyttonmpi": [153, 284], "mc": [153, 155, 193, 284, 286], "anl": [153, 155, 284, 286], "jul": [153, 154, 284, 285], "readili": [153, 252, 284, 376], "password": [153, 155, 244, 284, 286], "ssh": [153, 155, 244, 245, 284, 286], "localhost": [153, 284], "rsa": [153, 155, 284, 286], "rsh": [153, 155, 284, 286], "unlikelyto": [153, 284], "environment": [153, 243, 284], "rshcommand": [153, 155, 284, 286], "mush": [153, 284], "setenv": [153, 284], "csh": [153, 155, 284], "tcp": [153, 284], "ch_p4": [153, 155, 284, 286], "where_you_want_it": [153, 284], "i686": [153, 155, 200, 284, 286, 332], "mpich_path": [153, 284], "mpich_lib": [153, 284], "ld_library_path": [153, 243, 284], "where_to": [153, 284], "where_is_iv": [153, 284], "billl": [153, 284], "your_machin": [153, 284], "pend": [154, 155, 184, 217, 229, 285, 286, 316, 349, 361], "retain": [154, 197, 207, 252, 279, 285, 329, 339, 382], "hoc_paramet": 154, "passag": [154, 285], "suspect": [154, 285], "use_local_dt": [154, 197, 217, 329, 349], "neosim": [154, 285], "detector": [154, 155, 239, 252, 285, 286, 387, 389], "tdeliv": [154, 285], "target_object": [154, 285], "source_object": [154, 285], "preloc": [154, 283, 285], "postloc": [154, 283, 285], "cellobj": [154, 285], "setpost": [154, 283, 285], "newtarget": [154, 285], "Will": [154, 285], "prelist": [154, 283, 285], "postcelllist": [154, 283, 285], "precelllist": [154, 283, 285], "wcnt": [154, 283, 285], "0th": [154, 181, 197, 208, 285, 313, 329, 340, 389], "neccon": [154, 285], "idvec": [154, 156, 285, 287], "nb": [154, 161, 285, 293, 392], "ceas": [154, 285], "save_window_": 154, "rvp_": 154, "scene_vector_": 154, "ocbox_": 154, "ocbox_list_": 154, "scene_": 154, "scene_list_": 154, "flip_to": [154, 168, 300, 311], "152": [154, 252], "493": [154, 252], "save_nam": [154, 226, 232, 234, 358, 364, 366], "presyn": [154, 155, 217, 239, 285, 286, 349], "condition_ord": [154, 159, 217, 285, 291, 349], "get_recordvec": [154, 283, 285], "srcgid": [154, 155, 283, 285, 286], "interprocessor": [154, 155, 217, 285, 286, 349], "gid_connect": [154, 155, 156, 279, 283, 285, 286, 287, 389], "linda": [155, 286, 368], "week": [155, 286, 382, 383, 385], "month": [155, 252, 286, 382, 383, 385], "pvm": [155, 156, 286, 287], "pack": [155, 283, 286], "upkpyobj": [155, 283, 286], "pickleabl": [155, 286], "pickl": [155, 286], "scatter": [155, 205, 286, 337, 349, 372, 376], "submiss": [155, 286], "unexecut": [155, 286], "stringent": [155, 286], "subsidiari": [155, 286], "trap": [155, 166, 252, 286, 298, 376], "innermost": [155, 286], "amort": [155, 286], "bbsworker": 155, "hineshf": 155, "pinki": 155, "descend": [155, 161, 293], "userid": [155, 283, 286], "myid": [155, 156, 286, 287], "ihost": [155, 286], "mpi_comm_rank": [155, 286], "function_nam": [155, 286], "python_cal": [155, 286], "server": [155, 230, 243, 286, 362, 382], "copyofarg1": 155, "indetermin": [155, 286], "pedant": 155, "upkvec": [155, 283, 286], "IT": [155, 252], "pc1": [155, 286], "pc2": [155, 286], "python_object": [155, 286], "idl": [155, 286], "save_context": [155, 286], "tstr": [155, 184], "look_tak": [155, 283, 286], "restore_context": 155, "bulletproof": [155, 286], "invari": [155, 252, 286], "upset": [155, 286], "upkstr": [155, 283, 286], "upkscalar": [155, 283, 286], "str": [155, 168, 184, 204, 211, 286, 289, 292, 300, 336, 337, 340, 343, 364, 391], "vecsrc": [155, 286], "unpickl": [155, 286], "st": [155, 210, 252, 286], "clock": [155, 252, 286], "mpi_wtim": [155, 286], "clock_t": [155, 286], "wait_tim": [155, 156, 283, 286, 287], "step_wait": 155, "step_tim": [155, 283, 286], "integ_tim": [155, 283, 286], "event_tim": [155, 283, 286], "barrier": [155, 217, 252, 283, 286, 349, 371, 389], "allgath": [155, 283, 286], "send_tim": [155, 283, 286], "vtransfer_tim": [155, 283, 286], "transfer_exchange_tim": [155, 286], "splitcell_exchange_tim": [155, 286], "reducedtree_computation_tim": [155, 286], "splitcel": [155, 156, 283, 286, 287], "backbone_styl": [155, 286], "mech_tim": [155, 283, 286], "mechanism_tim": [155, 286], "twofold": [155, 286], "crunch": [155, 286], "client": [155, 286, 378], "promptli": [155, 286], "dealt": [155, 167, 286, 299], "pvm_send": [155, 286], "pvm_recv": [155, 286], "asynchron": [155, 252, 286], "sigpol": [155, 286], "pvm_probe": [155, 286], "win95": [155, 286], "poll": [155, 286], "polldelai": [155, 286], "seldom": [155, 197, 286, 329], "stl": [155, 286], "lucki": [155, 286], "24": [155, 170, 197, 251, 252, 286, 302, 329, 386, 387, 391, 392], "osx": [155, 213, 243, 245, 286, 345], "g5": [155, 286], "node0": [155, 286], "node11": [155, 286], "opinion": [155, 286], "bill": [155, 252, 286, 393, 396], "node1": [155, 286], "late": [155, 252, 286], "keygen": [155, 286], "id_rsa": [155, 286], "pub": [155, 286], "authorized_kei": [155, 286], "systemprefer": [155, 286], "servic": [155, 252, 286, 382], "remotelogin": [155, 286], "powerpc": [155, 194, 200, 286, 326, 332], "mpicc": [155, 286], "mpicxx": [155, 286], "mpic": [155, 286], "confid": [155, 286], "machinefil": [155, 286], "mpifil": [155, 286], "gcc2": [155, 286], "srcdir": [155, 213, 286], "withmpi": [155, 286], "carbon": [155, 252, 286, 368], "nrnmpi_init": [155, 286, 389, 392], "58": [155, 251, 252, 279, 286, 391], "libnrnmech": [155, 208, 243, 286, 378], "neurondev": [155, 286], "bbs_msg_cnt_": [155, 286], "bbs_poll_cnt_": [155, 286], "6667": [155, 286], "bbs_poll_": [155, 286], "mpi32": [155, 286], "bizarr": [155, 286], "tiger": [155, 252, 286], "creator": [155, 286], "waittim": [155, 286], "mpi_barri": [155, 286], "allreduc": [155, 283, 286], "src_dest_vector": [155, 286], "result_vector": [155, 286], "alltoal": [155, 283, 286], "vsrc": [155, 197, 286, 329], "vcnt": [155, 286], "vdest": [155, 197, 286, 329], "mpi_alltoallv": [155, 286], "cnt": [155, 172, 199, 216, 217, 286, 304, 331, 348, 349], "tvl": [155, 286], "py_alltoal": [155, 283, 286, 389], "destlist": [155, 286], "srclist": [155, 286], "100k": [155, 286], "src_buffer_s": [155, 286], "dest_buffer_s": [155, 286], "intermingl": [155, 286], "ba5e547c21f6": 155, "2013": [155, 251, 252], "2012": [155, 252, 368], "broadcast": [155, 283, 286], "assynchron": [155, 286], "indirectli": [155, 239, 286], "specfi": [155, 241, 286], "id_world": [155, 283, 286], "id_bb": [155, 283, 286], "nhost_world": [155, 283, 286], "nhost_bb": [155, 283, 286], "subworld_s": [155, 286], "03d": [155, 286], "bb": [155, 286, 371], "sleep": [155, 252, 286, 293, 329, 337], "nafter": [155, 286], "nbefor": [155, 286], "454": [155, 252], "bb5c4f755f59": 155, "192": [155, 252, 286], "492": [155, 252, 286], "091": [155, 286], "310": [155, 243, 244, 245, 252, 286], "netparmpi": [155, 156, 286, 287], "targetsynaps": [155, 286], "networkreadycel": [155, 156, 168, 286, 287, 300], "sid": [155, 286], "accessor": [155, 286], "gid2cel": [155, 208, 283, 286, 340, 389], "rigor": [155, 286], "invent": [155, 252, 286], "identif": [155, 252, 286], "outputcel": [155, 156, 283, 286, 287], "set_gid2nod": [155, 156, 279, 283, 286, 287, 389], "dendro": [155, 252, 286], "gid_exist": [155, 156, 283, 286, 287, 389], "unwrap": [155, 156, 221, 286, 287, 353], "principl": [155, 156, 252, 286, 287, 373, 382], "spiketimevector": [155, 286], "gidvector": [155, 286], "gid_clear": [155, 283, 286], "set_maxstep": [155, 156, 216, 217, 279, 283, 286, 287, 348, 349, 389], "timeout": [155, 178, 283, 286, 310], "oldtimeout": [155, 286], "massiv": [155, 286, 382], "local_minimum_delai": [155, 286], "default_max_step": [155, 286], "mpi_allgath": [155, 286], "spike_compress": [155, 217, 283, 286, 349], "gid_compress": [155, 286], "xchng_meth": [155, 286], "compress": [155, 197, 252, 286, 289, 329], "spiketim": [155, 239, 286], "mpi_allgatherv": [155, 286], "mpi_isend": [155, 286], "multisend_interv": [155, 286], "phase2": [155, 286], "queue_mod": [155, 217, 286, 349], "gid2obj": [155, 156, 283, 286, 287], "spike_statist": [155, 156, 283, 286, 287], "nsendmax": [155, 156, 286, 287], "nsend": [155, 156, 286, 287], "nrecv": [155, 156, 286, 287], "nrecv_us": [155, 156, 286, 287], "max_histogram": [155, 283, 286], "maxspik": [155, 286], "max_spikes_sent_by_any_host": [155, 286], "nrn_spikebuf_s": [155, 286], "at_tim": [155, 217, 239, 247, 286, 349], "dae": [155, 217, 286, 349], "source_var": [155, 283, 286], "source_global_index": [155, 286], "1096": [155, 252, 286], "294dac40175f": [155, 286], "target_vari": [155, 286], "targetpointprocess": [155, 286], "source_vari": [155, 286], "setup_transf": [155, 283, 286], "inter": [155, 252, 286], "rootsect": [155, 286], "splitcell_connect": [155, 286], "host_with_other_subtre": [155, 286], "has_par": [155, 163, 286, 292, 295], "backbon": [155, 286], "milit": [155, 286], "forthcom": [155, 286], "anyon": [155, 286, 382], "elect": [155, 286], "favor": [155, 160, 252, 286, 292, 329], "shortest": [155, 197, 252, 286, 329], "gausian": [155, 286], "dereferenc": [155, 286, 337], "partit": [155, 245, 283, 286], "seclist": [155, 233, 286, 364], "thread_stat": [155, 283, 286], "thread_busywait": [155, 283, 286], "thread_how_many_proc": [155, 283, 286], "concurr": [155, 252, 286], "hardware_concurr": [155, 286], "hyperthread": [155, 286], "sec_in_thread": [155, 283, 286], "resid": [155, 286], "thread_ctim": [155, 283, 286], "ct": [155, 252, 286], "tid": [155, 286], "prcellstat": [155, 239, 283, 286], "precellst": [155, 286], "_suffix": [155, 286], "nrndat": [155, 286], "diagnos": [155, 286], "diff": [155, 241, 245, 286, 289, 371, 382], "nri": [155, 286], "netrec": [155, 220, 224, 286, 352, 356], "pnm": [156, 287], "285": [156, 252], "granular": [156, 197, 252, 287, 329], "signfic": [156, 287], "source_cell_gid": [156, 287], "target_cell_gid": [156, 287], "intent": [156, 160, 222, 287, 292, 354, 382], "128": [156, 197, 252, 287, 329], "ye": [156, 187, 239, 252, 287, 319, 391], "foolish": [156, 287], "round_robin": [156, 283, 287], "sprinkl": [156, 287], "lesser": [156, 164, 287], "meti": [156, 287], "prstat": [156, 283, 287], "neighbor": [156, 287], "register_cel": [156, 283, 287], "presuppos": [156, 287], "paragraph": [156, 197, 286, 287, 329], "ncstim": [156, 287, 387], "want_all_spik": [156, 283, 287], "spikevec": [156, 287], "1n": [156, 287], "2n": [156, 287], "gatherspik": [156, 283, 287], "machine_id": [156, 287], "create_cel": [156, 283, 287], "cellobject": [156, 287], "obexpr": [156, 287], "src_gid": [156, 287], "target_gid": [156, 287], "synapse_id": [156, 287], "is_point_process": [156, 211, 287, 343, 344], "src_id": [156, 287], "synapse_target_object": [156, 287], "gidvec": [156, 279, 287], "pinit": [156, 283, 287], "pcontinu": [156, 283, 287], "hostca": [156, 287], "hostpar": [156, 287], "fclamp": [157, 220, 272, 288, 352, 392], "fclampi": [157, 272, 288, 392], "fclampv": [157, 272, 288, 392], "prstim": [157, 272, 288, 392], "fsyn": [157, 288, 392], "pyobj": 158, "tradition": [158, 382], "gotcha": [158, 386], "__add__": [158, 392], "cabuf": [158, 377], "cabufi": 158, "multicompartmentreact": [158, 272, 289, 371, 372, 374], "set_solve_typ": [158, 272, 289], "interchang": [158, 289, 329, 392], "plasma": [158, 289, 371, 374], "er": [158, 252, 289, 371, 374], "rxdgeometri": [158, 289], "distributedboundari": [158, 289, 374], "fractionalvolum": [158, 289, 371, 374], "fixedcrosssect": [158, 289, 371], "fixedperimet": [158, 289, 371], "scalablebord": [158, 289], "changeabl": [158, 289], "ip3r": [158, 289, 374], "react": [158, 289, 371], "generalizedreact": [158, 289], "reactant_sum": [158, 289], "product_sum": [158, 289], "forward_r": [158, 289], "backward_r": [158, 289], "custom_dynam": [158, 289, 371, 375], "kf": [158, 289, 371, 378], "kb": [158, 289, 371, 373, 378], "ca_plus_buf": 158, "admittedli": [158, 159, 217, 291], "membrane_flux": [158, 289, 371], "constant_product": [158, 289], "dprotein": [158, 289], "live": [158, 211, 252, 289, 343], "border": [158, 228, 252, 289, 360], "scale_by_area": [158, 289], "acosh": [158, 289, 290], "asinh": [158, 289, 290], "copysign": [158, 289, 290], "expm1": [158, 289, 290], "lgamma": [158, 289, 290], "log1p": [158, 289, 290], "trunc": [158, 289, 290], "vtrap": [158, 289, 290, 376], "nodelist": [158, 272, 289], "_ref_concentr": [158, 289, 371, 375], "node_list": [158, 289], "nl": [158, 371], "__get__item": 158, "satifi": [158, 289], "new_node_list": [158, 289], "just_er": [158, 289], "jneuroml": [158, 289], "finer": [158, 289], "num_thread": [158, 289], "rxdexcept": [158, 272, 289], "__str__": [158, 392], "ste": [159, 291], "istat": [159, 291], "grotesqu": [159, 291], "tnext": [159, 291], "fteinit": [159, 291], "steps_per_m": [159, 291], "1353": [159, 291], "fa0eeb93b0fb": [159, 291], "881784197e": [159, 291], "30926389122e": [159, 291], "015625": [159, 291], "43225906488": [159, 291], "11022302463e": [159, 291], "exhibit": [159, 252, 291], "triggervar": [159, 291], "triggerthreash": [159, 291], "deactiv": [159, 252, 291], "isrcstat": [159, 291], "idestst": [159, 291], "triggerthresh": [159, 291], "hocref": 159, "subtleti": [159, 291], "earliest": [159, 217, 239, 291, 349], "_ref_v": [159, 208, 247, 250, 279, 280, 281, 285, 286, 291, 329, 340, 347, 376, 386, 387, 388, 392], "tevent": [159, 217, 291, 349], "delete_sect": [160, 161, 163, 199, 247, 272, 292, 295, 392], "section_exist": [160, 163, 272, 292, 295, 392], "section_own": [160, 272, 292, 392], "pointprocesss": 160, "reloc": [160, 171, 234, 235, 252, 292, 303, 366, 367], "sim1": [160, 292], "oddfactor": [160, 292], "sim2": [160, 292], "sim3": [160, 292], "issect": [160, 164, 272, 292, 392], "n1": [160, 292], "n2": [160, 292], "abz45": [160, 292], "sectionnam": [160, 164, 272, 292, 296, 392], "parent_sect": [160, 272, 292, 392], "parent_nod": [160, 272, 292, 392], "parent_connect": [160, 163, 272, 292, 295, 392], "section_orient": [160, 163, 272, 292, 295, 392], "permit": [161, 252, 293, 336, 382, 391, 392], "paramount": [161, 293], "pt3dconst": [161, 272, 292, 293, 392], "respecifi": [161, 293], "micron2": [161, 293], "cone": [161, 252, 293], "niceti": [161, 293], "nonlinearli": [161, 293], "sight": [161, 293], "66": [161, 252, 293, 391], "fewest": [161, 293], "suffic": [161, 293, 329, 388], "trapezoid": [161, 231, 252, 293, 363], "degener": [161, 252, 293], "curvatur": [161, 293], "simplist": [161, 293], "decoupl": [161, 252, 293], "dendrite_1": [161, 234, 293, 366], "pt3dstyle": [161, 272, 292, 293, 392], "buffers": [161, 293], "diam_shap": 161, "coincid": [161, 252, 293, 371], "pt3dinsert": [161, 272, 292, 293, 392], "pt3dremov": [161, 272, 292, 293, 392], "naiv": [161, 293], "ruin": [161, 293], "1e30": [161, 293], "1e20": [161, 293], "600": [161, 168, 230, 252, 300, 362], "700": [161, 166, 168, 191, 239, 298, 300, 323], "leaf": [162, 294], "allroot": [162, 292, 294], "printnam": [162, 202, 292, 294, 334], "sref": [163, 295], "section_pop": 163, "truepar": [163, 292, 295, 392], "has_truepar": [163, 292, 295], "nchild": [163, 292, 295], "is_ca": [163, 292, 295], "varnam": [164, 170, 174, 178, 199, 201, 208, 226, 232, 302, 306, 310, 331, 333, 340, 358], "push_sect": [164, 203, 234, 292, 296, 335, 366, 392], "resort": [164, 296], "perman": [164, 228, 360], "priviledg": [164, 246], "go_to": 164, "getloc": [164, 296], "section_nam": [164, 296], "this_sect": [164, 203, 296, 335, 341, 392], "corrupt": [164, 239, 296], "tilda": [165, 297], "err": [165, 297], "show_err_m": [165, 297], "outside_var": [165, 297], "unavail": [165, 297], "name1": [165, 297], "hoc_library_path": [165, 297], "descriptor": [165, 297, 391], "coredump": [166, 207, 298, 339], "nrn_fenableexcept": [166, 298], "previous_floating_point_mask": [166, 298], "sigfp": [166, 239, 298], "nan": [166, 187, 240, 289, 298], "inf": [166, 187, 197, 240, 298, 329, 330, 376], "ulimit": [166, 298], "unlimit": [166, 298], "mask": [166, 252, 298], "feenableexcept": [166, 239, 298], "message1": [166, 298], "message2": [166, 298], "cancel": [167, 168, 174, 184, 191, 207, 227, 228, 299, 300, 306, 316, 323, 339, 359, 360, 392], "ncard": [168, 300], "mkgraph": [168, 300], "xexpr": [168, 226, 358], "le": [168, 252, 300, 371], "ldot": [168, 300], "height": [168, 175, 191, 226, 300, 307, 323, 358, 391], "unmap": [168, 172, 226, 228, 232, 234, 300, 304, 311, 358, 360, 364, 366], "depict": [168, 300], "procedure_nam": [168, 226, 300, 358], "remove_last": [168, 300, 311], "move_last": [168, 300, 311], "scrollbox": [168, 178, 300, 310], "tile": [168, 300], "inset": [168, 300], "sea": [168, 300], "ismap": [168, 300, 311], "proc_nam": [168, 300], "stringn": [168, 300], "unreferenc": [168, 169, 279, 300, 301], "dismiss_act": [168, 300, 311], "owner": [168, 300], "grab": [168, 246, 300, 389], "start_siz": [168, 300], "narrow": [168, 252, 300], "full_request": [168, 300, 311], "990": [168, 197, 252, 300, 329], "pointgroupmanag": [168, 300], "980": [168, 252, 300], "900": [168, 265, 300], "templatenam": [169, 182, 301, 314], "insrt": [169, 197, 301, 311, 329, 330], "decrement": [169, 172, 202, 301, 304, 334], "strname": [169, 301], "scroll_po": [169, 301, 311], "select_act": [169, 173, 226, 301, 305, 311, 358], "accept_act": [169, 173, 301, 305, 311], "ivoc_styl": [170, 302, 311, 392], "xvalue_format": [170, 302], "7g": [170, 302], "helvetica": [170, 302], "medium": [170, 252, 302, 382], "menubar": [170, 178, 224, 302, 310, 356], "menuitem": [170, 302], "variable_domain": [170, 178, 194, 196, 302, 311, 392], "lower_limit": [170, 302, 310], "upper_limit": [170, 302, 310], "portabl": [170, 197, 220, 251, 302, 329, 352], "nrnglobalmechmenu": [171, 199, 303, 311, 331, 392], "nrnmechmenu": [171, 199, 303, 311, 331, 392], "vestigi": [171, 231, 303, 363], "nrnsecmenu": [171, 303, 311, 392], "nrnpointmenu": [171, 199, 303, 311, 331, 392], "pointprocessobject": [171, 303], "labelstyl": [171, 303], "vartyp": [171, 199, 303, 331], "leader": [172, 304, 311], "printabl": [172, 223, 228, 304, 355, 360], "is_map": [172, 304, 311], "iconifi": [172, 228, 304, 311, 360], "deiconifi": [172, 304, 311], "un": [172, 197, 304], "group_object": [172, 304], "oo": [172, 304], "save_sess": [172, 223, 224, 228, 304, 355, 356, 360, 392], "group_obj": [172, 304], "snap": [172, 304, 311], "snapshot": [172, 207, 304, 339, 365], "decor": [172, 304], "arrow": [172, 176, 178, 226, 228, 304, 308, 310, 358, 360], "filebrows": [172, 304], "window_plac": [172, 304, 311], "paper_plac": [172, 304, 311], "deco": [172, 304, 311], "printfil": [172, 226, 232, 234, 304, 311, 358, 364, 366], "postcript": [172, 207, 304, 339], "sb": [173, 305], "objet": 173, "plotwhat": [174, 224, 227, 306, 356, 359], "scobj": [174, 306], "readonli": [175, 307, 311], "tex": [176, 308], "vfe": [177, 309], "laid": [178, 310], "panel_scrol": [178, 228, 310, 360], "ont": 178, "telltal": [178, 310], "contigu": [178, 200, 217, 310, 332, 349], "car": [178, 310], "mutual": [178, 202, 228, 252, 310, 334, 360], "six": [178, 197, 252, 310, 329, 331, 385], "nextlin": [178, 310], "seven": [178, 252, 310], "recentdir": [178, 310], "walk": [178, 252, 310], "boolean_deflt": [178, 310], "boolean_canrun": [178, 310], "boolean_usepoint": [178, 310], "default_button": [178, 310], "kit": [178, 252, 310, 375], "push_button": [178, 310], "10th": [178, 197, 252, 310, 329], "send_cmd": 178, "vert": [178, 310], "stepper": [178, 228, 310, 360], "4th": [178, 215, 217, 310, 347, 349], "downsid": [178, 217, 310, 349], "current_unit": [178, 310], "units_on_flag": [178, 310], "obfunc": [180, 201, 208, 312, 333, 340, 392], "redirect": [180, 183, 213, 312, 315, 345], "plotter": [180, 183, 230, 312, 315, 362], "negat": [181, 313], "unequ": [181, 313], "objref1": [181, 313], "objref2": [181, 313], "strdef1": [181, 313], "strdef2": [181, 313], "obj1": [181, 313], "string1": [181, 212, 313, 344], "obj2": [181, 211, 313, 343], "string2": [181, 212, 313, 344], "subexpress": [181, 313], "vec1": [181, 197, 201, 313, 329, 333], "distil": [181, 313], "printsquar": [181, 313], "stmt3": [181, 201, 313, 333], "position": [181, 313], "dimension": [181, 193, 197, 200, 201, 226, 252, 313, 325, 329, 332, 333, 358, 371], "oi": [181, 252, 313], "mult": [181, 313], "o4": [181, 197, 226, 313], "argtyp": [181, 312, 313, 392], "ityp": [181, 313], "iarg": [181, 313], "nrn_dll": [182, 200, 208, 314, 332, 340], "name_declar": [182, 211, 314, 343, 392], "typeerror": [182, 208, 280, 314, 340, 387, 391], "unspecifi": [182, 314], "userproperti": [182, 314], "is_nam": [182, 211, 343, 344], "nrnmainmenu_": 182, "ldfile": 182, "hex": 182, "allobject": [182, 314, 392], "nref": [182, 314], "objectref": [182, 226, 282, 314], "fobj": [184, 316], "getnam": [184, 228, 315, 316, 360], "f1": [184, 228, 247, 316, 360], "f2": [184, 316], "f3": [184, 316], "stdin": [184, 316], "stderr": [184, 197, 316, 329, 330], "mktemp": [184, 315, 316], "writabl": [184, 316], "unlink": [184, 315, 316], "scanvar": [184, 187, 315, 316, 319], "scanstr": [184, 315, 316], "delimit": [184, 316], "pathnam": [184, 316], "isopen": [184, 315, 316], "unimpl": [184, 316], "courtesi": [184, 316], "zach": [184, 197, 316, 329], "mainen": [184, 197, 252, 316, 329, 397], "helmholtz": [184, 316], "sdsc": [184, 316], "fwrite": [184, 197, 222, 316, 329, 330, 354], "fread": [184, 197, 222, 316, 329, 330, 354], "laser": [185, 252, 317], "writer": [185, 216, 317, 348, 392], "hp": [185, 230, 317, 362], "pen": [185, 226, 230, 317, 358, 362], "hewlett": [185, 317], "packard": [185, 317], "sun": [185, 191, 252, 317, 323], "f2p": [185, 317], "codraw": [185, 317], "dra": [185, 317], "com1": [185, 230, 317, 362], "9600": [185, 317], "baud": [185, 317], "verb": [185, 230, 317], "autoexec": [185, 317], "dddd": [186, 318], "ddddd": [186, 318], "dddddde": [186, 318], "nn": [186, 252, 318], "octal": [186, 318], "justifi": [186, 318], "preci": [186, 318], "carriag": [186, 318], "feed": [186, 252, 318], "tpi": [186, 318], "141592654": [186, 318], "hoc_stdio": 186, "hoc_stdout": [186, 312, 315, 318, 392], "promptstr": [187, 319], "defaultchar": [187, 319], "charlist": [187, 319], "stewart": [187, 193, 230, 251, 252, 319, 325, 362], "jaslov": [187, 230, 319, 362, 376], "shall": [187, 245, 319, 382, 383, 385], "ny": [187, 232, 251, 252, 319, 364], "3e4": [187, 319], "not45": [187, 319], "13000": [187, 319], "170": [187, 252], "nano": [187, 252], "nanotub": [187, 252], "ni": [187, 368], "infi": 187, "130": [187, 252], "3e": 187, "4e": 187, "5e5": 187, "6e": 187, "4xxx5": 187, "diagnost": [187, 188, 191, 230, 319, 320, 323, 362], "infil": [188, 320], "ndat": [188, 319, 320], "successfulli": [188, 320, 354, 378, 389, 392], "outfil": [188, 320], "hocfil": [188, 200, 320, 332], "rcsrevis": [188, 200, 320, 332], "unaffect": [188, 200, 320, 332], "14159265358979323846": [189, 321], "71828182845904523536": [189, 321], "57721566490153286060": [189, 321], "29577951308232087680": [189, 321], "61803398874989484820": [189, 321], "96484": [189, 321], "56": [189, 252, 279, 321, 387, 391], "31441": [189, 247, 321], "eqinit": [190, 201, 322, 330, 333, 392], "extrapol": [191, 197, 323, 329], "deem": [191, 323], "690": 191, "710": [191, 252], "trigonometr": [191, 323], "triangl": [191, 197, 226, 323, 329, 358], "hypotenus": [191, 323], "int_": [191, 323], "d2line": [192, 324, 330], "xpoint": [192, 324], "ypoint": [192, 324], "xline0": [192, 324], "yline0": [192, 324], "xline1": [192, 324], "yline1": [192, 324], "d2line_seg": [192, 324, 330], "feround": [192, 324, 330], "lastmod": [192, 324], "fe_downward": [192, 324], "fe_tonearest": [192, 324], "fe_towardzero": [192, 324], "fe_upward": [192, 324], "unduli": [192, 324], "test_round": [192, 324], "1000000": [192, 213], "17lf": [192, 324], "mobj": [193, 325], "nrow": [193, 325, 330], "ncol": [193, 325, 330], "irow": [193, 325], "icol": [193, 325], "mout": [193, 325], "vobj": [193, 325], "mfull": [193, 325], "scaffold": [193, 197, 252, 325], "mspars": [193, 325], "mband": [193, 325], "meschach": [193, 325], "mulv": [193, 325, 330], "ocmatrix": [193, 325], "mx": [193, 325], "guard": 193, "getval": [193, 205, 325, 330, 337], "msrcdest": [193, 325], "setcol": [193, 325, 330], "mdest": [193, 325], "msrc": [193, 325], "bcopi": [193, 325, 330], "j0": [193, 325], "j1": [193, 325], "submatrix": [193, 325], "col": [193, 325, 376], "jcol": [193, 325], "sprowlen": [193, 325, 330], "spgetrowv": [193, 325, 330], "jx": [193, 325], "sparse_print": [193, 325], "element_format": [193, 325], "row_format": [193, 325], "8g": [193, 277, 325], "fileobj": [193, 197, 325, 329], "file_object": [193, 325], "mcol": [193, 325], "permut": [193, 286, 325], "getrow": [193, 325, 330], "getcol": [193, 325, 330], "getdiag": [193, 325, 330], "diag": [193, 325], "vx": [193, 325], "vb": [193, 325], "lu": [193, 252, 325], "lufactor": [193, 325], "setdiag": [193, 325, 330], "475": [193, 325], "525": [193, 252, 265, 325], "499": [193, 325], "535": [193, 252, 325], "det": [193, 325, 330], "mantissa": [193, 325], "base10expon": 193, "mant": [193, 325], "mulm": [193, 325, 330], "5f": [193, 325], "m1srcdest": [193, 325], "m2src": [193, 325], "setrow": [193, 325, 330], "mrow": [193, 325], "minv": [193, 325], "svd": [193, 325, 330], "dvec": [193, 197, 293, 325, 329], "umat": [193, 325], "vmat": [193, 325], "decomposit": [193, 325], "ut": [193, 325], "dmat": [193, 325], "svdtest": [193, 325], "transpos": [193, 325, 330, 392], "setrand": [193, 196, 197, 232, 325, 328, 329, 330, 364], "symmeig": [193, 325, 330], "veigenvalu": [193, 325], "symmetr": [193, 325], "qt": [193, 252, 325], "to_vector": [193, 233, 325, 330, 365], "jth": [193, 201, 325, 333], "from_vector": [193, 233, 325, 330, 365], "cholesky_factor": 193, "choleski": 193, "triangular": 193, "ltranspos": 193, "cf": 193, "cholesky_solv": 193, "highindex": [194, 196, 326, 328], "64bit": [194, 326], "cryptograph": [194, 196, 326, 328], "uniformli": [194, 326], "lowindex": [194, 196, 326, 328], "mcell_ran4_init": [194, 196, 326, 328, 330, 392], "replai": [194, 252, 326], "tom": [194, 326, 391], "bartol": [194, 252, 326], "salk": [194, 197, 326], "mcell": [194, 196, 252, 326, 328], "ran4": [194, 196, 326, 328], "fear": [194, 252, 326], "fastest": [194, 224, 231, 326, 356, 363], "million": [194, 326], "1ghz": [194, 326], "piii": [194, 326], "rs6000": [194, 326], "mip": [194, 326], "g1": [194, 196, 197, 304, 326, 328, 329], "g2": [194, 196, 197, 304, 326, 328, 329], "hist": [194, 196, 197, 252, 326, 328, 329, 330], "doit": [194, 196, 328], "use_mcell_ran4": [194, 326, 330, 392], "scop_random": [194, 326], "congruenti": [194, 196, 326, 328], "exprand": [194, 326], "normrand": [194, 326], "poisrand": [194, 326], "set_se": [194, 326], "previous_lowindex": [194, 326], "scop_rand": [194, 326], "random123_globalindex": [194, 196, 326, 328], "gotten": [195, 197, 327, 329], "deviat": [196, 197, 328, 329], "acg": [196, 328], "versatil": [196, 252, 328], "34bit": [196, 328], "thesalmon": [196, 328], "random123sc11": [196, 328], "knuth": [196, 328], "iii": [196, 252, 328], "fibonacci": [196, 328, 391], "55": [196, 197, 247, 251, 252, 280, 289, 293, 328, 329, 365, 376, 391], "1244": [196, 328], "2440": [196, 252, 328], "mlcg": [196, 328], "seed1": [196, 328], "seed2": [196, 328], "id1": [196, 328], "id2": [196, 328], "id3": [196, 328], "philox4x32": [196, 328], "crypotgraph": [196, 328], "uint32": [196, 328], "currenthighindex": [196, 328], "sethighindex": [196, 328], "idum": [196, 328], "varianc": [196, 197, 252, 328, 329], "lognorm": [196, 328], "binomi": [196, 328], "trial": [196, 197, 252, 328, 329], "resampl": [196, 197, 328, 329, 330], "hypergeo": [196, 328], "hypergeometr": [196, 328], "erlang": [196, 328], "weibul": [196, 328], "beta": [196, 252, 289, 328, 376, 383, 384], "institut": [197, 252], "10010": 197, "torrei": 197, "pine": 197, "rd": [197, 329], "la": [197, 245, 252], "jolla": 197, "92037": 197, "python_iter": [197, 329], "vsrcdest": [197, 329], "elabor": [197, 374, 382], "s4": [197, 329], "linspac": [197, 293, 329, 381, 391], "superior": [197, 252], "shrink": [197, 329], "buffer_s": [197, 329, 330], "new_siz": [197, 329], "forgiv": [197, 329], "violat": [197, 226, 329, 358], "unhandl": [197, 329], "growth": [197, 252, 329], "point_process_object": [197, 216, 329, 348], "varvar": [197, 329], "vrecord": [197, 329], "indices_of_discontinuities_vector": [197, 329], "benefici": [197, 217, 329, 349], "implic": [197, 252, 329, 371, 374, 397], "piecewis": [197, 329], "varstart": [197, 329], "495": [197, 252, 329], "vec2": [197, 329], "ten": [197, 210, 252, 329], "31st": [197, 252, 329], "32nd": [197, 329], "33rd": [197, 329], "dest_start": [197, 329], "src_start": [197, 329], "src_end": [197, 329], "dest_inc": [197, 329], "src_inc": [197, 329], "vsrcdestindex": [197, 329], "vsrcindex": [197, 329], "vdestindex": [197, 329], "dest": [197, 286, 329], "vsrcx": [197, 329], "shuffl": [197, 329], "newvec": [197, 208, 329, 340], "srcstart": [197, 329], "srcend": [197, 329], "cl": [197, 226, 252, 289, 329, 330, 358, 371], "predat": [197, 252, 329], "from_doubl": [197, 329, 330], "px": [197, 329], "vsourc": [197, 329], "opstr": [197, 329], "value1": [197, 329], "op2str": [197, 329], "value2": [197, 329], "indvwher": [197, 329, 330], "indwher": [197, 329, 330], "vd": [197, 329], "spark": [197, 329], "argment": [197, 329], "sparc": [197, 329], "uncompress": [197, 329], "decompress": [197, 329], "format_str": [197, 329], "4f": [197, 329], "0000": [197, 244, 329], "9000": [197, 329], "presiz": [197, 329], "scantil": [197, 329, 330], "1e15": [197, 329], "graphobj": [197, 329, 337], "x_vec": [197, 329, 337], "x_increment": [197, 329, 337], "rapid": [197, 252, 329, 337], "anim": [197, 252, 329, 337, 378], "disturb": [197, 222, 247, 329, 354], "ploterr": [197, 329, 330], "err_vec": [197, 329], "seraph": [197, 329], "1point": [197, 329], "errvec": [197, 329], "250": [197, 226, 252, 329, 358], "x_vector": [197, 329], "newvect": [197, 329], "manhattan": [197, 329], "sumgauss": [197, 329, 330], "weight_vec": [197, 329], "vectobj": [197, 329], "smhist": [197, 329, 330], "convolv": [197, 329], "varsiz": [197, 329], "varstep": [197, 329], "vindex": [197, 329], "fiftieth": [197, 329], "sixtieth": [197, 329], "addrand": [197, 329, 330], "randobj": [197, 329], "msec": [197, 329], "sq": [197, 329], "320": [197, 239, 252, 329], "to_python": [197, 208, 247, 250, 329, 330, 340], "pythonlist": [197, 329], "numpyarrai": [197, 329], "from_python": [197, 208, 329, 330, 340], "as_numpi": [197, 250, 329, 330, 358], "data_vec": [197, 329], "fit_vec": [197, 329], "fcn": [197, 329], "indep_vec": [197, 329], "p2": [197, 375], "simplex": [197, 224, 329, 356], "tunabl": [197, 329], "reiter": [197, 252, 329], "wild": [197, 239, 329], "exp1": [197, 329], "exp2": [197, 329], "funfit": [197, 329], "ivec": [197, 329], "ysrcdest": [197, 329], "xdest": [197, 329], "xsrc": [197, 329], "ydest": [197, 329], "ysrc": [197, 329], "xd": [197, 329], "yd": [197, 329], "eleven": [197, 329], "385": [197, 252, 329], "87": [197, 252, 329, 382], "455": [197, 329, 389], "925": [197, 252, 329, 388], "501": [197, 252, 329, 365], "00000": [197, 329], "33835": [197, 329], "33333": [197, 329], "6867": [197, 329], "6666": [197, 329], "04505": [197, 329], "4134": [197, 329], "3333": [197, 329], "median": [197, 252, 329, 330], "medfltr": [197, 329, 330], "2nd": [197, 247, 252, 329], "rebin": [197, 329, 330], "trio": [197, 329], "vec3": [197, 329], "sumsq": [197, 329, 330], "stdev": [197, 329, 330], "sem": [197, 252, 329], "inner": [197, 329, 374], "mag": [197, 329, 330], "meansqerr": [197, 329, 330], "fft": [197, 329, 330], "recip": [197, 244, 329], "autocorrel": [197, 329], "convlv": [197, 329, 330], "convolut": [197, 329], "deconvolut": [197, 252, 329], "countup": [197, 329], "countdown": [197, 329], "spctrm": [197, 329, 330], "spectral": [197, 252, 329], "g3": [197, 329], "setup_gui": 197, "sinusoid": [197, 252, 329], "higest": [197, 329], "love": [197, 329], "imaginari": [197, 329], "spectra": [197, 252, 329], "spectrum": [197, 252, 329], "vt_src": [197, 329], "vfr_dest": [197, 329], "vfi_dest": [197, 329], "vt_dest": [197, 329], "vfr_src": [197, 329], "vfi_src": [197, 329], "freqenc": [197, 329], "vtsrc": [197, 329], "vt": [197, 208, 329, 340], "vfr": [197, 329], "vfi": [197, 329], "g4": [197, 329], "b1": [197, 329], "trigavg": [197, 329, 330], "spikebin": [197, 329, 330], "psth": [197, 329, 330], "vmeanfreq": [197, 329], "vsrchist": [197, 329], "mislead": [197, 318, 329], "f_mean": [197, 329], "widen": [197, 252, 329], "_second_": [197, 329], "binwidth": [197, 329], "_milliseconds_": [197, 329], "superimpos": [197, 329], "sum_": [197, 329], "acknowledg": [197, 329], "vecsiz": [197, 329], "minsum": [197, 329], "spuriou": [197, 252, 329], "fourier": [198, 330], "nonlinear": [198, 217, 248, 252, 330, 349], "ms1": [199, 331], "ms2": [199, 331], "msname": [199, 331], "pname": [199, 331], "ptype": [199, 331], "change_pa": [199, 331], "arrayindex": [199, 331], "1e300": [199, 331], "offici": [200, 243, 245, 250, 332], "docstr": [200, 332, 391, 392], "load_mechan": [200, 208, 332, 340], "myobj": [200, 332], "hocerror": [200, 208, 332, 340], "hocobject": [200, 208, 332, 340, 392], "format_except": [200, 208, 332, 340], "tb": [200, 332], "traceback": [200, 332], "nrnpyerr_str": [200, 332], "py_doc": [200, 332], "simctrl": [200, 332], "new_hoc_class": [200, 208, 332, 340], "new_point_process": [200, 208, 332, 340], "printpath": [200, 332], "ctype": [200, 293, 332], "nrn_dll_sym": [200, 208, 293, 332, 340], "c_int": [200, 293, 332], "nrn_dll_sym_nt": [200, 208, 332, 340], "libnrnpython1013": [200, 332], "numpy_element_ref": [200, 208, 300, 329, 332, 340], "numpy_arrai": [200, 332], "ndarrai": [200, 332], "kwarg": [200, 332, 375], "register_savest": [200, 208, 332, 340], "uuid": [200, 332], "bytestr": [200, 332], "exitonerror": [200, 332], "test_rxd": [200, 208, 332, 340], "crxd": [200, 289, 332, 378, 380], "helpdict": [201, 333], "netscap": [201, 228, 333, 360], "unaccept": [201, 333], "stm2": [201, 333], "numel": [201, 333], "bye": [201, 333], "varn": [201, 333], "exprn": [201, 333], "4y": [201, 333], "tobj": [201, 333], "stringnam": [201, 333], "pvar": [201, 333], "synpr": [201, 333], "soma1": [201, 333], "syn1": [201, 333], "synp": [201, 333], "axon2": [201, 333], "global_ra": [202, 334], "ra_valu": [202, 334], "objectvari": [202, 334], "refcount": [202, 334], "demothi": [202, 334], "this_nod": [203, 335, 341, 392], "segnum": 203, "unsaf": [203, 314, 335], "prt": [204, 336], "variablenam": [204, 336], "margin": [204, 217, 336, 349], "pv": [205, 252, 337], "pset": [205, 337], "ptr_update_callback": [205, 337], "newsiz": [205, 337], "var_val": [205, 337], "srcvec": [205, 337], "destvec": [205, 337], "hoc_stat": [205, 337], "pythoncallback": [205, 337], "pickvector": [206, 224, 226, 338, 356, 358], "hoc_cross_x_": [206, 228, 312, 338, 360, 392], "hoc_cross_y_": [206, 228, 312, 338, 360, 392], "reproduct": [207, 252, 339], "morph": [207, 339], "regrett": [207, 339], "failsaf": [207, 339], "disk": [207, 339, 382], "audit": [207, 245, 339], "recapitul": [207, 339], "excruci": [207, 339], "nrnmainmenu": [207, 224, 339, 356], "checkout": [207, 245, 339, 368, 383, 384], "archiveandhardcopi": [207, 339], "print_cmd": [207, 228, 339, 360], "lock": [207, 252, 339], "anywai": [207, 339, 382], "checkin": [207, 224, 339, 356], "microemac": [207, 339], "newest": [207, 339], "cat": [207, 216, 244, 247, 252, 339, 348], "postscriptfil": [207, 339], "lp": [207, 226, 339], "she": [207, 339], "envis": [207, 339], "lib64": 208, "incess": 208, "nrn_load_dll": [208, 213, 345, 392], "python_stat": [208, 340], "tripl": [208, 340, 391], "toplevelhocinterpret": 208, "goodby": [208, 340], "chgstr": [208, 340], "chgval": [208, 340], "chgobj": [208, 340], "_ref_": [208, 329, 340, 392], "_ref_i_pa": [208, 340], "minimalist": [208, 340, 382], "newlist": [208, 340], "apnd": [208, 340], "irksom": 208, "anyclass": [208, 340], "myvector": [208, 340], "hclass": [208, 340], "zzz": [208, 340], "baseattr": [208, 340, 386, 392], "mysect": [208, 340], "_ref_hocvar": [208, 281, 340], "pointer_nam": [208, 280, 281, 340], "point_proces_object": [208, 281, 340], "mechanism_object": [208, 280, 281, 340], "tstpnt1": [208, 280, 340], "tstpnt2": [208, 280, 340], "hoc_ac": [208, 340], "double_valu": [208, 340], "asec": [208, 340], "anticip": [208, 252, 340], "0x2a96982108": 208, "pysec_2a96982108": 208, "sr": [208, 340], "compactli": [208, 340], "childsec": [208, 340], "parentsec": [208, 340], "parentx": [208, 340, 392], "childx": [208, 340], "parentseg": [208, 272, 292, 295, 340, 349, 392], "python_avail": [208, 340], "ev": [208, 340], "eval": [208, 243, 244, 297, 314, 340], "tup": [208, 340], "helloworld": [208, 340], "xyz": [208, 340, 382], "2th": [208, 340], "__getitem__": [208, 340, 392], "dg": [208, 340], "lf": [210, 342], "30000001": 210, "0xff": [210, 342], "ff": 210, "75": [210, 252, 280, 293, 342, 391], "987654321": [210, 342], "15g": 210, "lc": 210, "5c": 210, "pollut": [211, 343], "strobj": [211, 343], "regexp": [211, 343], "tail": [211, 343, 344], "alias_list": [211, 343, 344], "sf": [211, 343], "lexicograph": [212, 344], "chdir": [213, 345, 392], "getcwd": [213, 345, 392], "neurohom": [213, 345], "hostnam": [213, 345], "unix_mac_pc": [213, 345, 392], "darwin": [213, 345], "versionstr": 213, "majorstr": [213, 345], "36": [213, 251, 252, 279, 345, 386, 391, 392], "296": [213, 252, 345], "ff4976021aae": [213, 345], "nobann": [213, 345], "twophase_multisend": [213, 345], "534": [213, 252, 345], "2160ccb31406": [213, 345], "triplet": [213, 345], "progam": [213, 345], "winexec": [213, 345], "exitcod": [213, 345], "cmdstr": [213, 345], "stdout_str": [213, 345], "cygwin": [213, 345, 368], "nrnsy": [213, 345], "tmpdos2": [213, 345], "tmpdos1": [213, 345], "stopwatch": [213, 345], "gettimeofdai": [213, 345], "dll_file_nam": [213, 345], "show_winio": [213, 345, 392], "movierun": [214, 346], "nstep": 214, "istep": 214, "tstep": [215, 347], "gbyte": [216, 348], "bbss": [216, 348], "restore_test": [216, 348], "save_test": [216, 348], "save_test_bin": [216, 348], "restore_test_bin": [216, 348], "vitiat": [216, 348], "vector_play_init": [216, 348], "frecord": [216, 348], "xdir": [216, 348], "xval": [216, 348], "apriori": [216, 348], "out2in": [216, 348], "sed": [216, 348], "wc": [216, 348], "assoc": [216, 348], "ppobj": [216, 348], "januari": [217, 349], "peter": [217, 252, 349], "aaron": [217, 349], "collier": [217, 349], "keith": [217, 349], "alan": [217, 349], "steve": [217, 349], "lee": [217, 252, 349], "radu": [217, 349], "dan": [217, 252, 349], "shumak": [217, 349], "carol": [217, 349], "woodward": [217, 349], "use_daspk": [217, 349], "rtol": [217, 349], "hoc_channel": 217, "hoc_ev": 217, "catchal": [217, 349], "use_mxb": [217, 349], "current_method": [217, 349], "tout": [217, 349], "spike_stat": [217, 349], "selfev": [217, 349], "net_send": [217, 220, 247, 349, 352], "net_mov": [217, 349], "print_event_queu": [217, 349], "event_queue_info": [217, 349], "flagvec": [217, 349], "free_event_queu": [217, 349], "tqitempool": [217, 349], "selfeventpool": [217, 349], "selfqueu": [217, 349], "netcvodethreaddata": [217, 349], "doublearraypool": [217, 349], "datumarraypool": [217, 349], "atolscale_for_st": [217, 349], "tol": [217, 349], "tolerancemultipli": [217, 349], "trigksyn": 217, "atoltool": [217, 349], "state_suffix": [217, 349], "pointprocessnam": [217, 349], "adam": [217, 252, 349, 393], "bashforth": [217, 349], "maxord": [217, 349], "dest_vector": [217, 349], "dstate": [217, 349], "ypvec": [217, 349], "statenam": [217, 349], "yscatter": [217, 349], "ygather": [217, 349], "fixed_step": [217, 349], "error_weight": [217, 349], "acor": [217, 349], "dest_str": [217, 349], "ltr": 217, "rangevar": [217, 232, 233, 364, 365], "record_remov": [217, 349], "continuefor": [217, 349], "lvardt": [217, 349], "meanwhil": [217, 349], "minstep": [217, 349], "hmin": [217, 349], "maxstep": [217, 349], "hmax": [217, 349], "debug_ev": [217, 349], "use_long_doubl": [217, 349], "booelan": [217, 349], "precondit": [217, 349], "krylov": [217, 349], "1or2": [217, 349], "dae_init_dtep": [217, 349], "heurist": [217, 239, 349], "dtep": [217, 349], "parasit": [217, 349], "neighborhood": [217, 251, 252, 349], "simgraph_remov": [217, 349], "state_magnitud": [217, 349], "maxstat": [217, 349], "maxacor": [217, 349], "modeltyp": [217, 349], "use_sparse13": [217, 349], "methodtyp": [217, 349], "localtyp": [217, 349], "simuat": 217, "store_ev": [217, 349], "tq": [217, 349], "exper": [217, 349], "use_fixed_step_bin_queu": [217, 349], "use_self_queu": [217, 349], "splai": [217, 349], "outstand": [217, 222, 349, 354], "impact": [217, 252, 349, 382], "queu": [217, 349], "hubert": [217, 252, 349], "eichner": [217, 251, 252, 349], "eichnerh": [217, 349], "tum": [217, 349], "icur": [217, 349], "nicolson": [217, 220, 349, 352], "m_": [217, 349], "provis": [217, 252, 349], "huge": [217, 349], "concomit": [217, 349], "istim": [217, 349], "on_valu": [217, 349], "t_threshold": [217, 349], "makefamili": [218, 350], "numberstep": [218, 350], "stringchoos": [218, 350], "regularli": [218, 221, 252, 350, 353, 382], "stop_run": [218, 350], "atendofact": [218, 350], "cont": [218, 251, 252, 350], "candid": [218, 221, 252, 350, 383, 384], "gathervalu": [218, 350], "rudimentari": [218, 226, 350, 358], "5dt": [220, 224, 352, 356], "whichev": [220, 352], "il_hh": [220, 352, 392], "fmatrix": [220, 352, 392], "coeefici": 220, "nodea": [220, 352], "nodeb": [220, 352], "noderh": [220, 352], "damp": [220, 352], "bypass": [220, 352], "centigrad": [220, 352], "gracefulli": [220, 352], "oscilloscop": [221, 353], "ivochelp": [222, 354], "writehoc": [222, 354], "print_sess": [223, 224, 228, 355, 356, 360, 392], "useprint": [223, 355], "useselect": [223, 355], "pipe": [223, 243, 355], "saveabl": [223, 224, 355, 356], "saveal": [223, 355], "execcommand": [224, 356], "gathervec": [224, 356], "vecwrap": [224, 356], "perus": [224, 356], "nrnmac": [224, 356], "netbuild": [224, 356], "dramat": [224, 239, 356], "fieldeditor": [224, 356], "morphoelectron": [224, 356], "prjnrnpr": [224, 356], "windowgroup": [224, 356], "scalex": [225, 226, 357, 358], "scalei": [225, 226, 357, 358], "new_path": [225, 357], "move_to": [225, 357], "line_to": 225, "curve_to": [225, 357], "y1": [225, 226, 357, 358], "y2": [225, 357], "close_path": [225, 357], "radiu": [225, 226, 247, 357, 358, 387, 388, 389], "colorindex": [225, 226, 234, 357, 358, 366], "brushindex": [225, 226, 357, 358], "control_point": 225, "cpt": [225, 252, 357], "fixtyp": [225, 226, 357, 358], "glyphobject": [225, 226, 357, 358], "gif": [225, 226, 357, 358], "xmin": [226, 358], "xmax": [226, 358], "ymin": [226, 358], "ymax": [226, 358], "xaxi": [226, 358], "xstart": [226, 230, 358, 362], "xstop": [226, 230, 358, 362], "ypo": [226, 358], "ntic": [226, 358], "nminor": [226, 358], "shownumb": [226, 358], "yaxi": [226, 358], "ystart": [226, 230, 358, 362], "ystop": [226, 230, 358, 362], "tic": [226, 230, 358, 362], "3333333": [226, 358], "xpo": [226, 358], "color_index": [226, 358], "brush_index": [226, 358], "_ref_rangevar": [226, 349], "addobject": [226, 233, 358, 365], "usepoint": [226, 358], "fastflush": [226, 232, 358, 364], "graphlin": [226, 358], "450": [226, 230, 252, 358, 362], "pl": [226, 358], "getlin": [226, 358], "thisindex": [226, 358], "previndex": [226, 358], "xline": [226, 358], "yline": [226, 358], "line_info": [226, 358], "polylin": [226, 358], "erase_al": [226, 232, 234, 358, 364, 366], "dbl": [226, 358], "view_equal_plot": 226, "x_align": [226, 358], "y_align": [226, 358], "vfix": [226, 358], "colornam": [226, 358], "violet": [226, 230, 358, 362], "thinnest": [226, 358], "default_brush": [226, 358], "changecolor": [226, 358], "mleft": [226, 234, 358, 366], "mbottom": [226, 234, 358, 366], "mwidth": [226, 234, 358, 366], "mheight": [226, 234, 358, 366], "wleft": [226, 358], "wtop": [226, 358], "wwidth": [226, 358], "wheight": [226, 358], "crosshair_act": [226, 228, 358, 360], "vectorflag": [226, 358], "keypress": [226, 228, 358, 360], "y_objectref": [226, 358], "menu_tool": [226, 232, 234, 358, 364, 366], "view_count": [226, 232, 234, 358, 364, 366], "flush_list": [226, 234, 358, 366], "menu_remov": [226, 358], "menu_act": [226, 232, 234, 358, 364, 366], "telltalegroup": [226, 358], "radioitem": [226, 358], "keystat": [226, 234, 358, 366], "meta": [226, 234, 252, 358, 366], "wg": [226, 358], "hg": [226, 339, 358], "xg0": [226, 358], "yg0": [226, 358], "xg1": [226, 358], "yg1": [226, 358], "xv": [226, 358], "377x420": [226, 358], "225x279": [226, 358], "377": [226, 252, 358], "420": [226, 252, 358], "279": [226, 252, 358], "225": [226, 252, 358, 371], "coodin": [226, 358], "view_info": [226, 358], "model_coord": [226, 358], "view_siz": [226, 358], "simgraph": [226, 358], "makegraph": [227, 359], "minf_hh": [227, 359, 392], "setview": [227, 359], "inward": [227, 247, 252, 359], "proflig": [228, 360], "freeli": [228, 252, 360], "openlook": [228, 360], "motif": [228, 252, 360], "dismissbutton": [228, 360], "wield": [228, 360], "tempstr": [228, 360], "pushbutton": [228, 360], "statebutton": [228, 310, 360], "lieu": [228, 340, 360], "decad": [228, 360, 389], "autorepeatstart": [228, 360], "autorepeatdelai": [228, 360], "redisplai": [228, 360], "pwm_help": [228, 360], "dialogu": [228, 360], "polish": [228, 360], "plp": [228, 360], "pwm_postscript_filt": [228, 360], "temp_filenam": [228, 360], "printer_command": [228, 360], "ault": [228, 360], "prn": [228, 360], "lmb": [228, 360], "hair": [228, 252, 360], "maxima": [228, 360], "radiomenu": [228, 360], "cbwidget": [228, 360], "felt": [229, 361], "inrang": [230, 362], "5x3": [230, 362], "xorg": [230, 232, 234, 362, 364, 366], "xsize": [230, 232, 362, 364], "yorg": [230, 232, 234, 362, 364, 366], "ysize": [230, 232, 362, 364], "nticx": [230, 362], "ntici": [230, 362], "3rd": [230, 252, 362], "6th": [230, 362], "plotsin": 230, "colorv": [230, 362], "tektronix": [230, 362], "4010": [230, 362], "780": [230, 362], "turbo": [230, 362], "vga": [230, 362], "ega": [230, 362], "cga": [230, 362], "hercul": [230, 362], "hp7475": [230, 362], "cyan": [230, 362], "magenta": [230, 362], "550": [230, 362], "adaptor": [230, 362], "kill": [230, 362], "tamper": [231, 363], "schemat": [231, 234, 363, 366], "decent": [231, 363], "commut": [231, 363], "veloc": [231, 252, 363], "occlud": [231, 363], "purpl": [231, 363], "colorbar": [231, 363], "hinton": [232, 364], "push_select": [232, 234, 364, 366], "color_list": [232, 234, 364, 366], "color_al": [232, 234, 364, 366], "colormap": [232, 364], "nx": [232, 364], "len_scal": [232, 234, 364, 366], "scl": [232, 234, 364, 366], "zorg": [232, 234, 364, 366], "xrad": [232, 234, 364, 366], "yrad": [232, 234, 364, 366], "zrad": [232, 234, 364, 366], "rangvarplot": [233, 365], "sleft": [234, 366], "swidth": [234, 366], "sheight": [234, 366], "mright": [234, 366], "mtop": [234, 366], "1st": [234, 252, 366], "2d": [234, 289, 366], "point_mark": [234, 366], "objvar": [234, 366], "yichun": [234, 366], "wei": [234, 252, 366], "yichunw": [234, 366], "usc": [234, 366], "point_mark_remov": [234, 366], "pointmark": [234, 366], "ss": [234, 366], "uncom": 236, "750": [237, 252], "pkg": [237, 243, 244, 250], "troubleshoot": 237, "ebrain": 237, "dnrn": [238, 243], "genhtml": 238, "coverage_flag": 238, "fno": [238, 239, 243], "inlin": [238, 239, 274, 370, 371, 380, 386, 387, 388, 392], "gdca": 238, "tracefil": 238, "dnrn_enable_coverag": 238, "disorgan": 239, "inspir": [239, 252], "slowdown": 239, "llvm": 239, "divbyzero": 239, "pyenv": 239, "bt": 239, "osrc_": 239, "proven": 239, "pythonmalloc": 239, "47683": 239, "memcheck": 239, "gpl": 239, "julian": 239, "seward": 239, "libvex": 239, "rerun": [239, 370, 375, 387], "heap": 239, "988": [239, 252], "809": 239, "971": [239, 252], "344": [239, 252], "541": [239, 252], "095": 239, "055": [239, 252], "991": 239, "520": [239, 251, 252], "659": [239, 252], "446": [239, 252], "reachabl": 239, "014": [239, 252], "639": [239, 252], "newarrai": 239, "suppress": [239, 252], "vgdb": 239, "31925": 239, "pid": 239, "asan": 239, "lsan": 239, "ubsan": 239, "catch": [239, 252, 314], "widespread": [239, 252, 382], "ubiquit": 239, "fsanit": 239, "xxx": 239, "san_opt": 239, "1842": [239, 252], "nrn_sanit": 239, "dnrn_sanit": 239, "llvm_symbolizer_path": 239, "symlink": 239, "preload": 239, "ld_preload": 239, "supp": 239, "dcorenrn_sanit": 239, "nmodl_sanit": 239, "incur": 239, "5x": 239, "15x": 239, "10x": 239, "test_nam": 239, "nogui": [239, 265], "nopython": 239, "2572": 239, "0x7b3c00000bf0": 239, "savulesc": 239, "workspac": [239, 246], "nrncvode": 239, "cvodeobj": 239, "751": [239, 252], "0x38673e": 239, "cvodestb": 239, "0x389e27": 239, "_nrn_current__iclamp": 239, "0x5b8f02": 239, "_nrn_cur__iclamp": 239, "306": [239, 252], "0x5b9236": 239, "rhs_memb": 239, "cvmemblist": 239, "cvtrset": 239, "68": [239, 251, 252, 280, 293, 364, 391], "0x38a0eb": 239, "rh": [239, 371], "0x38a2f6": 239, "fun_thread_transfer_part2": 239, "occvod": 239, "671": [239, 252], "0x3bbbf1": 239, "fun_thread": 239, "0x3bd049": 239, "f_thread": 239, "1532": 239, "0x384f45": 239, "slave_main": 239, "337": [239, 252], "0x5157ee": 239, "753": [239, 252], "0x386759": 239, "profiler_interfac": 239, "likwid": 239, "craypat": 239, "comparis": 239, "phase_begin": 239, "phase_end": 239, "instrumentor": 239, "critical_region": 239, "dnrn_enable_profil": 239, "dnrn_profil": 239, "dcorenrn_enable_caliper_profil": 239, "dcorenrn_enable_unit_test": 239, "cmake_prefix_path": 239, "cali_config": 239, "calc": 239, "0a": [239, 243, 244, 382, 383], "693": [239, 252], "gabe0abaac": 239, "magkanar": 239, "abe0abaac": 239, "avg": 239, "145432": 239, "648498": 239, "000002": 239, "001370": 239, "142800": 239, "845079": 239, "030670": 239, "014766": 239, "001479": 239, "013395": 239, "002913": 239, "995957": 239, "002908": 239, "992531": 239, "003067": 239, "101477": 239, "003941": 239, "700332": 239, "cur": 239, "002994": 239, "051458": 239, "006994": 239, "792216": 239, "062940": 239, "125835": 239, "003172": 239, "173421": 239, "007137": 239, "890198": 239, "007100": 239, "864846": 239, "003138": 239, "150125": 239, "003269": 239, "239885": 239, "007921": 239, "427387": 239, "013076": 239, "959540": 239, "000021": 239, "014389": 239, "000037": 239, "025352": 239, "003804": 239, "606461": 239, "000235": 239, "161020": 239, "000022": 239, "015074": 239, "000003": 239, "002056": 239, "000001": 239, "000685": 239, "nvtx": 239, "nsys_nvtx_profiler_register_onli": 239, "omp_num_thread": 239, "stat": 239, "fault": [239, 243], "osrt": 239, "your_sim": 239, "datpath": 239, "struggl": 239, "sm": 239, "throughput": [239, 252], "bandwidth": [239, 252], "rooflin": 239, "ncu": 239, "kernel_nam": 239, "section_set": 239, "regex": 239, "pseudorandom": 239, "impract": [239, 371], "boost": [239, 252], "x86": [240, 243, 244], "notar": 240, "pypi": [240, 243], "requisit": 240, "valgrind": 240, "sanit": 240, "threadsanit": 240, "tsan": 240, "md": 241, "subrepositori": 241, "yaml": 241, "clangformat": 241, "cmakeformat": 241, "38": [243, 244, 245, 247, 252, 279, 347, 386, 391, 392], "311": [243, 245, 252], "sysconfig": [243, 244], "get_platform": [243, 244], "pythonvers": 243, "726": [243, 244, 252], "gb9a811a32": [243, 244], "uninstallng": 243, "trash": 243, "rosetta2": 243, "lipo": [243, 244], "incflag": 243, "loadflag": 243, "nrn_pylib": 243, "opt": [243, 244, 245], "anaconda3": 243, "libpython3": 243, "archprefer": 243, "macos11": 243, "rpm": [243, 382], "deb": [243, 382], "mingw": [243, 246, 368], "distro": [243, 245], "pleas": [243, 245, 252, 374, 382, 383], "virtualbox": 243, "wsl2": 243, "viewtop": 243, "php": 243, "95302": 243, "wsl1": 243, "powershel": [243, 246], "saniti": [243, 286], "vcxsrv": 243, "sourceforg": 243, "xlaunch": 243, "wizard": 243, "appdata": 243, "defend": 243, "firewal": 243, "bashrc": 243, "amd": 243, "advis": 243, "coreutil": [243, 244], "cask": 243, "xcode": [243, 244], "logout": 243, "wm_ffm": 243, "homebrew": [243, 244], "curl": [243, 244], "fssl": [243, 244], "shellenv": [243, 244], "zprofil": [243, 244], "cento": 243, "hat": 243, "libncurs": 243, "libopenmpi": 243, "libx11": 243, "libxcomposit": 243, "scipi": 243, "buildoptiondefault": 243, "bone": 243, "dpython": 243, "dcmake": 243, "dcorenrn": 243, "rst": 243, "regress": 243, "gapjunct": 243, "tgoto": 243, "tgetent": 243, "tput": 243, "ncurs": 243, "dyld_library_path": 243, "mpi_lib_nrn_path": 243, "ld": 243, "dyld": 243, "pyex": 243, "nrn_enable_python_dynam": 243, "libnrnpython3": 243, "nrnpyenv": 243, "nrn_pythonhom": 243, "inappropri": [243, 392], "avx512er": 243, "avx512pf": 243, "nrn_nmodl_cxx_flag": 243, "unrecogn": 243, "build_ext": 243, "geometry3d": 243, "graphicsprimit": 243, "fwrapv": 243, "denable_dtrac": 243, "dmacosx": 243, "wstrict": 243, "wshorten": 243, "iwithsysroot": 243, "libressl": 243, "app": [243, 244, 252], "macosx11": 243, "isysroot": 243, "cflag": 243, "membership": 244, "certif": 244, "macosx_deployment_target": [244, 245], "deploy": [244, 252, 382, 383], "nrn_src": 244, "nrn_instal": 244, "div_enable_x11_dynam": 244, "archs_cmak": 244, "dcmake_osx_architectur": 244, "macpkg": 244, "codesign": 244, "nrn_codesign": 244, "scari": 244, "harden": 244, "nrn_entitl": 244, "plist": 244, "packagesbuild": 244, "macdist": 244, "pkgproj": 244, "productsign": 244, "nrn_productsign": 244, "macnrn_notar": 244, "notarizaton": 244, "1048": [244, 252], "appstoreconnect": 244, "legal": 244, "logfileurl": 244, "altool": 244, "requestidentifi": 244, "usernam": [244, 245], "7254157952d4f3573c2804879cf6da8d": 244, "osxapp": 244, "ssl": 244, "itun": 244, "asset": 244, "requestuuid": 244, "152f0f0e": 244, "af58": 244, "4d22": 244, "b291": 244, "6a441825dd20": 244, "requestidentif": 244, "stapl": 244, "stapler": 244, "package_file_nam": 244, "cp": [244, 317], "package_full_nam": 244, "neuronsimulatior": 244, "sur": 244, "unam": 244, "rc1": 244, "redundantli": 244, "29": [244, 252, 386, 391, 392, 395], "catalina": 244, "developerid": 244, "cer": 244, "keychain": 244, "receipt": 244, "nrn_notar": 244, "jit": 244, "manylinux": 245, "hub": [245, 252], "pipelin": [245, 252], "dockerfil": 245, "cron": 245, "neuron_wheel": 245, "_gpu": 245, "gcc9": 245, "1971": 245, "tweak": 245, "manylinuxwheel": 245, "manylinuxgpuwheel": 245, "qemu": 245, "manylinux_imag": 245, "manylinux2014_aarch64": 245, "mount": 245, "neuron_wheel_gpu": 245, "nrnwheel": 245, "bbpcode": 245, "epfl": [245, 382], "kumbhar": [245, 251, 252], "secur": [245, 385], "wheelhous": 245, "build_wheel": 245, "test_wheel": 245, "236": [245, 252], "cp38": 245, "macosx_10_9_x86_64": 245, "whl": 245, "skip_embeded_python_test": 245, "proj16": 245, "ntask": 245, "cp38m": 245, "manylinux1_x86_64": 245, "prod": 245, "neuron_gpu_nightli": 245, "0a709": 245, "manylinux_2_17_x86_64": 245, "manylinux2014_x86_64": 245, "mvapich2": 245, "pgaccelinfo": 245, "predefin": 245, "hereaft": 245, "nrn_nightly_upload": 245, "nrn_release_upload": 245, "neuron_nightly_tag": 245, "thorough": 245, "happi": [245, 388], "hacki": 245, "config": 245, "202101": 245, "setuptools_scm_pretend_vers": 245, "89": [245, 251, 252, 387], "nrn_python_vers": 245, "chocolatei": 246, "studio": 246, "visualstudio": 246, "cplusplu": 246, "pwsh": 246, "win_download_dep": 246, "nsi": 246, "win_install_dep": 246, "msvcc": 246, "msvc": 246, "plugin": 246, "msys2": 246, "toolchain": 246, "pacakag": 246, "mingw64": 246, "win_build_cmak": 246, "python38": 246, "python39": 246, "python310": 246, "python311": 246, "dmpi_cxx_lib_nam": 246, "dmpi_c_lib_nam": 246, "dmpi_msmpi_librari": 246, "filepath": 246, "x64": 246, "setup_ex": 246, "intro": [247, 382], "nmodlanguag": 247, "modelspec": 247, "nmodl2": 247, "showcas": 247, "python_script": 247, "hhcelliclamp": 247, "_create_cel": [247, 388, 389], "6419": 247, "tv": 247, "spikestim": 247, "record_vector": 247, "__name__": [247, 310], "__main__": [247, 293, 310, 386, 391], "hh_iclamp_cel": 247, "ncit": [247, 376], "c17145": [247, 376], "c17008": [247, 376], "variabletyp": 247, "testvar": 247, "global_var": 247, "range_var": 247, "parameter_var": 247, "cr": 247, "nrn_point": 247, "bbcore_writ": 247, "bbcore_read": 247, "hhwatch": 247, "gpa": 247, "fornetcontest": 247, "tbegin": 247, "npre": 247, "npost": 247, "tpost": 247, "fnpre": 247, "ftpre": 247, "fnpost": 247, "ftpost": 247, "speicif": 247, "longitudinal_diffus": 247, "cadif": 247, "factors_cadifu": 247, "dfree": 247, "annulu": 247, "nann": 247, "yamada": [247, 252], "1989": [247, 251, 252], "bullfrog": [247, 252], "sympathet": [247, 252], "ganglion": [247, 252], "cadifu": 247, "ica": 247, "totalbuff": 247, "dca": 247, "k1buf": 247, "k2buf": 247, "50e": 247, "kd": [247, 375], "cabuff": 247, "outermost": 247, "interven": [247, 252], "frat": 247, "dr2": 247, "exterior": 247, "outer": 247, "dsq": 247, "dsqvol": 247, "cadifuscel": 247, "ca_cadifu": 247, "cai_vec": 247, "_ref_ca": 247, "cadifus_cel": 247, "disc": 247, "a0": 247, "disccel": 247, "k_disc": 247, "a0_disc": 247, "_ref_a_disc": 247, "disc_cel": 247, "289999999999999": 247, "560999999999999": 247, "9049": 247, "782969": 247, "3046720999999994": 247, "8742048899999997": 247, "4867844009999995": 247, "cainf": 247, "taur": 247, "ainf": 247, "msm": 247, "stress": [247, 252], "oct2": 247, "drive_channel": 247, "test_table_f": 247, "br": [247, 252], "test_table_p": 247, "tablecel": 247, "_ref_ainf_t": 247, "table_cel": 247, "k3st": 247, "gbar": 247, "tau1_rec": 247, "tau2_rec": 247, "millimho": 247, "151": [247, 252], "044": [247, 252], "kf1": 247, "kb1": 247, "kf2": 247, "kb2": 247, "kin": 247, "steadyst": 247, "k3stcell": 247, "tau1_valu": 247, "voltage_valu": 247, "tau1_vector": 247, "voltage_vector": 247, "table_tau1_k3st": [247, 280], "table_tau2_k3st": 247, "tau2_vec": 247, "_ref_tau1_rec": 247, "_ref_tau2_rec": 247, "k3st_cell": 247, "125": [247, 252, 289, 371, 376], "11066884059267537": 247, "09702284544211288": 247, "0840298714363211": 247, "07165924609736188": 247, "059881657072173765": 247, "04866907889206899": 247, "037994719804658315": 247, "027832978105936233": 247, "018159402051359665": 247, "008950650468550592": 247, "snippet": 248, "subprocess": 250, "pyimport": 250, "pythonhom": 250, "check_cal": 250, "println": 250, "float64": 250, "72": [250, 252, 279, 375, 382, 391], "pyarrai": 250, "jvec": 250, "awil": [251, 252], "cornu": 251, "dura": [251, 252, 393], "bernal": [251, 252, 393], "king": [251, 252], "lupton": 251, "magkanari": [251, 252], "mcdougal": [251, 252, 393], "pereira": [251, 252, 382], "s\u0103vulescu": 251, "frontier": [251, 252], "884046": 251, "eggleston": 251, "galijasev": 251, "847108": 251, "jaeger": [251, 252], "jung": [251, 252], "encyclopedia": [251, 252], "978": [251, 252], "4614": [251, 252], "7320": 251, "6_795": 251, "00041": [251, 252], "seidenstein": [251, 252], "neurotechnologi": [251, 252], "2063": [251, 252], "2090": [251, 252], "ww": 251, "00028": [251, 252], "kumar": [251, 252], "fncom": [251, 252], "00049": [251, 252], "heidelberg": [251, 252], "chen": [251, 252], "symposium": [251, 252], "ipdp": [251, 252], "1109": [251, 252], "5470407": [251, 252], "neuro": [251, 252], "trend": [251, 252], "008": [251, 252], "0087": [251, 252], "203": [251, 252], "210": [251, 252], "0073": 251, "epilepsi": [251, 252], "academ": [251, 252], "b978": [251, 252], "012373649": 251, "50005": 251, "50004": 251, "cannon": [251, 252], "gewaltig": [251, 252], "gleeson": [251, 252], "bhalla": [251, 252], "corn": 251, "schutter": [251, 252], "138": [251, 252], "s12021": [251, 252], "0004": 251, "crasto": 251, "cj": 251, "molecular": [251, 252, 371], "401": [251, 252], "humana": [251, 252], "totowa": [251, 252], "59745": [251, 252], "1017": [251, 252], "cbo9780511541612": 251, "129": [251, 252], "006": [251, 252], "7949": 251, "921": [251, 252], "1162": [251, 252], "0899766053429453": 251, "media": [251, 252], "221": [251, 252], "bmm221": 251, "neurocomput": [251, 252], "1117": [251, 252], "1122": [251, 252], "neucom": [251, 252], "handbook": [251, 252], "usa": 251, "1177": [251, 252, 375], "107385840100700207": 251, "995": [251, 252], "089976600300015475": 251, "mirski": 251, "heali": 251, "singer": [251, 252], "skoufo": 251, "multidisciplinari": 251, "468": [251, 252], "s0166": 251, "2236": 251, "01300": [251, 252], "neurosimul": 251, "koch": [251, 252], "121": [251, 252], "1997": [251, 252, 382], "1179": 251, "1209": [251, 252], "neco": [251, 252], "contrera": [251, 252], "steriad": [251, 252], "thalam": [251, 252], "quiescenc": [251, 252], "seizur": [251, 252], "1679": [251, 252], "1696": [251, 252], "contemporari": 251, "trimbl": 251, "cum": [251, 252], "butterworth": 251, "heinemann": [251, 252], "147": [251, 252], "boston": [251, 252], "4615": 251, "2736": [251, 252], "7_8": 251, "1993": [251, 252], "eeckman": [251, 252], "3560": 251, "7_11": 251, "0020": 251, "7101": 251, "90007": 251, "84": [251, 252], "90008": 251, "2672": 252, "abbasi": 252, "sarbaz": 252, "cerebellar": 252, "ataxia": 252, "mutant": 252, "med": 252, "mice": 252, "acetazolamid": 252, "aminopyridin": 252, "biomedicin": 252, "113": 252, "697": 252, "704": 252, "cmpb": 252, "janahmadi": 252, "tonic": 252, "rat": 252, "riluzol": 252, "clinic": 252, "61": [252, 391], "15412": 252, "bcn": 252, "03080108": 252, "shahabi": 252, "sk": 252, "deep": [252, 382], "nuclei": 252, "abdela": 252, "mousa": 252, "gamal": 252, "khalil": 252, "elbasiouni": 252, "eldawlatli": 252, "classif": 252, "spinal": 252, "amyotroph": 252, "sclerosi": 252, "2020": [252, 321, 352, 382], "3680": 252, "3683": 252, "embc44109": 252, "9176551": 252, "aberra": 252, "peterchev": 252, "grill": 252, "066023": 252, "1741": 252, "2552": [252, 279], "aadbb1": 252, "wang": 252, "transcrani": 252, "magnet": 252, "189": 252, "abrahamsson": 252, "cathala": 252, "matsui": 252, "shigemoto": 252, "digregorio": 252, "sublinear": 252, "gradient": [252, 373], "027": 252, "acciarito": 252, "cardarilli": 252, "cristini": 252, "nunzio": 252, "fazzolari": 252, "khanal": 252, "susi": 252, "lif": 252, "memrist": 252, "stdp": 252, "vlsi": 252, "81": [252, 391], "acker": 252, "antic": 252, "backpropag": 252, "basal": [252, 289, 296, 391], "1524": 252, "hoyo": 252, "loew": 252, "eneuro": 252, "0050": 252, "1523": 252, "ackermann": 252, "bhadra": 252, "gerg": 252, "065007": 252, "2560": 252, "jr": 252, "kilgor": 252, "bipolar": 252, "cuff": 252, "transact": 252, "rehabilit": 252, "469": 252, "477": 252, "tnsre": 252, "2034069": 252, "adesnik": 252, "scanziani": 252, "competit": 252, "464": 252, "1155": 252, "nature08935": 252, "adonia": 252, "duffi": 252, "barro": 252, "mccoi": 252, "balasubramaniam": 252, "demyelin": 252, "remyelin": 252, "2765": 252, "2774": 252, "3137350": 252, "siljak": 252, "marchetti": 252, "reconfigur": [252, 389], "synthet": 252, "556628": 252, "2020a": 252, "yastrebova": 252, "koucheryavi": 252, "cleari": 252, "nanobiosci": 252, "tnb": 252, "2975942": 252, "2020b": 252, "aghvami": 252, "m\u00fcller": 252, "araabi": 252, "egger": 252, "granul": 252, "584": 252, "595": 252, "jneurosci": 252, "1798": 252, "aguiar": 252, "sousa": 252, "lima": 252, "nonspecif": 252, "cation": 252, "windup": 252, "wdr": 252, "104": 252, "1166": 252, "00834": 252, "willshaw": 252, "mossi": 252, "fibr": 252, "bouton": 252, "699": 252, "703": 252, "ahlfor": 252, "wreh": 252, "meg": 252, "eeg": 252, "dipol": 252, "879": 252, "887": 252, "s11517": 252, "1296": 252, "ahm": 252, "anderson": 252, "dougla": 252, "martin": 252, "whitteridg": 252, "evok": 252, "cerebr": 252, "462": 252, "476": 252, "ait": 252, "ouar": 252, "filipi": 252, "tzilivaki": 252, "poirazi": 252, "canepari": 252, "ca2": [252, 374], "climb": 252, "fiber": 252, "1969": 252, "1981": 252, "2155": 252, "akbari": 252, "moradi": 252, "hadaeghi": 252, "gharibzadeh": 252, "emkanjoo": 252, "cardiac": 252, "physiologi": 252, "fphy": 252, "00077": 252, "akemann": 252, "kn\u00f6pfel": 252, "kv3": 252, "resurg": 252, "4602": 252, "4612": 252, "lundbi": 252, "mutoh": 252, "fluoresc": 252, "3959": 252, "3976": 252, "akiyama": 252, "shimizu": 252, "miyakawa": 252, "inou": 252, "induc": [252, 374, 387, 392], "polar": [252, 376], "1383": 252, "brainr": 252, "097": 252, "alessi": 252, "raspanti": 252, "magistretti": 252, "afterpotenti": 252, "stellat": 252, "entorhin": 252, "hippocampu": [252, 391], "404": 252, "hipo": 252, "22529": 252, "alfonsa": 252, "merrick": 252, "codadu": 252, "cunningham": 252, "deisseroth": 252, "racca": 252, "trevelyan": 252, "intraneuron": 252, "chlorid": [252, 289, 371], "epilept": 252, "7715": 252, "7726": 252, "4105": 252, "allain": 252, "cazenav": 252, "delpi": 252, "exerti": 252, "barth": 252, "meyrand": 252, "cattaert": 252, "branchereau": 252, "nonsynapt": 252, "glycin": 252, "kcc2": 252, "development": 252, "764": 252, "779": 252, "dneu": 252, "22358": 252, "allam": 252, "ghaderi": 252, "bouteil": 252, "legendr": 252, "ambert": 252, "greget": 252, "bischoff": 252, "baudri": 252, "berger": 252, "astrocyt": [252, 378], "glutam": 252, "uptak": 252, "00070": 252, "geiger": 252, "1290": 252, "1293": 252, "gabaerg": 252, "spill": 252, "942": 252, "950": 252, "roth": 252, "325": 252, "1126": 252, "1174331": 252, "allen": 252, "fidel": 252, "recruit": 252, "036024": 252, "aa9db5": 252, "allken": 252, "chepkoech": 252, "einevol": 252, "haln": 252, "subcellular": 252, "genicul": 252, "nucleu": 252, "plo": [252, 382], "ONE": 252, "e107780": 252, "pone": 252, "0107780": 252, "almog": 252, "barkai": 252, "lampert": 252, "korngreen": 252, "cole": 252, "fncel": 252, "00187": 252, "182": 252, "2896": 252, "alturki": 252, "feng": 252, "nair": 252, "guntu": 252, "334": 252, "331": 252, "016": [252, 374], "alvarez": 252, "290": 252, "yaari": 252, "kuba": 252, "avian": 252, "magnocellulari": 252, "619": 252, "631": 252, "1124": 252, "amarillo": 252, "tisson": 252, "mato": 252, "nadal": 252, "rectifi": 252, "ikir": 252, "2358": 252, "2372": 252, "00867": 252, "zagha": 252, "rudi": 252, "interplai": 252, "subthreshold": 252, "oscillatori": 252, "393": 252, "410": 252, "00647": 252, "amatrudo": 252, "weaver": 252, "crimin": 252, "hof": 252, "rosen": 252, "luebk": 252, "monkei": 252, "prefront": 252, "13644": 252, "13660": 252, "2581": 252, "ambro": 252, "ingerson": 252, "grover": 252, "1512": 252, "1536": 252, "302": 252, "amir": 252, "devor": 252, "invas": 252, "2181": 252, "2191": 252, "2003a": 252, "disrupt": 252, "2700": 252, "2708": 252, "2003b": 252, "kocsi": 252, "ectop": 252, "electrogenesi": 252, "2576": 252, "2585": 252, "liu": 252, "421": 252, "2002a": 252, "micha": [252, 289, 371], "discharg": 252, "1187": 252, "1198": 252, "2002b": 252, "amo": 252, "jacobson": 252, "duker": 252, "carlsson": 252, "herg": 252, "repolar": 252, "agent": 252, "345": 252, "cardiovascular": 252, "651": 252, "658": 252, "amsalem": 252, "eyal": 252, "rogozinski": 252, "288": 252, "s41467": 252, "019": 252, "13932": 252, "l2": 252, "basket": 252, "3655": 252, "3668": 252, "1093": 252, "cercor": 252, "bhw166": 252, "tang": 252, "pei": 252, "duan": 252, "00029": 252, "anastassi": 252, "montgomeri": 252, "barahona": 252, "buzs\u00e1ki": 252, "1936": 252, "3635": 252, "anaya": 252, "zander": 252, "sankarasubramanian": 252, "lempka": 252, "cord": 252, "neurostimul": 252, "neuromodul": 252, "1111": 252, "ner": 252, "12965": 252, "lanka": 252, "sharma": 252, "butson": 252, "baker": 252, "dorval": 252, "\u03bcdb": 252, "multiresolut": 252, "fnin": 252, "01152": 252, "2019a": 252, "dufflei": 252, "vorwerk": 252, "anod": 252, "misunderstood": 252, "preferenti": 252, "016026": 252, "aae590": 252, "2019b": 252, "ost": 252, "026005": 252, "aaa14b": 252, "2018a": 252, "binzegg": 252, "kahana": 252, "asymmetri": 252, "820": 252, "824": 252, "farokhniae": 252, "gunalan": 252, "howel": 252, "mcintyr": 252, "hyperdirect": 252, "pathwai": 252, "subthalam": 252, "1140": 252, "1150": 252, "2018b": 252, "andrad": 252, "yorgan": 252, "lipscomb": 252, "schizophrenia": 252, "risk": [252, 382], "cacna1i": 252, "cav3": 252, "34233": 252, "srep34233": 252, "andre": 252, "butenko": 252, "kober": 252, "higuchi": 252, "fauser": 252, "storch": 252, "k\u00fchn": 252, "horn": 252, "rienen": 252, "350": 252, "113978": 252, "expneurol": 252, "andreozzi": 252, "carannant": 252, "addio": 252, "cesarelli": 252, "balbi": 252, "phenomenolog": [252, 371, 378], "nav1": 252, "17493": 252, "s41598": 252, "53662": 252, "androuin": 252, "potier": 252, "n\u00e4gerl": 252, "danglot": 252, "thierri": 252, "youssef": 252, "triller": 252, "duyckaert": 252, "hachimi": 252, "dutar": 252, "delatour": 252, "marti": 252, "alzheim": 252, "diseas": 252, "acta": 252, "neuropathologica": 252, "839": 252, "854": 252, "s00401": 252, "018": 252, "1847": 252, "angelo": 252, "london": 252, "christensen": 252, "h\u00e4usser": 252, "8643": 252, "8653": 252, "angulo": 252, "henzi": 252, "neymotin": [252, 374], "suarez": 252, "schwaller": 252, "moreno": 252, "amyloid": 252, "pathologi": 252, "unexpect": 252, "homeostasi": [252, 374, 396], "subicular": 252, "dementia": 252, "251": 252, "jalz": 252, "017": 252, "orman": 252, "buitrago": 252, "cepeda": 252, "prado": 252, "stefanov": 252, "duff": 252, "276": 252, "nbd": 252, "anirudhan": 252, "narayanan": 252, "emerg": 252, "dispar": 252, "4691": 252, "4705": 252, "4223": 252, "ankri": 252, "ezra": 252, "tsur": 252, "maimon": 252, "kaushanski": 252, "rivlin": 252, "etzion": 252, "antagonist": 252, "retina": 252, "107608": 252, "celrep": 252, "antun": 252, "faria": 252, "da": 252, "silva": 252, "simo": 252, "souza": 252, "channelopathi": 252, "autism": 252, "disord": 252, "1750058": 252, "1142": 252, "s0129065717500587": 252, "anwar": 252, "hepburn": 252, "nedelescu": 252, "15848": 252, "15867": 252, "hong": 252, "cerebellum": [252, 391], "681": 252, "s12311": 252, "0224": 252, "room": 252, "kuhn": 252, "168": 252, "00168": 252, "apollo": 252, "grayden": 252, "burkitt": 252, "meffin": 252, "kameneva": 252, "aii": 252, "amacrin": 252, "6551": 252, "6554": 252, "embc": 252, "6611056": 252, "apostolid": 252, "milstein": 252, "grienberg": 252, "bittner": 252, "mage": 252, "plateau": 252, "770": 252, "783": 252, "040": 252, "appukuttan": 252, "manchanda": 252, "urinari": 252, "bladder": 252, "muscl": 252, "syncytium": 252, "167": 252, "0532": 252, "2015a": 252, "2017a": 252, "655225": 252, "padmakumar": 252, "convex": 252, "bioengin": 252, "biotechnologi": 252, "fbioe": 252, "00064": 252, "2017b": 252, "young": 252, "syncyti": 252, "detrusor": 252, "1300": 252, "sath": 252, "homotyp": 252, "heterotyp": 252, "5th": 252, "iccab": 252, "7344707": 252, "2015b": 252, "icsmb": 252, "7915104": 252, "aradi": 252, "erdi": 252, "multicompartment": 252, "519": 252, "527": 252, "1996a": 252, "cybernet": 252, "605": 252, "1996b": 252, "1996c": 252, "252": 252, "1996d": 252, "maccaferri": 252, "juvenil": 252, "ca3": 252, "9681": 252, "9692": 252, "santhakumar": 252, "soltesz": 252, "divers": [252, 374, 382], "ipsc": 252, "neuropharmacologi": 252, "511": 252, "522": 252, "perisomat": 252, "2849": 252, "2858": 252, "538": 252, "227": 252, "arai": 252, "tanaka": 252, "tachibana": 252, "adult": 252, "9260": 252, "9270": 252, "1590": 252, "araya": 252, "yust": 252, "neck": 252, "academi": 252, "america": 252, "e2895": 252, "e2904": 252, "1073": 252, "pna": 252, "1321869111": 252, "archi": 252, "mel": 252, "intradendrit": 252, "binocular": 252, "aria": 252, "vall": 252, "leija": 252, "moral": 252, "cifuent": 252, "bdnf": 252, "ngf": 252, "cervic": 252, "206": 252, "214": 252, "neuropharm": 252, "ariav": 252, "polski": 252, "schiller": 252, "submillisecond": 252, "7750": 252, "7758": 252, "arkhipov": 252, "gouwen": 252, "billeh": 252, "gratii": 252, "iyer": 252, "xu": 252, "asl": 252, "berg": 252, "buic": 252, "cain": 252, "costa": 252, "vri": 252, "denman": 252, "durand": 252, "jarski": 252, "lecoq": 252, "mihala": 252, "ocker": 252, "olsen": 252, "reid": 252, "soler": 252, "llavina": 252, "sorensen": 252, "silico": 252, "e1006535": 252, "pcbi": [252, 382], "1006535": 252, "arleo": 252, "nieu": 252, "bezzi": 252, "errico": 252, "coenen": 252, "2031": 252, "2058": 252, "neco_a_00006": 252, "arruda": 252, "publio": 252, "roqu": 252, "periglomerular": 252, "mitral": 252, "e56148": 252, "0056148": 252, "arsiero": 252, "l\u00fcscher": 252, "lundstrom": 252, "giugliano": 252, "medial": 252, "3274": 252, "3284": 252, "aruljothi": 252, "mandg": 252, "heat": 252, "nocicept": 252, "8th": 252, "8008422": 252, "gasparini": 252, "medinilla": 252, "postinhibitori": 252, "rebound": 252, "6434": 252, "6442": 252, "4066": 252, "ashhad": 252, "feldman": 252, "inspiratori": 252, "rhythmogenesi": 252, "106": 252, "482": 252, "e4": 252, "inositol": [252, 374], "trisphosph": 252, "591": 252, "1645": 252, "1669": 252, "245688": 252, "gliotransmiss": 252, "e3280": 252, "e3289": 252, "1522180113": 252, "aspart": 252, "ladenbau": 252, "obermay": 252, "e1005206": 252, "1005206": 252, "remm": 252, "e1006124": 252, "1006124": 252, "athilingam": 252, "ben": 252, "shalom": 252, "keeshen": 252, "sohal": 252, "bender": 252, "serotonin": 252, "elif": [252, 345], "610": 252, "7554": 252, "31991": 252, "aubi": 252, "sayegh": 252, "faur": 252, "vertebr": 252, "6373": 252, "6390": 252, "5624": 252, "augustin": 252, "zylbert": 252, "partridg": 252, "drosophila": [252, 375], "melanogast": 252, "0423": 252, "avella": 252, "gonzalez": 252, "aerd": 252, "elburg": 252, "poil": 252, "mansveld": 252, "linkenka": 252, "hansen": 252, "pelt": 252, "ooyen": 252, "e1002666": 252, "1002666": 252, "e100899": 252, "0100899": 252, "141": 252, "00141": 252, "avin": 252, "gradwohl": 252, "grossman": 252, "motor": [252, 391], "pressur": 252, "2716": 252, "2729": 252, "ejn": 252, "12267": 252, "azouz": 252, "spatiotempor": [252, 374], "revisit": [252, 382], "2785": 252, "2796": 252, "vivo": 252, "8110": 252, "8115": 252, "513": 252, "523": 252, "disinhibit": 252, "striat": 252, "1286": [252, 368], "baccu": 252, "8345": 252, "8350": 252, "sahlei": 252, "1226": 252, "1236": 252, "badoual": 252, "piwkowska": 252, "bal": 252, "498": 252, "zou": 252, "fregnac": 252, "bagherimofidi": 252, "pouladian": 252, "jamei": 252, "tehrani": 252, "fard": 252, "mri": 252, "somatosensori": 252, "interdisciplinari": 252, "253": 252, "262": 252, "2016a": 252, "tactil": 252, "laminar": 252, "australasian": 252, "717": 252, "s13246": 252, "0467": 252, "2016b": 252, "bagnal": 252, "hull": 252, "bushong": 252, "ellisman": 252, "194": 252, "032": 252, "bahl": 252, "stemmler": 252, "herz": 252, "bahmer": 252, "gupta": 252, "auditori": 252, "793": 252, "00793": 252, "langner": 252, "cochlear": 252, "genet": [252, 374], "102": 252, "s00422": 252, "009": 252, "0353": 252, "perez": 252, "rosello": 252, "barrionuevo": 252, "unitari": 252, "commissur": 252, "perfor": 252, "158": 252, "0304": 252, "ryou": 252, "schiff": 252, "purpura": 252, "arous": 252, "frontostriat": 252, "healthi": 252, "nonhuman": 252, "primat": 252, "116": 252, "2383": 252, "2404": 252, "01129": 252, "balagu": 252, "capogrosso": 252, "residu": 252, "cortico": 252, "paralysi": 252, "254": 252, "ner49283": 252, "9441219": 252, "balakrishnan": 252, "pearc": 252, "midazolam": 252, "atropin": 252, "1212": 252, "1231": 252, "22307": 252, "characterist": 252, "pharmacolog": 252, "fncir": 252, "00150": 252, "martinoia": 252, "colombo": 252, "massobrio": 252, "\u03b1": [252, 370], "reapprais": 252, "427": 252, "429": 252, "clinph": 252, "00015": 252, "hellgren": 252, "kotaleski": 252, "macroscop": [252, 378], "isoform": 252, "e1005737": 252, "1005737": 252, "hummo": 252, "amygdala": 252, "249": 252, "267": 252, "030": 252, "balmer": 252, "merjan": 252, "trussel": 252, "1010": 252, "63819": 252, "banerje": 252, "banitt": 252, "depress": 252, "facilitatori": 252, "865": 252, "870": 252, "10230": 252, "10239": 252, "ilan": 252, "gidon": 252, "interregion": 252, "989": [252, 347], "998": 252, "00612": 252, "baranauska": 252, "fleidervish": 252, "4051": 252, "4056": 252, "1215125110": 252, "martina": 252, "684": 252, "mukovskii": 252, "wolf": 252, "volgushev": 252, "1070": 252, "1090": 252, "072": 252, "barbieri": 252, "bertelli": 252, "pusch": 252, "gavazzo": 252, "gs967": 252, "hemipleg": 252, "migrain": 252, "mutat": 252, "scn1a": 252, "headach": 252, "1186": 252, "s10194": 252, "1056": 252, "barela": 252, "waddi": 252, "lickfett": 252, "hunter": 252, "anido": 252, "helmer": 252, "goldin": 252, "escayg": 252, "2714": 252, "2723": 252, "butterman": 252, "lev": 252, "binshtok": 252, "peripher": 252, "9346": 252, "9363": 252, "1546": 252, "goldstein": 252, "caspi": 252, "kv7": 252, "nociceptor": 252, "181": 252, "fnmol": 252, "00181": 252, "barlow": 252, "joo": 252, "trinh": 252, "longtin": 252, "cool": 252, "bifurc": 252, "mild": 252, "traumat": 252, "injuri": 252, "chao": 252, "106328": 252, "1063": 252, "5040288": 252, "barriga": 252, "rivera": 252, "guo": 252, "yang": 252, "doko": 252, "lovel": 252, "morlei": 252, "suan": 252, "prosthesi": 252, "42682": 252, "srep42682": 252, "zulaica": 252, "rahmon": 252, "perin": 252, "ramaswami": 252, "neocortex": 252, "fnsyn": 252, "barri": 252, "turner": 252, "schloss": 252, "glenn": 252, "song": 252, "lukin": 252, "park": 252, "walsworth": 252, "quantum": 252, "defect": [252, 382], "diamond": 252, "14133": 252, "14138": 252, "1601513113": 252, "barto": 252, "vida": 252, "frotscher": 252, "jona": 252, "gyru": 252, "2687": 252, "2698": 252, "meyer": 252, "monyer": 252, "13222": 252, "13227": 252, "yehuda": 252, "1127": 252, "1136": 252, "basak": 252, "microdomain": 252, "e1006485": 252, "1006485": 252, "dispers": 252, "sharpli": 252, "596": 252, "4173": 252, "4205": 252, "jp275310": 252, "567": 252, "590": 252, "s00429": 252, "02018": 252, "basalyga": 252, "gleiser": 252, "wennek": 252, "718": 252, "0164": 252, "3_4": 252, "montemurro": 252, "273": 252, "012": 252, "0420": 252, "basu": 252, "sriniva": 252, "cheung": 252, "taniguchi": 252, "huang": 252, "siegelbaum": 252, "1208": 252, "1221": 252, "bathelli": 252, "margri": 252, "larkum": 252, "piriform": 252, "12641": 252, "12652": 252, "battefeld": 252, "popov": 252, "kole": 252, "internod": 252, "remodel": 252, "e5": 252, "039": 252, "gavrili": 252, "cooper": [252, 374], "heteromer": 252, "3719": 252, "3732": 252, "4206": 252, "beaulieu": 252, "laroch": 252, "toloza": 252, "william": 252, "frosch": 252, "cosgrov": 252, "harnett": 252, "allometr": 252, "278": 252, "s41586": 252, "021": 252, "04072": 252, "der": 252, "lafourcad": 252, "barnagian": 252, "eskandar": 252, "643": 252, "e14": 252, "045": 252, "b\u00e9dard": 252, "b\u00e9huret": 252, "deleuz": 252, "oversampl": 252, "1133": 252, "1143": 252, "kr\u00f6ger": 252, "1829": 252, "rodrigu": 252, "roi": 252, "389": 252, "403": 252, "0250": 252, "begum": 252, "bakiri": 252, "volynski": 252, "kullmann": 252, "broaden": 252, "12102": 252, "ncomms12102": 252, "behabadi": 252, "j4": 252, "sweet": 252, "wrinkl": 252, "2865": 252, "2870": 252, "subunit": 252, "503": 252, "1217645111": 252, "jadi": 252, "e1002599": 252, "1002599": 252, "corticothalam": 252, "00080": 252, "gomez": 252, "fr\u00e9gnac": 252, "substrat": [252, 371], "e1003401": 252, "1003401": 252, "bein": 252, "mongiat": 252, "schwarzach": 252, "cuntz": 252, "jedlicka": 252, "t2n": 252, "electrophysiolog": [252, 374], "matur": [252, 392], "born": [252, 382], "e26517": 252, "26517": 252, "bekker": 252, "steven": 252, "sucros": 252, "miniatur": 252, "epsc": 252, "1250": 252, "1255": 252, "1996": [252, 397], "bekkouch": 252, "shoemak": 252, "fabian": 252, "rigosi": 252, "wiederman": 252, "carrol": 252, "multicompart": [252, 387, 388, 389], "insect": 252, "icann": 252, "397": 252, "dragonfli": 252, "684872": 252, "bekolai": 252, "bergstra": 252, "hunsberg": 252, "dewolf": 252, "rasmussen": 252, "choo": 252, "voelker": 252, "eliasmith": 252, "nengo": 252, "00048": 252, "bell": 252, "joint": 252, "technologi": [252, 382, 383], "9502": 252, "5668": 252, "belling": 252, "miyazawa": 252, "steinmetz": 252, "submyelin": 252, "263": 252, "rho": 252, "487": 252, "compbiom": 252, "benk": 252, "l\u00fcthi": 252, "palmer": 252, "wikstr\u00f6m": 252, "isaac": 252, "collingridg": 252, "537": 252, "407": [252, 279], "bennett": 252, "muschol": 252, "neurohypophysi": 252, "varicos": 252, "endocrinologi": 252, "2829": 252, "2836": 252, "aviv": 252, "razon": 252, "183": 252, "024": 252, "berrio": 252, "sander": 252, "scn2a": 252, "infantil": 252, "psychiatri": 252, "232": 252, "biopsych": 252, "ladd": 252, "artherya": 252, "kim": 252, "sanghevi": 252, "bouchard": 252, "neurogpu": 252, "366": 252, "109400": 252, "liberman": 252, "00004": 252, "benucci": 252, "verschur": 252, "k\u00f6nig": 252, "pairwis": 252, "2351": 252, "2378": 252, "cognit": 252, "neurodynam": 252, "berecki": 252, "bryson": 252, "terhag": 252, "maljev": 252, "gazina": 252, "hill": [252, 371], "petrou": 252, "encephalopathi": 252, "annal": 252, "85": [252, 293], "514": 252, "ana": 252, "25438": 252, "berend": 252, "maex": 252, "2531": [252, 279], "2547": 252, "bernand": 252, "\u00f6": 252, "88": 252, "11569": 252, "11573": 252, "amplif": 252, "2743": 252, "2753": 252, "bernasconi": 252, "schindler": 252, "stoop": 252, "74": [252, 279, 391], "berzhanskaya": 252, "chernyi": 252, "gluckman": 252, "rhythm": [252, 379], "369": 252, "0426": 252, "bessaih": 252, "leresch": 252, "11376": 252, "11381": 252, "bezair": 252, "raikov": 252, "burk": 252, "armstrong": 252, "simtrack": 252, "biorxiv": 252, "081927": 252, "vya": 252, "rodent": 252, "e18566": 252, "18566": 252, "324": 252, "lahowetz": 252, "bhumbra": 252, "bannatyn": 252, "watanab": 252, "todd": 252, "maxwel": 252, "beato": 252, "12919": 252, "12932": 252, "0199": 252, "bialowa": 252, "rama": 252, "zbili": 252, "marra": 252, "fronzaroli": 252, "molinier": 252, "carlier": 252, "debann": 252, "kv1": 252, "293": 252, "304": 252, "12787": 252, "bianchi": 252, "tirozzi": 252, "cuomo": 252, "mari": 252, "creb": 252, "transcript": [252, 375], "165": [252, 391], "22212": 252, "marasco": 252, "limongiello": 252, "0383": 252, "vital": 252, "garad": 252, "pousinha": 252, "lessmann": 252, "644": 252, "657": 252, "bpj": 252, "bian": 252, "r\u00fcckerl": 252, "saint": 252, "cloment": 252, "mariani": 252, "sherrard": 252, "65954": 252, "bicknel": 252, "4001": 252, "4017": 252, "e10": 252, "bieda": 252, "copenhagen": 252, "retin": 252, "243": 252, "jia": 252, "siegl": 252, "388": 252, "e18": 252, "piasini": 252, "lorincz": 252, "nusser": 252, "silver": 252, "lossless": 252, "83": [252, 289, 374, 391], "960": 252, "974": 252, "020": [252, 374], "bingham": 252, "1380": 252, "8512503": 252, "loizo": 252, "yu": 252, "gilbert": 252, "lazzi": 252, "2794": 252, "2797": 252, "7591310": 252, "2278": 252, "2289": 252, "tbme": 252, "2791860": 252, "mergenth": 252, "electroceut": 252, "00013": 252, "paknahad": 252, "girard": 252, "admitt": 252, "00072": 252, "birdno": 252, "rezai": 252, "tremor": 252, "1675": 252, "kuncel": 252, "gross": 252, "364": 252, "383": 252, "00906": 252, "dostrovski": 252, "hutchison": 252, "e96026": 252, "0096026": 252, "bir\u00f3": 252, "\u00e1": 252, "br\u00e9maud": 252, "falck": 252, "ruiz": 252, "supralinear": 252, "glutamaterg": 252, "romani": 252, "1033": 252, "1036": 252, "aan3846": 252, "blackman": 252, "grabuschnig": 252, "legenstein": 252, "sj\u00f6str\u00f6m": 252, "biocytin": 252, "histologi": 252, "photon": 252, "fnana": 252, "00065": 252, "blair": 252, "mozer": 252, "hasselmo": 252, "nonburst": 252, "zeitschrift": 252, "f\u00fcr": 252, "naturforschung": 252, "617": 252, "627": 252, "kern": 252, "icsd": 252, "463": 252, "bloss": 252, "cembrowski": 252, "karsh": 252, "colonel": 252, "fetter": 252, "spruston": 252, "1030": 252, "029": 252, "353": 252, "s41593": 252, "0084": 252, "bock": 252, "honnuraiah": 252, "paradox": 252, "7826": 252, "7839": 252, "0105": 252, "negrean": 252, "0780": 252, "bodda": 252, "palathing": 252, "sankar": 252, "diwakar": 252, "lfpsim": 252, "informat": 252, "icacci": 252, "8125898": 252, "bogaard": 252, "zochowski": 252, "booth": 252, "1677": 252, "1687": 252, "bolduan": 252, "grosser": 252, "shrinkag": 252, "acut": 252, "metal": 252, "spacer": 252, "histolog": 252, "2577": 252, "2589": 252, "02141": 252, "bonaiuto": 252, "barn": 252, "bestmann": 252, "neuroimag": 252, "242": 252, "118479": 252, "booker": 252, "althof": 252, "bettler": 252, "hear": 252, "wickman": 252, "kulik": 252, "gabab": 252, "parvalbumin": [252, 377], "7961": 252, "7974": 252, "sim\u00f5": 252, "oliveira": 252, "anstei": 252, "kozic": 252, "dando": 252, "jackson": 252, "baxter": 252, "isom": 252, "sherman": 252, "hardingham": 252, "brophi": 252, "wylli": 252, "intact": 252, "syndrom": 252, "107988": 252, "poe": 252, "rem": 252, "reactiv": 252, "173": 252, "borda": 252, "bossana": 252, "verbist": 252, "l1": 252, "118": 252, "00118": 252, "borel": 252, "guadagna": 252, "jang": 252, "kwag": 252, "paulsen": 252, "00263": 252, "bo": 252, "harri": 252, "warrick": 252, "brocard": 252, "demianenko": 252, "manuel": 252, "zytnicki": 252, "korogod": 252, "locomot": 252, "3315": 252, "3327": 252, "093": 252, "botta": 252, "sangrei": 252, "valenzuela": 252, "alcohol": 252, "golgi": 252, "atpas": [252, 374], "neuropsychopharmacologi": 252, "npp": 252, "ethanol": 252, "616": 252, "624": 252, "1530": 252, "0277": 252, "01658": 252, "bourbeau": 252, "hokanson": 252, "rubin": 252, "weber": 252, "intraneur": 252, "dorsal": 252, "ganglia": 252, "056009": 252, "hu": 252, "keller": 252, "multiscal": [252, 395], "nervou": 252, "3008": 252, "3011": 252, "2158605": 252, "2011a": 252, "pernot": 252, "445": 252, "iemb": 252, "6090061": 252, "2011b": 252, "6612": 252, "6615": 252, "6347510": 252, "1863": 252, "1870": 252, "braganza": 252, "mueller": 252, "komorowska": 252, "kelli": 252, "beck": 252, "910": 252, "53148": 252, "gaba": 252, "21753": 252, "srep21753": 252, "supiot": 252, "hodeib": 252, "laup\u00e9ni": 252, "dalvi": 252, "zhu": 252, "compensatori": 252, "fetal": 252, "sod": 252, "e51402": 252, "51402": 252, "branco": 252, "clark": 252, "discrimin": 252, "329": 252, "1671": 252, "1189664": 252, "885": 252, "892": 252, "tozer": 252, "magnu": 252, "sugino": 252, "wood": 252, "sternson": 252, "hypothalam": 252, "1749": 252, "1761": 252, "bra": 252, "lahjouji": 252, "kulagina": 252, "barb": 252, "abducen": 252, "electron": [252, 321], "compter": 252, "neurocytologi": 252, "brecht": 252, "sakmann": 252, "recept": 252, "barrel": 252, "553": 252, "265": 252, "whisker": 252, "deflect": 252, "septa": 252, "543": 252, "breen": 252, "gerken": 252, "butera": 252, "2843": 252, "2862": 252, "brennan": 252, "jedrasiak": 252, "cape": 252, "kailasa": 252, "rice": 252, "sudhakar": 252, "thalamu": 252, "claustrum": 252, "retrospleni": 252, "62207": 252, "hyperexcit": 252, "superfici": 252, "1598": 252, "1612": 252, "e8": 252, "breton": 252, "provench": 252, "bakhshetyan": 252, "hardi": 252, "bammann": 252, "cavarretta": 252, "snapyan": 252, "c\u00f4t\u00e9": 252, "saghatelyan": 252, "12659": 252, "ncomms12659": 252, "gerstner": 252, "3637": 252, "3642": 252, "monier": 252, "gonz\u00e1lez": 252, "vitro": 252, "lilith": 252, "fournier": 252, "379": 252, "parametr": 252, "1597": 252, "1601": 252, "2007a": 252, "goodman": 252, "zirp": 252, "natschl\u00e4ger": 252, "pecevski": 252, "ermentrout": 252, "djurfeldt": 252, "lansner": 252, "rochel": 252, "vievil": 252, "boustani": 252, "2007b": 252, "briant": 252, "paton": 252, "picker": 252, "champnei": 252, "vascular": 252, "postganglion": 252, "371": 252, "jtbi": 252, "037": 252, "reinboth": 252, "spilioti": 252, "miranda": 252, "rodriguez": 252, "rorsman": 252, "\u03b4": 252, "\u03b2": 252, "somatostatin": 252, "197": 252, "215": 252, "jp274581": 252, "stalbovskii": 252, "nolan": 252, "vasoconstrictor": 252, "preganglion": 252, "elev": 252, "hypertens": 252, "2756": 252, "2778": 252, "00350": 252, "briska": 252, "uhlrich": 252, "299": 252, "305": 252, "1531": 252, "globu": 252, "pallidu": 252, "fnsy": 252, "00040": 252, "broicher": 252, "kanyshkova": 252, "landgraf": 252, "rankov": 252, "meuth": 252, "pape": 252, "budd": 252, "splice": 252, "132": 252, "145": [252, 377], "384": 252, "399": 252, "seidenbech": 252, "munsch": 252, "antiepilept": 252, "drug": 252, "relai": 252, "431": 252, "broser": 252, "schult": 252, "lang": 252, "helmchen": 252, "wittum": 252, "anisotrop": 252, "1253": 252, "1264": 252, "evan": 252, "smith": [252, 391], "rich": [252, 374], "ransom": 252, "hypotherm": 252, "neuroprotect": 252, "reperfus": 252, "exposur": 252, "aglycemia": 252, "acidif": 252, "e14007": 252, "14814": 252, "phy2": 252, "14007": 252, "feerick": 252, "fitzhugh": 252, "nagumo": 252, "4731": 252, "4734": 252, "moraru": 252, "schaff": 252, "biochem": 252, "011": 252, "0317": 252, "zador": 252, "hebbian": 252, "lippmann": 252, "moodi": 252, "mateo": 252, "morgan": 252, "kaufmann": 252, "1991a": 252, "debat": 252, "davi": 252, "1991b": 252, "mckenna": 252, "zornetz": 252, "1992": [252, 376], "br\u00fcderl": 252, "petrovici": 252, "vogging": 252, "ehrlich": 252, "pfeil": 252, "millner": 252, "gruebl": 252, "wendt": 252, "schwartz": 252, "jeltsch": 252, "fier": 252, "schill": 252, "breitwies": 252, "petkov": 252, "krishnamurthi": 252, "kremkow": 252, "lundqvist": 252, "partzsch": 252, "scholz": 252, "zuehl": 252, "mayr": 252, "potjan": 252, "schueffni": 252, "schemmel": 252, "meier": 252, "comprehens": [252, 392], "0435": 252, "brunner": 252, "ster": 252, "weert": 252, "andr\u00e1si": 252, "neubrandt": 252, "corti": 252, "corsi": 252, "ferraguti": 252, "gerber": 252, "szabad": 252, "silenc": 252, "mglu2": 252, "7285": 252, "7298": 252, "4537": 252, "analogu": 252, "13033": 252, "ncomms13033": 252, "bryman": 252, "photoreceptor": 252, "acuiti": 252, "vision": 252, "348": 252, "e7": 252, "berkov": 252, "e1009521": 252, "1009521": 252, "zandt": 252, "rossert": 252, "117": [252, 376], "3192": 252, "3202": 252, "1906369117": 252, "buccino": 252, "mearec": 252, "testbench": 252, "185": [252, 373], "204": 252, "09467": 252, "hagen": 252, "haflig": 252, "cauwenbergh": 252, "2627": 252, "2630": 252, "8512788": 252, "hurwitz": 252, "garcia": 252, "magland": 252, "hennig": 252, "spikeinterfac": 252, "unifi": 252, "61834": 252, "kordovan": 252, "ness": 252, "merkt": 252, "h\u00e4fliger": 252, "fyhn": 252, "rotter": 252, "multielectrod": 252, "1232": 252, "00210": 252, "kuchta": 252, "j\u00e6ger": 252, "berthet": 252, "mardal": 252, "tveito": 252, "probe": [252, 392], "026030": 252, "ab03a1": 252, "somata": 252, "977": 252, "8036988": 252, "999": 252, "8512498": 252, "2018c": 252, "buckingham": 252, "spencer": 252, "metazoan": 252, "861": 252, "868": 252, "ali": 252, "zebrafish": 252, "larval": 252, "3055": 252, "3063": 252, "bucurenciu": 252, "nanodomain": 252, "sensor": 252, "536": 252, "545": 252, "026": 252, "budak": 252, "grosh": 252, "sasmal": 252, "corfa": 252, "synaptopathi": 252, "e1008499": 252, "1008499": 252, "royal": 252, "272": 252, "coulon": 252, "pawlowski": 252, "jape": 252, "halothan": 252, "pfl\u00fcger": 252, "buonomano": 252, "1129": 252, "1141": 252, "2275": 252, "2283": 252, "burton": 252, "urban": 252, "feedforward": 252, "14103": 252, "14122": 252, "0746": 252, "b\u00fa": 252, "antal": 252, "emri": 252, "intrathalam": 252, "spindl": 252, "biologica": 252, "hungarica": 252, "bush": 252, "prieb": 252, "microcolumn": 252, "855": 252, "867": 252, "princ": 252, "posttraumat": 252, "epileptogenesi": 252, "1748": 252, "1758": 252, "166": 252, "2183": 252, "2193": 252, "schr\u00f6der": 252, "k\u00f6hling": 252, "oss": 252, "db": 252, "e1008023": 252, "1008023": 252, "mak": 252, "henderson": 252, "661": 252, "670": 252, "2490": 252, "2500": 252, "implant": 252, "1889": 252, "1894": 252, "normann": 252, "036009": 252, "byczkowicz": 252, "eshra": 252, "montanaro": 252, "trevisiol": 252, "hirrling": 252, "hallermann": 252, "hcn": 252, "e42766": 252, "42766": 252, "bywalez": 252, "patirnich": 252, "rupprecht": 252, "p\u00e1lfi": 252, "r\u00f3zsa": 252, "601": 252, "051": 252, "cagnan": 252, "meijer": 252, "gil": 252, "krupa": 252, "heida": 252, "wadman": 252, "marten": 252, "parkinson": 252, "1306": 252, "1317": 252, "1460": 252, "9568": 252, "06922": 252, "cakir": 252, "nobl": 252, "labadi": 252, "robot": 252, "intervent": [252, 382], "2513006": 252, "cali": 252, "pignatelli": 252, "carleton": 252, "infer": 252, "330": 252, "calin": 252, "jageman": 252, "2923": 252, "2927": 252, "tunstal": 252, "mensh": 252, "frost": 252, "tritonia": 252, "2382": 252, "2398": 252, "callawai": 252, "lasser": 252, "ross": 252, "barnacl": 252, "1157": 252, "cameron": 252, "vafai": 252, "regener": [252, 279], "goldfish": 252, "camir\u00e9": 252, "lazarevich": 252, "topolnik": 252, "00047": 252, "camu\u00f1a": 252, "mesa": 252, "quiroga": 252, "1191": 252, "neco_a_00433": 252, "canakci": 252, "inci": 252, "kuzum": 252, "rippl": 252, "e0184542": 252, "0184542": 252, "canavi": 252, "midbrain": 252, "dopamin": 252, "donnel": 252, "probabilist": 252, "e1000886": 252, "1000886": 252, "sui": 252, "lyu": 252, "chai": 252, "epiretin": 252, "neuroengin": 252, "s12984": 252, "0065": 252, "capllonch": 252, "juan": 252, "koelbl": 252, "sepulveda": 252, "discretis": 252, "ceec": 252, "7835916": 252, "kolbl": 252, "unidirect": 252, "39th": 252, "8036804": 252, "embec": 252, "nbc": 252, "eskola": 252, "v\u00e4is\u00e4nen": 252, "viik": 252, "hyttinen": 252, "singapor": 252, "662": 252, "ohmic": 252, "11th": 252, "ceec47804": 252, "8974323": 252, "e1007826": 252, "1007826": 252, "gandar": 252, "greiner": 252, "moraud": 252, "wenger": 252, "shkorbatova": 252, "musienko": 252, "minev": 252, "lacour": 252, "courtin": 252, "subdur": 252, "electrochem": 252, "therapi": 252, "026024": 252, "aaa87a": 252, "raspopov": 252, "beauparl": 252, "bassi": 252, "luciani": 252, "micera": 252, "epidur": 252, "sensorimotor": 252, "19326": 252, "19340": 252, "1688": 252, "capurro": 252, "diambra": 252, "malta": 252, "heart": 252, "beat": 252, "medit": 252, "physica": 252, "327": 252, "carbunaru": 252, "reson": 252, "758": 252, "carlin": 252, "jiang": 252, "jordan": 252, "brownston": 252, "bistabl": [252, 370], "1635": 252, "1646": 252, "bui": 252, "staircas": 252, "5343": 252, "5353": 252, "5458": 252, "qualit": 252, "1995a": 252, "1995b": 252, "78": [252, 279, 391], "720": 252, "workbench": 252, "carr": 252, "cantrel": 252, "scheuer": 252, "catteral": 252, "surmeier": 252, "novel": 252, "carrillo": 252, "tolu": 252, "biosystem": 252, "cartmel": 252, "tian": 252, "thio": 252, "leuz": 252, "dor": 252, "mcnab": 252, "halpern": 252, "multimod": 252, "accumben": 252, "198": 252, "149": 252, "carvalho": 252, "774": 252, "785": 252, "casal": 252, "mccormick": 252, "18289": 252, "18302": 252, "4417": 252, "casaleggio": 252, "errat": 252, "arrhythmia": 252, "e100288": 252, "0100288": 252, "casali": 252, "marenzi": 252, "medini": 252, "casellato": 252, "00037": 252, "tognolina": 252, "gandolfi": 252, "mapelli": 252, "uncov": 252, "635": 252, "s42003": 252, "01360": 252, "llobet": 252, "terni": 252, "g\u00f3mez": 252, "aranda": 252, "blanch": 252, "doohan": 252, "revil": 252, "blasi": 252, "solsona": 252, "pore": 252, "clostridium": 252, "perfringen": 252, "\u03b5": 252, "toxin": 252, "0051": 252, "cassara": 252, "hagberg": 252, "bianciardi": 252, "maraviglia": 252, "ultra": 252, "1228": 252, "1241": 252, "castelfranco": 252, "hartlin": 252, "invertebr": 252, "521": 252, "0552": 252, "cataldi": 252, "lariccia": 252, "marzaioli": 252, "cavaccini": 252, "curia": 252, "viggiano": 252, "canzoniero": 252, "renzo": 252, "avoli": 252, "annunziato": 252, "zn2": 252, "2274": 252, "2284": 252, "bricklei": 252, "cull": [252, 289], "candi": 252, "farrant": 252, "6074": 252, "6085": 252, "cattani": 252, "solina": 252, "canuto": 252, "00030": 252, "cauller": 252, "connor": 252, "229": 252, "762": 252, "igarashi": 252, "odor": 252, "7625": 252, "25740": 252, "tegolo": 252, "emiss": 252, "00310": 252, "glomerular": 252, "00067": 252, "cazad": 252, "bidaud": 252, "lori": 252, "chemin": 252, "submembran": 252, "e22331": 252, "22331": 252, "caz\u00e9": 252, "humphri": 252, "gutkin": 252, "e1002867": 252, "1002867": 252, "jarvi": 252, "foust": 252, "schultz": 252, "2511": 252, "2527": 252, "neco_a_00989": 252, "ceballo": 252, "tzounopoulo": 252, "le\u00e3o": 252, "ih": 252, "fusiform": 252, "00249": 252, "pena": 252, "epj": 252, "s11734": 252, "00176": 252, "prolong": 252, "2207": 252, "2217": 252, "047": 252, "cellot": 252, "maggi": 252, "castro": 252, "catalano": 252, "scattoni": 252, "calamandrei": 252, "cherubini": 252, "impair": 252, "autist": 252, "neonat": 252, "btbr": 252, "tf": 252, "31696": 252, "srep31696": 252, "logan": 252, "kath": 252, "rieck": 252, "axonless": 252, "cerc\u00f3": 252, "miguel": 252, "trueta": 252, "autoinhibit": 252, "leech": 252, "1075": 252, "1085": 252, "cerina": 252, "szkudlarek": 252, "nguyen": 252, "g\u00f6bel": 252, "kv": 252, "noxiou": 252, "british": 252, "pharmacologi": 252, "172": 252, "3126": 252, "3140": 252, "bph": 252, "13113": 252, "cest\u00e8l": 252, "labat": 252, "rusconi": 252, "tarantino": 252, "mumoli": 252, "franceschetti": 252, "annesi": 252, "mantegazza": 252, "gambardella": 252, "t1174": 252, "epilepsia": 252, "927": 252, "935": 252, "epi": 252, "12123": 252, "2013a": 252, "schiavon": 252, "nonfunct": 252, "rescu": 252, "17546": 252, "17551": 252, "1309827110": 252, "2013b": 252, "chadderdon": 252, "mohan": 252, "suter": 252, "kerr": 252, "franci": 252, "1239": 252, "1262": 252, "neco_a_00602": 252, "reinforc": 252, "e47251": 252, "0047251": 252, "chakraborti": 252, "truong": 252, "bikson": 252, "kaphzan": 252, "2786": 252, "bhx158": 252, "chamber": 252, "bethwait": 252, "peachei": 252, "abramson": 252, "00053": 252, "bornstein": 252, "gwynn": 252, "koussoula": 252, "gastrointestin": 252, "tract": 252, "american": 252, "liver": 252, "307": 252, "g517": 252, "g532": 252, "ajpgi": 252, "00228": 252, "chan": 252, "guzman": 252, "ilij": 252, "mercer": 252, "rick": 252, "tkatch": 252, "meredith": 252, "rejuven": 252, "1081": 252, "1086": 252, "hcn2": 252, "hcn1": 252, "autonom": [252, 382], "9921": 252, "9932": 252, "kuo": 252, "weng": 252, "lin": 252, "cheng": 252, "lien": 252, "ba2": 252, "bupivacain": 252, "oligodendrocyt": 252, "precursor": 252, "4843": 252, "4858": 252, "257113": 252, "krautham": 252, "92": 252, "higlei": 252, "e13747": 252, "13747": 252, "chaturvedi": 252, "foutz": 252, "lujan": 252, "056023": 252, "chatzikalymni": 252, "gumu": 252, "skinner": 252, "982": 252, "23364": 252, "orien": 252, "lacunosum": 252, "olm": 252, "\u03b8": 252, "lfp": 252, "510": 252, "0146": 252, "monteil": 252, "bourinet": 252, "nargeot": 252, "a1g": 252, "1238": 252, "2001a": 252, "rey": 252, "isotyp": 252, "1g": 252, "1h": 252, "1i": 252, "540": 252, "endogen": 252, "cannabinoid": 252, "anandamid": 252, "embo": 252, "7033": 252, "7040": 252, "2001b": 252, "siquier": 252, "pernet": 252, "nicouleau": 252, "barcia": 252, "ahmad": 252, "medina": 252, "cano": 252, "hanein": 252, "altin": 252, "bole": 252, "feysot": 252, "fourag": 252, "nitschk\u00e9": 252, "thevenon": 252, "rio": 252, "blanc": 252, "vidal": 252, "bahi": 252, "buisson": 252, "desguerr": 252, "munnich": 252, "lyonnet": 252, "boddaert": 252, "fassi": 252, "shinawi": 252, "zimmerman": 252, "amiel": 252, "faivr": 252, "colleaux": 252, "cantagrel": 252, "novo": 252, "childhood": 252, "atrophi": 252, "cacna1g": 252, "awy145": 252, "chemla": 252, "chavan": 252, "vsdi": 252, "438": 252, "gabaa": 252, "115": 252, "2867": 252, "2879": 252, "00352": 252, "stiefel": 252, "bullock": 252, "coral": 252, "neuroethologi": 252, "195": 252, "thon": 252, "eghbal": 252, "ahmadi": 252, "baram": 252, "febril": 252, "zheng": 252, "htsort": 252, "657151": 252, "murphi": 252, "raymond": 252, "methyl": 252, "164": 252, "ren": 252, "nonsatur": 252, "212": 252, "219": 252, "zhang": 252, "zhou": 252, "luo": 252, "tast": 252, "china": 252, "1047": [252, 347], "s11427": 252, "0138": 252, "2009a": 252, "biomimet": 252, "biosensor": 252, "acid": 252, "sensat": 252, "actuat": 252, "139": 252, "576": 252, "583": 252, "2009b": 252, "georg": 252, "camp": 252, "alloster": 252, "188": 252, "shen": 252, "midtgaard": 252, "2755": 252, "2764": 252, "shu": 252, "kapur": 252, "bayliss": 252, "knock": 252, "2611": 252, "2622": 252, "3771": 252, "kennedi": 252, "willcox": 252, "isofluran": 252, "knockout": 252, "2009c": 252, "kinas": 252, "ch\u00e9reau": 252, "saraceno": 252, "angibaud": 252, "superresolut": 252, "114": 252, "1607541114": 252, "chiang": 252, "chien": 252, "chiu": 252, "adolesc": 252, "3393": 252, "chimento": 252, "doshai": 252, "macular": 252, "micrograph": 252, "1883": 252, "macula": 252, "781": 252, "chiovini": 252, "turi": 252, "katona": 252, "kasz\u00e1": 252, "ma\u00e1k": 252, "szalai": 252, "szab\u00f3": 252, "szadai": 252, "k\u00e1li": 252, "908": 252, "924": 252, "004": 252, "chitwood": 252, "nonpyramid": 252, "plenum": 252, "hubbard": 252, "515": 252, "743": 252, "756": 252, "lur": 252, "elli": 252, "340": 252, "759": 252, "1234274": 252, "choi": 252, "waxman": 252, "3173": 252, "3184": 252, "00100": 252, "chono": 252, "takagi": 252, "koyama": 252, "suzuki": 252, "ito": 252, "chow": 252, "3013": 252, "3021": 252, "alessandro": 252, "lega": 252, "hildebrand": 252, "antenn": 252, "lobe": 252, "chung": 252, "im": [252, 378], "seo": 252, "42nd": 252, "conf": 252, "2938": 252, "2941": 252, "9175250": 252, "ciotti": 252, "pedrocchi": 252, "pudend": 252, "bioelectron": 252, "sexual": 252, "dysfunct": 252, "270": 252, "9441309": 252, "monsivai": 252, "johnson": 252, "lebel": 252, "gobbi": 252, "ramasubbu": 252, "kiss": 252, "subcallos": 252, "cingul": 252, "1094": 252, "1101": 252, "clai": 252, "paydarfar": 252, "forger": 252, "1421": 252, "1428": 252, "1098": 252, "rsif": 252, "0166": 252, "cleland": 252, "sethupathi": 252, "topograph": 252, "bmc": 252, "2202": 252, "clopath": 252, "b\u00fcsing": 252, "vasilaki": 252, "352": 252, "2479": 252, "cochran": 252, "nieser": 252, "z\u00f6llner": 252, "mcinni": 252, "enrich": 252, "gemb": 252, "gigasci": 252, "giaa091": 252, "coggan": 252, "prescott": 252, "20602": 252, "20609": 252, "1013798107": 252, "cal\u00ec": 252, "lehv\u00e4slaiho": 252, "norepinephrin": 252, "glycogenolysi": 252, "fuel": 252, "lactat": 252, "e1006392": 252, "1006392": 252, "afterdischarg": 252, "0562": 252, "cohen": 252, "shappir": 252, "yitzchaik": 252, "spira": 252, "transistor": 252, "electro": 252, "aplysia": 252, "656": 252, "grown": [252, 382], "811": 252, "819": 252, "klooster": 252, "weil": 252, "m\u00f6biu": 252, "nave": 252, "saltatori": [252, 374], "periaxon": 252, "nanocircuit": 252, "322": 252, "e15": 252, "8988": 252, "8998": 252, "0261": 252, "coker": 252, "zellmer": 252, "moran": 252, "micro": [252, 386, 387, 388], "siev": 252, "bidirect": 252, "026001": 252, "aaefcf": 252, "026002": 252, "aaefab": 252, "colbert": 252, "533": 252, "colburn": 252, "brughera": 252, "brainstem": 252, "bilater": 252, "otolaryngologi": 252, "comb": 252, "8127": 252, "0449": 252, "cond": 252, "013": 252, "0447": 252, "connelli": 252, "autapt": 252, "e89995": 252, "0089995": 252, "crunelli": 252, "errington": 252, "15505": 252, "15522": 252, "2740": 252, "3735": 252, "3754": 252, "3836": 252, "intracort": 252, "schwindt": 252, "grand": 252, "spain": 252, "2116": 252, "2128": 252, "wilhelm": 252, "guest": [252, 396], "liang": 252, "s0079": 252, "6123": 252, "65001": 252, "coomb": 252, "timofeeva": 252, "svensson": 252, "lord": 252, "josic": 252, "cox": 252, "trip": 252, "cornford": 252, "mercier": 252, "leit": 252, "magloir": 252, "e49872": 252, "49872": 252, "formento": 252, "locomotor": 252, "neurorehabilit": 252, "coskren": 252, "kabaso": 252, "wearn": 252, "yadav": 252, "rumbel": 252, "rhesu": 252, "0541": 252, "couto": 252, "kilohertz": 252, "ineffect": 252, "00022": 252, "linaro": 252, "e1004112": 252, "1004112": 252, "coventri": 252, "parthasarathi": 252, "sommer": 252, "bartlett": 252, "winner": 252, "particl": [252, 378], "swarm": 252, "social": 252, "0628": 252, "crane": 252, "neild": 252, "arteriolar": 252, "microcircul": 252, "cremonesi": 252, "hager": 252, "wellein": 252, "428": 252, "449": 252, "1094342020912528": 252, "09451": 252, "criado": 252, "gasulla": 252, "mantovani": 252, "cluster49012": 252, "crotti": 252, "lasker": 252, "011908": 252, "physrev": 252, "intersymbol": 252, "1006": 252, "1009": 252, "metabol": 252, "1652": 252, "1656": 252, "3843": 252, "3854": 252, "1237": 252, "1246": 252, "cruz": 252, "148": 252, "kushmerick": 252, "moreira": 252, "lobo": 252, "thiamin": 252, "053": 252, "csernai": 252, "borb\u00e9li": 252, "burka": 252, "feket": 252, "balogh": 252, "barth\u00f3": 252, "597": 252, "4069": 252, "4086": 252, "jp277664": 252, "cserp\u00e1n": 252, "mesz\u00e9na": 252, "wittner": 252, "t\u00f3th": 252, "ulbert": 252, "somogyv\u00e1ri": 252, "w\u00f3jcik": 252, "62017": 252, "cudmor": 252, "giraud": 252, "12885": 252, "12895": 252, "0740": 252, "culmon": 252, "peptid": 252, "00052": 252, "bird": 252, "mittag": 252, "schneider": 252, "mediavilla": 252, "hoffmann": 252, "deller": 252, "constanc": 252, "3647": 252, "3662": 252, "028": 252, "borst": 252, "1742": 252, "4682": 252, "haag": 252, "11082": 252, "11085": 252, "forstner": 252, "axo": 252, "10229": 252, "10233": 252, "currin": 252, "akerman": 252, "raimondo": 252, "e1007932": 252, "1007932": 252, "curti": 252, "budelli": 252, "pereda": 252, "1683": 252, "1699": 252, "cutsuridi": 252, "mimet": 252, "655": 252, "s12559": 252, "09658": 252, "cobb": 252, "423": 252, "20661": 252, "spatio": 252, "quantifi": 252, "intellig": 252, "bioinspir": 252, "cabestani": 252, "prieto": 252, "sandov": 252, "berlin": 252, "maffei": 252, "armano": 252, "rossi": 252, "taglietti": 252, "fontana": 252, "naldi": 252, "rimehaug": 252, "stasik": 252, "e1008386": 252, "1008386": 252, "hernando": 252, "plana": 252, "devress": 252, "dichter": 252, "povolotski": 252, "sonata": 252, "e1007696": 252, "1007696": 252, "amico": 252, "l\u00f3pez": 252, "jokanov": 252, "sirvent": 252, "corbalan": 252, "drom": 252, "47th": 252, "3229710": 252, "3229752": 252, "hopp": 252, "motion": 252, "5787": 252, "23998": 252, "daneshi": 252, "kohan": 252, "lashkari": 252, "sparrei": 252, "paranod": 252, "damag": 252, "395": 252, "411": 252, "1691": 252, "1195": 252, "1211": 252, "3203": 252, "stratifi": 252, "593": 252, "3549": 252, "3576": 252, "jp270688": 252, "dasgupta": 252, "sikdar": 252, "269": 252, "22371": 252, "datunashvili": 252, "chaudhari": 252, "zobeiri": 252, "l\u00fcttjohann": 252, "mergia": 252, "baumann": 252, "balfanz": 252, "luijtelaar": 252, "koesl": 252, "cyclic": 252, "nucleotid": 252, "00369": 252, "daur": 252, "nadim": 252, "bucher": 252, "00477": 252, "dave": 252, "mahapatra": 252, "5359": 252, "5362": 252, "7319602": 252, "guinea": 252, "pig": 252, "bioinformat": 252, "1750011": 252, "s0219720017500111": 252, "linster": 252, "cacheaux": 252, "iven": 252, "lapilov": 252, "kaufer": 252, "friedman": 252, "10588": 252, "10599": 252, "gu\u00e9rin": 252, "malzach": 252, "schad": 252, "wald": 252, "magnetostimul": 252, "5316": 252, "05493": 252, "vom": 252, "endt": 252, "coil": 252, "electromagnet": 252, "686": 252, "701": 252, "mrm": 252, "27382": 252, "merrison": 252, "hort": 252, "soff": 252, "borisyuk": 252, "fascicul": 252, "tadpol": 252, "13551": 252, "13804": 252, "chapman": 252, "crc": 252, "287": 252, "dendrodendrit": 252, "1921": 252, "1935": 252, "modal": 252, "5604": 252, "5615": 252, "eppler": 252, "perrinet": 252, "yger": 252, "pynn": 252, "374": 252, "davoin": 252, "ulrich": 252, "frontal": 252, "kir2": 252, "kleak": 252, "8776": 252, "8787": 252, "wokosin": 252, "plotkin": 252, "striatal": 252, "11603": 252, "11614": 252, "pava": 252, "panch": 252, "orozco": 252, "\u00e1lvarez": 252, "henao": 252, "gallo": 252, "\u00f3": 252, "daza": 252, "santacoloma": 252, "guti\u00e9rrez": 252, "revista": 252, "facultad": 252, "ingenier\u00eda": 252, "universidad": 252, "antioquia": 252, "debai": 252, "wolfart": 252, "franc": 252, "masson": 252, "pari": 252, "558": 252, "degro": 252, "somatodendrit": 252, "00006": 252, "deister": 252, "wilson": 252, "8452": 252, "8461": 252, "deitcher": 252, "kanari": 252, "verhoog": 252, "atenekeng": 252, "kahou": 252, "kock": 252, "morpho": 252, "l3": 252, "5398": 252, "5414": 252, "bhx226": 252, "dekker": 252, "briair": 252, "frijn": 252, "0503": 252, "delanei": 252, "sedlak": 252, "autuori": 252, "sah": 252, "basolater": 252, "triheteromer": 252, "glun2b": 252, "1391": 252, "delattr": 252, "perich": 252, "220": 252, "00220": 252, "sadoc": 252, "shin": 252, "uebel": 252, "renger": 252, "12228": 252, "12236": 252, "1362": 252, "delgado": 252, "desai": 252, "15713": 252, "15725": 252, "3068": 252, "delorm": 252, "365": 252, "delvendahl": 252, "straub": 252, "00093": 252, "demaegd": 252, "stein": 252, "e1008057": 252, "1008057": 252, "neuropeptid": 252, "7607": 252, "7622": 252, "0101": 252, "dembitskaya": 252, "semyanov": 252, "2118": 252, "poddubnayai": 252, "makedonskyi": 252, "epileptiform": 252, "hyppocamp": 252, "possess": 252, "thermosensit": 252, "trp": 252, "s11062": 252, "9624": 252, "desjardin": 252, "reinker": 252, "miura": 252, "neuman": 252, "142": 252, "9099": 252, "9111": 252, "2175": 252, "506": 252, "babloyantz": 252, "neuroreport": 252, "1552": 252, "1993a": 252, "ferret": 252, "2049": 252, "2070": 252, "rhythmic": 252, "reticular": 252, "803": 252, "818": 252, "1994a": 252, "2220": 252, "1994b": 252, "1998a": 252, "coher": 252, "443": [252, 373], "555": 252, "563": 252, "huguenard": 252, "thermodynam": 252, "259": 252, "boca": 252, "raton": 252, "fl": 252, "par\u00e9": 252, "somato": 252, "1998b": 252, "1994c": 252, "synthesi": 252, "231": 252, "1994d": 252, "norwel": 252, "kluwer": 252, "arbib": 252, "956": 252, "959": 252, "1998c": 252, "1130": 252, "marder": 252, "789": 252, "795": 252, "reticulari": 252, "2473": 252, "2477": 252, "1993b": 252, "3574": 252, "3588": 252, "1998d": 252, "1547": 252, "bombard": 252, "233": 252, "238": 252, "901": 252, "906": 252, "fellou": 252, "739": 252, "spillov": 252, "aminobutyr": 252, "9515": 252, "9519": 252, "amsterdam": 252, "elsevi": 252, "1049": 252, "1053": 252, "philosoph": 252, "devaux": 252, "gow": 252, "insul": 252, "909": 252, "yarom": 252, "inferior": 252, "olivari": 252, "3048": 252, "3058": 252, "dewel": 252, "gabbiani": 252, "collis": 252, "e34238": 252, "34238": 252, "1753": 252, "1764": 252, "00363": 252, "691": 252, "706": 252, "deyo": 252, "hypersynchroni": 252, "psychopharmacologi": 252, "735": 252, "dhupia": 252, "rathour": 252, "constrict": 252, "00456": 252, "diaz": 252, "wadleigh": 252, "mimic": 252, "e55673": 252, "0055673": 252, "diba": 252, "lester": 252, "9723": 252, "9733": 252, "dietz": 252, "greenberg": 252, "mcalpin": 252, "interaur": 252, "convei": 252, "envelop": [252, 371], "binaur": 252, "jaro": 252, "s10162": 252, "0573": 252, "dijk": 252, "verhagen": 252, "bour": 252, "veltink": 252, "capsul": 252, "561": 252, "12702": 252, "046003": 252, "dityatev": 252, "chmykhova": 252, "dityateva": 252, "babalian": 252, "kleinl": 252, "clamann": 252, "reticulospin": 252, "lumbar": 252, "430": [252, 287], "neurolog": 252, "psychiatr": 252, "senbhattacharya": 252, "chowdhuri": 252, "lombardo": 252, "ltp": 252, "ltd": 252, "e21928": 252, "0021928": 252, "goldfarb": 252, "532": 252, "djuris": 252, "zecev": 252, "zone": 252, "6703": 252, "6714": 252, "4057": 252, "4068": 252, "doiron": 252, "berman": 252, "maler": 252, "noonan": 252, "lemon": 252, "doischer": 252, "hosp": 252, "yanagawa": 252, "obata": 252, "postnat": 252, "12956": 252, "12968": 252, "domanski": 252, "phenotyp": 252, "fmr1": 252, "4814": 252, "12736": 252, "donlei": 252, "bergin": 252, "schulz": 252, "undergradu": 252, "741": 252, "9441407": 252, "donnelli": 252, "carotid": 252, "1394": 252, "doron": 252, "1550": 252, "1561": 252, "dorp": 252, "zeeuw": 252, "unipolar": 252, "5403": 252, "5408": 252, "1314219111": 252, "dougali": 252, "matthew": 252, "liss": 252, "ungless": 252, "ventrolater": 252, "periaqueduct": 252, "raph": 252, "vlpag": 252, "drn": 252, "275": 252, "0641": 252, "dougherti": 252, "islam": 252, "ventral": 252, "5707": 252, "5722": 252, "242693": 252, "dover": 252, "subramaniyam": 252, "fhf": 252, "ncomms12895": 252, "588": 252, "3695": 252, "3711": [252, 279], "192559": 252, "doyon": 252, "castonguai": 252, "godin": 252, "koninck": 252, "e1002149": 252, "1002149": 252, "drion": 252, "seutin": 252, "sepulchr": 252, "e41806": 252, "0041806": 252, "massott": 252, "reconcil": 252, "dopaminerg": 252, "e1002050": 252, "1002050": 252, "druckmann": 252, "0269": 252, "du": 252, "glycinerg": 252, "784": 252, "lindroo": 252, "ding": 252, "e7612": 252, "e7621": 252, "1704893114": 252, "hao": 252, "gigout": 252, "sundt": 252, "gamper": 252, "2306": 252, "2322": 252, "dudman": 252, "1000290": 252, "methodologi": [252, 382], "066024": 252, "ab3c95": 252, "dugladz": 252, "maziashvili": 252, "b\u00f6rger": 252, "gurgenidz": 252, "h\u00e4ussler": 252, "winkelmann": 252, "haa": 252, "kopel": 252, "glove": 252, "autoreceptor": 252, "15073": 252, "15078": 252, "1313505110": 252, "schmitz": 252, "whittington": 252, "1458": 252, "1461": 252, "1222017": 252, "tort": 252, "otah": 252, "mesial": 252, "17530": 252, "17535": 252, "duijnhouw": 252, "dukkipati": 252, "garrett": 252, "vulner": 252, "1745": 252, "jp275498": 252, "recognit": 252, "patrec": 252, "neurocontrol": 252, "lesion": 252, "sivagnanam": 252, "majumdar": 252, "neuroprosthesi": 252, "jrd": 252, "2656758": 252, "cantarelli": 252, "quintana": 252, "kedziora": 252, "netpyn": [252, 289, 393, 395], "e44494": 252, "44494": 252, "przekwa": 252, "musculoskelet": 252, "neurorobot": 252, "fnbot": 252, "durstewitz": 252, "gabriel": 252, "894": 252, "dyhrfjeld": 252, "johnsen": 252, "f\u00f6ldy": 252, "upregul": [252, 374], "huerta": 252, "tsimr": 252, "topolog": [252, 392], "1566": 252, "1587": 252, "dzubai": 252, "jahr": 252, "cleft": 252, "5265": 252, "5274": 252, "ebner": 252, "4295": 252, "4307": 252, "e6": 252, "068": 252, "ecker": 252, "s\u00e1rai": 252, "thomson": 252, "reimann": 252, "23220": 252, "edward": 252, "yeh": 252, "arnett": 252, "nagapann": 252, "crayfish": 252, "899": 252, "bast": 252, "udvari": 252, "messor": 252, "oberlaend": 252, "schmitt": 252, "wallac": 252, "14072": 252, "14077": 252, "1518773112": 252, "nevian": 252, "bruno": 252, "subcolumnar": 252, "876": [252, 279], "889": 252, "vrabec": 252, "mitig": 252, "1810": 252, "abeb": 252, "eguchi": 252, "stringer": 252, "oppon": 252, "00016": 252, "ehl": 252, "bista": 252, "480": 252, "s00424": 252, "1188": 252, "eiching": 252, "herrmann": 252, "pankratz": 252, "herti": 252, "health": 252, "eiber": 252, "payn": 252, "biscola": 252, "havton": 252, "keast": 252, "osborn": 252, "fallon": 252, "viscer": 252, "ac36e2": 252, "ruck": 252, "gola": 252, "kovac": 252, "hundeheg": 252, "immunolog": 252, "461": 252, "jim": 252, "klug": 252, "pettersen": 252, "halgren": 252, "dale": 252, "2174": 252, "2190": 252, "marr": 252, "behuret": 252, "baudot": 252, "law": [252, 349, 371], "e1000519": 252, "1000519": 252, "pospischil": 252, "ghaleb": 252, "schneeberg": 252, "fern\u00e1ndez": 252, "quintero": 252, "geisler": 252, "pelizzari": 252, "polstra": 252, "deneck": 252, "campiglio": 252, "liedl": 252, "renta": 252, "marsh": 252, "conlin": 252, "tuluc": 252, "kutsch": 252, "flucher": 252, "neurodevelopment": 252, "144": 252, "2092": 252, "2106": 252, "awab101": 252, "elaagoubi": 252, "mushahwar": 252, "3961": 252, "3974": 252, "570": 252, "355": 252, "1243": 252, "1261": 252, "japplphysiol": 252, "00496": 252, "amendola": 252, "heckman": 252, "superoxid": 252, "dismutas": 252, "5544": 252, "5558": 252, "0434": 252, "intraspin": 252, "microstimul": 252, "103": 252, "286": 252, "1824": 252, "1836": 252, "elbaz": 252, "buterman": 252, "neuroconstruct": 252, "circuitri": 252, "s12868": 252, "00578": 252, "bizri": 252, "kahlig": 252, "shryock": 252, "belardinelli": 252, "rajamani": 252, "ranolazin": 252, "paramyotonia": 252, "congenita": 252, "4161": 252, "14851": 252, "502": 252, "086": 252, "1913": 252, "1930": 252, "1000781": 252, "elgueta": 252, "5561": 252, "13533": 252, "k\u00f6hler": 252, "perisoma": 252, "4131": 252, "4139": 252, "3671": 252, "ellend": 252, "irkl": 252, "lamsa": 252, "15208": 252, "15222": 252, "1747": 252, "emnett": 252, "eisenman": 252, "izumi": 252, "zorumski": 252, "mennerick": 252, "pharmacodynam": 252, "memantin": 252, "ketamin": 252, "947": 252, "mol": [252, 289], "089334": 252, "engel": 252, "405": 252, "417": 252, "schulten": 252, "schild": 252, "1310": 252, "1319": 252, "enoki": 252, "kiuchi": 252, "koizumi": 252, "sasaki": 252, "kudo": [252, 382], "333": 252, "enrico": 252, "spiga": 252, "mula": 252, "caboni": 252, "diana": 252, "morphofunct": 252, "tegment": 252, "opiat": 252, "withdraw": 252, "grobler": 252, "eriksson": 252, "frans\u00e9n": 252, "zilbert": 252, "ermolyuk": 252, "alder": 252, "surg": 252, "pavlov": 252, "1754": 252, "1763": 252, "3563": 252, "esler": 252, "maturana": 252, "055001": 252, "aacbaa": 252, "nikol": 252, "pyrho": 252, "optogenet": 252, "00008": 252, "ewart": 252, "langen": 252, "delalondr": 252, "neuromapp": 252, "mini": 252, "kunkel": 252, "yokota": 252, "balaji": 252, "key": 252, "8063": 252, "8071": 252, "5431": 252, "testa": 252, "benavid": 252, "piccion": 252, "defelip": 252, "lodder": 252, "e16553": 252, "16553": 252, "patil": 252, "unravel": 252, "starburst": 252, "e1009754": 252, "1009754": 252, "yi": 252, "deng": 252, "asymptot": 252, "neco_a_01438": 252, "farahani": 252, "kronberg": 252, "fallahrad": 252, "oviedo": 252, "parra": 252, "fardet": 252, "levina": 252, "e1008503": 252, "1008503": 252, "farinella": 252, "ruedt": 252, "lanor": 252, "nmdar": 252, "l5": 252, "e1003590": 252, "1003590": 252, "farisello": 252, "boido": 252, "medrihan": 252, "cesca": 252, "valtorta": 252, "baldelli": 252, "benfenati": 252, "extrasynapt": 252, "synapsin": 252, "bhs041": 252, "farri": 252, "1838": 252, "1855": 252, "00054": 252, "farrow": 252, "1312": 252, "1320": 252, "feetham": 252, "nunn": 252, "lewi": 252, "dart": 252, "barrett": 252, "jollei": 252, "trpv4": 252, "osmosensor": 252, "paraventricular": 252, "1768": 252, "13023": 252, "fellner": 252, "stiennon": 252, "rattai": 252, "spheric": [252, 386], "1315": 252, "1328": 252, "00700": 252, "829": 252, "Wills": 252, "gebhart": 252, "colorect": 252, "2618": 252, "2634": 252, "00717": 252, "headlei": 252, "kanta": 252, "0388": 252, "9441199": 252, "samarth": 252, "amygdalar": 252, "370": 252, "376": 252, "059": 252, "955": 252, "975": 252, "051902": 252, "fenton": 252, "lenck": 252, "santini": 252, "zinyuk": 252, "kub\u00edk": 252, "bure": 252, "poucet": 252, "olyph": 252, "4613": 252, "4625": 252, "5576": 252, "ferdou": 252, "zeng": 252, "yan": 252, "berdichevski": 252, "6496": 252, "6499": 252, "embc46164": 252, "9629799": 252, "ferguson": 252, "huh": 252, "amilhon": 252, "manseau": 252, "bistratifi": 252, "00110": 252, "sevilla": 252, "fuenzalida": 252, "porto": 252, "pazo": 252, "bu\u00f1o": 252, "afterhyperpolar": 252, "3242": 252, "3255": 252, "ferrant": 252, "synergist": 252, "00439": 252, "blackwel": 252, "neuropharmacolog": 252, "chemistri": 252, "2456": 252, "2471": 252, "18004": 252, "18009": 252, "0904784106": 252, "2156": 252, "2165": 252, "3495": 252, "ferrares": 252, "jouhanneau": 252, "schreiber": 252, "poulet": 252, "3455": 252, "3465": 252, "088": 252, "ferrario": 252, "e33281": 252, "33281": 252, "palyanov": 252, "koutsik": 252, "robert": [252, 393], "unpredict": 252, "swim": 252, "e1009654": 252, "1009654": 252, "fietkiewicz": 252, "loparo": 252, "hypogloss": 252, "respiratori": 252, "065011": 252, "shafer": 252, "platt": 252, "cnsn": 252, "fineberg": 252, "ritter": 252, "covarrubia": 252, "elucid": 252, "recombin": 252, "jgp": 252, "201210869": 252, "finelli": 252, "hanei": 252, "bazhenov": 252, "stopfer": 252, "e1000062": 252, "1000062": 252, "fink": 252, "glisk": 252, "catoni": 252, "stacei": 252, "abnorm": 252, "0024": 252, "finn": 252, "weiland": 252, "argu": 252, "190": 252, "ojemb": 252, "3001563": 252, "fiorillo": 252, "fischer": 252, "westov": 252, "518": 252, "gutnick": 252, "852": 252, "2574": 252, "libman": 252, "cesium": 252, "dialysi": 252, "035001": 252, "polyamin": 252, "18994": 252, "18999": 252, "cumul": 252, "fleme": 252, "dunn": 252, "loweri": 252, "00166": 252, "or\u0142owski": 252, "chaillet": 252, "00639": 252, "fletcher": 252, "048": 252, "flore": 252, "barrera": 252, "lavil": 252, "plata": 252, "tapia": 252, "barga": 252, "galarraga": 252, "suprathreshold": 252, "corticostriat": 252, "719": 252, "731": 252, "fohlmeist": 252, "salamand": 252, "1947": 252, "1997a": 252, "1948": 252, "1964": 252, "1997b": 252, "3759": 252, "3777": 252, "00551": 252, "newman": 252, "1357": 252, "00123": 252, "foldi": 252, "howard": 252, "subpopul": 252, "folei": 252, "049": 252, "fontain": 252, "pe\u00f1a": 252, "e1003560": 252, "1003560": 252, "ford": 252, "ganguli": 252, "poorman": 252, "grissom": 252, "jenkin": [252, 382], "chiel": 252, "jansen": 252, "infrar": 252, "surgeri": 252, "lsm": 252, "23139": 252, "minassian": 252, "mignardot": 252, "goff": 252, "rowald": 252, "bloch": 252, "propriocept": 252, "1728": 252, "0262": 252, "forrest": 252, "dissoci": 252, "e68765": 252, "0068765": 252, "e51169": 252, "0051169": 252, "fortier": 252, "s00221": 252, "2483": 252, "brai": 252, "asymmetr": 252, "209": 252, "060": 252, "foubert": 252, "bennequin": 252, "droulez": 252, "milleret": 252, "interhemispher": 252, "707": 252, "2741": 252, "3640": 252, "collater": 252, "15490": 252, "15498": 252, "2752": 252, "e51901": 252, "0051901": 252, "2012a": 252, "arlow": 252, "channelrhodopsin": 252, "3235": 252, "3245": 252, "00501": 252, "2012b": 252, "066008": 252, "francavilla": 252, "guet": 252, "mccreight": 252, "amalyan": 252, "hui": 252, "michaud": 252, "marino": 252, "tremblai": 252, "\u00e8": 252, "vip": 252, "554405": 252, "frank": 252, "natora": 252, "linden": 252, "5626631": 252, "calmodulin": [252, 374], "bioessai": 252, "epileptogen": 252, "1630": 252, "1634": 252, "tigerholm": 252, "877": 252, "20694": 252, "freeman": 252, "jeng": 252, "hartveit": 252, "fri": 252, "prosthet": 252, "046005": 252, "frei": 252, "egert": 252, "heer": 252, "hafizov": 252, "hierlemann": 252, "microelectron": 252, "2198": 252, "friedrich": 252, "vella": 252, "guly\u00e1": 252, "freund": 252, "00063": 252, "nyl\u00e9n": 252, "grillner": 252, "cholinerg": 252, "2135": 252, "2148": 252, "14854": 252, "2021a": 252, "hjorth": 252, "snudda": 252, "748989": 252, "2021b": 252, "fujita": 252, "fukai": 252, "kitano": 252, "539": 252, "0368": 252, "slopsema": 252, "heyboer": 252, "polasek": 252, "0689": 252, "gal": 252, "schindel": 252, "718270": 252, "galati": 252, "hiester": 252, "00209": 252, "gallego": 252, "jame": 252, "meng": 252, "umashankar": 252, "picon": 252, "mazaraki": 252, "faisal": 252, "reynold": 252, "neuroinflamm": 252, "nawm": 252, "ranvier": 252, "e3001008": 252, "pbio": 252, "3001008": 252, "galloni": 252, "laffer": 252, "rancz": 252, "55761": 252, "kalman": 252, "104353": 252, "thermal": 252, "036020": 252, "ab131b": 252, "gao": 252, "00734": 252, "garc\u00eda": 252, "grajal": 252, "rucabado": 252, "dopico": 252, "j\u00e9rusalem": 252, "e0116532": 252, "0116532": 252, "lazaro": 252, "ho": 252, "schnupp": 252, "2359": 252, "2368": 252, "garden": 252, "dodson": 252, "875": 252, "garg": 252, "lakhani": 252, "09890": 252, "gartland": 252, "detwil": 252, "18353": 252, "18363": 252, "4212": 252, "11046": 252, "11056": 252, "ge": 252, "qian": 252, "1756": 252, "6606": 252, "geert": 252, "spiro": 252, "s13195": 252, "0343": 252, "pk": 252, "pd": [252, 392], "pharmacokinet": 252, "257": 252, "s10928": 252, "9297": 252, "twyman": 252, "alph": 252, "prospect": [252, 382], "mechanist": 252, "e49732": 252, "0049732": 252, "l\u00fcbke": 252, "1023": 252, "taskin": 252, "ionotrop": 252, "gemin": 252, "serna": 252, "zamith": 252, "assendorp": 252, "fossati": 252, "rosta": 252, "charrier": 252, "dualli": 252, "innerv": 252, "e3001375": 252, "3001375": 252, "sabarli": 252, "guigon": 252, "berri": 252, "delord": 252, "436": 252, "056": 252, "gentiletti": 252, "suffczynski": 252, "gnatkovski": 252, "1750004": 252, "577": 252, "2307": 252, "georgiadi": 252, "wrai": 252, "ourselin": 252, "warren": 252, "modat": 252, "pathogen": 252, "neurodegen": 252, "e0192518": 252, "0192518": 252, "gerlei": 252, "passlack": 252, "haw": 252, "vandrei": 252, "papastathopoulo": 252, "4228": 252, "17500": 252, "gertler": 252, "dichotom": 252, "10814": 252, "10824": 252, "gherardi": 252, "t\u00f6reyin": 252, "9441104": 252, "gibson": 252, "beierlein": 252, "467": 252, "democraci": 252, "3226": 252, "3234": 252, "341": 252, "zolnik": 252, "fidzinski": 252, "papoutsi": 252, "holtkamp": 252, "367": 252, "aax6239": 252, "gilli": 252, "2352": 252, "2365": 252, "ginebaugh": 252, "cypher": 252, "ortiz": 252, "laghaei": 252, "merinei": 252, "3504": 252, "3516": 252, "2415": 252, "gire": 252, "zak": 252, "whitesel": 252, "mulligan": 252, "hen": 252, "schoppa": 252, "mainli": [252, 382], "multistep": 252, "2964": 252, "2975": 252, "5580": 252, "glasauer": 252, "nystagmu": 252, "171": 252, "marin": 252, "earnshaw": 252, "sadeh": 252, "birgiola": 252, "cayco": 252, "gajic": 252, "crook": 252, "idili": 252, "larson": 252, "stanislova": 252, "albada": 252, "rai": 252, "dimitrova": 252, "e1000815": 252, "1000815": 252, "2010a": 252, "steuber": 252, "2010b": 252, "609": 252, "colibaba": 252, "redman": 252, "bachor": 252, "stricker": 252, "daria": 252, "prune": 252, "femtosecond": 252, "dendrotomi": 252, "19078": 252, "srep19078": 252, "goetz": 252, "11810": 252, "2017339118": 252, "goffredo": 252, "schmid": 252, "conforto": 252, "bilotti": 252, "palma": 252, "vegni": 252, "alessio": 252, "transcutan": 252, "1329": 252, "1345": 252, "1108": 252, "0118": 252, "gold": 252, "girardin": 252, "3340": 252, "3351": 252, "91365": 252, "henz": 252, "buzsaki": 252, "3113": 252, "3128": 252, "schoorlemm": 252, "huan": 252, "giza": 252, "tchetchik": 252, "kellei": 252, "vega": 252, "ornitz": 252, "fibroblast": 252, "homolog": 252, "dichotomi": 252, "2998": 252, "3010": 252, "micku": 252, "568": 252, "\u00ed\u00f1igo": 252, "portugu\u00e9": 252, "801": 252, "812": 252, "golestanirad": 252, "gale": 252, "manzoor": 252, "glait": 252, "haer": 252, "kaltenbach": 252, "bonmassar": 252, "solenoid": 252, "micromagnet": 252, "724": 252, "00724": 252, "izquierdo": 252, "mosig": 252, "pollo": 252, "126": 252, "2528": 252, "pier12013108": 252, "gome": 252, "bedard": 252, "valtcheva": 252, "nelson": 252, "khokhlova": 252, "pouget": 252, "venanc": 252, "234": 252, "246": 252, "00044": 252, "pakdaman": 252, "061910": 252, "ugart": 252, "restrepo": 252, "herrera": 252, "pi\u00f1a": 252, "s\u00e1nchez": 252, "pertusa": 252, "orio": 252, "madrid": 252, "brake": 252, "ikd": 252, "cold": 252, "allodynia": 252, "chronic": 252, "3109": 252, "3553": 252, "neeli": 252, "gutierrez": 252, "lago": 252, "roja": 252, "estevez": 252, "naranjo": 252, "shaker": 252, "tetraethylammonium": 252, "633": 252, "650": 252, "goodliff": 252, "rubakov": 252, "medalla": 252, "q175": 252, "huntington": 252, "0200626": 252, "gorin": 252, "tsitoura": 252, "kahan": 252, "watznauer": 252, "drose": 252, "mathar": 252, "hanganu": 252, "opatz": 252, "shaul": 252, "spehr": 252, "interdepend": 252, "infraslow": 252, "accessori": 252, "3127": 252, "3144": 252, "2520": 252, "goriounova": 252, "heyer": 252, "wilber": 252, "kerkhof": 252, "smede": 252, "verbern": 252, "idema": 252, "baayen": 252, "pieneman": 252, "klein": 252, "e41714": 252, "41714": 252, "goudar": 252, "509": 252, "00568": 252, "6239": 252, "6249": 252, "hawrylycz": 252, "02718": 252, "glia": 252, "s1740925x09990391": 252, "goyer": 252, "kurth": 252, "gillet": 252, "kein": 252, "r\u00fcbsamen": 252, "kuenzel": 252, "0186": 252, "422": 252, "549": 252, "1385": 252, "1410": 252, "1785": 252, "ia": 252, "neco_a_00375": 252, "nitzan": 252, "surea": 252, "tricep": 252, "162": 252, "wong": 252, "forsyth": 252, "calyx": 252, "saudargien": 252, "2194": 252, "2222": 252, "neco_a_00640": 252, "brun": 252, "a\u03b2": 252, "941": 252, "951": 252, "13211": 252, "permitt": 252, "conductor": 252, "2386": 252, "2393": 252, "2055054": 252, "dielectr": 252, "4148": 252, "4151": 252, "6346880": 252, "594": 252, "2202403": 252, "medengphi": 252, "mitelut": 252, "bionet": 252, "e0201630": 252, "0201630": 252, "grau": 252, "serrat": 252, "simon": 252, "laminari": 252, "396": 252, "velt": 252, "humayun": 252, "scarlati": 252, "505": 252, "grein": 252, "stepniewski": 252, "knodel": 252, "queisser": 252, "00068": 252, "barra": 252, "lorach": 252, "conti": 252, "kaeser": 252, "fallegg": 252, "borgognon": 252, "limb": 252, "20703": 252, "4486": 252, "snyder": 252, "miocinov": 252, "1137": 252, "robertson": 252, "antidrom": 252, "simmon": 252, "paresthesia": 252, "1234": 252, "grillo": 252, "neve": 252, "walker": 252, "vizcai": 252, "barrena": 252, "fleck": 252, "burron": 252, "282": 252, "e3": 252, "grime": 252, "graydon": 252, "kachar": 252, "873": 252, "grisham": 252, "schottler": 252, "krasn": 252, "swimmi": 252, "teach": 252, "a8": 252, "groen": 252, "p\u00e9rez": 252, "garci": 252, "wortel": 252, "00066": 252, "grosch": 252, "kettenmann": 252, "reichenbach": 252, "bergmann": 252, "glial": 252, "barreda": 252, "beed": 252, "dorsoventr": 252, "810": 252, "0354": 252, "simiaki": 252, "martinet": 252, "toumaz": 252, "488": 252, "0431": 252, "grubb": 252, "1074": 252, "nature09160": 252, "grunditz": 252, "holbro": 252, "zuo": 252, "oertner": 252, "13457": 252, "13466": 252, "gruntman": 252, "reiser": 252, "0046": 252, "gu": 252, "mcdougel": 252, "terman": 252, "1769": 252, "jbc": 252, "m111": 252, "299305": 252, "gude": 252, "ttx": 252, "tumor": 252, "necrosi": 252, "00652": 252, "is3": 252, "e0209429": 252, "0209429": 252, "f1000research": 252, "12688": 252, "22584": 252, "997": 252, "1014": 252, "00204": 252, "gulledg": 252, "bravo": 252, "0085": 252, "e36007": 252, "0036007": 252, "00088": 252, "duchin": 252, "patriat": 252, "sapiro": 252, "harel": 252, "e0176132": 252, "0176132": 252, "277": 252, "542": 252, "547": 252, "g\u00fcnai": 252, "siel": 252, "dharmar": 252, "wolfram": 252, "marlei": 252, "bain": 252, "prinz": 252, "e1004189": 252, "1004189": 252, "twyford": 252, "6108": 252, "6111": 252, "6945023": 252, "2014a": 252, "025005": 252, "6539": 252, "6542": 252, "6611053": 252, "4553": 252, "4556": 252, "6610560": 252, "6096": 252, "6099": 252, "6945020": 252, "2014b": 252, "muralidharan": 252, "neuroprosthes": 252, "2248": 252, "2251": 252, "8512748": 252, "sovilj": 252, "4557": 252, "4560": 252, "6610561": 252, "2013c": 252, "413": 252, "00413": 252, "cassar\u00e1": 252, "tarotin": 252, "donega": 252, "sokal": 252, "ouchouch": 252, "dopson": 252, "matteucci": 252, "neufeld": 252, "schiefer": 252, "rowl": 252, "mcgill": 252, "perkin": 252, "dolezalova": 252, "saeb": 252, "parsi": 252, "kuster": 252, "yazicioglu": 252, "witherington": 252, "chew": 252, "quantif": 252, "splenic": 252, "01299": 252, "majawadia": 252, "2692": 252, "2695": 252, "8037412": 252, "00713": 252, "gurkiewicz": 252, "e169": 252, "0030169": 252, "erythromelalgia": 252, "f1449v": 252, "1557": 252, "00703": 252, "padilla": 252, "substantia": 252, "nigra": 252, "11011": 252, "11019": 252, "2519": 252, "gwak": 252, "053102": 252, "5134765": 252, "g\u0142\u0105bska": 252, "chintaluri": 252, "9319": 252, "potworowski": 252, "\u0142\u0119ski": 252, "e105071": 252, "0105071": 252, "norheim": 252, "glpa": 252, "00001": 252, "kuznetsov": 252, "e69984": 252, "0069984": 252, "haddjeri": 252, "hopkin": 252, "ramirez": 252, "franco": 252, "marquez": 252, "pouei": 252, "amalr": 252, "goaillard": 252, "kv4": 252, "0207": 252, "dahmen": 252, "stavrin": 252, "lind\u00e9n": 252, "tetzlaff": 252, "gr\u00fcn": 252, "4461": 252, "4496": [252, 347], "bhw237": 252, "fossum": 252, "alonso": 252, "swadlow": 252, "focal": 252, "signatur": [252, 391], "monosynapt": 252, "5123": 252, "5143": 252, "2715": 252, "n\u00e6ss": 252, "ecog": 252, "lfpy": 252, "00092": 252, "khosrowshahi": 252, "s\u00f8rensen": 252, "haft": 252, "visapi": 252, "hahn": 252, "subthalamopallid": 252, "441": 252, "0225": 252, "hai": 252, "dormann": 252, "bartic": 252, "borgh": 252, "langedijk": 252, "protrus": 252, "adher": [252, 382, 383], "1153": 252, "1165": 252, "hale": 252, "conscious": 252, "361": 252, "s0219635214400056": 252, "3132": 252, "pawlu": 252, "heckmann": 252, "8975": 252, "8980": 252, "augustinait": 252, "heggelund": 252, "e1002160": 252, "1002160": 252, "m\u00e4ki": 252, "marttunen": 252, "andreassen": 252, "e1005193": 252, "1005193": 252, "csd": 252, "00976": 252, "tenn\u00f8": 252, "haug": 252, "weltzien": 252, "hodn": 252, "gonadotropin": 252, "teleost": 252, "fish": 252, "medaka": 252, "e1006662": 252, "1006662": 252, "hamada": 252, "goethal": 252, "covari": 252, "14841": 252, "14846": 252, "1607548113": 252, "7272": 252, "7286": 252, "4747": 252, "hamani": 252, "amorim": 252, "wheeler": 252, "diwan": 252, "driesslein": 252, "covolan": 252, "nobrega": 252, "antidepress": 252, "205": 252, "hanemaaij": 252, "wilder": 252, "grasman": 252, "pav\u00f3n": 252, "aroca": 252, "nav": 252, "54566": 252, "hanson": 252, "madison": 252, "imbalanc": 252, "therapeut": 252, "sethuramanujam": 252, "derosenrol": 252, "jain": 252, "awatramani": 252, "e42392": 252, "42392": 252, "hanuschkin": 252, "yim": 252, "cham": 252, "805": 252, "poo": 252, "21906": 252, "21911": 252, "0912022106": 252, "8559": 252, "8569": 252, "makara": 252, "491": 252, "599": 252, "nature11554": 252, "harrington": 252, "chekmenev": 252, "schepkin": 252, "fonteh": 252, "arakaki": 252, "cephalalgia": 252, "1254": 252, "1265": 252, "0333102411408360": 252, "engl": 252, "attwel": 252, "jolivet": 252, "e1007226": 252, "1007226": 252, "poorli": 252, "s1740925x09990263": 252, "hartman": 252, "lehotzki": 252, "ilie\u015f": 252, "zupanc": 252, "dimorph": 252, "00789": 252, "hartmann": 252, "veruki": 252, "exocytosi": 252, "e14186": 252, "14186": 252, "harti": 252, "cardamon": 252, "wimmer": 252, "eplepsyr": 252, "hatori": 252, "sakai": 252, "ownership": [252, 385], "716": 252, "729": 252, "1364": 252, "josaa": 252, "000716": 252, "segal": 252, "vasodilat": 252, "hamster": 252, "arteri": 252, "complementari": [252, 290, 374, 397], "adrenoreceptor": 252, "291": 252, "7606": 252, "744": 252, "637": 252, "mindscop": 252, "7337": 252, "7344": 252, "1512901113": 252, "schuermann": 252, "5b": 252, "e1002107": 252, "1002107": 252, "axosomat": 252, "despit": [252, 318, 340, 382], "2972": 252, "2981": 252, "3561": 252, "3571": 252, "bhu200": 252, "hayakawa": 252, "samura": 252, "kamijo": 252, "aihara": 252, "s11571": 252, "9309": 252, "hayashida": 252, "rodr\u00edguez": 252, "ogata": 252, "partida": 252, "stradleigh": 252, "colado": 252, "ishida": 252, "15001": 252, "15016": 252, "3827": 252, "yagi": 252, "kyriazi": 252, "pare": 252, "microcircuitri": 252, "3159": 252, "heiberg": 252, "dlgn": 252, "triadic": 252, "e1004929": 252, "1004929": 252, "heilman": 252, "quattrochi": 252, "heinzl": 252, "salazar": 252, "helmstaedt": 252, "feldmey": 252, "938": 252, "hemond": 252, "epstein": 252, "bolei": 252, "ca3b": 252, "424": 252, "359": 252, "lva": 252, "hendrickson": 252, "bi": [252, 289], "1413": 252, "1416": 252, "7590973": 252, "00155": 252, "quasi": 252, "tetrahedr": 252, "mesh": 252, "00129": 252, "hernandez": 252, "vera": 252, "santand": 252, "zurek": 252, "1472": 252, "6920": 252, "sajad": 252, "woodman": 252, "schall": 252, "riera": 252, "0221": 252, "klau": 252, "autaps": 252, "flander": 252, "8402": 252, "8416": 252, "herzog": 252, "kube": 252, "voigt": 252, "displac": 252, "1121": 252, "cummin": 252, "1351": 252, "heshmat": 252, "sajedi": 252, "schrott": 252, "751599": 252, "hesprich": 252, "beardslei": 252, "electroencephalographi": 252, "8716883": 252, "hei": 252, "giocomo": 252, "00492": 252, "457": 252, "hilgetag": 252, "barba": 252, "embryologi": 252, "roossien": 252, "caldwel": 252, "chestek": 252, "056007": 252, "aacdb8": 252, "borla": 252, "jos\u00e9": 252, "mallei": 252, "neurokinemat": 252, "2115": 252, "2124": 252, "6_6": 252, "shrager": 252, "hiratani": 252, "redund": 252, "e6871": 252, "e6879": 252, "1803274115": 252, "kozlov": 252, "09531": 252, "johansson": 252, "tokarska": 252, "dorst": 252, "suryanarayana": 252, "silberberg": 252, "striatum": 252, "9554": 252, "9565": 252, "2000671117": 252, "h\u00f4": 252, "1488": 252, "kroger": 252, "hoch": 252, "wen": 252, "011911": 252, "hoffman": 252, "387": 252, "869": 252, "straehl": 252, "weitbrecht": 252, "inhibitor": 252, "4415": 252, "4429": 252, "bhv039": 252, "gaunt": 252, "multichannel": 252, "13067": 252, "31247": 252, "1478": 252, "1491": 252, "huw": 252, "peterson": 252, "utricular": 252, "1986": 252, "00895": 252, "holt": 252, "netoff": 252, "0523": 252, "shinn": 252, "moehli": 252, "phasic": 252, "e1005011": 252, "1005011": 252, "1001": [252, 362, 364], "1013": 252, "184": 252, "sanchez": 252, "jp275083": 252, "zorio": 252, "00175": 252, "ratt\u00e9": 252, "robberecht": 252, "2069": 252, "2081": 252, "00919": 252, "fairhal": 252, "e1000119": 252, "1000119": 252, "h\u00f6nigsperg": 252, "marosi": 252, "storm": 252, "1551": 252, "1580": 252, "280826": 252, "e55590": 252, "0055590": 252, "quenet": 252, "foucart": 252, "244": 252, "hossain": 252, "rasband": 252, "morest": 252, "cochlea": 252, "6857": 252, "6868": 252, "hous": 252, "elstrott": 252, "koh": 252, "831": 252, "houslei": 252, "nardelli": 252, "cope": 252, "chemotherapi": 252, "113354": 252, "houston": 252, "diamanti": 252, "diamantaki": 252, "kutsarova": 252, "sultan": 252, "46147": 252, "srep46147": 252, "houwel": 252, "timofeev": 252, "grenier": 252, "742": 252, "modi": 252, "ganter": 252, "834": 252, "845": 252, "neu": 252, "echegoyen": 252, "2394": 252, "2409": 252, "rajendra": 252, "mayberg": 252, "hbm": 252, "24419": 252, "046026": 252, "415": 252, "12929": 252, "huynh": 252, "046030": 252, "lad": 252, "intradur": 252, "e114938": 252, "0114938": 252, "tradeoff": [252, 293], "036023": 252, "feasibl": 252, "interferenti": 252, "13137": 252, "056015": 252, "naik": 252, "297": 252, "2292025": 252, "hsu": 252, "zhao": 252, "steep": [252, 381], "karschin": 252, "labarca": 252, "figl": 252, "davidson": 252, "1196": 252, "1206": 252, "00058": 252, "volterra": 252, "00112": 252, "supercrit": 252, "3678": 252, "vandael": 252, "bean": 252, "1326": 252, "hou": 252, "996": 252, "432": 252, "00432": 252, "h\u00fcbel": 252, "ullah": 252, "suscept": 252, "0591": 252, "hugosdottir": 252, "m\u00f8rch": 252, "j\u00f8rgensen": 252, "nielsen": 252, "pedersen": 252, "cutan": 252, "percept": 252, "0527": 252, "unmyelin": 252, "e1004240": 252, "1004240": 252, "e1004702": 252, "1004702": 252, "morphforg": 252, "toolbox": 252, "franklin": 252, "1430": 252, "1448": 252, "22324": 252, "e0182648": 252, "0182648": 252, "mellor": 252, "acetylcholin": 252, "huth": 252, "rittger": 252, "saftig": 252, "cleav": 252, "enzym": [252, 371], "bace1": 252, "0913": 252, "hyun": 252, "eom": 252, "bae": 252, "heterosynapt": 252, "3617": 252, "3643": 252, "jp270372": 252, "iancu": 252, "1685": 252, "iannella": 252, "launei": 252, "mosaic": 252, "00042": 252, "engram": 252, "00021": 252, "iascon": 252, "s\u00fcmb\u00fcl": 252, "andreu": 252, "goudi": 252, "blocku": 252, "peng": 252, "polleux": 252, "566": 252, "578": 252, "iavaron": 252, "shi": 252, "reilli": 252, "e1006753": 252, "1006753": 252, "ienna": 252, "valenti": 252, "19th": 252, "124": 252, "3274005": 252, "3274011": 252, "igra": 252, "fowerak": 252, "ware": 252, "hullig": 252, "483": 252, "485": 252, "ilin": 252, "bai": 252, "watson": 252, "dc2": 252, "4141": 252, "4157": 252, "malyshev": 252, "ensembl": 252, "2281": 252, "2292": 252, "0771": 252, "hashimoto": 252, "1711": 252, "imanaga": 252, "ogawa": 252, "warashina": 252, "insp": 252, "monophas": 252, "adren": 252, "chromaffin": 252, "iseri": 252, "kosta": 252, "4482": 252, "9630642": 252, "sale": 252, "fry": 252, "kanai": 252, "drake": 252, "micturit": 252, "barrington": 252, "crh": 252, "56605": 252, "ivanov": 252, "gueritaud": 252, "unpurifi": 252, "embryon": 252, "hindlimb": 252, "iyengar": 252, "pithapuram": 252, "singh": 252, "raghavan": 252, "curat": 252, "neuroid": 252, "neuromotor": 252, "00056": 252, "yaron": 252, "jakoubovitch": 252, "oz": 252, "564": 252, "nath": 252, "jessen": 252, "nitric": 252, "oxid": 252, "e1002550": 252, "1002550": 252, "poleg": 252, "10210": [252, 293], "jproc": 252, "2312671": 252, "lisman": 252, "1065": 252, "1077": 252, "brenner": 252, "1506": 252, "1520": 252, "00385": 252, "fisher": 252, "confoc": 252, "218": 252, "degeneraci": 252, "57243": 252, "baum": 252, "delsei": 252, "52949": 252, "jamieson": 252, "boyd": 252, "mclachlan": 252, "2430": 252, "466": 252, "472": 252, "bbrc": 252, "081": 252, "han": 252, "186": 252, "jarecki": 252, "piekarz": 252, "378": 252, "jci40801": 252, "roxin": 252, "1667": 252, "e1006027": 252, "1006027": 252, "benuskova": 252, "abraham": 252, "bcm": 252, "metaplast": 252, "e1004588": 252, "1004588": 252, "backu": 252, "898": 252, "20804": 252, "0214": 252, "hoon": 252, "papadopoulo": 252, "vlacho": 252, "winkel": 252, "poulopoulo": 252, "betz": 252, "brose": 252, "varoqueaux": 252, "neuroligin": 252, "bhq100": 252, "molnar": 252, "036022": 252, "jensen": 252, "kopach": 252, "savtchenko": 252, "rusakov": 252, "62588": 252, "jeub": 252, "emrich": 252, "pradier": 252, "taha": 252, "gailu": 252, "durner": 252, "fuch": 252, "ang": 252, "huylebroeck": 252, "zimmer": 252, "racz": 252, "smad": 252, "drg": 252, "2384": 252, "ji": 252, "tucker": 252, "putzier": 252, "levitan": 252, "shepard": 252, "ether": 252, "\u00e0": 252, "2906": 252, "2916": 252, "08190": 252, "collin": 252, "sacral": 252, "1987": 252, "00337": 252, "jochem": 252, "yoshida": 252, "e0123799": 252, "0123799": 252, "ir": 252, "328": 252, "s12038": 252, "9039": [252, 279], "calib": 252, "nodal": 252, "1874": 252, "1884": 252, "00338": 252, "2549": 252, "2563": 252, "ghosh": 252, "vitek": 252, "parkinsonian": 252, "rigid": 252, "bradykinesia": 252, "pallid": 252, "00039": 252, "kopp": 252, "scheinpflug": 252, "3187": 252, "3200": 252, "191973": 252, "griffin": 252, "1399": [252, 368], "2008a": 252, "skrzypiec": 252, "chernova": 252, "kv2": 252, "586": 252, "3493": 252, "3509": 252, "2008b": 252, "lagnado": 252, "connectom": 252, "e06250": 252, "06250": 252, "rempel": 252, "localis": 252, "roger": 252, "sullivan": 252, "russo": 252, "mcmahon": 252, "reversibli": 252, "scitranslm": 252, "abg9890": 252, "impend": 252, "1067": 252, "1079": 252, "00607": 252, "magneto": 252, "encephalographi": 252, "neuromethod": 252, "7657_2011_16": 252, "pritchett": 252, "stufflebeam": 252, "hamalainen": 252, "magnetoencephalographi": 252, "10751": 252, "10764": 252, "zylberberg": 252, "614377": 252, "30333": 252, "sikora": 252, "h\u00e4m\u00e4l\u00e4inen": 252, "3554": 252, "3572": 252, "00535": 252, "morri": 252, "sick": 252, "164_2017_63": 252, "joucla": 252, "yvert": 252, "e41324": 252, "0041324": 252, "gli\u00e8r": 252, "rousseau": 252, "penetr": 252, "microelectrod": 252, "e4828": 252, "0004828": 252, "3508": 252, "justu": 252, "dal\u00fcgg": 252, "fuhrmann": 252, "hann": 252, "kaneko": 252, "sosulina": 252, "schwarz": 252, "elliott": 252, "schoch": 252, "bradk": 252, "remi": 252, "septoentorhin": 252, "4447": 252, "henri": 252, "macaqu": 252, "2268": 252, "kagan": 252, "ramrakhyani": 252, "sciatic": 252, "millimet": 252, "1138": 252, "2544247": 252, "kager": 252, "somjen": 252, "interstiti": 252, "2712": 252, "misra": 252, "10958": 252, "10966": 252, "hirakawa": 252, "174": 252, "088492": 252, "kairiss": 252, "kalmbach": 252, "buchin": 252, "nandi": 252, "bakken": 252, "hodg": 252, "chong": 252, "frate": 252, "maltzer": 252, "nicovich": 252, "keen": 252, "silbergeld": 252, "gwinn": 252, "ojemann": 252, "lein": 252, "ting": 252, "supragranular": 252, "1194": 252, "kamaleddin": 252, "e2100148": 252, "202100148": 252, "kameda": 252, "hioki": 252, "sohn": 252, "sonomura": 252, "furuta": 252, "fujiyama": 252, "838": 252, "08027": 252, "degen": 252, "7103": 252, "7106": 252, "6091795": 252, "hadjinicola": 252, "cloherti": 252, "ibbotson": 252, "016017": 252, "4246": 252, "4249": 252, "5627176": 252, "0322": 252, "kamitani": 252, "bhalodia": 252, "kubota": 252, "shimojo": 252, "kamiya": 252, "afterdepolar": 252, "00407": 252, "kampa": 252, "7424": 252, "7432": 252, "kanold": 252, "2887": 252, "2897": 252, "caputi": 252, "doengi": 252, "chetkovich": 252, "dube": 252, "brewster": 252, "8847": 252, "8857": 252, "kaplan": 252, "00005": 252, "ketchum": 252, "haberli": 252, "2546": 252, "2559": 252, "2545": 252, "karada": 252, "olsson": 252, "winther": 252, "perrier": 252, "webb": 252, "huck": 252, "andersen": 252, "thielscher": 252, "643614": 252, "wojciechowski": 252, "dalbi": 252, "opto": 252, "4503": 252, "22793": 252, "karmarkar": 252, "507": 252, "najarian": 252, "373": 252, "kase": 252, "imoto": 252, "transduct": 252, "619747": 252, "406": 252, "00937": 252, "uta": 252, "ishihara": 252, "par": 252, "reticulata": 252, "neur": 252, "kaspirzhnyi": 252, "178": 252, "9671": 252, "9731": 252, "h\u00e1jo": 252, "tam\u00e1": 252, "vizi": 252, "roller": 252, "coaster": 252, "2153": 252, "1009270108": 252, "katyar": 252, "nya": 252, "14434": 252, "menon": 252, "geinisman": 252, "kean": 252, "abosch": 252, "bajwa": 252, "direction": 252, "bedez": 252, "moussaoui": 252, "acm": 252, "tcbb": 252, "2561932": 252, "4939": 252, "7321": 252, "7_17": 252, "1501": 252, "1516": 252, "kent": 252, "036010": 252, "826": 252, "843": 252, "00074": 252, "046010": 252, "hogan": 252, "kramer": 252, "12754": 252, "swan": 252, "brocker": 252, "keren": 252, "587": 252, "1437": 252, "pele": 252, "3730": 252, "3742": 252, "electrostimul": 252, "2178614": 252, "robinson": 252, "khadka": 252, "swami": 252, "rado": 252, "sc": 252, "026033": 252, "ab8344": 252, "khaliq": 252, "raman": 252, "4899": 252, "4912": 252, "khatri": 252, "pugh": 252, "16683": 252, "53087": 252, "kidd": 252, "sattel": 252, "213": 252, "s10158": 252, "0034": 252, "utilis": 252, "14354": 252, "14358": 252, "induct": 252, "pavlovian": 252, "030262": 252, "2163": 252, "2182": 252, "1037": 252, "00034": 252, "cav1": 252, "00491": 252, "pic": 252, "0014": 252, "5301": 252, "5311": 252, "neulet": 252, "dib": 252, "retrograd": 252, "e43654": 252, "0043654": 252, "e95454": 252, "0095454": 252, "pymu": 252, "321": 252, "0145": 252, "sandercock": 252, "soleu": 252, "046025": 252, "clemen": 252, "baron": 252, "misumi": 252, "dppx": 252, "dpp6": 252, "1835": 252, "14566": 252, "ncomms14566": 252, "e06414": 252, "06414": 252, "kish": 252, "9441073": 252, "vlieger": 252, "kooi": 252, "mobil": 252, "1693": 252, "klefenz": 252, "harczo": 252, "pitch": 252, "486": 252, "00486": 252, "harper": 252, "mckown": 252, "beenhakk": 252, "tenuou": 252, "1248": 252, "015005": 252, "1361": 252, "6560": 252, "aaf308": 252, "knowlton": 252, "ziouziou": 252, "hammer": 252, "roeper": 252, "atyp": 252, "e1009371": 252, "1009371": 252, "knox": 252, "glauser": 252, "tennei": 252, "holland": 252, "pathogenesi": 252, "13962": 252, "kobayashi": 252, "okamoto": 252, "mochizuki": 252, "urakubo": 252, "funayama": 252, "ishikawa": 252, "kashima": 252, "ouchi": 252, "szymanska": 252, "ishii": 252, "ikegaya": 252, "146": 252, "ohmori": 252, "yoshinaga": 252, "gotman": 252, "881": 252, "rapp": 252, "kochenov": 252, "poddubnaya": 252, "makedonski": 252, "parasympathet": 252, "effer": 252, "9583": 252, "\u0430": 252, "\u043c": 252, "9518": 252, "9504": 252, "kochubei": 252, "yanov": 252, "ergic": 252, "9165": 252, "416": 252, "neunet": 252, "koelman": 252, "kohl": 252, "parviainen": 252, "neurosolv": 252, "topographi": 252, "s10548": 252, "00838": 252, "fujii": 252, "jakob": 252, "masland": 252, "rt": 252, "pcr": 252, "contact": [252, 374, 391], "22522": 252, "takayasu": 252, "asynmetr": 252, "s0219635210002469": 252, "kolbaev": 252, "mohapatra": 252, "lombardi": 252, "staiger": 252, "luhmann": 252, "kilb": 252, "nkcc": 252, "immatur": 252, "18399": 252, "75382": 252, "brauer": 252, "ilschner": 252, "ruben": 252, "komendantov": 252, "1866": 252, "konstantoudaki": 252, "chalkiadaki": 252, "sidiropoul": 252, "modulatori": 252, "00007": 252, "koo": 252, "tepper": 252, "neostriatum": 252, "7916": 252, "7922": 252, "pervouchin": 252, "malerba": 252, "tempel": 252, "911": 252, "kaiser": 252, "bituft": 252, "562": 252, "437": 252, "kukushka": 252, "2260": 252, "2270": 252, "chernetchenko": 252, "tristabl": 252, "412": 252, "hypothermia": 252, "9605": 252, "9382": 252, "9447": 252, "kukoushka": 252, "nucl": 252, "9274": 252, "maksymchuk": 252, "vlasov": 252, "cymbalyuk": 252, "anesthet": 252, "trpm8": 252, "09889": 252, "novorodovskaya": 252, "organellar": 252, "organel": 252, "9072": 252, "osorio": 252, "delma": 252, "myenter": 252, "19336950": 252, "973784": 252, "pfeiffer": 252, "sigulinski": 252, "rod": 252, "ey": 252, "108554": 252, "exer": 252, "prosthes": 252, "healthcar": 252, "htl": 252, "0115": 252, "mize": 252, "2901": 252, "2913": 252, "3038406": 252, "5020": 252, "kourennyi": 252, "hart": 252, "mahmud": 252, "baldridg": 252, "buhl": 252, "6219": 252, "6233": 252, "jp276356": 252, "koutsou": 252, "bugmann": 252, "christodoul": 252, "bioystem": 252, "kovalski": 252, "neuropath": 252, "1442": 252, "arnir": 252, "accommod": 252, "crosheck": 252, "kress": 252, "dowl": 252, "571": 252, "20667": 252, "kretzberg": 252, "kretschmer": 252, "burgin": 252, "attractor": 252, "martinotti": 252, "e30752": 252, "0030752": 252, "salienc": 252, "00060": 252, "rahman": 252, "krueppel": 252, "adachi": 252, "3443": 252, "3453": 252, "4357": 252, "444": 252, "1069": 252, "chick": 252, "ishiguro": 252, "redistribut": 252, "8815": 252, "ncomms9815": 252, "kubat": 252, "\u00f6ktem": 252, "mruk": 252, "akin": 252, "kobertz": 252, "sod1": 252, "351": 252, "s10867": 252, "9411": 252, "1694": 252, "1704": 252, "karub": 252, "nomura": 252, "schertel": 252, "kawaguchi": 252, "srep00089": 252, "kondo": 252, "hatada": 252, "yamaguchi": 252, "moham": 252, "e07919": 252, "07919": 252, "kuck": 252, "stegeman": 252, "asseldonk": 252, "056014": 252, "aa7960": 252, "heijden": 252, "bushi": 252, "gerbil": 252, "4260": 252, "4273": 252, "5433": 252, "nerlich": 252, "milenkov": 252, "00014": 252, "wirth": 252, "luksch": 252, "mei": 252, "1b": 252, "synaptogenesi": 252, "1302": 252, "046": 252, "morari": 252, "289": 252, "9082": 252, "386": 252, "343": 252, "217": 252, "222": 252, "batini": 252, "italienn": 252, "211": 252, "9286": 252, "myakoushko": 252, "mehta": 252, "00038": 252, "e38446": 252, "38446": 252, "24th": 252, "kumaravelu": 252, "oza": 252, "behrend": 252, "deconstruct": 252, "680": 252, "00862": 252, "sombeck": 252, "bensmaia": 252, "stonei": 252, "tomlinson": 252, "callier": 252, "046045": 252, "abacd8": 252, "fouriaux": 252, "ovcharenko": 252, "mallon": 252, "sainz": 252, "booster": 252, "41321": 252, "1_19": 252, "yoshimoto": 252, "knight": 252, "exascal": 252, "1044": 252, "1052": 252, "052": 252, "wolgamuth": 252, "574": 252, "kuriyama": 252, "yamazaki": 252, "623552": 252, "kuznetsova": 252, "paladini": 252, "0222": 252, "1110": 252, "0604": 252, "kwon": 252, "sakamoto": 252, "peterka": 252, "1100": 252, "labarrera": 252, "dudai": 252, "weiner": 252, "kaduri": 252, "amichai": 252, "zylbermann": 252, "adrenerg": 252, "1034": 252, "labrakaki": 252, "lamina": 252, "00424": 252, "liao": 252, "tsang": 252, "shih": 252, "036001": 252, "342": 252, "lajeuness": 252, "01090": 252, "tuleau": 252, "malot": 252, "rivoirard": 252, "bouret": 252, "reynaud": 252, "hawk": 252, "rhode": 252, "turtl": 252, "683": 252, "694": 252, "sandler": 252, "760": 252, "1171958": 252, "lasien": 252, "shupe": 252, "perlmutt": 252, "horner": 252, "spare": 252, "3887": 252, "3896": 252, "latim": 252, "a197": 252, "a202": 252, "curriculum": 252, "te": 252, "2859411": 252, "latorr": 252, "w\u00e5rdell": 252, "025026": 252, "2057": 252, "aafdd9": 252, "laudanski": 252, "torben": 252, "shamma": 252, "e1003775": 252, "1003775": 252, "lavian": 252, "entopeduncular": 252, "884": 252, "lavzin": 252, "rapoport": 252, "garion": 252, "angular": 252, "490": 252, "nature11451": 252, "puglies": 252, "sliva": 252, "668": 252, "688": 252, "bhab221": 252, "saraga": 252, "churchil": 252, "statland": 252, "mcbain": 252, "kcnq": 252, "12325": 252, "12338": 252, "boer": 252, "iwema": 252, "finkel": 252, "1978": 252, "przedborski": 252, "buno": 252, "1011": 252, "1025": 252, "pinaud": 252, "renden": 252, "taschenberg": 252, "spirou": 252, "levinson": 252, "von": 252, "gersdorff": 252, "locu": 252, "recoveri": 252, "3724": 252, "3738": 252, "walmslei": 252, "mntb": 252, "3095": 252, "3108": 252, "lebloi": 252, "bodor": 252, "perkel": 252, "timescal": 252, "15420": 252, "15433": 252, "3060": 252, "hershei": 252, "bradlei": 252, "yearwood": 252, "765": 252, "matsunaga": 252, "fort": 252, "s40244": 252, "0012": 252, "ghovanloo": 252, "wirelessli": 252, "1095": 252, "1106": [252, 279], "2741107": 252, "hitti": 252, "leiter": 252, "abolish": 252, "046001": 252, "3888": 252, "3901": 252, "marchionni": 252, "varga": 252, "danielson": 252, "lovett": 252, "barron": 252, "losonczi": 252, "034": 252, "fluid": 252, "catfish": 252, "unsupervis": 252, "vocal": 252, "2579": 252, "2603": 252, "neco_a_00345": 252, "lefler": 252, "vrieler": 252, "43560": 252, "lehto": 252, "shatillo": 252, "teplitzki": 252, "utecht": 252, "adriani": 252, "mangia": 252, "sierra": 252, "gr\u00f6hn": 252, "016016": 252, "aa5238": 252, "lei": 252, "kellard": 252, "hara": 252, "islet": 252, "1080": 252, "19382014": 252, "1493316": 252, "leleo": 252, "e1009558": 252, "1009558": 252, "lemair": 252, "ultrasound": 252, "intramembran": 252, "cavit": 252, "046007": 252, "ab1685": 252, "vicari": 252, "morphoson": 252, "iscienc": 252, "103085": 252, "isci": 252, "machado": 252, "moffitt": 252, "otto": 252, "kipk": 252, "045006": 252, "e59839": 252, "0059839": 252, "anesthesiologi": 252, "1376": 252, "1097": 252, "aln": 252, "0000000000000649": 252, "wyant": 252, "ozinga": 252, "572": 252, "13037": [252, 293], "lenz": 252, "platschek": 252, "priesemann": 252, "becker": 252, "willem": 252, "ziemann": 252, "dahlhau": 252, "postsynaps": 252, "3323": 252, "3337": 252, "0859": 252, "letzku": 252, "10420": 252, "10429": 252, "macki": 252, "meech": 252, "spong": 252, "202": 252, "1139": 252, "lezmi": 252, "lipinski": 252, "khrapunski": 252, "patrich": 252, "peretz": 252, "attali": 252, "ck2": 252, "e10234": 252, "e10243": 252, "1708700114": 252, "0396": 252, "3037": 252, "2831": 252, "e1005760": 252, "1005760": 252, "noradrenerg": 252, "3177": 252, "00324": 252, "greensid": 252, "songbird": 252, "hvc": 252, "011918": 252, "066007": 252, "yao": 252, "e1006871": 252, "1006871": 252, "mclaughlin": 252, "15244": 252, "15252": 252, "1904463116": 252, "bilinear": 252, "e1004014": 252, "1004014": 252, "cpa": 252, "22020": 252, "5637": 252, "05527": 252, "565": 252, "575": 252, "camkii": 252, "deduc": 252, "e1005946": 252, "1005946": 252, "morita": 252, "241": 252, "9169": 252, "2739": 252, "00397": 252, "3233": 252, "jin": 252, "170007": 252, "1717": 252, "1731": 252, "rasch": 252, "teng": 252, "559": 252, "4517": 252, "2017c": 252, "liebmann": 252, "karst": 252, "gemert": 252, "jo\u00ebl": 252, "corticosteron": 252, "958": 252, "968": 252, "hant": 252, "neurotransmiss": 252, "schorg": 252, "cassett": 252, "exon": 252, "a1b": 252, "5322": 252, "5331": 252, "tropper": 252, "patoari": 252, "pde": 252, "2710": 252, "2987373": 252, "ishlam": 252, "284": 252, "1057": 252, "s41273": 252, "0033": 252, "bizzarri": 252, "brambilla": 252, "granato": 252, "isca": 252, "iscas45731": 252, "9180633": 252, "storac": 252, "e1001102": 252, "1001102": 252, "0245": 252, "gruen": 252, "859": 252, "872": 252, "lindgren": 252, "lizard": 252, "414": 252, "filipovi\u0107": 252, "ketzef": 252, "lindahl": 252, "msn": 252, "00003": 252, "14891": 252, "lindsai": 252, "rosenberg": 252, "lipowski": 252, "gillessen": 252, "tao": 252, "2443": 252, "su": 252, "bao": 252, "prostaglandin": 252, "traffick": 252, "rrr": 252, "traffic": 252, "0854": 252, "01027": 252, "xiao": 252, "fraser": 252, "grueneberg": 252, "1318": 252, "1334": 252, "00907": 252, "ogden": 252, "comeri": 252, "vabicaserin": 252, "ht2c": 252, "pharmacometr": 252, "e111": 252, "3145": 252, "3161": 252, "13172": 252, "13181": 252, "colecraft": 252, "e21989": 252, "21989": 252, "pka": 252, "i1656m": 252, "2098": 252, "00921": 252, "kimura": 252, "higashijima": 252, "vestibular": 252, "otolith": 252, "748": 252, "lloren": 252, "desynchron": 252, "cela": 252, "marc": 252, "0043": 252, "lauritzen": 252, "6100": 252, "6103": 252, "6945021": 252, "1120": 252, "2832055": 252, "absorpt": 252, "4491": 252, "4505": 252, "0031": 252, "00420": 252, "bicarbon": 252, "3390": 252, "ijms20061416": 252, "efflux": 252, "e1008573": 252, "1008573": 252, "e1009199": 252, "1009199": 252, "nonreciproc": 252, "downregul": 252, "2114": 252, "00446": 252, "lonardoni": 252, "amin": 252, "marco": 252, "maccion": 252, "berdondini": 252, "e1005672": 252, "1005672": 252, "meunier": 252, "8219": 252, "8233": 252, "beeren": 252, "haeusser": 252, "latham": 252, "nature09086": 252, "schreibman": 252, "332": 252, "853": 252, "juri": 252, "meza": 252, "henni": 252, "nigral": 252, "8295": 252, "8310": 252, "0651": 252, "lopreor": 252, "sosinski": 252, "electrodiffus": 252, "2624": 252, "2635": 252, "lorenzo": 252, "vuillaum": 252, "binczak": 252, "jacquir": 252, "8717136": 252, "losavio": 252, "santamaria": 252, "pang": 252, "kakadiari": 252, "saggau": 252, "multiphoton": 252, "2422": 252, "2429": 252, "lovelac": 252, "cio": 252, "kleiman": 252, "bidirection": 252, "59548": 252, "wade": 252, "458": 252, "1327493": 252, "lubba": 252, "guen": 252, "cork": 252, "eftekhar": 252, "pypn": 252, "9383": 252, "hunt": 252, "1454": 252, "1468": 252, "bht336": 252, "rocher": 252, "dickstein": 252, "transgen": 252, "0244": 252, "dagda": 252, "glycolysi": 252, "2523": 252, "2540": 252, "00629": 252, "luj\u00e1n": 252, "malon": 252, "nontherapeut": 252, "21262": 252, "herman": 252, "prestimulu": 252, "11817": 252, "11824": 252, "5155": 252, "palva": 252, "silverstein": 252, "40hz": 252, "infra": 252, "471": 252, "dittrich": 252, "stile": 252, "11268": 252, "11281": 252, "macia": 252, "moss": 252, "microsecond": 252, "e2006422": 252, "2006422": 252, "1689": 252, "22764": 252, "villett": 252, "chamberland": 252, "bhz334": 252, "lupascu": 252, "morabito": 252, "merenda": 252, "marinelli": 252, "transsynapt": 252, "00023": 252, "ruggeri": 252, "parisi": 252, "pimpinella": 252, "pizzarelli": 252, "meli": 252, "cattaneo": 252, "intrabodi": 252, "gephyrin": 252, "00173": 252, "luqu": 252, "navero": 252, "paus": 252, "e1006298": 252, "1006298": 252, "715": 252, "luthman": 252, "hoebeek": 252, "davei": 252, "667": 252, "682": 252, "0295": 252, "luz": 252, "szuc": 252, "pinho": 252, "safronov": 252, "anterolater": 252, "neighbour": 252, "4489": 252, "197012": 252, "lv": 252, "gong": 252, "caffein": 252, "carp": 252, "965113": 252, "eigenmannia": 252, "clonazepam": 252, "3339": 252, "3343": 252, "heteroassoci": 252, "queri": [252, 289, 293, 349, 374, 382, 392], "673": 252, "hellman": 252, "sutula": 252, "kindl": 252, "3996": 252, "3998": 252, "lipton": 252, "temporo": 252, "septal": 252, "2301": 252, "wester": 252, "garbei": 252, "bass": 252, "berc": 252, "collet": 252, "cerveri": 252, "339": 252, "omurtag": 252, "clonic": 252, "1059": 252, "ethosuximid": 252, "1992a": 252, "bacar": 252, "birkhaeus": 252, "1992b": 252, "bioelectromagnet": 252, "1160": 252, "1164": 252, "stalei": 252, "wathei": 252, "2008c": 252, "2745": 252, "2008d": 252, "neco_a_00876": 252, "6_9": 252, "e1003137": 252, "1003137": 252, "gigg": 252, "multiglomerular": 252, "vomeronas": 252, "9341": 252, "9352": 252, "futia": 252, "ozbai": 252, "llano": 252, "4217": 252, "18034": 252, "maccabe": 252, "nagarajan": 252, "amassian": 252, "szabo": 252, "ahad": 252, "cracco": 252, "eberl": 252, "porcin": 252, "585": 252, "303": 252, "magalh\u00e3": 252, "sterl": 252, "434": 252, "2019c": 252, "895": 252, "repli": 252, "castelli": 252, "forti": 252, "573": 252, "lovero": 252, "barnett": 252, "spikeforest": 252, "face": [252, 386], "sorter": 252, "55167": 252, "7th": 252, "7146752": 252, "atp": 252, "7824861": 252, "e0200712": 252, "0200712": 252, "8541971": 252, "stn": 252, "izhikevich": 252, "7824871": 252, "va": 252, "deferen": 252, "817": 252, "981": 252, "1595": 252, "4_52": 252, "mahnam": 252, "hashemi": 252, "036005": 252, "mahrou": 252, "00359": 252, "joerg": 252, "1427": 252, "268": 252, "1503": 252, "maingret": 252, "clerc": 252, "crest": 252, "inflammatori": 252, "denk": 252, "tank": 252, "grade": [252, 382], "2584": 252, "2601": 252, "zemmar": 252, "vicent": 252, "e1007601": 252, "1007601": 252, "phillip": 252, "metzner": 252, "stepwis": 252, "264": 252, "witoelar": 252, "bettella": 252, "djurov": 252, "bpsc": 252, "55714": 252, "krull": 252, "moberget": 252, "elvs\u00e5shagen": 252, "891": 252, "bhy291": 252, "malaga": 252, "schroeder": 252, "patel": 252, "irwin": 252, "thompson": 252, "nicol": 252, "bentlei": 252, "scar": 252, "016010": 252, "male": 252, "blumenfeld": 252, "bront": 252, "malinvaud": 252, "vassia": 252, "reichenberg": 252, "straka": 252, "3310": 252, "3325": 252, "5318": 252, "mandairon": 252, "ferretti": 252, "3244": 252, "bhatnagar": 252, "intercellular": 252, "8008434": 252, "bk": 252, "37th": 252, "7319606": 252, "1006293": 252, "shukla": 252, "kir4": 252, "41st": 252, "8857153": 252, "campagnola": 252, "manita": 252, "elementari": [252, 371], "7833": 252, "7845": 252, "524": 252, "20644": 252, "manninen": 252, "a\u0107imovi\u0107": 252, "havela": 252, "teppola": 252, "linn": 252, "replic": [252, 329], "00020": 252, "manookin": 252, "puller": 252, "riek": 252, "neitz": 252, "1606": 252, "1616": 252, "00484": 252, "manor": 252, "rinzel": 252, "928": 252, "srep00928": 252, "strahler": 252, "2934": 252, "srep02934": 252, "marcelin": 252, "chauvier": 252, "esclapez": 252, "bernard": 252, "deficit": 252, "mcclelland": 252, "3736": 252, "3747": 252, "5870": 252, "8873": 252, "8884": 252, "schaefer": 252, "vigour": 252, "marianelli": 252, "panares": 252, "897": 252, "2407861": 252, "markaki": 252, "orphanoudaki": 252, "440": [252, 383, 384], "abdellah": 252, "ailamaki": 252, "nanclar": 252, "antil": 252, "arsev": 252, "bilgili": 252, "buncic": 252, "chalimourda": 252, "dumusc": 252, "dyne": 252, "eilemann": 252, "ghobril": 252, "haenel": 252, "heini": 252, "kenyon": 252, "khazen": 252, "kisvardai": 252, "lasserr": 252, "b\u00e9": 252, "merch\u00e1n": 252, "meystr": 252, "morric": 252, "mu\u00f1oz": 252, "c\u00e9spede": 252, "muralidhar": 252, "muthurasa": 252, "nachbaur": 252, "nolt": 252, "palacio": 252, "pastor": 252, "ranjan": 252, "riachi": 252, "riquelm": 252, "sfyraki": 252, "shillcock": 252, "tauhe": 252, "telefont": 252, "toledo": 252, "tr\u00e4nkler": 252, "d\u00edaz": 252, "zaninetta": 252, "marsalek": 252, "maunsel": 252, "jitter": 252, "740": 252, "mengual": 252, "wybo": 252, "spierenburg": 252, "santello": 252, "senn": 252, "anterior": 252, "3028": 252, "martinello": 252, "giacalon": 252, "shah": 252, "0408": 252, "mart\u00ednez": 252, "ca\u00f1ada": 252, "mobarhan": 252, "morilla": 252, "pelayo": 252, "e1005930": 252, "1005930": 252, "fellin": 252, "panzeri": 252, "electroencephalogram": 252, "e1008893": 252, "1008893": 252, "noei": 252, "s40708": 252, "00148": 252, "masoli": 252, "00278": 252, "ottaviani": 252, "e1007937": 252, "1007937": 252, "rizza": 252, "sgritta": 252, "00071": 252, "laforenza": 252, "moccia": 252, "0953": 252, "2467": 252, "2476": 252, "masurkar": 252, "juxtaglomerular": 252, "brann": 252, "992": 252, "aparicio": 252, "592": 252, "669": 252, "267872": 252, "mateu": 252, "lope": 252, "aroso": 252, "ger\u00f3": 252, "menes": 252, "neto": 252, "lamghari": 252, "ac41db": 252, "matsubara": 252, "torikai": 252, "automaton": 252, "836": 252, "tnnl": 252, "2425893": 252, "matsumura": 252, "yamamoto": 252, "katsurabayashi": 252, "niwano": 252, "hirano": 252, "iwata": 252, "9905": 252, "28232": 252, "mattioni": 252, "nov\u00e8r": 252, "neuronvisio": 252, "e66811": 252, "0066811": 252, "6609439": 252, "0463": 252, "brien": 252, "2583": 252, "2586": 252, "6610068": 252, "matzner": 252, "gorodetski": 252, "gad": 252, "5833": 252, "62750": 252, "mauric": 252, "lopez": 252, "10289": 252, "10301": 252, "mazzatenta": 252, "campidelli": 252, "gambazzi": 252, "businaro": 252, "prato": 252, "ballerini": 252, "6931": 252, "6936": 252, "mazzoni": 252, "e1004584": 252, "1004584": 252, "dingledin": 252, "mccafferti": 252, "venzi": 252, "l\u0151rincz": 252, "delicata": 252, "atherton": 252, "recchia": 252, "orban": 252, "giovanni": 252, "0130": 252, "mccaulei": 252, "petroccion": 252, "brant": 252, "affinnih": 252, "wisnoski": 252, "zahid": 252, "shree": 252, "brazh": 252, "leapman": 252, "khmaladz": 252, "zuloaga": 252, "scimemi": 252, "circadian": [252, 379], "108255": 252, "mccolgan": 252, "kuokkanen": 252, "kempter": 252, "owl": 252, "00648": 252, "dipolar": 252, "e26106": 252, "26106": 252, "e1": 252, "e2": 252, "nature05523": 252, "mcdonnel": 252, "tuckwel": 252, "jost": 252, "ward": 252, "0954898x": 252, "990064": 252, "9269": 252, "00018": 252, "2937": 252, "2949": 252, "00671": 252, "878": 252, "888": 252, "1592": 252, "1604": 252, "thakor": 252, "1457": 252, "2004a": 252, "expert": 252, "622": 252, "richardson": 252, "mori": 252, "589": 252, "2004b": 252, "mctavish": 252, "meas": 252, "famular": 252, "gjorgjieva": 252, "12154": 252, "12170": 252, "3263": 252, "medan": 252, "sztarker": 252, "preuss": 252, "mauthner": 252, "689": 252, "jp274861": 252, "066012": 252, "359529": 252, "237172": 252, "medlock": 252, "sekiguchi": 252, "1199": 252, "mehaffei": 252, "9968": 252, "9977": 252, "workshop": 252, "3195555": 252, "3195556": 252, "517": 252, "clusteron": 252, "niebur": 252, "croft": 252, "ruderman": 252, "petsch": 252, "kearn": 252, "solla": 252, "1997c": 252, "4325": 252, "4334": 252, "melnick": 252, "santo": 252, "szokol": 252, "gelatinosa": 252, "646": 252, "ghezzi": 252, "046012": 252, "aabb7d": 252, "musial": 252, "ampar": 252, "1463": 252, "16829": 252, "16834": 252, "13552": 252, "13566": 252, "00075": 252, "muscarin": 252, "supraphysiolog": 252, "8512574": 252, "yousif": 252, "mesek": 252, "duch": 252, "90899": 252, "june": [252, 394], "a11": 252, "ludwig": 252, "hofmann": 252, "task3": 252, "1517": 252, "1529": 252, "wiendl": 252, "twik": 252, "task1": 252, "lymphocyt": 252, "effector": 252, "14559": 252, "14570": 252, "733": 252, "soldovieri": 252, "ambrosino": 252, "barres": 252, "cilio": 252, "taglialatela": 252, "genotyp": 252, "4386": 252, "4391": 252, "1216867110": 252, "maria": 252, "3782": 252, "3793": 252, "4423": 252, "lugli": 252, "bellini": 252, "giudic": 252, "ferrari": 252, "pascotto": 252, "neutral": 252, "sporad": 252, "benign": 252, "schubert": 252, "0291": 252, "michaelevski": 252, "lotan": 252, "syntaxin": 252, "494": 252, "michalikova": 252, "spikelet": 252, "1484": 252, "1495": 252, "00463": 252, "2403": 252, "schaffer": 252, "2703": 252, "2707": 252, "11138": 252, "fneur": 252, "00050": 252, "tulumello": 252, "8499": 252, "8504": 252, "1502513112": 252, "culotta": 252, "schizophren": 252, "552": 252, "1046": 252, "4145": 252, "4155": 252, "2005a": 252, "fnint": 252, "00122": 252, "2005b": 252, "inzirillo": 252, "messineo": 252, "cardaci": 252, "ayala": 252, "2754": 252, "2760": 252, "unsynchron": 252, "e36867": 252, "0036867": 252, "novara": 252, "magic": [252, 392], "362": 252, "leinekugel": 252, "1024": 252, "1031": 252, "13325": 252, "bologna": 252, "antonel": 252, "pezzoli": 252, "kali": 252, "e1006423": 252, "1006423": 252, "mikulov": 252, "siwani": 252, "bauer": 252, "pupe": 252, "kulland": 252, "3638": 252, "05907": 252, "mile": 252, "390": 252, "staff": 252, "amphibian": 252, "3171": 252, "3190": 252, "2084": 252, "minneci": 252, "dragicev": 252, "avossa": 252, "stratum": 252, "egfp": 252, "lenticular": 252, "fasciculu": 252, "1569": 252, "stereotact": 252, "neurosurg": 252, "miral": 252, "neuromuscular": 252, "732": 252, "mirzakhalili": 252, "557": 252, "cel": 252, "mishra": 252, "1346": 252, "00601": 252, "decorrel": 252, "23035": 252, "100007": 252, "crneur": 252, "mittal": 252, "00136": 252, "tsubo": 252, "okada": 252, "13802": 252, "13812": 252, "miyamura": 252, "hitomi": 252, "omiya": 252, "ujihara": 252, "kokabu": 252, "morimoto": 252, "ono": 252, "isoliquiritigenin": 252, "ingredi": 252, "glycyrrhiza": 252, "antinocicept": 252, "naunyn": 252, "schmiedeberg": 252, "967": 252, "s00210": 252, "02030": 252, "miyazaki": 252, "ceca": 252, "predominantli": 252, "9964": 252, "9976": 252, "mo": 252, "veto": 252, "2507": 252, "2532": 252, "moezzi": 252, "schaworonkow": 252, "plogmach": 252, "goldsworthi": 252, "hordacr": 252, "triesch": 252, "electromyograph": 252, "2541": 252, "00626": 252, "silicon": 252, "2240": 252, "2250": 252, "doreswami": 252, "aards": 252, "asamoah": 252, "brakspear": 252, "groot": 252, "slui": 252, "boudewijn": 252, "4839": 252, "4853": 252, "bhv188": 252, "mison": 252, "trimmer": 252, "t\u00f8nnesen": 252, "kuner": 252, "23196": 252, "srep23196": 252, "moldwin": 252, "perceptron": 252, "00033": 252, "molina": 252, "jentsch": 252, "ersoi": 252, "moolen": 252, "donato": 252, "heutink": 252, "cesar": 252, "microphysiolog": 252, "biofabr": 252, "5090": 252, "ac463b": 252, "mondrag\u00f3n": 252, "burgui\u00e8r": 252, "43253": 252, "srep43253": 252, "rahamimoff": 252, "martinu": 252, "nijhoff": 252, "ravassard": 252, "acharya": 252, "kee": 252, "vuong": 252, "35510": 252, "aaj1497": 252, "moortgat": 252, "984": 252, "synfir": 252, "294": 252, "kaka": 252, "ganjkhani": 252, "hajihasani": 252, "531": 252, "digiovanna": 252, "gait": 252, "814": 252, "828": 252, "ribeiro": 252, "453": 252, "s10571": 252, "0378": 252, "morel": 252, "0673": 252, "nonrandom": 252, "6179": 252, "6184": 252, "indirect": 252, "00625": 252, "kalra": 252, "1871": 252, "1881": 252, "mutalik": 252, "mosher": 252, "kami\u0144ski": 252, "mamelak": 252, "rutishaus": 252, "heartbeat": 252, "3536": 252, "3551": 252, "mou": 252, "trianti": 252, "thermoelectr": 252, "2194146": 252, "moubarak": 252, "dufour": 252, "5044": 252, "5063": 252, "2781": 252, "moulin": 252, "barbier": 252, "maillei": 252, "guillemaud": 252, "film": 252, "692": 252, "903522": 252, "mourdoukouta": 252, "adair": 252, "vagu": 252, "12706": 252, "sk_l": 252, "1285": 252, "1307": 252, "00169": 252, "1450": 252, "1467": 252, "00543": 252, "moyer": 252, "halterman": 252, "00152": 252, "3731": 252, "3748": 252, "panksepp": 252, "sorg": 252, "schl\u00fcter": 252, "dong": 252, "cocain": 252, "3689": 252, "3699": 252, "4063": 252, "036002": 252, "mukherje": 252, "1222": 252, "529": 252, "mukunda": 252, "2637": 252, "jp273482": 252, "bues": 252, "renew": 252, "2958": 252, "zadina": 252, "sawtel": 252, "179": 252, "1382": 252, "1392": 252, "m\u00fcllner": 252, "wierenga": 252, "bonhoeff": 252, "munro": 252, "plexu": 252, "2833": 252, "2852": 252, "00709": 252, "muras": 252, "lantz": 252, "higgin": 252, "quinlan": 252, "metalloproteinas": 252, "3477": 252, "s12035": 252, "9295": 252, "murbartian": 252, "3399": 252, "3407": 252, "10040": 252, "10051": 252, "fedorov": 252, "gies": 252, "ohno": 252, "1915": 252, "mushtaq": 252, "haq": 252, "marshal": 252, "zia": 252, "alam": 252, "hertel": 252, "awan": 252, "martinetz": 252, "2615": 252, "21655979": 252, "1936894": 252, "musselman": 252, "cariello": 252, "pelot": 252, "ascent": 252, "e1009285": 252, "1009285": 252, "mustaf\u00e1": 252, "raingo": 252, "ghrelin": 252, "722": 252, "01738": 252, "nusbaum": 252, "5053": 252, "5067": 252, "nadin": 252, "pfaffing": 252, "dipeptidyl": 252, "peptidas": 252, "8551": 252, "8565": 252, "5489": 252, "e60831": 252, "0060831": 252, "hagler": 252, "117467": 252, "burgess": 252, "luder": 252, "nakano": 252, "doya": 252, "00119": 252, "chattarji": 252, "3070": 252, "3083": 252, "00913": 252, "deplet": 252, "033": 252, "5846": 252, "5850": 252, "1020": 252, "sepsi": 252, "961": 252, "25105": 252, "nataraj": 252, "roux": 252, "nahmani": 252, "lefort": 252, "turrigiano": 252, "depriv": 252, "nava": 252, "valero": 252, "jurado": 252, "sala": 252, "averkin": 252, "gambino": 252, "cid": 252, "prida": 252, "sublay": 252, "15840": 252, "todorov": 252, "pharmaceut": 252, "2189": 252, "2197": 252, "nenad": 252, "burdick": 252, "koren": 252, "11604": 252, "11620": 252, "0719": 252, "mea": 252, "9265": 252, "3809": 252, "3825": 252, "jp272022": 252, "6011": 252, "6024": 252, "3278": 252, "quantal": 252, "s1472": 252, "9288": 252, "neumaier": 252, "alpdogan": 252, "heschel": 252, "cav2": 252, "15210": 252, "202012585": 252, "nn1826": 252, "nevil": 252, "3716": 252, "chevtchenko": 252, "dye": 252, "3630": 252, "23901": 252, "3293": 252, "neco_a_00521": 252, "daniel": 252, "ja": 252, "hnn": 252, "51214": 252, "lakato": 252, "sanger": 252, "multitarget": 252, "dystonia": 252, "fphar": 252, "00157": 252, "ddmod": 252, "hilscher": 252, "skolnick": 252, "e76285": 252, "0076285": 252, "jacob": 252, "0253": 252, "sherif": 252, "11733": 252, "11743": 252, "0501": 252, "interict": 252, "discoordin": 252, "wnp": 252, "0b013e3181fe059": 252, "00019": [252, 347], "2011c": 252, "bulanova": 252, "zeki": 252, "2016c": 252, "endoplasm": [252, 371, 374], "reticulum": [252, 371, 374], "neco_a_00712": 252, "corticospin": 252, "00570": 252, "ng": 252, "volman": 252, "gibbon": 252, "phohomsiri": 252, "cui": 252, "swenson": 252, "stuhmil": 252, "concuss": 252, "kinemat": 252, "00269": 252, "trana": 252, "442": 252, "niculescu": 252, "hird": 252, "hornig": 252, "pong": 252, "erg": 252, "mglur1": 252, "16729": 252, "16740": 252, "5523": 252, "nie": 252, "tatsuno": 252, "2247": 252, "2293": 252, "neco_a_00633": 252, "niedringhau": 252, "conant": 252, "dzakpasu": 252, "e57144": 252, "0057144": 252, "sola": 252, "saftenku": 252, "00246": 252, "nigro": 252, "0972": 252, "5934": 252, "5937": 252, "6610903": 252, "nishino": 252, "cue": 252, "7153": 252, "7164": 252, "4398": 252, "amid": 252, "3792": 252, "11633": 252, "n\u00f6renberg": 252, "0910716107": 252, "mitochondria": [252, 371, 374], "9164": 252, "boyl": 252, "rossum": 252, "00105": 252, "neco_a_00705": 252, "halloran": 252, "e0230327": 252, "0230327": 252, "ohana": 252, "portner": 252, "e40601": 252, "0040601": 252, "ohura": 252, "0415": 252, "0254": 252, "ol\u00e1h": 252, "lukacsovich": 252, "winter": 252, "arszovszki": 252, "cck": 252, "auxiliari": 252, "58515": 252, "tarcsai": 252, "0059": 252, "olivar": 252, "thermoreceptor": 252, "bacigalupo": 252, "salgado": 252, "maidana": 252, "campo": 252, "e0139314": 252, "0139314": 252, "olted": 252, "186916": 252, "morkv": 252, "1171": 252, "849": 252, "00057": 252, "omori": 252, "aonishi": 252, "1125": 252, "2113": 252, "2136": 252, "ona": 252, "jodar": 252, "gerkau": 252, "sara": 252, "rose": 252, "381": 252, "opsal": 252, "canfield": 252, "bank": 252, "9441222": 252, "ordemann": 252, "apgar": 252, "brager": 252, "temporoammon": 252, "0082": 252, "belmont": 252, "viana": 252, "3009": 252, "3023": 252, "01033": 252, "soudri": 252, "e36670": 252, "0036670": 252, "ortner": 252, "kharitonova": 252, "duda": 252, "hess": 252, "pomberg": 252, "stefanova": 252, "pitterl": 252, "ciossek": 252, "oberach": 252, "draheim": 252, "kloppenburg": 252, "striessnig": 252, "affin": [252, 377], "isradipin": 252, "6761": 252, "6777": 252, "2946": 252, "ort": 252, "immagin": 252, "seddik": 252, "airault": 252, "raoui": 252, "najimi": 252, "trouslard": 252, "wanaverbecq": 252, "polycyst": 252, "kidnei": 252, "cerebrospin": 252, "5233": 252, "5244": 252, "0057": 252, "ostroumov": 252, "tridimension": 252, "372": 252, "osypenko": 252, "dovgan": 252, "kononenko": 252, "dromaretski": 252, "matvieienko": 252, "rybachuk": 252, "venkataraman": 252, "belan": 252, "dyt2": 252, "hippocalcin": 252, "autosom": 252, "recess": 252, "104529": 252, "otopalik": 252, "goeritz": 252, "sutton": 252, "brook": 252, "guerini": 252, "sloppi": 252, "crustacean": 252, "stomatogastr": 252, "e22352": 252, "22352": 252, "pipkin": 252, "e41728": 252, "41728": 252, "banghart": 252, "e23508": 252, "23508": 252, "ouanoun": 252, "baux": 252, "e12190": 252, "12190": 252, "overstreet": 252, "helm": 252, "tilleri": 252, "066016": 252, "ovsepian": 252, "berr": 252, "leari": 252, "dolli": 252, "nuclear": [252, 371], "1771": 252, "1791": 252, "249706": 252, "ozer": 252, "erkaymaz": 252, "uzuntarla": 252, "padamsei": 252, "katsanevaki": 252, "dupui": 252, "rochefort": 252, "food": 252, "scarciti": 252, "padmashri": 252, "mondal": 252, "rajan": 252, "kynuren": 252, "microcultur": 252, "paduraru": 252, "romanian": 252, "ac3dd8": 252, "farzad": 252, "43rd": 252, "6547": 252, "6550": 252, "9629884": 252, "3398": 252, "9176125": 252, "2548": 252, "2556": 252, "3027560": 252, "yue": 252, "5177": 252, "84437": 252, "2021c": 252, "gr\u00fcndemann": 252, "1709": 252, "188300": 252, "shai": 252, "reev": 252, "3646": 252, "6897": 252, "6903": 252, "scn8a": 252, "598": 252, "jp278952": 252, "papasavva": 252, "parrish": 252, "0387": 252, "kastellaki": 252, "1970": 252, "1983": 252, "00099": 252, "pfc": 252, "00161": 252, "e1003764": 252, "1003764": 252, "parashar": 252, "saha": 252, "bandyopadhyai": 252, "hillock": 252, "nitrogen": 252, "vacanc": 252, "magnetometri": 252, "s42005": 252, "parasuram": 252, "jphyspari": 252, "000481905": 252, "402": 252, "parekh": 252, "zona": 252, "incerta": 252, "2580": 252, "2596": 252, "00282": 252, "shekhar": 252, "santucci": 252, "redel": 252, "traub": 252, "mintz": 252, "nark": 252, "xia": 252, "fishman": 252, "fhf2": 252, "circul": 252, "1548": 252, "1161": 252, "circresaha": 252, "317349": 252, "ankl": 252, "0612": 252, "ash": 252, "smirnaki": 252, "5372": 252, "13029": 252, "richard": 252, "oligom": 252, "s12915": 252, "0732": 252, "cho": 252, "5607": 252, "e0225100": 252, "0225100": 252, "parker": 252, "laird": 252, "wah": 252, "cousin": 252, "bem": 252, "0006": 252, "obradov": 252, "hesam": 252, "shariati": 252, "gorman": 252, "karantoni": 252, "bickerstaff": 252, "pashut": 252, "magidov": 252, "porat": 252, "wolfu": 252, "perel": 252, "lavidor": 252, "yeshurun": 252, "00145": 252, "e1002022": 252, "1002022": 252, "barbosa": 252, "nav\u03b24": 252, "e0133485": 252, "0133485": 252, "1019": 252, "2756930": 252, "paucar": 252, "\u00e5gren": 252, "lissmat": 252, "bergend": 252, "\u00e5": 252, "weinberg": 252, "nilsson": 252, "savichetva": 252, "sahlholm": 252, "svenningsson": 252, "v374a": 252, "kcnd3": 252, "paroxysm": 252, "exacerb": 252, "e546": 252, "nxg": 252, "0000000000000546": 252, "outwardli": 252, "15341": 252, "15350": 252, "2747": 252, "pimashkin": 252, "504": 252, "1308388110": 252, "ncomms1202": 252, "french": 252, "vu": 252, "e37102": 252, "37102": 252, "hudmon": 252, "palmitoyl": 252, "myocyt": 252, "12035": 252, "ncomms12035": 252, "046022": 252, "aa6a5f": 252, "016007": 252, "aaeb0c": 252, "catheral": 252, "titu": 252, "henriquez": 252, "00315": 252, "comsol": 252, "046048": 252, "abadb5": 252, "5077": 252, "84503": 252, "016014": 252, "aa52d1": 252, "aman": 252, "postop": 252, "066020": 252, "aae12f": 252, "9710": 252, "042408": 252, "shimoura": 252, "rotstein": 252, "103135": 252, "5110033": 252, "pendyam": 252, "burgo": 252, "robl": 252, "sotr": 252, "bayon": 252, "quirk": 252, "prelimb": 252, "00961": 252, "toma": 252, "drangmeist": 252, "sciadv": 252, "abg4693": 252, "perg": 252, "balasubramanian": 252, "7928": 252, "pern\u00eda": 252, "goswami": 252, "stickler": 252, "fr\u00f6be": 252, "schl\u00f6gl": 252, "peron": 252, "krapp": 252, "retinotopi": 252, "830": 252, "842": 252, "perra": 252, "rapeaux": 252, "crucial": [252, 382], "depolaris": 252, "2214": 252, "8512759": 252, "perreault": 252, "raastad": 252, "perum": 252, "stratton": 252, "chandeli": 252, "109106": 252, "izad": 252, "tyler": 252, "petersson": 252, "2917": 252, "2925": 252, "08199": 252, "07791": 252, "petrini": 252, "ravasenga": 252, "succol": 252, "guazzi": 252, "barberi": 252, "gabaar": 252, "monoligand": 252, "1752": 252, "rigosa": 252, "giambattistelli": 252, "granata": 252, "pampaloni": 252, "guglielmelli": 252, "zollo": 252, "microneurographi": 252, "s12938": 252, "0659": 252, "39552": 252, "bytschok": 252, "042312": 252, "802": 252, "e1003928": 252, "1003928": 252, "pezo": 252, "00139": 252, "pfanzelt": 252, "rohregg": 252, "10349": 252, "10362": 252, "3368": 252, "gr\u00fcbl": 252, "schmuker": 252, "00011": 252, "pham": 252, "bridg": 252, "733155": 252, "militari": 252, "milm": 252, "usx202": 252, "phoka": 252, "e1000768": 252, "1000768": 252, "pimentel": 252, "moioli": 252, "araujo": 252, "ranieri": 252, "romero": 252, "broz": 252, "neuro4pd": 252, "640449": 252, "corneal": 252, "8177": 252, "8192": 252, "0654": 252, "pinotsi": 252, "pinto": 252, "fitzgerald": 252, "litvak": 252, "auksztulewicz": 252, "friston": 252, "canon": [252, 382], "causal": 252, "pissadaki": 252, "bolam": 252, "1740": 252, "reczko": 252, "e1001038": 252, "1001038": 252, "sliwa": 252, "vuksic": 252, "s40478": 252, "0285": 252, "2848": 252, "brannon": 252, "987": 252, "e0140254": 252, "0140254": 252, "9173": 252, "9184": 252, "0638": 252, "imperfect": 252, "distort": 252, "e19463": 252, "0019463": 252, "1277": 252, "5861": 252, "5876": 252, "4013": 252, "11891": 252, "11903": 252, "5250": 252, "poolo": 252, "767": 252, "rozsa": 252, "8436": 252, "ncomms9436": 252, "bhs320": 252, "portegi": 252, "elegan": 252, "0458": 252, "2544": 252, "postlethwait": 252, "steinert": 252, "579": 252, "potrusil": 252, "chacko": 252, "glueckert": 252, "tonotop": 252, "108001": 252, "pouill": 252, "intraglomerular": 252, "interglomerular": 252, "5965": 252, "5986": 252, "jp274408": 252, "watkinson": 252, "e00067": 252, "poulsen": 252, "abd1c1": 252, "meij": 252, "ab85b1": 252, "mouska": 252, "temido": 252, "ferreira": 252, "raj\u00e3o": 252, "saraiva": 252, "fernandez": 252, "salgueiro": 252, "gandin": 252, "barik": 252, "goutagni": 252, "bethu": 252, "bocklisch": 252, "curbi": 252, "526": 252, "1045": 252, "plemel": 252, "injur": 252, "5120": 252, "5125": 252, "0002": 252, "rymer": 252, "808": 252, "823": 252, "00510": 252, "hysteresi": 252, "1184": 252, "00850": 252, "pozzorini": 252, "mensi": 252, "naud": 252, "e1004275": 252, "1004275": 252, "presannan": 252, "rajendran": 252, "1375": 252, "lengthen": 252, "4743": 252, "4754": 252, "2076": 252, "anion": 252, "subvert": 252, "1744": 252, "8069": 252, "prime": 252, "pichon": 252, "probst": 252, "proddutur": 252, "elgamm": 252, "046109": 252, "4830138": 252, "psarrou": 252, "stefan": 252, "00287": 252, "e48517": 252, "0048517": 252, "roquea": 252, "e6970": 252, "0006970": 252, "qi": 252, "1579": 252, "bhu334": 252, "quindlen": 252, "stolarski": 252, "baroca": 252, "multiphys": 252, "pacinian": 252, "corpuscl": 252, "1039": 252, "c6ib00157b": 252, "hotek": 252, "mechanosens": 252, "skin": 252, "biomechan": 252, "mechanobiologi": 252, "s10237": 252, "bloom": 252, "vibrotactil": 252, "herbst": 252, "191439": 252, "rso": 252, "00203": 252, "enriquez": 252, "denton": 252, "kiehn": 252, "moder": 252, "10251": 252, "10256": 252, "1274": 252, "rabang": 252, "mgb": 252, "e29375": 252, "0029375": 252, "gardner": 252, "colliculu": 252, "rabinowitch": 252, "endur": 252, "yerm": 252, "slastic": 252, "13474": 252, "13484": 252, "2006a": 252, "2006b": 252, "radecki": 252, "meshkin": 252, "perrin": 252, "corticohippocamp": 252, "obiden": 252, "oligodendrogliopathi": 252, "16116": 252, "34414": 252, "radhakrishnan": 252, "nutakki": 252, "neurovascular": 252, "reato": 252, "arlotti": 252, "gasca": 252, "datta": 252, "2578": 252, "247171": 252, "e1002521": 252, "1002521": 252, "rajaram": 252, "fischl": 252, "mrowka": 252, "alexandrova": 252, "groth": 252, "0106": 252, "thankamani": 252, "nirmala": 252, "8125892": 252, "f\u00e9k\u00e9t\u00e9": 252, "benitez": 252, "boumedin": 252, "garrido": 252, "00388": 252, "colangelo": 252, "adaszewski": 252, "brukau": 252, "katkov": 252, "737": 252, "752": 252, "219576": 252, "ramo": 252, "escobar": 252, "mac\u00eda": 252, "multiobject": 252, "e2992": 252, "cnm": 252, "2992": 252, "ramracheya": 252, "chibalina": 252, "dou": 252, "moritoh": 252, "shigeto": 252, "braun": 252, "glp": 252, "glucagon": 252, "secret": [252, 382], "pancreat": 252, "e13852": 252, "13852": 252, "multifascicular": 252, "2837": 252, "2446761": 252, "baden": 252, "beren": 252, "2101": 252, "rane": 252, "1173": 252, "1760": 252, "sheth": 252, "icob": 252, "6178980": 252, "romano": 252, "elia": 252, "lone": 252, "marmoset": 252, "122548": 252, "122567": 252, "3108682": 252, "channelpedia": 252, "00036": 252, "constandin": 252, "3411": 252, "3414": 252, "7319125": 252, "11985": 252, "11990": 252, "badia": 252, "navarro": 252, "intrafascicular": 252, "2189021": 252, "2151878": 252, "5629": 252, "5652": 252, "239418": 252, "2313": 252, "2334": 252, "00846": 252, "channelostasi": 252, "e1787": 252, "e1796": 252, "1316599111": 252, "pared": 252, "leao": 252, "colling": 252, "jefferi": 252, "cjd": 252, "aldworth": 252, "53281": 252, "pymoos": 252, "moos": 252, "subblock": 252, "anesthesia": 252, "analgesia": 252, "recugnat": 252, "undurraga": 252, "spiral": 252, "612": 252, "3102129": 252, "reetz": 252, "stadler": 252, "strauss": 252, "interferon": 252, "s12974": 252, "0185": 252, "regev": 252, "degani": 252, "katzav": 252, "etzioni": 252, "siloni": 252, "alaimo": 252, "chikvashvili": 252, "villarroel": 252, "kcnq2": 252, "e6586": 252, "0006586": 252, "reich": 252, "steigerwald": 252, "sawalh": 252, "rees": 252, "johann": 252, "nickl": 252, "matthi": 252, "volkmann": 252, "acn3": 252, "survei": 252, "4346": 252, "4363": 252, "scolamiero": 252, "d\u0142otko": 252, "cliqu": 252, "caviti": 252, "reimer": 252, "staud": 252, "boucsein": 252, "0446": 252, "alevi": 252, "sprekel": 252, "e1009681": 252, "1009681": 252, "lengyel": 252, "remp": 252, "chopp": 252, "0089": 252, "reuveni": 252, "amitai": 252, "nonhomogen": 252, "hva": 252, "4609": 252, "4621": 252, "saar": 252, "e68131": 252, "0068131": 252, "chameh": 252, "sekul": 252, "valiant": 252, "bhaa261": 252, "richmond": 252, "gurnei": 252, "allerton": 252, "323": 252, "9208": 252, "rinker": 252, "fulmer": 252, "trantham": 252, "randal": 252, "chandler": 252, "mulholland": 252, "bxd": 252, "pharmacogenet": 252, "drink": 252, "ritzau": 252, "harada": 252, "eiler": 252, "ultrafast": 252, "trigemin": 252, "2110": 252, "ijms21124420": 252, "lavandero": 252, "hwang": 252, "trillo": 252, "phosphoryl": 252, "8475": 252, "8493": 252, "0345": 252, "rizou": 252, "prodromaki": 252, "microscal": 252, "025016": 252, "aaa0dd": 252, "locatelli": 252, "ponc": 252, "prestori": 252, "3873": 252, "83209": 252, "azad": 252, "pioneer": 252, "608": 252, "621": 252, "3248": 252, "electrosensori": 252, "mormyrid": 252, "2035": 252, "2047": 252, "anti": 252, "00156": 252, "symptomat": 252, "alzrt153": 252, "rogala": 252, "waleszczyk": 252, "l\u0119ski": 252, "wr\u00f3bel": 252, "perigenicul": 252, "0430": 252, "9441267": 252, "khz": 252, "jpain": 252, "akrouh": 252, "00165": 252, "romanenko": 252, "harvei": 252, "hool": 252, "radiat": 252, "trpv1": 252, "2331": 252, "2345": 252, "3641": 252, "9176570": 252, "romaro": 252, "najman": 252, "2032": 252, "neco_a_01400": 252, "romeni": 252, "3129": 252, "3153": 252, "s41596": 252, "0377": 252, "8359": 252, "8372": 252, "6161": 252, "ero": 252, "simplif": 252, "arxiv": 252, "00087v2": 252, "dean": 252, "porril": 252, "faithfulli": 252, "transmit": [252, 387], "00304": 252, "rothman": 252, "1015": 252, "1018": 252, "routh": 252, "2288": 252, "2302": 252, "00082": 252, "baumgardn": 252, "4431": 252, "4448": 252, "jp274258": 252, "rowan": 252, "tomassini": 252, "antonioni": 252, "daolio": 252, "buesser": 252, "delcanto": 252, "kamasawa": 252, "christi": 252, "symmetri": 252, "636": 252, "660": 252, "royeck": 252, "horstmann": 252, "reitz": 252, "2361": 252, "2380": 252, "royer": 252, "634": 252, "rudnicki": 252, "hemmert": 252, "entrain": 252, "globular": 252, "3665": 252, "2466": 252, "2003c": 252, "2003d": 252, "452": 252, "2315": 252, "shot": 252, "641": 252, "2146": 252, "2210": 252, "2922": 252, "2006c": 252, "trust": 252, "1966": 252, "pelleti": 252, "392": 252, "2805": 252, "2821": 252, "2884": 252, "awak": 252, "5280": 252, "5290": 252, "duboi": 252, "1426": 252, "neco_a_00278": 252, "ruff": 252, "legasto": 252, "stribbel": 252, "fehl": 252, "perinat": 252, "congenit": 252, "dysmyelin": 252, "11899": 252, "11915": 252, "1131": 252, "kozloski": 252, "e1007375": 252, "1007375": 252, "dragulji\u0107": 252, "0605": 252, "rumsei": 252, "2273": 252, "2280": 252, "2318": 252, "noisi": 252, "richter": 252, "levin": 252, "bliss": 252, "fusion": 252, "rusu": 252, "murakami": 252, "ruz": 252, "classifi": 252, "ryglewski": 252, "shal": 252, "3673": 252, "3688": 252, "00693": 252, "rzhepetskyi": 252, "lazniewska": 252, "blesneac": 252, "pamphlett": 252, "weiss": 252, "cacna1h": 252, "missens": 252, "1204497": 252, "sadashivaiah": 252, "sacr": 252, "guan": 252, "sarma": 252, "3868": 252, "3871": 252, "8037701": 252, "3525": 252, "3528": 252, "8512975": 252, "sacr\u00e9": 252, "0703": 252, "sadleir": 252, "woo": 252, "mreit": 252, "216": 252, "foutri": 252, "safaryan": 252, "degrad": [252, 289, 290, 371, 379, 381], "46550": 252, "srep46550": 252, "safiulina": 252, "caiati": 252, "sivakumaran": 252, "bisson": 252, "wolff": 252, "glomerulu": 252, "228": 252, "desmaison": 252, "charneau": 252, "lledo": 252, "4542": 252, "faramarzi": 252, "benal": 252, "girolamo": 252, "tonini": 252, "keirstead": 252, "microcoil": 252, "\u03bc": 252, "1910": 252, "ac4baf": 252, "sahin": 252, "1050": 252, "sailamul": 252, "paik": 252, "0657": 252, "saiz": 252, "speech": 252, "ab970d": 252, "werginz": 252, "771600": 252, "sakurai": 252, "serotonerg": 252, "1975": 252, "darghouth": 252, "salkim": 252, "shiraz": 252, "demosthen": 252, "neuroanatom": 252, "016006": 252, "ab3d94": 252, "aaeaad": 252, "wearabl": 252, "salvador": [252, 393], "basser": 252, "sulcal": 252, "022": 252, "samoudi": 252, "kampusch": 252, "tangh": 252, "sz\u00e9le": 252, "kaniusa": 252, "joseph": 252, "percutan": 252, "auricular": 252, "1772": 252, "1629": 252, "jalil": 252, "trigo": 252, "201511506": 252, "mari\u00f1o": 252, "canedo": 252, "cuneothalam": 252, "wake": 252, "cuneat": 252, "mira": 252, "pomata": 252, "rela": 252, "murer": 252, "6553": 252, "6564": 252, "6345": 252, "surki": 252, "leonard": 252, "laterodors": 252, "3111": 252, "sandstrom": 252, "friesen": 252, "reparameter": 252, "2550": 252, "907": 252, "sanjai": 252, "krothap": 252, "1336": 252, "1350": 252, "22440": 252, "santaniello": 252, "fiengo": 252, "glielmo": 252, "2081377": 252, "sprout": 252, "pajo": 252, "trpevski": 252, "stepaniuk": 252, "09546": 252, "derkach": 252, "e8047": 252, "0008047": 252, "balena": 252, "wolanski": 252, "dickson": 252, "woodin": 252, "713": 252, "carlen": 252, "saravanan": 252, "arabali": 252, "gootj": 252, "dreesbach": 252, "22429": 252, "hippounit": 252, "e1008114": 252, "1008114": 252, "sarid": 252, "interweav": 252, "16353": 252, "16358": 252, "intracolumnar": 252, "858": 252, "bht268": 252, "ghayoomi": 252, "alicea": 252, "curri": 252, "gerkin": 252, "gingel": 252, "gordon": 252, "hasani": 252, "khayrulin": 252, "lung": 252, "watt": 252, "openworm": 252, "caenorhabd": 252, "37310": 252, "rstb": 252, "0382": [252, 279], "22365": 252, "saudargien\u0117": 252, "jackeviciu": 252, "flicker": 252, "bard": 252, "kraev": 252, "medvedev": 252, "henneberg": 252, "disentangl": 252, "astrogli": 252, "05896": 252, "astroglia": 252, "20130614": 252, "0614": 252, "sylantyev": 252, "3143": 252, "3154": 252, "dem": 252, "brink": 252, "mattei": 252, "sharkovska": 252, "barthel": 252, "endesfeld": 252, "b\u00fchrer": 252, "hyperoxia": 252, "preterm": 252, "birth": 252, "14810": 252, "1242": 252, "198390": 252, "schierwagen": 252, "alp\u00e1r": 252, "g\u00e4rtner": 252, "clau": 252, "koester": 252, "chaotic": 252, "schmidt": 252, "uncertainti": 252, "2608925": 252, "1378": 252, "1387": 252, "2235835": 252, "1828": 252, "1839": 252, "2758324": 252, "1706": 252, "1718": 252, "hieber": 252, "bischofberg": 252, "10242": 252, "6335": 252, "8430": 252, "8441": 252, "1849": 252, "1857": 252, "150151": 252, "toleikyt": 252, "aitchison": 252, "1114": 252, "4582": 252, "fox": 252, "itani": 252, "golowasch": 252, "0338": 252, "00083": 252, "mizel": 252, "collman": 252, "brittain": 252, "bleckert": 252, "dorkenwald": 252, "macrina": 252, "zhuang": 252, "buchanan": 252, "takeno": 252, "torr": 252, "mahalingam": 252, "bumbarg": 252, "chartrand": 252, "kemnitz": 252, "silversmith": 252, "zung": 252, "zlateski": 252, "tartavul": 252, "popovych": 252, "froudaraki": 252, "suckow": 252, "tolia": 252, "seung": 252, "73783": 252, "schofield": 252, "7954": 252, "7962": 252, "schomburg": 252, "11798": 252, "11811": 252, "0656": 252, "westbrook": 252, "glomeruli": 252, "1202": 252, "schreglmann": 252, "peach": 252, "panella": 252, "boyden": 252, "rothwel": 252, "bhatia": 252, "20581": 252, "erchova": 252, "408": 252, "samengo": 252, "2239": 252, "knoflach": 252, "\u03b15": 252, "06004": 252, "5325": 252, "5337": 252, "scott": 252, "mathew": 252, "2039": 252, "2050": 252, "2385": 252, "scurfield": 252, "e0191106": 252, "0191106": 252, "scuri": 252, "cataldo": 252, "ristori": 252, "brunelli": 252, "seai": 252, "natan": 252, "geffen": 252, "sst": 252, "tone": 252, "9224": 252, "9235": 252, "0686": 252, "seeli": 252, "021906": 252, "seenivasan": 252, "033393": 252, "physrevresearch": 252, "230": 252, "untangl": 252, "sekuli\u0107": 252, "e106567": 252, "0106567": 252, "e22962": 252, "22962": 252, "00277": 252, "sengupta": 252, "7320267": 252, "sejp": 252, "40th": 252, "8513621": 252, "00731": 252, "senk": 252, "kuhlen": 252, "weyer": 252, "viola": 252, "senkow": 252, "psychophys": 252, "haptic": 252, "toh": 252, "2903500": 252, "e0128590": 252, "0128590": 252, "62016a": 252, "4618": 252, "7591756": 252, "skull": 252, "8037230": 252, "40612": 252, "srep40612": 252, "1945": 252, "9277": 252, "briggman": 252, "1099": 252, "058": 252, "shabestari": 252, "202110": 252, "biocas49922": 252, "9644995": 252, "6029": 252, "6038": 252, "220913": 252, "valencia": 252, "7869": 252, "7874": 252, "e1004090": 252, "1004090": 252, "00089": 252, "shao": 252, "tsao": 252, "2029": 252, "halvorsrud": 252, "734": 252, "sheasbi": 252, "1698": 252, "sheet": 252, "hajj": 252, "hereditari": 252, "lidocain": 252, "sheffield": 252, "2728": 252, "shehzad": 252, "bozku\u015f": 252, "3676582": 252, "3006": 252, "3020": 252, "1337": 252, "1349": 252, "pharmacotherapi": 252, "npj": 252, "s41537": 252, "00109": 252, "sheroziya": 252, "egorov": 252, "vollei": 252, "s11055": 252, "9229": 252, "sheynikhovich": 252, "otani": 252, "13914": 252, "13926": 252, "0466": 252, "shifman": 252, "elfenn": 252, "00035": 252, "shilyanski": 252, "karlsgodt": 252, "hardt": 252, "ehning": 252, "bearden": 252, "neurofibromin": 252, "13141": 252, "13146": 252, "1004829107": 252, "shimazaki": 252, "boccaccio": 252, "pinato": 252, "menini": 252, "murin": 252, "kamiji": 252, "girardi": 252, "schappo": 252, "2909": 252, "shinozaki": 252, "cateau": 252, "japan": 252, "044806": 252, "jpsj": 252, "shirinpour": 252, "hananeia": 252, "rosado": 252, "galani": 252, "opitz": 252, "1470": 252, "1482": [252, 345], "shirk": 252, "malinow": 252, "2682": 252, "respir": 252, "e0168356": 252, "0168356": 252, "rubinstein": 252, "duqu": 252, "haider": 252, "746": 252, "11453": 252, "11458": 252, "0702041104": 252, "shuman": 252, "aharoni": 252, "chavli": 252, "harlei": 252, "veter": 252, "mollinedo": 252, "gajat": 252, "pennington": 252, "taxidi": 252, "javaherian": 252, "kaba": 252, "rao": 252, "pandi": 252, "shtrahman": 252, "bakhurin": 252, "masmanidi": 252, "khakh": 252, "golshani": 252, "breakdown": 252, "0559": 252, "shvartsman": 252, "kotler": 252, "stoler": 252, "melam": 252, "2989": 252, "joel": 252, "1640": 252, "1644": 252, "e1002489": 252, "1002489": 252, "gottesman": 252, "ribbon": 252, "disynapt": 252, "474": 252, "nrn2864": 252, "metacontrast": 252, "psychologi": 252, "fpsyg": 252, "blink": 252, "byproduct": 252, "2042": 252, "consensu": 252, "e0180839": 252, "0180839": 252, "sinha": 252, "e2207": 252, "e2216": 252, "1419017112": 252, "\u0161i\u0161kov\u00e1": 252, "beutel": 252, "pitsch": 252, "kammer": 252, "sittl": 252, "schui": 252, "fleckenstein": 252, "grafe": 252, "anticanc": 252, "oxaliplatin": 252, "aggrav": 252, "neuropathi": 252, "6704": 252, "6709": 252, "1118058109": 252, "siu": 252, "hepatocyt": 252, "organogenesi": 252, "cancer": 252, "hypothes": 252, "doherti": 252, "fang": 252, "hovhannisyan": 252, "pearc20": 252, "juli": 252, "portland": 252, "3311790": 252, "3399621": 252, "astakhov": 252, "bandrowski": 252, "marton": 252, "993": 252, "skaar": 252, "e1007725": 252, "1007725": 252, "skach": 252, "conwai": 252, "blockag": 252, "18030": 252, "74891": 252, "056029": 252, "aad978": 252, "nature12600": 252, "softki": 252, "2820": 252, "2824": 252, "1736": 252, "1751": 252, "653": 252, "8978": 252, "18638": 252, "18643": 252, "huntsman": 252, "516": 252, "2000a": 252, "2000b": 252, "pangratz": 252, "fuehrer": 252, "4247": 252, "4255": 252, "3812": 252, "sokolova": 252, "vlkolinski": 252, "proton": 252, "rr13785": 252, "solbr\u00e5": 252, "bergersen": 252, "den": 252, "malth": 252, "s\u00f8renssen": 252, "kirchhoff": 252, "planck": 252, "e1006510": 252, "1006510": 252, "soldado": 252, "magran": 252, "brandalis": 252, "moulini": 252, "00506": 252, "cesana": 252, "electrorespons": 252, "00012": 252, "edelmann": 252, "le\u00dfmann": 252, "neurotroph": 252, "e1006975": 252, "1006975": 252, "smetter": 252, "1273": 252, "1283": 252, "hypox": 252, "somogyi": 252, "katonai": 252, "tg2576": 252, "unalt": 252, "rtg4510": 252, "tauopathi": 252, "721773": 252, "somogyvari": 252, "zalanyi": 252, "vdcc": 252, "tea": 252, "e57453": 252, "0057453": 252, "ashpol": 252, "shou": 252, "f1486": 252, "5139": 252, "235374": 252, "sotiropoulo": 252, "0537": 252, "neuralsyn": 252, "pronocicept": 252, "preval": 252, "1507": 252, "00440": 252, "spaak": 252, "zeitler": 252, "gielen": 252, "e45688": 252, "0045688": 252, "spampanato": 252, "2040": 252, "154": 252, "kearnei": 252, "haan": 252, "mcewen": 252, "macdonald": 252, "benna": 252, "montalenti": 252, "meisler": 252, "10022": 252, "10034": 252, "bruce": 252, "octopu": 252, "spera": 252, "unsworth": 252, "14311": 252, "nnw": 252, "linta": 252, "mesolimb": 252, "cannabi": 252, "addict": 252, "1369": 252, "00218": 252, "extrapyramid": 252, "ddr": 252, "21008": 252, "chirila": 252, "rager": 252, "863": 252, "spoleti": 252, "krashia": 252, "barbera": 252, "nobili": 252, "renzi": 252, "amelio": 252, "derail": 252, "113969": 252, "spratt": 252, "alexand": 252, "sahagun": 252, "kyoung": 252, "109483": 252, "clarkson": 252, "685": 252, "squair": 252, "gautier": 252, "mahe": 252, "soriano": 252, "bichat": 252, "incognito": 252, "sarafi": 252, "laskarato": 252, "bartholdi": 252, "demesmaek": 252, "komi": 252, "moerman": 252, "vaseghi": 252, "rosentret": 252, "ravier": 252, "mccracken": 252, "kang": 252, "vachicoura": 252, "jelescu": 252, "buschman": 252, "buse": 252, "denison": 252, "dukelow": 252, "charbonneau": 252, "rigbi": 252, "millar": 252, "barraud": 252, "bezard": 252, "neuroprosthet": 252, "baroreflex": 252, "haemodynam": 252, "308": 252, "03180": 252, "srikanth": 252, "0053": 252, "buss": 252, "santoro": 252, "takahashi": 252, "3276": 252, "2219": 252, "extrus": 252, "2195": 252, "2212": 252, "hilbert": 252, "quail": 252, "microclust": 252, "3229": 252, "3241": 252, "00546": 252, "1104": 252, "1112": 252, "2598": 252, "greger": 252, "krieger": 252, "litt": 252, "1464": 252, "1481": 252, "00643": 252, "2342": 252, "2357": 252, "bierwirth": 252, "stoenica": 252, "schuchmann": 252, "velman": 252, "br\u00e4uer": 252, "lehnardt": 252, "nitsch": 252, "budt": 252, "bhs305": 252, "stamboulian": 252, "platel": 252, "chabrol": 252, "duveau": 252, "roucard": 252, "depauli": 252, "mesiotempor": 252, "stasheff": 252, "steephen": 252, "3884": 252, "3897": 252, "hed": 252, "emot": 252, "affc": 252, "0161": 252, "stefano": 252, "cordella": 252, "gioi": 252, "769": 252, "772": 252, "9441187": 252, "29th": 252, "676": 252, "man47096": 252, "9223448": 252, "estabrook": 252, "mcgie": 252, "voluntari": 252, "reflex": 252, "0989": 252, "manwani": 252, "stelescu": 252, "sumegi": 252, "birinyi": 252, "rana": 252, "esculenta": 252, "stern": 252, "agudelo": 252, "toro": 252, "rotem": 252, "mose": 252, "neef": 252, "chronaxi": 252, "e0132577": 252, "0132577": 252, "sarkar": 252, "galor": 252, "mend": 252, "randolph": 252, "rouleau": 252, "bang": 252, "alda": 252, "marchetto": 252, "gage": 252, "lithium": 252, "nonrespons": 252, "ts65dn": 252, "tc1": 252, "trisom": 252, "ebiomedicin": 252, "1062": 252, "ebiom": 252, "sterratt": 252, "willishaw": 252, "ruler": 252, "e1002545": 252, "1002545": 252, "wespatat": 252, "tennigkeit": 252, "englitz": 252, "7886": 252, "7891": 252, "1305219110": 252, "1026": 252, "07146": 252, "00202": 252, "silicio": 252, "stimberg": 252, "packet": 252, "057": 252, "stockton": 252, "neuromanag": 252, "00024": 252, "9315": 252, "9337": 252, "stoke": 252, "isaacson": 252, "vyver": 252, "christen": 252, "lecchini": 252, "strube": 252, "saliba": 252, "penalba": 252, "eauclair": 252, "tractu": 252, "solitarii": 252, "1533": 252, "str\u00fcber": 252, "sauer": 252, "00936": 252, "3501": 252, "3510": 252, "masetto": 252, "237": 252, "00237": 252, "neurotrauma": 252, "1632": 252, "1089": 252, "6065": 252, "negrello": 252, "e1005754": 252, "1005754": 252, "e1004641": 252, "1004641": 252, "suleimanova": 252, "talanov": 252, "gafurov": 252, "gafarov": 252, "koroleva": 252, "virenqu": 252, "noe": 252, "mikhailov": 252, "nistri": 252, "giniatullin": 252, "immun": 252, "ht": 252, "mening": 252, "00135": 252, "maagdenberg": 252, "644047": 252, "sotayo": 252, "e04551": 252, "04551": 252, "2955": 252, "2973": 252, "00562": 252, "dietrich": 252, "ng2": 252, "00255": 252, "00226": 252, "peskin": 252, "tranchina": 252, "2593": 252, "2607": 252, "625": 252, "hilliard": 252, "tatter": 252, "1559": 252, "michaluk": 252, "homer": 252, "mglur": [252, 289], "niu": 252, "sharpen": 252, "1845": 252, "neill": 252, "4047": 252, "4062": 252, "jp279744": 252, "szalisznyo": 252, "duffau": 252, "smit": 252, "glioma": 252, "e69798": 252, "0069798": 252, "szegedi": 252, "paiz": 252, "baka": 252, "barz\u00f3": 252, "moln\u00e1r": 252, "tama": 252, "51691": 252, "szoboszlai": 252, "vervaek": 252, "1043": 252, "tajarenejad": 252, "ansari": 252, "yazdanfar": 252, "hamidi": 252, "thermoplasmon": 252, "hexagon": 252, "6013": 252, "6023": 252, "boe": 252, "438593": 252, "kawasaki": 252, "sato": 252, "matsumoto": 252, "saito": 252, "nakao": 252, "kaga": 252, "569": 252, "multipoint": 252, "ecj": 252, "10064": 252, "shiraishi": 252, "tal": 252, "bickel": 252, "leukhin": 252, "toschev": 252, "lavrov": 252, "bionanosci": 252, "649": 252, "s12668": 252, "00743": 252, "nakamura": 252, "e0226028": 252, "0226028": 252, "bartel": 252, "298": 252, "5573": 252, "5586": 252, "mittman": 252, "979": 252, "tejada": 252, "arisi": 252, "cairasco": 252, "epilepticu": 252, "e40726": 252, "0040726": 252, "newborn": 252, "e1003601": 252, "1003601": 252, "106841": 252, "yebeh": 252, "telenczuk": 252, "108871": 252, "tele\u0144czuk": 252, "0068": 252, "e0175362": 252, "0175362": 252, "jp279452": 252, "uncertainpi": 252, "connolli": 252, "endovascular": 252, "026011": 252, "zitella": 252, "tesfayesu": 252, "s157": 252, "s167": 252, "carbamazepin": 252, "phenytoin": 252, "12172": 252, "696": 252, "ranjith": 252, "arun": 252, "thome": 252, "yanez": 252, "engelhardt": 252, "draguhn": 252, "1418": 252, "201912442": 252, "1193": 252, "1215": 252, "thorbergsson": 252, "garwicz": 252, "schouenborg": 252, "3380": 252, "3383": 252, "6346690": 252, "e93779": 252, "0093779": 252, "thurbon": 252, "hofstett": 252, "2485": 252, "2502": 252, "tiesinga": 252, "jose": 252, "carbachol": 252, "tiganj": 252, "chevalli": 252, "monacelli": 252, "00009": 252, "b\u00f6rjesson": 252, "lundberg": 252, "elind": 252, "dampen": 252, "polyunsatur": 252, "fatti": 252, "e44388": 252, "0044388": 252, "hoberg": 252, "br\u00f8nnum": 252, "vittinghu": 252, "frahm": 252, "883": 252, "22061": 252, "obreja": 252, "schmelz": 252, "00777": 252, "tikidji": 252, "hamburyan": 252, "0464": 252, "leonik": 252, "strongli": 252, "00728": 252, "15682": 252, "15695": 252, "narayana": 252, "bozku": 252, "ghazawi": 252, "00046": 252, "josi": 252, "democrat": 252, "0075": 252, "1058": 252, "vesicular": 252, "disloc": 252, "00239": 252, "tinglei": 252, "1229": 252, "rout": 252, "subcort": 252, "septum": 252, "00147": 252, "tobin": 252, "e24838": 252, "24838": 252, "negahbani": 252, "fr\u00f6hlich": 252, "1029": 252, "00541": 252, "tominaga": 252, "ichikawa": 252, "tomko": 252, "7615": 252, "87002": 252, "jedli\u010dka": 252, "be\u0148u\u0161kov\u00e1": 252, "tomsett": 252, "ainsworth": 252, "thiel": 252, "sanayei": 252, "gieselmann": 252, "2333": 252, "2353": 252, "0793": 252, "toporikova": 252, "chacron": 252, "2287": 252, "wright": 252, "burster": 252, "711": 252, "0340": 252, "e1002580": 252, "1002580": 252, "00128": 252, "e1000932": 252, "1000932": 252, "13490": 252, "13495": 252, "toth": 252, "chebyshev": 252, "traboulsi": 252, "chevali": 252, "quignard": 252, "zinc": 252, "kupfer": 252, "fluoxetin": 252, "metabolit": 252, "norfluoxetin": 252, "1963": 252, "1968": 252, "ranta": 252, "cam": 252, "loui": 252, "dorr": 252, "00735": 252, "118953": 252, "minh": 252, "837": 252, "850": 252, "trapani": 252, "antonietti": 252, "9441383": 252, "trayn": 252, "zrenner": 252, "pbr": 252, "protti": 252, "e53357": 252, "0053357": 252, "14357": 252, "jointli": 252, "tsanov": 252, "chah": 252, "noor": 252, "egan": 252, "aggleton": 252, "erichsen": 252, "vann": 252, "mara": 252, "2316": 252, "00583": 252, "1076": 252, "2834": 252, "2845": 252, "tscherter": 252, "ivanova": 252, "markedli": 252, "1707": 252, "1724": 252, "203836": 252, "tseng": 252, "7165": 252, "7173": 252, "tsuchitani": 252, "tsutsui": 252, "oka": 252, "14519": 252, "14531": 252, "1251": 252, "tumulti": 252, "royster": 252, "columnar": 252, "022408": 252, "hare": 252, "priestlei": 252, "grosmark": 252, "ladow": 252, "zemelman": 252, "vasoact": 252, "intestin": 252, "polypeptid": 252, "tyurikova": 252, "mchugh": 252, "24150": 252, "dogma": 252, "3664": 252, "11537": 252, "uebach": 252, "dickhof": 252, "anticonvuls": 252, "8489": 252, "8501": 252, "1534": 252, "uhlirova": 252, "k\u0131l\u0131\u00e7": 252, "thunemann": 252, "saisan": 252, "sakad\u017ei\u0107": 252, "weldi": 252, "razoux": 252, "vandenbergh": 252, "ferri": 252, "nizar": 252, "sridhar": 252, "steed": 252, "abashin": 252, "fainman": 252, "masliah": 252, "boa": 252, "kleinfeld": 252, "buxton": 252, "e14315": 252, "14315": 252, "ujfalussi": 252, "multiplex": 252, "ullman": 252, "crete": 252, "kuroda": 252, "5024": 252, "5028": 252, "vabnick": 252, "risal": 252, "aberr": 252, "747": 252, "valent": 252, "romei": 252, "fadda": 252, "sterlini": 252, "fruscion": 252, "castroflorio": 252, "michetti": 252, "giansant": 252, "zara": 252, "corradi": 252, "fassio": 252, "prrt2": 252, "bhy079": 252, "steen": 252, "tarnaud": 252, "holen": 252, "cathod": 252, "3287": 252, "2982271": 252, "varela": 252, "christianson": 252, "maier": 252, "12848": 252, "12853": 252, "2669": 252, "vasilkov": 252, "138104": 252, "physrevlett": 252, "vazquez": 252, "mendez": 252, "velden": 252, "hooft": 252, "chameau": 252, "ht3a": 252, "1521": 252, "1528": 252, "00829": 252, "velet": 252, "babic": 252, "balasingham": 252, "2129": 252, "2143": 252, "nonspik": 252, "rabbit": 252, "venkadesh": 252, "hamilton": 252, "e1007462": 252, "1007462": 252, "sanhueza": 252, "e85826": 252, "0085826": 252, "e1008087": 252, "1008087": 252, "verma": 252, "mudg": 252, "trevathan": 252, "shoffstal": 252, "dalrympl": 252, "796042": 252, "3305": 252, "3322": 252, "451": 252, "1624": 252, "1628": 252, "1215101": 252, "vetter": 252, "926": 252, "937": 252, "vierl": 252, "claassen": 252, "cardin": 252, "fnhum": 252, "00198": 252, "appps1": 252, "668948": 252, "fnagi": 252, "vitko": 252, "4844": 252, "4855": 252, "denerv": 252, "organotyp": 252, "e32883": 252, "0032883": 252, "vladimirov": 252, "tu": 252, "3435": 252, "3447": 252, "12342": 252, "vlasit": 252, "gainer": 252, "feller": 252, "volk": 252, "hume": 252, "shelburn": 252, "fitzpatrick": 252, "neuromusculoskelet": 252, "22983": 252, "02298": 252, "3250": 252, "00260": 252, "2646": 252, "2681": 252, "neco_a_00491": 252, "0515": 252, "perinod": 252, "swell": 252, "1003": 252, "00912": 252, "vyleta": 252, "loos": [252, 374], "665": 252, "1244811": 252, "se\u00e1\u00f1ez": 252, "caban": 252, "pirondini": 252, "vat": 252, "heimgartn": 252, "fodor": 252, "watrin": 252, "seguin": 252, "paol": 252, "keybu": 252, "schurch": 252, "pralong": 252, "becc": 252, "carda": 252, "zitzewitz": 252, "0649": 252, "walckier": 252, "thiran": 252, "monopolar": 252, "walsh": 252, "landman": 252, "hugh": 252, "026003": 252, "aa8b7c": 252, "sabottk": 252, "7674": 252, "7688": 252, "3165": 252, "1183108": 252, "mckinnon": 252, "prevertebr": 252, "paravertebr": 252, "ju": 252, "01616412": 252, "1110304": 252, "enjieu": 252, "kadji": 252, "kawashima": 252, "1807": 252, "1852": 252, "neco_a_00458": 252, "ipsilater": 252, "0300": 252, "delgutt": 252, "itd": 252, "00450": 252, "ou": 252, "3969": 252, "issn": 252, "1673": 252, "5374": 252, "s12264": 252, "isnn": 252, "zurada": 252, "yin": 252, "675": 252, "678": 252, "toprani": 252, "mitochondri": 252, "clearanc": 252, "secretori": 252, "ogura": 252, "8366": 252, "8371": 252, "oda": 252, "hindbrain": 252, "0249": 252, "8267": 252, "8277": 252, "jester": 252, "607": 252, "618": 252, "e11": 252, "0040011": 252, "eor": 252, "eigenanalysi": 252, "015013": 252, "wefelmey": 252, "9757": 252, "9762": 252, "1502902112": 252, "wehr": 252, "nature02116": 252, "planar": 252, "weidel": 252, "duart": 252, "00031": 252, "weissler": 252, "farah": 252, "shoham": 252, "photo": 252, "aa7805": 252, "weisz": 252, "glowatzki": 252, "2373": 252, "3428": 252, "weldai": 252, "shlifer": 252, "16157": 252, "16176": 252, "0712": 252, "weli": 252, "subiculum": 252, "1525": 252, "1594": 252, "01224": 252, "021902": 252, "120602": 252, "0436": 252, "wetmor": 252, "mukamel": 252, "schnitzer": 252, "2328": 252, "2347": 252, "wilj": 252, "biehl": 252, "keijzer": 252, "epithelium": 252, "despenza": 252, "luikart": 252, "hyperact": 252, "pten": 252, "943": 252, "wilm": 252, "schleimer": 252, "1032": 252, "13326": 252, "e1004768": 252, "1004768": 252, "mitchel": 252, "scaf": 252, "leaw": 252, "cromer": 252, "lerch": 252, "2661": 252, "2671": 252, "jci42219": 252, "weis": 252, "betaiv": 252, "spectrin": 252, "677": 252, "winograd": 252, "vive": 252, "7303": 252, "winslow": 252, "jou": 252, "wojtowicz": 252, "ledford": 252, "3138": 252, "3149": 252, "3110": 252, "wissmann": 252, "bildl": 252, "beyermann": 252, "kalbitz": 252, "bentrop": 252, "fakler": 252, "tandem": 252, "16142": 252, "16150": 252, "wittmeier": 252, "duffin": 252, "poon": 252, "handshak": 252, "18000": 252, "18005": 252, "wlodarczyk": 252, "doronin": 252, "00205": 252, "sz\u00e9keli": 252, "1021": 252, "benoit": 252, "marand": 252, "9080": 252, "9095": 252, "1767": 252, "billup": 252, "4868": 252, "4877": 252, "wongsarnpigoon": 252, "046009": 252, "woock": 252, "2047610": 252, "445601": 252, "8121": 252, "ac2a54": 252, "swindlehurst": 252, "dsp": 252, "271": 252, "kao": 252, "lo": [252, 289], "inwardli": 252, "kaohsiung": 252, "kjm": 252, "0585": 252, "wulff": 252, "ponomarenko": 252, "korotkova": 252, "bahner": 252, "wisden": 252, "3566": 252, "ellenberg": 252, "60936": 252, "boccalini": 252, "2587": 252, "neco_a_00788": 252, "0568": 252, "1759": 252, "1773": 252, "074": 252, "xiang": 252, "zhong": 252, "qin": 252, "noninvas": 252, "e0218293": 252, "0218293": 252, "xiumin": 252, "9252": 252, "cavied": 252, "quero": 252, "aguirr": 252, "cascad": 252, "wrachtrup": 252, "wavelet": 252, "spin": 252, "932016": 252, "xylouri": 252, "00094": 252, "yaeger": 252, "4741": 252, "4750": 252, "eabh0024": 252, "abh0024": 252, "okuda": 252, "3927": 252, "3938": 252, "2377": 252, "yamasaki": 252, "isokawa": 252, "ikeno": 252, "kanzaki": 252, "yamashita": 252, "sundaram": 252, "uchida": 252, "matsuo": 252, "ourep": 252, "photoelectr": 252, "polyethylen": 252, "abf892": 252, "blockad": 252, "046020": 252, "aac315": 252, "stephen": 252, "raja": 252, "aplin": 252, "fridman": 252, "eaaq1438": 252, "aaq1438": 252, "murrai": 252, "disinhibitori": 252, "12815": 252, "ncomms12815": 252, "pierr": 252, "clandinin": 252, "031": 252, "mazza": 252, "prevot": 252, "griffith": 252, "tripathi": 252, "sibil": 252, "110232": 252, "isopotenti": 252, "yau": 252, "flufenam": 252, "3869": 252, "3882": 252, "193037": 252, "13591": 252, "93114": 252, "17344": 252, "01221": 252, "056001": 252, "aacbff": 252, "6940": 252, "43460": 252, "e1007766": 252, "1007766": 252, "3056": 252, "3009293": 252, "che": 252, "3457": 252, "3471": 252, "2906114": 252, "3210": 252, "03547": 252, "yildirim": 252, "ozcan": 252, "turhan": 252, "kayikcioglu": 252, "friendli": [252, 374, 386], "congress": 252, "tiptekno": 252, "8596865": 252, "22373": 252, "ht1a": 252, "bhv245": 252, "yoo": 252, "canin": 252, "multicontact": 252, "flat": 252, "1163": 252, "s10103": 252, "stegen": 252, "veh": 252, "4213": 252, "4233": 252, "170746": 252, "belbut": 252, "baeta": 252, "petreanu": 252, "59551": 252, "lilli": 252, "denham": 252, "588881": 252, "2894410": 252, "2977": 252, "2980": 252, "8856799": 252, "1746": 252, "00891": 252, "swietek": 252, "4229": 252, "4314": 252, "bhv199": 252, "s13408": 252, "0017": 252, "397897": 252, "e1003014": 252, "1003014": 252, "unbalanc": 252, "13701": 252, "13713": 252, "1834": 252, "7260": 252, "zachari": 252, "dissanayak": 252, "owen": 252, "mason": 252, "zacksenhous": 252, "lso": 252, "3098": 252, "4715": 252, "1291": 252, "zaika": 252, "lara": 252, "hilgemann": 252, "shapiro": 252, "angiotensin": 252, "phosphatidylinositol": 252, "bisphosph": 252, "tolstykh": 252, "triphosph": [252, 374], "purinerg": 252, "p2y": 252, "8914": 252, "8926": 252, "036019": 252, "ab8fc4": 252, "kowalski": 252, "dimarco": 252, "13415": 252, "3410": 252, "zang": 252, "dieudonn\u00e9": 252, "1549": 252, "60692": 252, "resili": 252, "2105795118": 252, "inglebert": 252, "guignon": 252, "russier": 252, "eaay4313": 252, "aay4313": 252, "bias": 252, "zeldenrust": 252, "e1005960": 252, "1005960": 252, "zelechowski": 252, "00657": 252, "macewan": 252, "026009": 252, "aa9e96": 252, "612937": 252, "zenk": 252, "00076": 252, "zerlaut": 252, "e1005452": 252, "1005452": 252, "regim": 252, "3791": 252, "3808": 252, "jp272317": 252, "5460": 252, "5469": 252, "6220": 252, "fictiv": 252, "00763": 252, "066009": 252, "janik": 252, "00254": 252, "tongu": 252, "069": 252, "agarw": 252, "1035": 252, "s11071": 252, "hancock": 252, "e1009609": 252, "1009609": 252, "zhan": 252, "morphologci": 252, "00091": 252, "13592": 252, "13601": 252, "1817689116": 252, "1225": 252, "109125": 252, "e25382": 252, "25382": 252, "cragg": 252, "rectif": 252, "918": 252, "siri": 252, "pierc": 252, "rectum": 252, "bioengineering7040152": 252, "yuan": 252, "ginti": 252, "00010": 252, "chu": 252, "zhen": 252, "skf83959": 252, "pharmacologica": 252, "sinica": 252, "carnei": 252, "3046": 252, "ild": 252, "2355": 252, "2371": 252, "xue": 252, "702": 252, "1999a": 252, "1445": 252, "1999b": 252, "1999c": 252, "00250": 252, "zhuchkova": 252, "e78908": 252, "0078908": 252, "zhukov": 252, "kazakova": 252, "maksimov": 252, "ziegler": 252, "hosseini": 252, "varnamkhasti": 252, "corkin": 252, "912": 252, "zippo": 252, "biella": 252, "11543": 252, "srep11543": 252, "mohsenian": 252, "pahwa": 252, "gloeckner": 252, "pedunculopontin": 252, "045005": 252, "yager": 252, "hudson": 252, "brintz": 252, "pptg": 252, "blaich": 252, "rottmann": 252, "romanelli": 252, "urbano": 252, "hcn4": 252, "2291": 252, "2304": 252, "bhz047": 252, "heuermann": 252, "trip8b": 252, "1564": 252, "zomorrodi": 252, "ferecsko": 252, "kroeger": 252, "ventroposterolater": 252, "3541": 252, "3556": 252, "22413": 252, "bornat": 252, "saighi": 252, "renaud": 252, "zsiro": 252, "heidari": 252, "farina": 252, "nazarpour": 252, "magnetomyographi": 252, "2000185": 252, "admt": 252, "202000185": 252, "amaro": 252, "leung": 252, "zybura": 252, "baucum": 252, "rush": 252, "11845": 252, "11865": 252, "ra120": 252, "014062": 252, "e1002319": 252, "1002319": 252, "2656": 252, "3107": 252, "00085": 252, "freg": 261, "maxit": 261, "neuron_vector": 263, "add_recurs": 265, "nrn_option": 265, "3000": 265, "legacyi": 265, "codata2018": [265, 321, 352], "legacyn": 265, "nrnunits_modern": 265, "hname": [272, 292, 300, 386, 392], "node1d": [272, 289], "node3d": [272, 289], "nodeextracellular": [272, 289], "sbml": [272, 332], "lem": 274, "_ref_amp1": 279, "11g": 279, "9151": 279, "9987": 279, "57284e": 279, "08992e": 279, "2522": 279, "9181": 279, "9175": 279, "299966": 279, "28846": 279, "2775": 279, "299999": 279, "299544": 279, "8707": 279, "0352": 279, "0258": 279, "299976": 279, "8703": 279, "8677": 279, "299835": 279, "9246": 279, "8698": 279, "53006e": 279, "0116979": 279, "944": 279, "9218": 279, "88827e": 279, "000592712": 279, "5089": 279, "91897e": 279, "48624e": 279, "1456": 279, "4464": 279, "60753e": 279, "12119e": 279, "5259": 279, "0795": 279, "15519e": 279, "25541e": 279, "5135": 279, "4695": 279, "13443e": 279, "92656e": 279, "4725": 279, "47428e": 279, "86879e": 279, "3834": 279, "0853": 279, "29392e": 279, "51288e": 279, "4093": 279, "57826e": 279, "50748e": 279, "34836e": 279, "94783e": 279, "9618": 279, "2582": 279, "82874e": 279, "71847e": 279, "ncout": 279, "30m": 279, "ns2": 279, "nctrig": 279, "fake_output": 279, "spikeout": 279, "incom": 279, "tsp": 279, "fake_fir": 279, "my_cel": [279, 292, 386, 387], "e_stim": 279, "stim_tim": 279, "output_tim": 279, "stim_times_nc": 279, "output_times_nc": 279, "set_ytick": 279, "set_yticklabel": 279, "nstimuli": 279, "nevent": 279, "set_xlim": 279, "set_xlabel": [279, 387], "playground": [279, 370, 372, 373, 375, 376, 381], "gnabarh": 279, "nlayer_extracellular": [279, 392], "extcelln": 279, "mech1": [280, 281], "mech2": [280, 281], "_ref_nrnvar": 280, "_ref_ach_releas": [280, 281], "trpe": [280, 281], "cleanup": [280, 382], "dealloc": 280, "discover": 280, "ly": [280, 371], "firstli": 280, "secondli": 280, "t_valu": 280, "v_min": 280, "v_size": 280, "k_size": 280, "table_tau2_": 280, "tau2_": 280, "range1": 281, "global1": 281, "nonspec1": 281, "elec1": 281, "read1": 281, "write1": 281, "ontology_id": 281, "pointer1": [281, 329], "bbcore1": 281, "external1": 281, "intial": [281, 286], "afer": 281, "retreat": 281, "noop": 282, "py_cal": [282, 285, 301, 310, 352, 358, 365], "nameref": [282, 331], "mtype": 282, "file_nam": 282, "code_str": 282, "mpiabort_on_error": [283, 286, 297], "mpi_init": [283, 286], "py_allgath": [283, 286], "py_gath": [283, 286], "py_scatt": [283, 286], "py_broadcast": [283, 286], "nrncore_writ": [283, 286], "nrncore_run": [283, 286], "preseg": [283, 285], "postseg": [283, 285], "source_ref_v": 285, "1or0": 285, "183098861837907": 285, "bullet": 286, "single_run": 286, "myscript": 286, "neuron_init_mpi": 286, "testmpi": [286, 389], "oldflag": 286, "newflag": 286, "mpi_abort": [286, 297], "cleanli": [286, 292], "_ref_gnabar": 286, "varialbl": 286, "beforehand": 286, "hoctoplevelinterpret": 286, "parcon": 286, "srcitem": 286, "gcd480afb": 286, "cd480afb": 286, "destlist_on_root": 286, "destitem_from_root": 286, "destitem": 286, "pyalltoal": 286, "requested_subworld_s": 286, "interleav": 286, "interspers": 286, "_ref_nsend": 286, "_ref_nrecv": 286, "_ref_nrecv_us": 286, "_ref_target_vari": 286, "append_files_dat": 286, "bbcore_mech": 286, "pointtyp": 286, "is_ion": [286, 392], "param_s": 286, "dparam_s": 286, "charge_if_ion": 286, "byteswap": 286, "endian": 286, "gidgroup": 286, "_1": 286, "_2": 286, "typcial": 286, "submodel": 286, "n_gidgroup": 286, "teardown": 286, "test_submodel": 286, "argstr": 286, "nrncore_arg": 286, "split_at": 287, "host_split_at": 287, "area_per_vol": 289, "perim_per_area": 289, "volume_fract": [289, 373, 378], "surface_fract": [289, 374], "neighbor_areas_fract": 289, "cross_area": 289, "surface_area": [289, 371], "on_cell_surfac": 289, "xlo": [289, 378], "ylo": [289, 378], "zlo": [289, 378], "xhi": [289, 378], "yhi": [289, 378], "zhi": [289, 378], "neumann": [289, 378], "obstacl": [289, 378], "ecs_boundary_condit": [289, 378], "magnesium": 289, "ontologi": 289, "substanc": [289, 374, 381], "bioport": 289, "er_calcium": 289, "nodes_on_dend": 289, "nodes_on_dend_cent": 289, "defined_on_region": 289, "region_list": 289, "represd": 289, "h2o": 289, "dimer": 289, "decompos": 289, "ext": 289, "mass_act": 289, "menten": [289, 371], "diamer": 289, "f_rate": [289, 371], "b_rate": 289, "degradation_switch": [289, 290, 381], "_ref_valu": [289, 378], "include_flux": 289, "value_to_grid": 289, "volumetr": 289, "0x0x0": 289, "mmol": 289, "millimol": 289, "ip3flux": 289, "_ref_ip3flux": 289, "metabotrop": 289, "rxdsection": 289, "_ref_molecul": 289, "mem": 289, "24458654944007166": 289, "n_gate": 289, "nsubseg": 289, "underestim": 289, "model_nam": 289, "save_st": 289, "restore_st": 289, "metadata": [289, 382], "gzip": 289, "compresss": 289, "compris": [290, 382], "quadrant": 290, "expr_with_sign": 290, "expr_to_get_sign": 290, "\u03c0": 290, "gauss": 290, "h\u00f4pital": 290, "_ref_triggervar": 291, "_ref_triggerthresh": 291, "methog": 291, "dict": [291, 391], "repr": 292, "itertool": 292, "_id": 292, "__repr__": [292, 386, 387, 388, 392], "s_": 292, "dend1": [292, 365], "dend2": [292, 365], "dend3": 292, "dend4": 292, "dend5": 292, "dend7": 292, "interp": 293, "allseg": [293, 340, 349, 365, 392], "4555": 293, "309347705201": 293, "30279180612013384": 293, "3093477052": 293, "7382": 293, "7427359360145": 293, "742735936014": 293, "41806926603277866": 293, "11527745991264488": 293, "176124166826": 293, "17554915433797802": 293, "060271694425333144": 293, "609512397643": 293, "09723611726566303": 293, "03696442284032988": 293, "15865": 293, "042900628456": 293, "042900628458": 293, "061927456753380815": 293, "024963033913050933": 293, "50000000000001": 293, "18692": 293, "47628885927": 293, "04294537336273899": 293, "01798233944968805": 293, "21519": 293, "909677090083": 293, "0315498128871132": 293, "013567473437425146": 293, "24347": 293, "343065320896": 293, "02416676205124544": 293, "010599288613820293": 293, "27174": 293, "77645355171": 293, "019107688792477533": 293, "00850840017865724": 293, "30002": 293, "209841782525": 293, "015488688793197206": 293, "006980288614539967": 293, "setup_diam": 293, "print_stat": 293, "zvec": 293, "_ref_z": 293, "segment1": 293, "segment2": 293, "diam_change_cnt": [293, 349], "python_iterable_of_sect": 294, "py_list": 294, "neccessari": 294, "my_iclamp": 296, "num_pts_3d": 296, "soma_id": 296, "exec": 297, "bewar": 297, "obj_nam": 297, "strref": [299, 310, 331], "my_str": [299, 391], "flip_funct": 300, "on_button_press": 300, "neuron_array_ref": 300, "vb1": 300, "vb2": 300, "show_all_s": 300, "all_iclamp": 301, "my_list": [301, 340, 391], "label_with_length": 301, "item_id": 301, "on_click": 301, "snape": 304, "python_func": [305, 346], "resultptr": 306, "nmenu": 308, "imenu": 308, "mywindow": 310, "mystat": 310, "myval": 310, "statepress": 310, "checkboxpress": 310, "numberset": 310, "this_modul": 310, "mutlipl": 310, "on_press": 310, "button_id": 310, "on_press3": 310, "obj_or_modul": 310, "action_fn": 310, "button_st": 310, "selected1": 310, "selected2": 310, "item_select": 310, "immut": [310, 344, 349, 382, 391], "ref_var": 310, "show_val": 310, "on_slid": 310, "val_str": 310, "valuepanel": 310, "init_v": [310, 371], "_val": 310, "_bounds_check": 310, "__lower_limit": 310, "__upper_limit": 310, "setter": 310, "new_val": [310, 325], "gna_hh": [310, 392], "nameerror": 314, "attributeerror": 314, "squiggl": 314, "obp": 314, "banana": 314, "unabl": 316, "tempoari": 316, "temp_file_nam": 316, "dispos": 316, "strptr": 316, "_ref_str": 316, "dirnam": 316, "r_open": [319, 320], "w_open": 320, "96485": 321, "3321233100141": 321, "3144626181532395": 321, "avogadro_const": [321, 392], "02214076e23": 321, "octob": [321, 352], "filterwarn": 321, "4j": 323, "1000001": 324, "99999": 324, "99999613071850035": 324, "00000133288267534": 324, "00000432481465396": 324, "ignore_return": 325, "__future__": 325, "print_funct": 325, "_ref_base10expon": 325, "highindex_ptr": 326, "mcellran4test": 326, "mcell_func": 326, "resync": 326, "mcell_func2": 326, "count_to_1": 327, "__call__": [327, 392], "print_i": 327, "3g": [327, 386], "rv": [327, 328], "set_index_then_doit": 328, "51709661466": 328, "485175784418": 328, "212032709823": 328, "503178330905": 328, "114339664628": 328, "28075206782": 328, "0578608361212": 328, "26376087479": 328, "291156947261": 328, "21937205675": 328, "409557452659": 328, "_ref_var": [328, 337], "nmod": 329, "abbrevi": 329, "str_type": 329, "var_refer": 329, "pylab": 329, "inp": 329, "pvec": 329, "stim_i": 329, "_ref_ina": [329, 376], "numerical_truth_valu": 329, "_ref_px": 329, "do_run": [329, 337], "pointer2": 329, "pointern": 329, "mygui": 329, "name_str": 331, "5d": 331, "get_mech_glob": 331, "mech_glob": 331, "py_callback": 331, "_ref_g": 331, "has_membran": [331, 392], "_in": 331, "name_mech": 331, "name_strref": 331, "valus": 337, "curstr": 337, "outdat": 339, "datafil": 339, "neuronpython": 340, "manipulatesd": 340, "__nrnsec_0x7fa44eb70000": 340, "tree_sec": 340, "my_sec": 340, "pplist": 340, "300000011921": 342, "9876537323": 342, "xsquiggl": 343, "ssf": 343, "cow": 344, "5fb6a5cbbdb7": 345, "perf_count": [345, 364], "hhsim": 347, "9943": 347, "9917": 347, "6876": 347, "9008": 347, "5015": 347, "2226": 347, "9284": 347, "8921": 347, "8901": 347, "3462": 347, "3559": 347, "1873": 347, "0331": 347, "9538": 347, "varref1": 347, "varref2": 347, "singleton": 349, "_for": 349, "_state": 349, "ptr_var": 349, "states_copi": 349, "_ref_maxacor": 349, "visit": 349, "assert_whole_model_charge_conserv": 349, "total_imem": 349, "total_iclamp_cur": 349, "trueparentseg": [349, 392], "structure_change_count": 349, "intcnt": 349, "structure_change_cnt": 349, "diam_change_count": 349, "recalc_diam": 349, "extra_scatter_gath": 349, "nonvint": 349, "hello1": 349, "cort_sec": 349, "corticalcel": 349, "hello2": 349, "recording_callback": 349, "extra_scatter_gather_remov": 349, "gatherv": 350, "makegathervec": 350, "vplai": 350, "makevectorplai": 350, "makevecwrap": 350, "overriden": 353, "myadvanc": 353, "myinit": [353, 356], "get_stat": 354, "file_obj": 354, "_ref_vari": 358, "_ref_cai": [358, 377], "num_el": 358, "_ref_dbl": 358, "crossact": 358, "crossact_vflag1": 358, "say_hi": 358, "on_ev": 358, "event_typ": 358, "fa": 362, "graphics_object": 364, "cmap": 364, "jet": 364, "apical_dendrit": 364, "_ref_varnam": 364, "start_seg": 365, "stop_seg": 365, "bokeh": [365, 371, 372, 375, 376, 386, 391], "my_func": 365, "graph_object": [365, 372, 376], "kwarg1": 365, "val1": 365, "linewidth": 365, "bg": 365, "line_width": [365, 386, 391, 392], "greppabl": 368, "sha": 368, "ni_pci_6229": 368, "rtai": 368, "pci": 368, "6229": 368, "c46dbc7": 368, "bglcheckpoint": 368, "bglcheckpointinit": 368, "74d3db9": 368, "1415": 368, "e9ef741": 368, "nrn_realtim": 368, "d5f6139": 368, "1802": 368, "2f90f37": 368, "1869": 368, "8fecd77": 368, "1919": 368, "a5c36e9": 368, "1937": 368, "5a67957": 368, "tinyurl": [370, 372, 373, 375, 376, 381], "_ref_ui": 370, "plot_it": [370, 371, 380], "ca_init": 370, "u0": 370, "plot_\u03b1": 370, "\u03b1_init": 370, "legend": [370, 375, 386, 387], "my_\u03b1": 370, "wherein": 371, "actor": 371, "nabla": 371, "cdot": [371, 381], "laplacian": 371, "cartesian": 371, "u_": 371, "yy": 371, "fick": 371, "apical1": 371, "apical2": 371, "2345e": 371, "rate_f": 371, "rate_b": 371, "irrevers": 371, "cacl2_react": 371, "cacl2": 371, "\u03bcm2": [371, 374, 386], "k_f": 371, "cacl_2": 371, "mich": 371, "enzymatic_react": 371, "vmax": [371, 378], "km": 371, "enzymat": 371, "stoichiometri": 371, "simulaten": 371, "ip3_degrad": 371, "ip_3": 371, "gleak": [371, 374], "cyt_er_membran": [371, 374], "num_nod": 371, "advance_a_bit": 371, "955556": 371, "977778": 371, "0222222": 371, "915565": 371, "957783": 371, "0422175": 371, "075": [371, 386], "879356": 371, "939678": 371, "0603222": 371, "846386": 371, "923193": 371, "0768069": 371, "816217": 371, "908108": 371, "0918917": 371, "691965": 371, "845982": 371, "154018": 371, "602562": 371, "801281": 371, "198719": 371, "535061": 371, "76753": 371, "23247": 371, "482188": 371, "741094": 371, "258906": 371, "43957": 371, "719785": 371, "280215": 371, "u_t": 371, "my_initi": [371, 373, 380], "bistable_react": 371, "subregion": 372, "initial_protein": 372, "active_region_valu": 372, "in_region": 372, "production_r": 372, "add_trac": [372, 376], "advance_count": 372, "update_layout": 372, "xaxis_titl": 372, "yaxis_titl": 372, "notebook_connect": [372, 373, 376], "importantli": 373, "tradit": [373, 382, 383], "ec": [373, 378], "assing": 373, "cng": [373, 378], "8b1290d5c8ab748dd6251be5bd46a4e3794d742f": [373, 378], "2023": 373, "55074": 373, "54k": 373, "78k": 373, "stamp": [373, 392], "mb": 373, "nutrient": 373, "my_initial2": 373, "sequestr": 374, "calbindin": 374, "travers": 374, "har": 374, "sarco": 374, "serca": 374, "ryanoin": 374, "ryr": 374, "simplic": [374, 382], "cicr": 374, "wtihin": 374, "cadiff": 374, "ip3diff": 374, "cac_init": 374, "0e": 374, "ip3_init": 374, "gip3r": 374, "12040": 374, "gserca": 374, "3913": 374, "kserca": 374, "kip3": 374, "kact": 374, "ip3rtau": 374, "fe": 374, "sequest": 374, "cacyt_init": 374, "apolog": 374, "leloup": 375, "goldbet": 375, "gonz": 375, "neurospora": 375, "074873099129000948": 375, "biomodel": 375, "ebi": 375, "biomd0000000298": 375, "repeteadli": 375, "declare_paramet": 375, "declare_speci": 375, "vsp": 375, "vmp": 375, "kmp": 375, "kip": 375, "ksp": 375, "vdp": 375, "kdp": 375, "vst": [375, 382], "vmt": 375, "kmt": 375, "kst": 375, "vdt": 375, "kdt": 375, "kdc": 375, "kdn": 375, "k3": 375, "k4": 375, "v1p": 375, "v1t": 375, "v2p": 375, "v2t": 375, "v3p": 375, "v3t": 375, "v4p": 375, "v4t": 375, "k1p": 375, "k1t": 375, "k2p": 375, "k2t": 375, "k3p": 375, "k3t": 375, "k4p": 375, "k4t": 375, "protien": 375, "mp": 375, "0614368": 375, "0169928": 375, "0141356": 375, "0860342": 375, "0217261": 375, "0213384": 375, "0145428": 375, "207614": 375, "34728": 375, "mttranscript": 375, "mptranscript": 375, "mtdegrad": 375, "mpdegrad": 375, "t0product": 375, "t0degrad": 375, "t1degrad": 375, "t2degrad": 375, "t2degradation_due_to_light": 375, "t0tot1": 375, "t1tot2": 375, "p0product": 375, "p0degrad": 375, "p1degrad": 375, "p2degrad": 375, "p0top1": 375, "p1top2": 375, "p2t2toc": 375, "ctocn": 375, "cdegrad": 375, "cndegrad": 375, "mpvec": 375, "cnvec": 375, "p0vec": 375, "p1vec": 375, "p2vec": 375, "cvec": 375, "pt": 375, "t_in_hour": 375, "make_subplot": 376, "na_vec": 376, "_ref_nai": 376, "update_yax": 376, "title_text": 376, "update_xax": 376, "lond": 376, "1952": 376, "sw": 376, "march": 376, "29103": 376, "ef": 377, "venter": 377, "d9k": 377, "calbindin_0": 377, "rightleftharpoon": 377, "calbindin_1": 377, "calbindin_": 377, "cab2uf": 377, "ca_vec": 377, "buf_vec": 377, "_ref_bufi": 377, "steady_k": 378, "steady_k_mod": 378, "skmod": 378, "writelin": 378, "urllib": 378, "urlretriev": 378, "httpmessag": 378, "0x7f3540a1d250": 378, "runner": 378, "cfile": 378, "modobj": 378, "mod_func": 378, "ldflag": 378, "wl": 378, "rpath": 378, "libcurs": 378, "libform": 378, "ldl": 378, "extrema": 378, "my_xlo": 378, "my_ylo": 378, "my_zlo": 378, "my_xhi": 378, "my_yhi": 378, "my_zhi": 378, "proof": 378, "dz": 378, "poros": 378, "states3d": 378, "runsim": 378, "min_conc": 378, "max_conc": 378, "imshow": 378, "vmin": 378, "set_data": 378, "funcanim": 378, "init_func": 378, "to_html5_video": 378, "kecs_vec0": 378, "node_by_loc": 378, "node_by_ijk": 378, "stated3d": 378, "kecs_vec1": 378, "t_vec": [378, 380], "concent": 378, "line2d": 378, "0x7f350b366bd0": 378, "dirichlet": 378, "3mm": 378, "0008": 378, "kth": 378, "bmax": 378, "ak": 378, "10\u03bcm": 378, "nd": 378, "faction": 378, "238892": 378, "edema": 378, "ip3i": 380, "8250000000000064": 380, "ip3_vec": 380, "_ref_ip3i": [380, 381], "max_ip3": 380, "25437182627374194": 380, "2103198308254167": 380, "2m": 381, "ip3_conc": 381, "undergon": 382, "wit": 382, "profound": 382, "profession": 382, "opportun": 382, "becam": 382, "streamlin": 382, "mileston": 382, "tracker": 382, "svn": 382, "linu": 382, "torvald": 382, "quota": 382, "compromis": 382, "traceabl": 382, "ancestor": 382, "dag": 382, "nowadai": 382, "plumb": 382, "porcelain": 382, "amend": 382, "disastr": 382, "planner": 382, "fork": 382, "parti": 382, "steroid": 382, "filesystem": 382, "rev": 382, "diagram": [382, 388], "alert": 382, "irrecover": 382, "worthless": 382, "unwant": 382, "shortcom": 382, "iss53": 382, "c5": 382, "meantim": 382, "c4": 382, "delic": 382, "c6": 382, "concis": 382, "nobodi": [382, 383], "hell": 382, "disadvantag": 382, "buggi": 382, "untest": 382, "retest": 382, "moreov": 382, "suffer": 382, "unmerg": 382, "openstack": 382, "gitcommitmessag": 382, "nr": 382, "crawl": 382, "gerrit": 382, "tidi": 382, "fulfil": [382, 383], "advertis": [382, 385], "ui": 382, "complianc": 382, "breviti": 382, "hyphen": 382, "compli": 382, "postn": 382, "devn": 382, "epoch": 382, "terminologi": 382, "1950": 382, "verif": 382, "manufactur": 382, "industri": 382, "everydai": 382, "proprietari": 382, "freez": 382, "assur": 382, "dev1": [382, 383], "8a": [382, 383], "0a2": [382, 383], "0b": [382, 383], "0b2": [382, 383], "0rc": [382, 383], "advoc": [382, 383], "hardcod": 382, "nrn_version": 382, "whom": 382, "bump": 382, "backport": [382, 383], "cherri": [382, 383], "gitlabflow": 382, "mainlin": 382, "favour": 382, "blog": 382, "hotfix": [382, 383], "devis": [382, 383], "lightweight": [382, 383], "contributor": [382, 383], "exception": [382, 383], "dont": [382, 383], "v8": [382, 383], "ploscompbiol": 382, "1004668": 382, "1x5snleax4qplcc4qmamwdvra5qrsuo": 382, "yxxkjhszrppy": 382, "semver": 382, "0440": 382, "enacadem": 382, "dic": 382, "nsf": 382, "enwiki": 382, "141478": 382, "guru99": 382, "demystifi": 382, "patrickporto": 382, "30d0aaee7bf": 382, "nvie": 382, "ee": [382, 383], "oneflow": 382, "endoflineblog": 382, "bitsnbit": 382, "eu": 382, "devop": 382, "viewfallbackfrom": 382, "devblog": 382, "oldnewth": 382, "20180312": 382, "98215": 382, "14th": 382, "fernando": 382, "pep": [383, 384], "gitlab": [383, 384], "gitlab_flow": 383, "guidelin": 384, "squash": 384, "rebas": 384, "footnot": 384, "eol": 384, "immin": 385, "outweigh": 385, "debt": 385, "devguid": 385, "deliver": 385, "slack": 385, "turnaround": 385, "mutlicompart": 386, "ballandstick": [386, 387, 388, 389], "boilerpl": 386, "0x7fb1f4f57690": 386, "friendlier": 386, "my_other_cel": 386, "_gid": [386, 387, 388, 389], "wonder": [386, 389], "00296377255506": 386, "ell": 386, "axis3dwithneuron": 386, "gui2": [386, 392], "diamter": 386, "mayavi": 386, "farad": [386, 387, 388], "_setup_morphologi": [386, 387, 388], "_setup_biophys": [386, 387, 388], "weren": 386, "paramat": 386, "density_mech": [386, 392], "startswith": [386, 392], "hocobjptr": [386, 392], "soma_v": [386, 387, 388, 389], "output_notebook": [386, 391, 392], "bokehj": [386, 391, 392], "x_axis_label": [386, 391, 392], "y_axis_label": [386, 391, 392], "legend_label": 386, "dend_v": [386, 387], "reassign": 386, "line_dash": 386, "neglig": 386, "ill": 386, "nth": [387, 388, 389], "_set_posit": [387, 388], "_rotate_z": [387, 388], "xprime": [387, 388], "yprime": [387, 388], "create_n_ballandstick": [387, 388], "okai": 387, "acquaint": 387, "syn_": 387, "recording_cel": 387, "syn_i": 387, "ax1": 387, "add_subplot": 387, "soma_plot": 387, "dend_plot": 387, "rev_plot": 387, "set_ylabel": 387, "set_xtick": 387, "ax2": 387, "syn_plot": 387, "seemingli": 387, "spike_tim": [387, 388, 389], "spike_times_vec": 387, "925000000099914": 387, "55000000010134": 387, "17500000010875": 387, "450000000099543": 387, "075000000102825": 387, "70000000011024": 387, "975000000099172": 387, "60000000010431": 387, "22500000011172": 387, "5000000000988": 387, "12500000010579": 387, "7500000001132": 387, "02500000009986": 387, "65000000010727": 387, "timeseri": [388, 389], "_spike_detector": [388, 389], "_nc": [388, 389], "stim_w": [388, 389], "stim_delai": [388, 389], "syn_w": [388, 389], "syn_delai": [388, 389], "_syn_w": [388, 389], "_syn_delai": [388, 389], "_connect_cel": [388, 389], "_netstim": [388, 389], "_cell": 388, "shape_window": 388, "steadili": 388, "succinct": 389, "resembl": 389, "claim": 389, "_n": 389, "set_gid": 389, "gidlist": 389, "robin": 389, "source_gid": 389, "test_ring1": 389, "cell_to_plot": 389, "shut": 389, "test_ring2": 389, "local_data": 389, "all_data": 389, "process_data": 389, "exhaust": 391, "my_nam": 391, "my_ag": 391, "greet": 391, "isinst": 391, "my_valid_var": 391, "6666666666666667": 391, "postsynaptic_cel": 391, "the_old_list": 391, "list_a": 391, "list_b": 391, "confusing_list": 391, "abc": 391, "cell_part": 391, "part_num": 391, "x_val": 391, "y_val": 391, "my_tupl": 391, "curli": 391, "about_m": 391, "eye_color": 391, "hair_color": 391, "print_hello": 391, "my_print": 391, "the_arg": 391, "fib": 391, "multi_line_str": 391, "method_nam": 391, "first_nam": 391, "last_nam": 391, "phone": 391, "print_info": 391, "bob": 391, "joe": 391, "the_nam": 391, "__dict__": 391, "__weakref__": 391, "my_vec": 391, "gave": 391, "16534698": 391, "33069396": 391, "49604095": 391, "66138793": 391, "82673491": 391, "99208189": 391, "15742887": 391, "32277585": 391, "48812284": 391, "65346982": 391, "8188168": 391, "98416378": 391, "14951076": 391, "31485774": 391, "48020473": 391, "64555171": 391, "81089869": 391, "97624567": 391, "14159265": 391, "trig": 391, "00000000e": 391, "64594590e": 391, "24699469e": 391, "75947393e": 391, "14212713e": 391, "35723911e": 391, "37166478e": 391, "15773327e": 391, "69400266e": 391, "96584493e": 391, "22464680e": 391, "wb": [391, 392], "pickle_fil": 391, "rb": [391, 392], "contacts2": 391, "elem": 391, "worksheet": 392, "__version__": 392, "avaiabl": 392, "pts3d": 392, "hoc_internal_nam": 392, "__nrnsec_0x55c005f07240": 392, "membranc": 392, "__class__": 392, "__contains__": 392, "__delattr__": 392, "__dir__": 392, "__doc__": 392, "__eq__": 392, "__format__": 392, "__ge__": 392, "__getattribute__": 392, "__getstate__": 392, "__gt__": 392, "__hash__": 392, "__init_subclass__": 392, "__iter__": 392, "__le__": 392, "__lt__": 392, "__module__": 392, "__ne__": 392, "__new__": 392, "__reduce__": 392, "__reduce_ex__": 392, "__setattr__": 392, "__sizeof__": 392, "__subclasshook__": 392, "is_pysec": 392, "textwrap": 392, "oclamp": 392, "ppshape": 392, "pointprocessmark": 392, "tqueue": 392, "__abs__": 392, "__bool__": 392, "__delitem__": 392, "__len__": 392, "__mul__": 392, "__neg__": 392, "__next__": 392, "__pos__": 392, "__radd__": 392, "__rmul__": 392, "__rsub__": 392, "__rtruediv__": 392, "__setitem__": 392, "__setstate__": 392, "__sub__": 392, "__truediv__": 392, "_pysec": 392, "coreneuron_handl": 392, "default_dll_loaded_": 392, "dik_dv_": 392, "dina_dv_": 392, "e_fastpa": 392, "eps_intfire4": 392, "fsyng": 392, "fsyni": 392, "g_fastpa": 392, "hinf_hh": 392, "htau_hh": 392, "i_pa": 392, "ib_intfire4": 392, "install_vector_fit": 392, "keep_nseg_parm": 392, "ki0_k_ion": 392, "ko0_k_ion": 392, "libpython_path": 392, "mtau_hh": 392, "ninf_hh": 392, "nrn_get_config_kei": 392, "nrn_get_config_v": 392, "nrn_mallinfo": 392, "nrn_netrec_state_adjust": 392, "nrn_num_config_kei": 392, "nrn_shape_changed_": 392, "nrn_sparse_partran": 392, "nrnallpointmenu": 392, "nrnallsectionmenu": 392, "nrniv_bind_thread": 392, "ntau_hh": 392, "setdata_featur": 392, "setdata_pa": 392, "taueps_intfire4": 392, "vtrap_hh": 392, "xopen_broadcast_": 392, "inquir": 392, "childsect": 392, "parentsect": 392, "childend": 392, "prefac": 392, "propert": 392, "var_mech": 392, "javascript": 392, "panda": [392, 397], "writerow": 392, "spreadsheet": 392, "tnew": 392, "vnew": 392, "canew": 392, "ecosystem": 392, "p9": 392, "read_csv": 392, "ggplot": 392, "wilkinson": 392, "ae": 392, "geom_path": 392, "tnewp": 392, "vnewp": 392, "old_list": 392, "5h16m": 393, "youtub": [394, 395, 396, 397], "playlist": [394, 396, 397], "tech": 395, "welcom": 395, "speaker": 396, "taught": 396, "weekli": 397, "alarm": 397, "sqlite3": 397, "efel": 397, "electrophi": 397, "prerecord": 397, "mymodel": 397, "2488": 397}, "objects": {"": [[148, 0, 1, "", "APCount"], [148, 0, 1, "", "AlphaSynapse"], [216, 0, 1, "", "BBSaveState"], [217, 0, 1, "", "CVode"], [168, 0, 1, "", "Deck"], [142, 0, 1, "", "Electrode"], [148, 0, 1, "", "Exp2Syn"], [148, 0, 1, "", "ExpSyn"], [220, 0, 1, "", "FInitializeHandler"], [184, 0, 1, "", "File"], [192, 0, 1, "", "GUIMath"], [225, 0, 1, "", "Glyph"], [226, 0, 1, "", "Graph"], [168, 0, 1, "", "HBox"], [148, 0, 1, "", "IClamp"], [131, 0, 1, "", "Impedance"], [148, 0, 1, "", "IntFire1"], [148, 0, 1, "", "IntFire2"], [148, 0, 1, "", "IntFire4"], [145, 0, 1, "", "KSChan"], [145, 0, 1, "", "KSGate"], [145, 0, 1, "", "KSState"], [145, 0, 1, "", "KSTrans"], [161, 2, 1, "", "L"], [146, 0, 1, "", "LinearMechanism"], [169, 0, 1, "", "List"], [193, 0, 1, "", "Matrix"], [199, 0, 1, "", "MechanismStandard"], [151, 0, 1, "", "MechanismType"], [154, 0, 1, "", "NetCon"], [148, 0, 1, "", "NetStim"], [172, 0, 1, "", "PWManager"], [155, 0, 1, "", "ParallelContext"], [156, 0, 1, "", "ParallelNetManager"], [232, 0, 1, "", "PlotShape"], [204, 0, 1, "", "Pointer"], [205, 0, 1, "", "PtrVector"], [208, 0, 1, "", "PythonObject"], [161, 2, 1, "", "Ra"], [196, 0, 1, "", "Random"], [233, 0, 1, "", "RangeVarPlot"], [148, 0, 1, "", "SEClamp"], [222, 0, 1, "", "SaveState"], [173, 0, 1, "", "SectionBrowser"], [162, 0, 1, "", "SectionList"], [163, 0, 1, "", "SectionRef"], [234, 0, 1, "", "Shape"], [159, 0, 1, "", "StateTransitionEvent"], [211, 0, 1, "", "StringFunctions"], [174, 0, 1, "", "SymChooser"], [175, 0, 1, "", "TextEditor"], [214, 0, 1, "", "Timer"], [168, 0, 1, "", "VBox"], [148, 0, 1, "", "VClamp"], [177, 0, 1, "", "ValueFieldEditor"], [197, 0, 1, "", "Vector"], [213, 3, 1, "", "WinExec"], [191, 3, 1, "", "abs"], [182, 3, 1, "", "allobjects"], [182, 3, 1, "", "allobjectvars"], [161, 3, 1, "", "arc3d"], [161, 3, 1, "", "area"], [181, 3, 1, "", "argtype"], [191, 3, 1, "", "atan"], [191, 3, 1, "", "atan2"], [133, 3, 1, "", "attr_praxis"], [230, 3, 1, "", "axis"], [215, 3, 1, "", "batch_run"], [215, 3, 1, "", "batch_save"], [167, 3, 1, "", "boolean_dialog"], [220, 2, 1, "", "celsius"], [213, 3, 1, "", "chdir"], [220, 3, 1, "", "checkpoint"], [220, 2, 1, "", "clamp_resist"], [167, 3, 1, "", "continue_dialog"], [166, 3, 1, "", "coredump_on_error"], [191, 3, 1, "", "cos"], [161, 3, 1, "", "define_shape"], [160, 3, 1, "", "delete_section"], [161, 2, 1, "", "diam"], [161, 3, 1, "", "diam3d"], [161, 2, 1, "", "diam_changed"], [160, 3, 1, "", "disconnect"], [161, 3, 1, "", "distance"], [229, 3, 1, "", "doEvents"], [229, 3, 1, "", "doNotify"], [220, 2, 1, "", "dt"], [190, 3, 1, "", "eqinit"], [191, 3, 1, "", "erf"], [191, 3, 1, "", "erfc"], [166, 3, 1, "", "execerror"], [165, 3, 1, "", "execute"], [165, 3, 1, "", "execute1"], [191, 3, 1, "", "exp"], [220, 3, 1, "", "fadvance"], [157, 3, 1, "", "fclamp"], [157, 3, 1, "", "fclampi"], [157, 3, 1, "", "fclampv"], [220, 3, 1, "", "fcurrent"], [220, 3, 1, "", "finitialize"], [133, 3, 1, "", "fit_praxis"], [195, 2, 1, "", "float_epsilon"], [220, 3, 1, "", "fmatrix"], [176, 3, 1, "", "fmenu"], [188, 3, 1, "", "fprint"], [220, 3, 1, "", "frecord_init"], [187, 3, 1, "", "fscan"], [157, 3, 1, "", "fstim"], [157, 3, 1, "", "fstimi"], [161, 3, 1, "", "getSpineArea"], [213, 3, 1, "", "getcwd"], [187, 3, 1, "", "getstr"], [132, 3, 1, "", "ghk"], [230, 3, 1, "", "graph"], [230, 3, 1, "", "graphmode"], [206, 2, 1, "", "hoc_ac_"], [206, 2, 1, "", "hoc_cross_x_"], [206, 2, 1, "", "hoc_cross_y_"], [206, 2, 1, "", "hoc_obj_"], [182, 3, 1, "", "hoc_pointer_"], [186, 3, 1, "", "hoc_stdio"], [143, 3, 1, "", "hocmech"], [202, 3, 1, "", "init"], [220, 3, 1, "", "initnrn"], [191, 3, 1, "", "int"], [144, 3, 1, "", "ion_charge"], [144, 3, 1, "", "ion_register"], [144, 3, 1, "", "ion_style"], [160, 3, 1, "", "ismembrane"], [160, 3, 1, "", "issection"], [170, 3, 1, "", "ivoc_style"], [165, 3, 1, "", "load_file"], [165, 3, 1, "", "load_func"], [165, 3, 1, "", "load_proc"], [165, 3, 1, "", "load_template"], [191, 3, 1, "", "log"], [191, 3, 1, "", "log10"], [185, 3, 1, "", "lw"], [213, 3, 1, "", "machine_name"], [194, 3, 1, "", "mcell_ran4"], [194, 3, 1, "", "mcell_ran4_init"], [161, 3, 1, "", "n3d"], [182, 3, 1, "", "name_declared"], [132, 3, 1, "", "nernst"], [213, 3, 1, "", "neuronhome"], [166, 3, 1, "", "nrn_feenableexcept"], [213, 3, 1, "", "nrn_load_dll"], [171, 3, 1, "", "nrnglobalmechmenu"], [171, 3, 1, "", "nrnmechmenu"], [171, 3, 1, "", "nrnpointmenu"], [208, 3, 1, "", "nrnpython"], [171, 3, 1, "", "nrnsecmenu"], [213, 3, 1, "", "nrnversion"], [160, 2, 1, "", "nseg"], [181, 3, 1, "", "numarg"], [182, 3, 1, "", "object_id"], [182, 3, 1, "", "object_pop"], [182, 3, 1, "", "object_push"], [160, 3, 1, "", "parent_connection"], [160, 3, 1, "", "parent_node"], [160, 3, 1, "", "parent_section"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plotx"], [230, 3, 1, "", "ploty"], [230, 3, 1, "", "plt"], [164, 3, 1, "", "pop_section"], [223, 3, 1, "", "print_session"], [186, 3, 1, "", "printf"], [190, 3, 1, "", "prmat"], [157, 3, 1, "", "prstim"], [160, 3, 1, "", "psection"], [161, 3, 1, "", "pt3dadd"], [161, 3, 1, "", "pt3dchange"], [161, 3, 1, "", "pt3dclear"], [161, 3, 1, "", "pt3dconst"], [161, 3, 1, "", "pt3dinsert"], [161, 3, 1, "", "pt3dremove"], [161, 3, 1, "", "pt3dstyle"], [164, 3, 1, "", "push_section"], [133, 3, 1, "", "pval_praxis"], [170, 3, 1, "", "pwman_place"], [219, 3, 1, "", "quit"], [230, 3, 1, "", "regraph"], [219, 3, 1, "", "retrieveaudit"], [161, 3, 1, "", "ri"], [188, 3, 1, "", "ropen"], [223, 3, 1, "", "save_session"], [219, 3, 1, "", "saveaudit"], [160, 3, 1, "", "secname"], [220, 2, 1, "", "secondorder"], [160, 3, 1, "", "section_exists"], [160, 3, 1, "", "section_orientation"], [160, 3, 1, "", "section_owner"], [160, 3, 1, "", "sectionname"], [161, 3, 1, "", "setSpineArea"], [230, 3, 1, "", "setcolor"], [230, 3, 1, "", "settext"], [166, 3, 1, "", "show_errmess_always"], [213, 3, 1, "", "show_winio"], [191, 3, 1, "", "sin"], [190, 3, 1, "", "solve"], [161, 3, 1, "", "spine3d"], [212, 3, 1, "", "sprint"], [191, 3, 1, "", "sqrt"], [187, 3, 1, "", "sred"], [210, 3, 1, "", "sscanf"], [213, 3, 1, "", "startsw"], [133, 3, 1, "", "stop_praxis"], [220, 2, 1, "", "stoprun"], [213, 3, 1, "", "stopsw"], [212, 3, 1, "", "strcmp"], [167, 3, 1, "", "string_dialog"], [182, 3, 1, "", "symbols"], [213, 3, 1, "", "system"], [220, 2, 1, "", "t"], [191, 3, 1, "", "tanh"], [202, 2, 1, "", "this"], [203, 3, 1, "", "this_node"], [203, 3, 1, "", "this_section"], [160, 3, 1, "id0", "topology"], [178, 3, 1, "", "units"], [213, 3, 1, "", "unix_mac_pc"], [202, 3, 1, "", "unref"], [194, 3, 1, "", "use_mcell_ran4"], [170, 3, 1, "", "variable_domain"], [188, 3, 1, "", "wopen"], [161, 3, 1, "", "x3d"], [178, 3, 1, "", "xbutton"], [178, 3, 1, "", "xcheckbox"], [178, 3, 1, "", "xfixedvalue"], [178, 3, 1, "", "xlabel"], [178, 3, 1, "", "xmenu"], [188, 3, 1, "", "xopen"], [178, 3, 1, "", "xpanel"], [178, 3, 1, "", "xpvalue"], [178, 3, 1, "", "xradiobutton"], [187, 3, 1, "", "xred"], [178, 3, 1, "", "xslider"], [178, 3, 1, "", "xstatebutton"], [178, 3, 1, "", "xvalue"], [178, 3, 1, "", "xvarlabel"], [161, 3, 1, "", "y3d"], [161, 3, 1, "", "z3d"], [279, 4, 1, "", "APCount"], [279, 4, 1, "", "AlphaSynapse"], [348, 4, 1, "", "BBSaveState"], [349, 4, 1, "", "CVode"], [300, 4, 1, "", "Deck"], [273, 4, 1, "", "Electrode"], [279, 4, 1, "", "Exp2Syn"], [279, 4, 1, "", "ExpSyn"], [352, 4, 1, "", "FInitializeHandler"], [316, 4, 1, "", "File"], [324, 4, 1, "", "GUIMath"], [357, 4, 1, "", "Glyph"], [358, 4, 1, "", "Graph"], [300, 4, 1, "", "HBox"], [279, 4, 1, "", "IClamp"], [261, 4, 1, "", "Impedance"], [279, 4, 1, "", "IntFire1"], [279, 4, 1, "", "IntFire2"], [279, 4, 1, "", "IntFire4"], [276, 4, 1, "", "KSChan"], [276, 4, 1, "", "KSGate"], [276, 4, 1, "", "KSState"], [276, 4, 1, "", "KSTrans"], [293, 6, 1, "", "L"], [277, 4, 1, "", "LinearMechanism"], [301, 4, 1, "", "List"], [325, 4, 1, "", "Matrix"], [331, 4, 1, "", "MechanismStandard"], [282, 4, 1, "", "MechanismType"], [285, 4, 1, "", "NetCon"], [279, 4, 1, "", "NetStim"], [304, 4, 1, "", "PWManager"], [286, 4, 1, "", "ParallelContext"], [287, 4, 1, "", "ParallelNetManager"], [279, 4, 1, "", "PatternStim"], [364, 4, 1, "", "PlotShape"], [336, 4, 1, "", "Pointer"], [337, 4, 1, "", "PtrVector"], [340, 4, 1, "", "PythonObject"], [293, 6, 1, "", "Ra"], [328, 4, 1, "", "Random"], [365, 4, 1, "", "RangeVarPlot"], [279, 4, 1, "", "SEClamp"], [354, 4, 1, "", "SaveState"], [292, 4, 1, "", "Section"], [305, 4, 1, "", "SectionBrowser"], [294, 4, 1, "", "SectionList"], [295, 4, 1, "", "SectionRef"], [366, 4, 1, "", "Shape"], [291, 4, 1, "", "StateTransitionEvent"], [343, 4, 1, "", "StringFunctions"], [306, 4, 1, "", "SymChooser"], [307, 4, 1, "", "TextEditor"], [346, 4, 1, "", "Timer"], [300, 4, 1, "", "VBox"], [279, 4, 1, "", "VClamp"], [309, 4, 1, "", "ValueFieldEditor"], [329, 4, 1, "", "Vector"], [345, 8, 1, "", "WinExec"], [323, 8, 1, "", "abs"], [314, 8, 1, "", "allobjects"], [314, 8, 1, "", "allobjectvars"], [293, 8, 1, "", "arc3d"], [293, 8, 1, "", "area"], [313, 8, 1, "", "argtype"], [323, 8, 1, "", "atan"], [323, 8, 1, "", "atan2"], [263, 8, 1, "", "attr_praxis"], [362, 8, 1, "", "axis"], [347, 8, 1, "", "batch_run"], [347, 8, 1, "", "batch_save"], [299, 8, 1, "", "boolean_dialog"], [352, 6, 1, "", "celsius"], [345, 8, 1, "", "chdir"], [352, 8, 1, "", "checkpoint"], [352, 6, 1, "", "clamp_resist"], [299, 8, 1, "", "continue_dialog"], [298, 8, 1, "", "coredump_on_error"], [323, 8, 1, "", "cos"], [293, 8, 1, "", "define_shape"], [292, 8, 1, "", "delete_section"], [293, 6, 1, "", "diam"], [293, 8, 1, "", "diam3d"], [293, 6, 1, "", "diam_changed"], [292, 8, 1, "", "disconnect"], [293, 8, 1, "", "distance"], [361, 8, 1, "", "doEvents"], [361, 8, 1, "", "doNotify"], [352, 6, 1, "", "dt"], [322, 8, 1, "", "eqinit"], [323, 8, 1, "", "erf"], [323, 8, 1, "", "erfc"], [298, 8, 1, "", "execerror"], [297, 8, 1, "", "execute"], [297, 8, 1, "", "execute1"], [323, 8, 1, "", "exp"], [352, 8, 1, "", "fadvance"], [288, 8, 1, "", "fclamp"], [288, 8, 1, "", "fclampi"], [288, 8, 1, "", "fclampv"], [352, 8, 1, "", "fcurrent"], [352, 8, 1, "", "finitialize"], [263, 8, 1, "", "fit_praxis"], [327, 6, 1, "", "float_epsilon"], [352, 8, 1, "", "fmatrix"], [308, 8, 1, "", "fmenu"], [320, 8, 1, "", "fprint"], [352, 8, 1, "", "frecord_init"], [319, 8, 1, "", "fscan"], [288, 8, 1, "", "fstim"], [288, 8, 1, "", "fstimi"], [293, 8, 1, "", "getSpineArea"], [345, 8, 1, "", "getcwd"], [319, 8, 1, "", "getstr"], [262, 8, 1, "", "ghk"], [362, 8, 1, "", "graph"], [362, 8, 1, "", "graphmode"], [338, 6, 1, "", "hoc_ac_"], [338, 6, 1, "", "hoc_cross_x_"], [338, 6, 1, "", "hoc_cross_y_"], [338, 6, 1, "", "hoc_obj_"], [314, 8, 1, "", "hoc_pointer_"], [318, 8, 1, "", "hoc_stdout"], [334, 8, 1, "", "init"], [352, 8, 1, "", "initnrn"], [323, 8, 1, "", "int"], [275, 8, 1, "", "ion_charge"], [275, 8, 1, "", "ion_register"], [275, 8, 1, "", "ion_style"], [292, 8, 1, "", "ismembrane"], [292, 8, 1, "", "issection"], [302, 8, 1, "", "ivoc_style"], [297, 8, 1, "", "load_file"], [297, 8, 1, "", "load_func"], [297, 8, 1, "", "load_proc"], [297, 8, 1, "", "load_template"], [323, 8, 1, "", "log"], [323, 8, 1, "", "log10"], [317, 8, 1, "", "lw"], [345, 8, 1, "", "machine_name"], [274, 8, 1, "", "make_mechanism"], [274, 8, 1, "", "make_pointprocess"], [326, 8, 1, "", "mcell_ran4"], [326, 8, 1, "", "mcell_ran4_init"], [293, 8, 1, "", "n3d"], [314, 8, 1, "", "name_declared"], [262, 8, 1, "", "nernst"], [200, 9, 0, "-", "neuron"], [345, 8, 1, "", "neuronhome"], [298, 8, 1, "", "nrn_feenableexcept"], [345, 8, 1, "", "nrn_load_dll"], [303, 8, 1, "", "nrnglobalmechmenu"], [303, 8, 1, "", "nrnmechmenu"], [303, 8, 1, "", "nrnpointmenu"], [340, 8, 1, "", "nrnpython"], [303, 8, 1, "", "nrnsecmenu"], [352, 8, 1, "", "nrnunit_use_legacy"], [345, 8, 1, "", "nrnversion"], [313, 8, 1, "", "numarg"], [314, 8, 1, "", "object_id"], [314, 8, 1, "", "object_pop"], [314, 8, 1, "", "object_push"], [292, 8, 1, "", "parent_connection"], [292, 8, 1, "", "parent_node"], [292, 8, 1, "", "parent_section"], [362, 8, 1, "", "plot"], [362, 8, 1, "", "plotx"], [362, 8, 1, "", "ploty"], [362, 8, 1, "", "plt"], [296, 8, 1, "", "pop_section"], [355, 8, 1, "", "print_session"], [318, 8, 1, "", "printf"], [322, 8, 1, "", "prmat"], [288, 8, 1, "", "prstim"], [292, 8, 1, "", "psection"], [293, 8, 1, "", "pt3dadd"], [293, 8, 1, "", "pt3dchange"], [293, 8, 1, "", "pt3dclear"], [293, 8, 1, "", "pt3dconst"], [293, 8, 1, "", "pt3dinsert"], [293, 8, 1, "", "pt3dremove"], [293, 8, 1, "", "pt3dstyle"], [296, 8, 1, "", "push_section"], [263, 8, 1, "", "pval_praxis"], [302, 8, 1, "", "pwman_place"], [351, 8, 1, "", "quit"], [362, 8, 1, "", "regraph"], [351, 8, 1, "", "retrieveaudit"], [293, 8, 1, "", "ri"], [320, 8, 1, "id0", "ropen"], [355, 8, 1, "", "save_session"], [351, 8, 1, "", "saveaudit"], [292, 8, 1, "", "secname"], [352, 6, 1, "", "secondorder"], [292, 8, 1, "", "section_exists"], [292, 8, 1, "", "section_orientation"], [292, 8, 1, "", "section_owner"], [292, 8, 1, "", "sectionname"], [293, 8, 1, "", "setSpineArea"], [362, 8, 1, "", "setcolor"], [362, 8, 1, "", "settext"], [298, 8, 1, "", "show_errmess_always"], [345, 8, 1, "", "show_winio"], [323, 8, 1, "", "sin"], [322, 8, 1, "", "solve"], [293, 8, 1, "", "spine3d"], [344, 8, 1, "", "sprint"], [323, 8, 1, "", "sqrt"], [319, 8, 1, "", "sred"], [342, 8, 1, "", "sscanf"], [345, 8, 1, "", "startsw"], [263, 8, 1, "", "stop_praxis"], [352, 6, 1, "", "stoprun"], [345, 8, 1, "", "stopsw"], [344, 8, 1, "", "strcmp"], [299, 8, 1, "", "string_dialog"], [314, 8, 1, "", "symbols"], [345, 8, 1, "", "system"], [352, 6, 1, "", "t"], [323, 8, 1, "", "tanh"], [334, 6, 1, "", "this"], [335, 8, 1, "", "this_node"], [335, 8, 1, "", "this_section"], [292, 8, 1, "id0", "topology"], [310, 8, 1, "", "units"], [345, 8, 1, "", "unix_mac_pc"], [334, 8, 1, "", "unref"], [326, 8, 1, "", "use_mcell_ran4"], [302, 8, 1, "", "variable_domain"], [320, 8, 1, "", "wopen"], [293, 8, 1, "", "x3d"], [310, 8, 1, "", "xbutton"], [310, 8, 1, "", "xcheckbox"], [310, 8, 1, "", "xfixedvalue"], [310, 8, 1, "", "xlabel"], [310, 8, 1, "", "xmenu"], [320, 8, 1, "", "xopen"], [310, 8, 1, "", "xpanel"], [310, 8, 1, "", "xpvalue"], [310, 8, 1, "", "xradiobutton"], [319, 8, 1, "", "xred"], [310, 8, 1, "", "xslider"], [310, 8, 1, "", "xstatebutton"], [310, 8, 1, "", "xvalue"], [310, 8, 1, "", "xvarlabel"], [293, 8, 1, "", "y3d"], [293, 8, 1, "", "z3d"]], "BBSaveState": [[216, 1, 1, "", "ignore"], [216, 1, 1, "", "restore_test"], [216, 1, 1, "", "save_test"], [216, 1, 1, "", "vector_play_init"], [348, 5, 1, "", "ignore"], [348, 5, 1, "", "restore_test"], [348, 5, 1, "", "save_test"], [348, 5, 1, "", "vector_play_init"]], "CVode": [[217, 1, 1, "", "acor"], [217, 1, 1, "", "active"], [217, 1, 1, "", "atol"], [217, 1, 1, "", "atolscale"], [217, 1, 1, "", "cache_efficient"], [217, 1, 1, "", "condition_order"], [217, 1, 1, "", "current_method"], [217, 1, 1, "", "dae_init_dteps"], [217, 1, 1, "", "debug_event"], [217, 1, 1, "", "dstates"], [217, 1, 1, "", "error_weights"], [217, 1, 1, "", "event"], [217, 1, 1, "", "event_queue_info"], [217, 1, 1, "", "f"], [217, 1, 1, "", "fixed_step"], [217, 1, 1, "", "free_event_queues"], [217, 1, 1, "", "jacobian"], [217, 1, 1, "", "maxorder"], [217, 1, 1, "", "maxstep"], [217, 1, 1, "", "minstep"], [217, 1, 1, "", "netconlist"], [217, 1, 1, "", "order"], [217, 1, 1, "", "poolshrink"], [217, 1, 1, "", "print_event_queue"], [217, 1, 1, "", "queue_mode"], [217, 1, 1, "", "re_init"], [217, 1, 1, "", "record"], [217, 1, 1, "", "record_remove"], [217, 1, 1, "", "rtol"], [217, 1, 1, "", "simgraph_remove"], [217, 1, 1, "", "solve"], [217, 1, 1, "", "spike_stat"], [217, 1, 1, "", "state_magnitudes"], [217, 1, 1, "", "statename"], [217, 1, 1, "", "states"], [217, 1, 1, "", "statistics"], [217, 1, 1, "", "stiff"], [217, 1, 1, "", "store_events"], [217, 1, 1, "", "use_daspk"], [217, 1, 1, "", "use_fast_imem"], [217, 1, 1, "", "use_local_dt"], [217, 1, 1, "", "use_long_double"], [217, 1, 1, "", "use_mxb"], [217, 1, 1, "", "ygather"], [217, 1, 1, "", "yscatter"], [349, 5, 1, "", "acor"], [349, 5, 1, "", "active"], [349, 5, 1, "", "atol"], [349, 5, 1, "", "atolscale"], [349, 5, 1, "", "cache_efficient"], [349, 5, 1, "", "condition_order"], [349, 5, 1, "", "current_method"], [349, 5, 1, "", "dae_init_dteps"], [349, 5, 1, "", "debug_event"], [349, 5, 1, "", "diam_change_count"], [349, 5, 1, "", "dstates"], [349, 5, 1, "", "error_weights"], [349, 5, 1, "", "event"], [349, 5, 1, "", "event_queue_info"], [349, 5, 1, "", "extra_scatter_gather"], [349, 5, 1, "", "extra_scatter_gather_remove"], [349, 5, 1, "", "f"], [349, 5, 1, "", "fixed_step"], [349, 5, 1, "", "free_event_queues"], [349, 5, 1, "", "jacobian"], [349, 5, 1, "", "maxorder"], [349, 5, 1, "", "maxstep"], [349, 5, 1, "", "minstep"], [349, 5, 1, "", "netconlist"], [349, 5, 1, "", "order"], [349, 5, 1, "", "poolshrink"], [349, 5, 1, "", "print_event_queue"], [349, 5, 1, "", "queue_mode"], [349, 5, 1, "", "re_init"], [349, 5, 1, "", "record"], [349, 5, 1, "", "record_remove"], [349, 5, 1, "", "rtol"], [349, 5, 1, "", "simgraph_remove"], [349, 5, 1, "", "solve"], [349, 5, 1, "", "spike_stat"], [349, 5, 1, "", "state_magnitudes"], [349, 5, 1, "", "statename"], [349, 5, 1, "", "states"], [349, 5, 1, "", "statistics"], [349, 5, 1, "", "stiff"], [349, 5, 1, "", "store_events"], [349, 5, 1, "", "structure_change_count"], [349, 5, 1, "", "use_daspk"], [349, 5, 1, "", "use_fast_imem"], [349, 5, 1, "", "use_local_dt"], [349, 5, 1, "", "use_long_double"], [349, 5, 1, "", "use_mxb"], [349, 5, 1, "", "ygather"], [349, 5, 1, "", "yscatter"]], "Deck": [[168, 1, 1, "", "flip_to"], [168, 1, 1, "", "intercept"], [168, 1, 1, "", "map"], [168, 1, 1, "", "move_last"], [168, 1, 1, "", "remove"], [168, 1, 1, "", "remove_last"], [168, 1, 1, "", "save"], [168, 1, 1, "", "unmap"], [300, 5, 1, "", "flip_to"], [300, 5, 1, "", "intercept"], [300, 5, 1, "", "map"], [300, 5, 1, "", "move_last"], [300, 5, 1, "", "remove"], [300, 5, 1, "", "remove_last"], [300, 5, 1, "", "save"], [300, 5, 1, "", "unmap"]], "Electrode": [[142, 1, 1, "", "Holding"], [142, 1, 1, "", "IClamp"], [142, 1, 1, "", "Location"], [142, 1, 1, "", "Returnlevel"], [142, 1, 1, "", "Testlevel"], [142, 1, 1, "", "VClamp"], [142, 1, 1, "", "VClampFamily"], [142, 1, 1, "", "VClampigraph"], [142, 1, 1, "", "amp"], [142, 1, 1, "", "amp0"], [142, 1, 1, "", "del"], [142, 1, 1, "", "dur"], [142, 1, 1, "", "dur0"], [273, 5, 1, "", "Holding"], [273, 5, 1, "", "IClamp"], [273, 5, 1, "", "Location"], [273, 5, 1, "", "Returnlevel"], [273, 5, 1, "", "Testlevel"], [273, 5, 1, "", "VClamp"], [273, 5, 1, "", "VClampFamily"], [273, 5, 1, "", "VClampigraph"], [273, 5, 1, "", "amp"], [273, 5, 1, "", "amp0"], [273, 5, 1, "", "del"], [273, 5, 1, "", "dur"], [273, 5, 1, "", "dur0"]], "FInitializeHandler": [[220, 1, 1, "", "allprint"], [352, 5, 1, "", "allprint"]], "File": [[184, 1, 1, "", "aopen"], [184, 1, 1, "", "chooser"], [184, 1, 1, "", "close"], [184, 1, 1, "", "dir"], [184, 1, 1, "", "eof"], [184, 1, 1, "", "flush"], [184, 1, 1, "", "getname"], [184, 1, 1, "", "gets"], [184, 1, 1, "", "isopen"], [184, 1, 1, "", "mktemp"], [184, 1, 1, "", "printf"], [184, 1, 1, "", "ropen"], [184, 1, 1, "", "scanstr"], [184, 1, 1, "", "scanvar"], [184, 1, 1, "", "seek"], [184, 1, 1, "", "tell"], [184, 1, 1, "", "unlink"], [184, 1, 1, "", "vread"], [184, 1, 1, "", "vwrite"], [184, 1, 1, "", "wopen"], [184, 1, 1, "", "xopen"], [316, 5, 1, "", "aopen"], [316, 5, 1, "", "chooser"], [316, 5, 1, "", "close"], [316, 5, 1, "", "dir"], [316, 5, 1, "", "eof"], [316, 5, 1, "", "flush"], [316, 5, 1, "", "getname"], [316, 5, 1, "", "gets"], [316, 5, 1, "", "isopen"], [316, 5, 1, "", "mktemp"], [316, 5, 1, "", "printf"], [316, 5, 1, "", "ropen"], [316, 5, 1, "", "scanstr"], [316, 5, 1, "", "scanvar"], [316, 5, 1, "", "seek"], [316, 5, 1, "", "tell"], [316, 5, 1, "", "unlink"], [316, 5, 1, "", "vread"], [316, 5, 1, "", "vwrite"], [316, 5, 1, "", "wopen"], [316, 5, 1, "", "xopen"]], "GUIMath": [[192, 1, 1, "", "d2line"], [192, 1, 1, "", "d2line_seg"], [192, 1, 1, "", "feround"], [192, 1, 1, "", "inside"], [324, 5, 1, "", "d2line"], [324, 5, 1, "", "d2line_seg"], [324, 5, 1, "", "feround"], [324, 5, 1, "", "inside"]], "Glyph": [[225, 1, 1, "", "circle"], [225, 1, 1, "", "close_path"], [225, 1, 1, "", "control_point"], [225, 1, 1, "", "curve_to"], [225, 1, 1, "", "erase"], [225, 1, 1, "", "fill"], [225, 1, 1, "", "gif"], [225, 1, 1, "", "glyph"], [225, 1, 1, "", "label"], [225, 1, 1, "", "line_to"], [225, 1, 1, "", "move_to"], [225, 1, 1, "", "new_path"], [225, 1, 1, "", "stroke"], [357, 5, 1, "", "circle"], [357, 5, 1, "", "close"], [357, 5, 1, "", "cpt"], [357, 5, 1, "", "curve"], [357, 5, 1, "", "erase"], [357, 5, 1, "", "fill"], [357, 5, 1, "", "gif"], [357, 5, 1, "", "glyph"], [357, 5, 1, "", "l"], [357, 5, 1, "", "label"], [357, 5, 1, "", "m"], [357, 5, 1, "", "path"], [357, 5, 1, "", "s"]], "Graph": [[226, 1, 1, "", "addexpr"], [226, 1, 1, "", "addobject"], [226, 1, 1, "", "addvar"], [226, 1, 1, "", "align"], [226, 1, 1, "", "begin"], [226, 1, 1, "", "beginline"], [226, 1, 1, "", "brush"], [226, 1, 1, "", "color"], [226, 1, 1, "", "crosshair_action"], [226, 1, 1, "", "erase"], [226, 1, 1, "", "erase_all"], [226, 1, 1, "", "exec_menu"], [226, 1, 1, "", "family"], [226, 1, 1, "", "fastflush"], [226, 1, 1, "", "fixed"], [226, 1, 1, "", "flush"], [226, 1, 1, "", "getline"], [226, 1, 1, "", "gif"], [226, 1, 1, "", "glyph"], [226, 1, 1, "", "label"], [226, 1, 1, "", "line"], [226, 1, 1, "", "line_info"], [226, 1, 1, "", "mark"], [226, 1, 1, "", "menu_action"], [226, 1, 1, "", "menu_remove"], [226, 1, 1, "", "menu_tool"], [226, 1, 1, "", "plot"], [226, 1, 1, "", "printfile"], [226, 1, 1, "", "relative"], [226, 1, 1, "", "save_name"], [226, 1, 1, "", "simgraph"], [226, 1, 1, "", "size"], [226, 1, 1, "", "unmap"], [226, 1, 1, "", "vector"], [226, 1, 1, "", "vfixed"], [226, 1, 1, "", "view"], [226, 1, 1, "", "view_count"], [226, 1, 1, "", "view_info"], [226, 1, 1, "", "view_size"], [226, 1, 1, "", "xaxis"], [226, 1, 1, "", "xexpr"], [226, 1, 1, "", "yaxis"], [358, 5, 1, "", "addexpr"], [358, 5, 1, "", "addobject"], [358, 5, 1, "", "addvar"], [358, 5, 1, "", "align"], [358, 5, 1, "", "begin"], [358, 5, 1, "", "beginline"], [358, 5, 1, "", "brush"], [358, 5, 1, "", "color"], [358, 5, 1, "", "crosshair_action"], [358, 5, 1, "", "erase"], [358, 5, 1, "", "erase_all"], [358, 5, 1, "", "exec_menu"], [358, 5, 1, "", "family"], [358, 5, 1, "", "fastflush"], [358, 5, 1, "", "fixed"], [358, 5, 1, "", "flush"], [358, 5, 1, "", "getline"], [358, 5, 1, "", "gif"], [358, 5, 1, "", "glyph"], [358, 5, 1, "", "label"], [358, 5, 1, "", "line"], [358, 5, 1, "", "line_info"], [358, 5, 1, "", "mark"], [358, 5, 1, "", "menu_action"], [358, 5, 1, "", "menu_remove"], [358, 5, 1, "", "menu_tool"], [358, 5, 1, "", "plot"], [358, 5, 1, "", "printfile"], [358, 5, 1, "", "relative"], [358, 5, 1, "", "save_name"], [358, 5, 1, "", "simgraph"], [358, 5, 1, "", "size"], [358, 5, 1, "", "unmap"], [358, 5, 1, "", "vector"], [358, 5, 1, "", "vfixed"], [358, 5, 1, "", "view"], [358, 5, 1, "", "view_count"], [358, 5, 1, "", "view_info"], [358, 5, 1, "", "view_size"], [358, 5, 1, "", "xaxis"], [358, 5, 1, "", "xexpr"], [358, 5, 1, "", "yaxis"]], "Impedance": [[131, 1, 1, "", "compute"], [131, 1, 1, "", "deltafac"], [131, 1, 1, "", "input"], [131, 1, 1, "", "input_phase"], [131, 1, 1, "", "loc"], [131, 1, 1, "", "ratio"], [131, 1, 1, "", "transfer"], [131, 1, 1, "", "transfer_phase"], [261, 5, 1, "", "compute"], [261, 5, 1, "", "deltafac"], [261, 5, 1, "", "input"], [261, 5, 1, "", "input_phase"], [261, 5, 1, "", "loc"], [261, 5, 1, "", "ratio"], [261, 5, 1, "", "transfer"], [261, 5, 1, "", "transfer_phase"]], "KSChan": [[145, 1, 1, "", "add_hhstate"], [145, 1, 1, "", "add_ksstate"], [145, 1, 1, "", "add_transition"], [145, 1, 1, "", "erev"], [145, 1, 1, "", "gate"], [145, 1, 1, "", "gmax"], [145, 1, 1, "", "ion"], [145, 1, 1, "", "iv_type"], [145, 1, 1, "", "ligand"], [145, 1, 1, "", "name"], [145, 1, 1, "", "ngate"], [145, 1, 1, "", "nligand"], [145, 1, 1, "", "nstate"], [145, 1, 1, "", "ntrans"], [145, 1, 1, "", "pr"], [145, 1, 1, "", "remove_state"], [145, 1, 1, "", "remove_transition"], [145, 1, 1, "", "setstructure"], [145, 1, 1, "", "state"], [145, 1, 1, "", "trans"], [276, 5, 1, "", "add_hhstate"], [276, 5, 1, "", "add_ksstate"], [276, 5, 1, "", "add_transition"], [276, 5, 1, "", "erev"], [276, 5, 1, "", "gate"], [276, 5, 1, "", "gmax"], [276, 5, 1, "", "ion"], [276, 5, 1, "", "iv_type"], [276, 5, 1, "", "ligand"], [276, 5, 1, "", "name"], [276, 5, 1, "", "ngate"], [276, 5, 1, "", "nligand"], [276, 5, 1, "", "nstate"], [276, 5, 1, "", "ntrans"], [276, 5, 1, "", "pr"], [276, 5, 1, "", "remove_state"], [276, 5, 1, "", "remove_transition"], [276, 5, 1, "", "setstructure"], [276, 5, 1, "", "state"], [276, 5, 1, "", "trans"]], "KSGate": [[145, 1, 1, "", "index"], [145, 1, 1, "", "nstate"], [145, 1, 1, "", "power"], [145, 1, 1, "", "sindex"], [276, 5, 1, "", "index"], [276, 5, 1, "", "nstate"], [276, 5, 1, "", "power"], [276, 5, 1, "", "sindex"]], "KSState": [[145, 1, 1, "", "frac"], [145, 1, 1, "", "gate"], [145, 1, 1, "", "index"], [145, 1, 1, "", "name"], [276, 5, 1, "", "frac"], [276, 5, 1, "", "gate"], [276, 5, 1, "", "index"], [276, 5, 1, "", "name"]], "KSTrans": [[145, 1, 1, "", "ab"], [145, 1, 1, "", "f"], [145, 1, 1, "", "ftype"], [145, 1, 1, "", "index"], [145, 1, 1, "", "inftau"], [145, 1, 1, "", "ligand"], [145, 1, 1, "", "parm"], [145, 1, 1, "", "set_f"], [145, 1, 1, "", "src"], [145, 1, 1, "", "target"], [145, 1, 1, "", "type"], [276, 5, 1, "", "ab"], [276, 5, 1, "", "f"], [276, 5, 1, "", "ftype"], [276, 5, 1, "", "index"], [276, 5, 1, "", "inftau"], [276, 5, 1, "", "ligand"], [276, 5, 1, "", "parm"], [276, 5, 1, "", "set_f"], [276, 5, 1, "", "src"], [276, 5, 1, "", "target"], [276, 5, 1, "", "type"]], "List": [[169, 1, 1, "", "accept_action"], [169, 1, 1, "", "append"], [169, 1, 1, "", "browser"], [169, 1, 1, "", "count"], [169, 1, 1, "", "index"], [169, 1, 1, "", "insrt"], [169, 1, 1, "", "o"], [169, 1, 1, "", "object"], [169, 1, 1, "", "prepend"], [169, 1, 1, "", "remove"], [169, 1, 1, "", "remove_all"], [169, 1, 1, "", "scroll_pos"], [169, 1, 1, "", "select"], [169, 1, 1, "", "select_action"], [169, 1, 1, "", "selected"], [301, 5, 1, "", "accept_action"], [301, 5, 1, "", "append"], [301, 5, 1, "", "browser"], [301, 5, 1, "", "count"], [301, 5, 1, "", "index"], [301, 5, 1, "", "insrt"], [301, 5, 1, "", "o"], [301, 5, 1, "", "object"], [301, 5, 1, "", "prepend"], [301, 5, 1, "", "remove"], [301, 5, 1, "", "remove_all"], [301, 5, 1, "", "scroll_pos"], [301, 5, 1, "", "select"], [301, 5, 1, "", "select_action"], [301, 5, 1, "", "selected"]], "Matrix": [[193, 1, 1, "", "add"], [193, 1, 1, "", "bcopy"], [193, 1, 1, "", "c"], [193, 1, 1, "", "cholesky_factor"], [193, 1, 1, "", "det"], [193, 1, 1, "", "exp"], [193, 1, 1, "", "fprint"], [193, 1, 1, "", "from_vector"], [193, 1, 1, "", "getcol"], [193, 1, 1, "", "getdiag"], [193, 1, 1, "", "getrow"], [193, 1, 1, "", "getval"], [193, 1, 1, "", "ident"], [193, 1, 1, "", "inverse"], [193, 1, 1, "", "mulm"], [193, 1, 1, "", "muls"], [193, 1, 1, "", "mulv"], [193, 1, 1, "", "ncol"], [193, 1, 1, "", "nrow"], [193, 1, 1, "", "pow"], [193, 1, 1, "", "printf"], [193, 1, 1, "", "resize"], [193, 1, 1, "", "scanf"], [193, 1, 1, "", "setcol"], [193, 1, 1, "", "setdiag"], [193, 1, 1, "", "setrow"], [193, 1, 1, "", "setval"], [193, 1, 1, "", "solv"], [193, 1, 1, "", "spgetrowval"], [193, 1, 1, "", "sprowlen"], [193, 1, 1, "", "svd"], [193, 1, 1, "", "symmeig"], [193, 1, 1, "", "to_vector"], [193, 1, 1, "", "transpose"], [193, 2, 1, "", "x"], [193, 1, 1, "", "zero"], [325, 5, 1, "", "add"], [325, 5, 1, "", "bcopy"], [325, 5, 1, "", "c"], [325, 5, 1, "", "det"], [325, 5, 1, "", "exp"], [325, 5, 1, "", "fprint"], [325, 5, 1, "", "from_vector"], [325, 5, 1, "", "getcol"], [325, 5, 1, "", "getdiag"], [325, 5, 1, "", "getrow"], [325, 5, 1, "", "getval"], [325, 5, 1, "", "ident"], [325, 5, 1, "", "inverse"], [325, 5, 1, "", "mulm"], [325, 5, 1, "", "muls"], [325, 5, 1, "", "mulv"], [325, 5, 1, "", "ncol"], [325, 5, 1, "", "nrow"], [325, 5, 1, "", "pow"], [325, 5, 1, "", "printf"], [325, 5, 1, "", "resize"], [325, 5, 1, "", "scanf"], [325, 5, 1, "", "setcol"], [325, 5, 1, "", "setdiag"], [325, 5, 1, "", "setrow"], [325, 5, 1, "", "setval"], [325, 5, 1, "", "solv"], [325, 5, 1, "", "spgetrowval"], [325, 5, 1, "", "sprowlen"], [325, 5, 1, "", "svd"], [325, 5, 1, "", "symmeig"], [325, 5, 1, "", "to_vector"], [325, 5, 1, "", "transpose"], [325, 6, 1, "", "x"], [325, 5, 1, "", "zero"]], "MechanismStandard": [[199, 1, 1, "", "action"], [199, 1, 1, "", "count"], [199, 1, 1, "", "get"], [199, 1, 1, "", "in"], [199, 1, 1, "", "name"], [199, 1, 1, "", "out"], [199, 1, 1, "", "panel"], [199, 1, 1, "", "save"], [199, 1, 1, "", "set"], [331, 5, 1, "", "_in"], [331, 5, 1, "", "action"], [331, 5, 1, "", "count"], [331, 5, 1, "", "get"], [331, 5, 1, "", "name"], [331, 5, 1, "", "out"], [331, 5, 1, "", "panel"], [331, 5, 1, "", "save"], [331, 5, 1, "", "set"]], "MechanismType": [[151, 1, 1, "", "action"], [151, 1, 1, "", "count"], [151, 1, 1, "", "has_net_event"], [151, 1, 1, "", "internal_type"], [151, 1, 1, "", "is_artificial"], [151, 1, 1, "", "is_netcon_target"], [151, 1, 1, "", "make"], [151, 1, 1, "", "menu"], [151, 1, 1, "", "pp_begin"], [151, 1, 1, "", "pp_next"], [151, 1, 1, "", "remove"], [151, 1, 1, "", "select"], [151, 1, 1, "", "selected"], [282, 5, 1, "", "action"], [282, 5, 1, "", "code"], [282, 5, 1, "", "count"], [282, 5, 1, "", "file"], [282, 5, 1, "", "has_net_event"], [282, 5, 1, "", "internal_type"], [282, 5, 1, "", "is_artificial"], [282, 5, 1, "", "is_netcon_target"], [282, 5, 1, "", "make"], [282, 5, 1, "", "menu"], [282, 5, 1, "", "pp_begin"], [282, 5, 1, "", "pp_next"], [282, 5, 1, "", "remove"], [282, 5, 1, "", "select"], [282, 5, 1, "", "selected"]], "NetCon": [[154, 1, 1, "", "active"], [154, 2, 1, "", "delay"], [154, 1, 1, "", "event"], [154, 1, 1, "", "get_recordvec"], [154, 1, 1, "", "postcell"], [154, 1, 1, "", "postcelllist"], [154, 1, 1, "", "postloc"], [154, 1, 1, "", "pre"], [154, 1, 1, "", "precell"], [154, 1, 1, "", "precelllist"], [154, 1, 1, "", "prelist"], [154, 1, 1, "", "preloc"], [154, 1, 1, "", "record"], [154, 1, 1, "", "setpost"], [154, 1, 1, "", "srcgid"], [154, 1, 1, "", "syn"], [154, 1, 1, "", "synlist"], [154, 2, 1, "", "threshold"], [154, 1, 1, "", "valid"], [154, 1, 1, "", "wcnt"], [154, 2, 1, "", "weight"], [154, 2, 1, "", "x"], [285, 5, 1, "", "active"], [285, 6, 1, "", "delay"], [285, 5, 1, "", "event"], [285, 5, 1, "", "get_recordvec"], [285, 5, 1, "", "postcell"], [285, 5, 1, "", "postcelllist"], [285, 5, 1, "", "postloc"], [285, 5, 1, "", "postseg"], [285, 5, 1, "", "pre"], [285, 5, 1, "", "precell"], [285, 5, 1, "", "precelllist"], [285, 5, 1, "", "prelist"], [285, 5, 1, "", "preloc"], [285, 5, 1, "", "preseg"], [285, 5, 1, "", "record"], [285, 5, 1, "", "setpost"], [285, 5, 1, "", "srcgid"], [285, 5, 1, "", "syn"], [285, 5, 1, "", "synlist"], [285, 6, 1, "", "threshold"], [285, 5, 1, "", "valid"], [285, 5, 1, "", "wcnt"], [285, 6, 1, "", "weight"], [285, 6, 1, "", "x"]], "PWManager": [[172, 1, 1, "", "close"], [172, 1, 1, "", "count"], [172, 1, 1, "", "deco"], [172, 1, 1, "", "deiconify"], [172, 1, 1, "", "group"], [172, 1, 1, "", "hide"], [172, 1, 1, "", "iconify"], [172, 1, 1, "", "is_mapped"], [172, 1, 1, "", "landscape"], [172, 1, 1, "", "leader"], [172, 1, 1, "", "manager"], [172, 1, 1, "", "map"], [172, 1, 1, "", "name"], [172, 1, 1, "", "paper_place"], [172, 1, 1, "", "printfile"], [172, 1, 1, "", "save"], [172, 1, 1, "", "scale"], [172, 1, 1, "", "snap"], [172, 1, 1, "", "window_place"], [304, 5, 1, "", "close"], [304, 5, 1, "", "count"], [304, 5, 1, "", "deco"], [304, 5, 1, "", "deiconify"], [304, 5, 1, "", "group"], [304, 5, 1, "", "hide"], [304, 5, 1, "", "iconify"], [304, 5, 1, "", "is_mapped"], [304, 5, 1, "", "landscape"], [304, 5, 1, "", "leader"], [304, 5, 1, "", "manager"], [304, 5, 1, "", "map"], [304, 5, 1, "", "name"], [304, 5, 1, "", "paper_place"], [304, 5, 1, "", "printfile"], [304, 5, 1, "", "save"], [304, 5, 1, "", "scale"], [304, 5, 1, "", "snap"], [304, 5, 1, "", "window_place"]], "ParallelContext": [[155, 1, 1, "", "Threads"], [155, 1, 1, "", "allgather"], [155, 1, 1, "", "allreduce"], [155, 1, 1, "", "alltoall"], [155, 1, 1, "", "barrier"], [155, 1, 1, "", "broadcast"], [155, 1, 1, "", "cell"], [155, 1, 1, "", "context"], [155, 1, 1, "", "done"], [155, 1, 1, "", "dt"], [155, 1, 1, "", "event_time"], [155, 1, 1, "", "gid2cell"], [155, 1, 1, "", "gid2obj"], [155, 1, 1, "", "gid_clear"], [155, 1, 1, "", "gid_connect"], [155, 1, 1, "", "gid_exists"], [155, 1, 1, "", "id"], [155, 1, 1, "", "id_bbs"], [155, 1, 1, "", "id_world"], [155, 1, 1, "", "integ_time"], [155, 1, 1, "", "look"], [155, 1, 1, "", "look_take"], [155, 1, 1, "", "max_histogram"], [155, 1, 1, "", "mech_time"], [155, 1, 1, "", "multisplit"], [155, 1, 1, "", "nhost"], [155, 1, 1, "", "nhost_bbs"], [155, 1, 1, "", "nhost_world"], [155, 1, 1, "", "nthread"], [155, 1, 1, "", "outputcell"], [155, 1, 1, "", "pack"], [155, 1, 1, "", "partition"], [155, 1, 1, "", "post"], [155, 1, 1, "", "prcellstate"], [155, 1, 1, "", "psolve"], [155, 1, 1, "", "py_alltoall"], [155, 1, 1, "", "pyret"], [155, 1, 1, "", "retval"], [155, 1, 1, "", "runworker"], [155, 1, 1, "", "sec_in_thread"], [155, 1, 1, "", "send_time"], [155, 1, 1, "", "set_gid2node"], [155, 1, 1, "", "set_maxstep"], [155, 1, 1, "", "setup_transfer"], [155, 1, 1, "", "source_var"], [155, 1, 1, "", "spike_compress"], [155, 1, 1, "", "spike_record"], [155, 1, 1, "", "spike_statistics"], [155, 1, 1, "", "splitcell"], [155, 1, 1, "", "step_time"], [155, 1, 1, "", "step_wait"], [155, 1, 1, "", "submit"], [155, 1, 1, "", "subworlds"], [155, 1, 1, "", "t"], [155, 1, 1, "", "take"], [155, 1, 1, "", "target_var"], [155, 1, 1, "", "thread_busywait"], [155, 1, 1, "", "thread_ctime"], [155, 1, 1, "", "thread_how_many_proc"], [155, 1, 1, "", "thread_stat"], [155, 1, 1, "", "threshold"], [155, 1, 1, "", "time"], [155, 1, 1, "", "timeout"], [155, 1, 1, "", "unpack"], [155, 1, 1, "", "upkpyobj"], [155, 1, 1, "", "upkscalar"], [155, 1, 1, "", "upkstr"], [155, 1, 1, "", "upkvec"], [155, 1, 1, "", "userid"], [155, 1, 1, "", "vtransfer_time"], [155, 1, 1, "", "wait_time"], [155, 1, 1, "", "working"], [286, 5, 1, "", "Threads"], [286, 5, 1, "", "allgather"], [286, 5, 1, "", "allreduce"], [286, 5, 1, "", "alltoall"], [286, 5, 1, "", "barrier"], [286, 5, 1, "", "broadcast"], [286, 5, 1, "", "cell"], [286, 5, 1, "", "context"], [286, 5, 1, "", "done"], [286, 5, 1, "", "dt"], [286, 5, 1, "", "event_time"], [286, 5, 1, "", "gid2cell"], [286, 5, 1, "", "gid2obj"], [286, 5, 1, "", "gid_clear"], [286, 5, 1, "", "gid_connect"], [286, 5, 1, "", "gid_exists"], [286, 5, 1, "", "id"], [286, 5, 1, "", "id_bbs"], [286, 5, 1, "", "id_world"], [286, 5, 1, "", "integ_time"], [286, 5, 1, "", "look"], [286, 5, 1, "", "look_take"], [286, 5, 1, "", "max_histogram"], [286, 5, 1, "", "mech_time"], [286, 5, 1, "", "mpi_init"], [286, 5, 1, "", "mpiabort_on_error"], [286, 5, 1, "", "multisplit"], [286, 5, 1, "", "nhost"], [286, 5, 1, "", "nhost_bbs"], [286, 5, 1, "", "nhost_world"], [286, 5, 1, "", "nrncore_run"], [286, 5, 1, "", "nrncore_write"], [286, 5, 1, "", "nthread"], [286, 5, 1, "", "outputcell"], [286, 5, 1, "", "pack"], [286, 5, 1, "", "partition"], [286, 5, 1, "", "post"], [286, 5, 1, "", "prcellstate"], [286, 5, 1, "", "psolve"], [286, 5, 1, "", "py_allgather"], [286, 5, 1, "", "py_alltoall"], [286, 5, 1, "", "py_broadcast"], [286, 5, 1, "", "py_gather"], [286, 5, 1, "", "py_scatter"], [286, 5, 1, "", "pyret"], [286, 5, 1, "", "retval"], [286, 5, 1, "", "runworker"], [286, 5, 1, "", "sec_in_thread"], [286, 5, 1, "", "send_time"], [286, 5, 1, "", "set_gid2node"], [286, 5, 1, "", "set_maxstep"], [286, 5, 1, "", "setup_transfer"], [286, 5, 1, "", "source_var"], [286, 5, 1, "", "spike_compress"], [286, 5, 1, "", "spike_record"], [286, 5, 1, "", "spike_statistics"], [286, 5, 1, "", "splitcell"], [286, 5, 1, "", "step_time"], [286, 5, 1, "", "submit"], [286, 5, 1, "", "subworlds"], [286, 5, 1, "", "t"], [286, 5, 1, "", "take"], [286, 5, 1, "", "target_var"], [286, 5, 1, "", "thread_busywait"], [286, 5, 1, "", "thread_ctime"], [286, 5, 1, "", "thread_how_many_proc"], [286, 5, 1, "", "thread_stat"], [286, 5, 1, "", "threshold"], [286, 5, 1, "", "time"], [286, 5, 1, "", "timeout"], [286, 5, 1, "", "unpack"], [286, 5, 1, "", "upkpyobj"], [286, 5, 1, "", "upkscalar"], [286, 5, 1, "", "upkstr"], [286, 5, 1, "", "upkvec"], [286, 5, 1, "", "userid"], [286, 5, 1, "", "vtransfer_time"], [286, 5, 1, "", "wait_time"], [286, 5, 1, "", "working"]], "ParallelNetManager": [[156, 1, 1, "", "create_cell"], [156, 1, 1, "", "gatherspikes"], [156, 1, 1, "", "gid_exists"], [156, 1, 1, "", "nc_append"], [156, 1, 1, "", "pcontinue"], [156, 1, 1, "", "pinit"], [156, 1, 1, "", "prstat"], [156, 1, 1, "", "prun"], [156, 1, 1, "", "psolve"], [156, 1, 1, "", "register_cell"], [156, 1, 1, "", "round_robin"], [156, 1, 1, "", "set_gid2node"], [156, 1, 1, "", "spike_record"], [156, 1, 1, "", "splitcell"], [156, 1, 1, "", "want_all_spikes"], [287, 5, 1, "", "create_cell"], [287, 5, 1, "", "gatherspikes"], [287, 5, 1, "", "gid_exists"], [287, 5, 1, "", "nc_append"], [287, 5, 1, "", "pcontinue"], [287, 5, 1, "", "pinit"], [287, 5, 1, "", "prstat"], [287, 5, 1, "", "prun"], [287, 5, 1, "", "psolve"], [287, 5, 1, "", "register_cell"], [287, 5, 1, "", "round_robin"], [287, 5, 1, "", "set_gid2node"], [287, 5, 1, "", "spike_record"], [287, 5, 1, "", "splitcell"], [287, 5, 1, "", "want_all_spikes"]], "PlotShape": [[232, 1, 1, "", "beginline"], [232, 1, 1, "", "color"], [232, 1, 1, "", "color_all"], [232, 1, 1, "", "color_list"], [232, 1, 1, "", "colormap"], [232, 1, 1, "", "erase"], [232, 1, 1, "", "erase_all"], [232, 1, 1, "", "exec_menu"], [232, 1, 1, "", "fastflush"], [232, 1, 1, "", "flush"], [232, 1, 1, "", "hinton"], [232, 1, 1, "", "label"], [232, 1, 1, "", "len_scale"], [232, 1, 1, "", "line"], [232, 1, 1, "", "mark"], [232, 1, 1, "", "menu_action"], [232, 1, 1, "", "menu_tool"], [232, 1, 1, "", "nearest"], [232, 1, 1, "", "observe"], [232, 1, 1, "", "printfile"], [232, 1, 1, "", "push_selected"], [232, 1, 1, "", "rotate"], [232, 1, 1, "", "save_name"], [232, 1, 1, "", "scale"], [232, 1, 1, "", "show"], [232, 1, 1, "", "size"], [232, 1, 1, "", "unmap"], [232, 1, 1, "", "variable"], [232, 1, 1, "", "view"], [232, 1, 1, "", "view_count"], [364, 5, 1, "", "beginline"], [364, 5, 1, "", "color"], [364, 5, 1, "", "color_all"], [364, 5, 1, "", "color_list"], [364, 5, 1, "", "colormap"], [364, 5, 1, "", "erase"], [364, 5, 1, "", "erase_all"], [364, 5, 1, "", "exec_menu"], [364, 5, 1, "", "fastflush"], [364, 5, 1, "", "flush"], [364, 5, 1, "", "hinton"], [364, 5, 1, "", "label"], [364, 5, 1, "", "len_scale"], [364, 5, 1, "", "line"], [364, 5, 1, "", "mark"], [364, 5, 1, "", "menu_action"], [364, 5, 1, "", "menu_tool"], [364, 5, 1, "", "nearest"], [364, 5, 1, "", "observe"], [364, 5, 1, "", "plot"], [364, 5, 1, "", "printfile"], [364, 5, 1, "", "push_selected"], [364, 5, 1, "", "rotate"], [364, 5, 1, "", "save_name"], [364, 5, 1, "", "scale"], [364, 5, 1, "", "show"], [364, 5, 1, "", "size"], [364, 5, 1, "", "unmap"], [364, 5, 1, "", "variable"], [364, 5, 1, "", "view"], [364, 5, 1, "", "view_count"]], "Pointer": [[204, 1, 1, "", "assign"], [204, 1, 1, "", "s"], [204, 1, 1, "", "val"], [336, 5, 1, "", "assign"], [336, 5, 1, "", "s"], [336, 7, 1, "", "val"]], "PtrVector": [[205, 1, 1, "", "gather"], [205, 1, 1, "", "getval"], [205, 1, 1, "", "pset"], [205, 1, 1, "", "ptr_update_callback"], [205, 1, 1, "", "resize"], [205, 1, 1, "", "scatter"], [205, 1, 1, "", "setval"], [205, 1, 1, "", "size"], [337, 5, 1, "", "gather"], [337, 5, 1, "", "getval"], [337, 5, 1, "", "label"], [337, 5, 1, "", "plot"], [337, 5, 1, "", "pset"], [337, 5, 1, "", "ptr_update_callback"], [337, 5, 1, "", "resize"], [337, 5, 1, "", "scatter"], [337, 5, 1, "", "setval"], [337, 5, 1, "", "size"]], "Random": [[196, 1, 1, "", "ACG"], [196, 1, 1, "", "MCellRan4"], [196, 1, 1, "", "MLCG"], [196, 1, 1, "", "Random123"], [196, 1, 1, "", "Random123_globalindex"], [196, 1, 1, "", "binomial"], [196, 1, 1, "", "discunif"], [196, 1, 1, "", "erlang"], [196, 1, 1, "", "geometric"], [196, 1, 1, "", "hypergeo"], [196, 1, 1, "", "lognormal"], [196, 1, 1, "", "negexp"], [196, 1, 1, "", "normal"], [196, 1, 1, "", "play"], [196, 1, 1, "", "poisson"], [196, 1, 1, "", "repick"], [196, 1, 1, "", "seq"], [196, 1, 1, "", "uniform"], [196, 1, 1, "", "weibull"], [328, 5, 1, "", "ACG"], [328, 5, 1, "", "MCellRan4"], [328, 5, 1, "", "MLCG"], [328, 5, 1, "", "Random123"], [328, 5, 1, "", "Random123_globalindex"], [328, 5, 1, "", "binomial"], [328, 5, 1, "", "discunif"], [328, 5, 1, "", "erlang"], [328, 5, 1, "", "geometric"], [328, 5, 1, "", "hypergeo"], [328, 5, 1, "", "lognormal"], [328, 5, 1, "", "negexp"], [328, 5, 1, "", "normal"], [328, 5, 1, "", "play"], [328, 5, 1, "", "poisson"], [328, 5, 1, "", "repick"], [328, 5, 1, "", "seq"], [328, 5, 1, "", "uniform"], [328, 5, 1, "", "weibull"]], "RangeVarPlot": [[233, 1, 1, "", "begin"], [233, 1, 1, "", "color"], [233, 1, 1, "", "end"], [233, 1, 1, "", "from_vector"], [233, 1, 1, "", "left"], [233, 1, 1, "", "list"], [233, 1, 1, "", "origin"], [233, 1, 1, "", "right"], [233, 1, 1, "", "to_vector"], [365, 5, 1, "", "begin"], [365, 5, 1, "", "color"], [365, 5, 1, "", "end"], [365, 5, 1, "", "from_vector"], [365, 5, 1, "", "left"], [365, 5, 1, "", "list"], [365, 5, 1, "", "origin"], [365, 5, 1, "", "plot"], [365, 5, 1, "", "right"], [365, 5, 1, "", "to_vector"], [365, 5, 1, "", "vector"]], "SaveState": [[222, 1, 1, "", "fread"], [222, 1, 1, "", "fwrite"], [222, 1, 1, "", "restore"], [222, 1, 1, "", "save"], [222, 1, 1, "", "writehoc"], [354, 5, 1, "", "fread"], [354, 5, 1, "", "fwrite"], [354, 5, 1, "", "restore"], [354, 5, 1, "", "save"], [354, 5, 1, "", "writehoc"]], "SectionBrowser": [[173, 1, 1, "", "accept_action"], [173, 1, 1, "", "select"], [173, 1, 1, "", "select_action"], [305, 5, 1, "", "accept_action"], [305, 5, 1, "", "select"], [305, 5, 1, "", "select_action"]], "SectionList": [[162, 1, 1, "", "allroots"], [162, 1, 1, "", "append"], [162, 1, 1, "", "children"], [162, 1, 1, "", "printnames"], [162, 1, 1, "", "remove"], [162, 1, 1, "", "subtree"], [162, 1, 1, "", "unique"], [162, 1, 1, "", "wholetree"], [294, 5, 1, "", "allroots"], [294, 5, 1, "", "append"], [294, 5, 1, "", "children"], [294, 5, 1, "", "printnames"], [294, 5, 1, "", "remove"], [294, 5, 1, "", "subtree"], [294, 5, 1, "", "unique"], [294, 5, 1, "", "wholetree"]], "SectionRef": [[163, 1, 1, "", "child"], [163, 1, 1, "", "exists"], [163, 1, 1, "", "has_parent"], [163, 1, 1, "", "has_trueparent"], [163, 1, 1, "", "is_cas"], [163, 1, 1, "", "nchild"], [163, 1, 1, "", "parent"], [163, 1, 1, "", "root"], [163, 1, 1, "", "sec"], [163, 1, 1, "", "trueparent"], [295, 6, 1, "", "child"], [295, 5, 1, "", "exists"], [295, 5, 1, "", "has_parent"], [295, 5, 1, "", "has_trueparent"], [295, 5, 1, "", "is_cas"], [295, 5, 1, "", "nchild"], [295, 6, 1, "", "parent"], [295, 6, 1, "", "root"], [295, 6, 1, "", "sec"], [295, 6, 1, "", "trueparent"]], "Shape": [[234, 1, 1, "", "action"], [234, 1, 1, "", "beginline"], [234, 1, 1, "", "color"], [234, 1, 1, "", "color_all"], [234, 1, 1, "", "color_list"], [234, 1, 1, "", "erase"], [234, 1, 1, "", "erase_all"], [234, 1, 1, "", "exec_menu"], [234, 1, 1, "", "flush"], [234, 1, 1, "", "label"], [234, 1, 1, "", "len_scale"], [234, 1, 1, "", "line"], [234, 1, 1, "", "mark"], [234, 1, 1, "", "menu_action"], [234, 1, 1, "", "menu_tool"], [234, 1, 1, "", "nearest"], [234, 1, 1, "", "observe"], [234, 1, 1, "", "point_mark"], [234, 1, 1, "", "point_mark_remove"], [234, 1, 1, "", "printfile"], [234, 1, 1, "", "push_selected"], [234, 1, 1, "", "rotate"], [234, 1, 1, "", "save_name"], [234, 1, 1, "", "select"], [234, 1, 1, "", "show"], [234, 1, 1, "", "size"], [234, 1, 1, "", "unmap"], [234, 1, 1, "", "view"], [234, 1, 1, "", "view_count"], [366, 5, 1, "", "action"], [366, 5, 1, "", "beginline"], [366, 5, 1, "", "color"], [366, 5, 1, "", "color_all"], [366, 5, 1, "", "color_list"], [366, 5, 1, "", "erase"], [366, 5, 1, "", "erase_all"], [366, 5, 1, "", "exec_menu"], [366, 5, 1, "", "flush"], [366, 5, 1, "", "label"], [366, 5, 1, "", "len_scale"], [366, 5, 1, "", "line"], [366, 5, 1, "", "mark"], [366, 5, 1, "", "menu_action"], [366, 5, 1, "", "menu_tool"], [366, 5, 1, "", "nearest"], [366, 5, 1, "", "observe"], [366, 5, 1, "", "point_mark"], [366, 5, 1, "", "point_mark_remove"], [366, 5, 1, "", "printfile"], [366, 5, 1, "", "push_selected"], [366, 5, 1, "", "rotate"], [366, 5, 1, "", "save_name"], [366, 5, 1, "", "select"], [366, 5, 1, "", "show"], [366, 5, 1, "", "size"], [366, 5, 1, "", "unmap"], [366, 5, 1, "", "view"], [366, 5, 1, "", "view_count"]], "StateTransitionEvent": [[159, 1, 1, "", "state"], [159, 1, 1, "", "transition"], [291, 5, 1, "", "state"], [291, 5, 1, "", "transition"]], "StringFunctions": [[211, 1, 1, "", "alias"], [211, 1, 1, "", "alias_list"], [211, 1, 1, "", "head"], [211, 1, 1, "", "is_artificial"], [211, 1, 1, "", "is_name"], [211, 1, 1, "", "is_point_process"], [211, 1, 1, "", "left"], [211, 1, 1, "", "len"], [211, 1, 1, "", "references"], [211, 1, 1, "", "right"], [211, 1, 1, "", "substr"], [211, 1, 1, "", "tail"], [343, 5, 1, "", "alias"], [343, 5, 1, "", "alias_list"], [343, 5, 1, "", "head"], [343, 5, 1, "", "is_artificial"], [343, 5, 1, "", "is_name"], [343, 5, 1, "", "is_point_process"], [343, 5, 1, "", "left"], [343, 5, 1, "", "len"], [343, 5, 1, "", "references"], [343, 5, 1, "", "right"], [343, 5, 1, "", "substr"], [343, 5, 1, "", "tail"]], "SymChooser": [[174, 1, 1, "", "run"], [174, 1, 1, "", "text"], [306, 5, 1, "", "run"], [306, 5, 1, "", "text"]], "TextEditor": [[175, 1, 1, "", "map"], [175, 1, 1, "", "readonly"], [175, 1, 1, "", "text"], [307, 5, 1, "", "map"], [307, 5, 1, "", "readonly"], [307, 5, 1, "", "text"]], "Timer": [[214, 1, 1, "", "end"], [214, 1, 1, "", "seconds"], [214, 1, 1, "", "start"], [346, 5, 1, "", "end"], [346, 5, 1, "", "seconds"], [346, 5, 1, "", "start"]], "VBox": [[168, 1, 1, "", "adjust"], [168, 1, 1, "", "adjuster"], [168, 1, 1, "", "dialog"], [168, 1, 1, "", "dismiss_action"], [168, 1, 1, "", "full_request"], [168, 1, 1, "", "intercept"], [168, 1, 1, "", "ismapped"], [168, 1, 1, "", "map"], [168, 1, 1, "", "priority"], [168, 1, 1, "", "ref"], [168, 1, 1, "", "save"], [168, 1, 1, "", "size"], [168, 1, 1, "", "unmap"], [300, 5, 1, "", "adjust"], [300, 5, 1, "", "adjuster"], [300, 5, 1, "", "dialog"], [300, 5, 1, "", "dismiss_action"], [300, 5, 1, "", "full_request"], [300, 5, 1, "", "intercept"], [300, 5, 1, "", "ismapped"], [300, 5, 1, "", "map"], [300, 5, 1, "", "priority"], [300, 5, 1, "", "ref"], [300, 5, 1, "", "save"], [300, 5, 1, "", "size"], [300, 5, 1, "", "unmap"]], "ValueFieldEditor": [[177, 1, 1, "", "default"], [309, 5, 1, "", "default"]], "Vector": [[197, 1, 1, "", "abs"], [197, 1, 1, "", "add"], [197, 1, 1, "", "addrand"], [197, 1, 1, "", "append"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "as_numpy"], [197, 1, 1, "", "at"], [197, 1, 1, "", "buffer_size"], [197, 1, 1, "", "c"], [197, 1, 1, "", "cl"], [197, 1, 1, "", "contains"], [197, 1, 1, "", "convlv"], [197, 1, 1, "", "copy"], [197, 1, 1, "", "correl"], [197, 1, 1, "", "deriv"], [197, 1, 1, "", "div"], [197, 1, 1, "", "dot"], [197, 1, 1, "", "eq"], [197, 1, 1, "", "fft"], [197, 1, 1, "", "fill"], [197, 1, 1, "", "filter"], [197, 1, 1, "", "fit"], [197, 1, 1, "", "floor"], [197, 1, 1, "", "fread"], [197, 1, 1, "", "from_double"], [197, 1, 1, "", "from_python"], [197, 1, 1, "", "fwrite"], [197, 1, 1, "", "get"], [197, 1, 1, "", "hist"], [197, 1, 1, "", "histogram"], [197, 1, 1, "", "ind"], [197, 1, 1, "", "index"], [197, 1, 1, "", "indgen"], [197, 1, 1, "", "indvwhere"], [197, 1, 1, "", "indwhere"], [197, 1, 1, "", "inf"], [197, 1, 1, "", "insrt"], [197, 1, 1, "", "integral"], [197, 1, 1, "", "interpolate"], [197, 1, 1, "", "label"], [197, 1, 1, "", "line"], [197, 1, 1, "", "log"], [197, 1, 1, "", "log10"], [197, 1, 1, "", "mag"], [197, 1, 1, "", "mark"], [197, 1, 1, "", "max"], [197, 1, 1, "", "max_ind"], [197, 1, 1, "", "mean"], [197, 1, 1, "", "meansqerr"], [197, 1, 1, "", "medfltr"], [197, 1, 1, "", "median"], [197, 1, 1, "", "min"], [197, 1, 1, "", "min_ind"], [197, 1, 1, "", "mul"], [197, 1, 1, "", "play"], [197, 1, 1, "", "play_remove"], [197, 1, 1, "", "plot"], [197, 1, 1, "", "ploterr"], [197, 1, 1, "", "pow"], [197, 1, 1, "", "printf"], [197, 1, 1, "", "psth"], [197, 1, 1, "", "rebin"], [197, 1, 1, "", "record"], [197, 1, 1, "", "reduce"], [197, 1, 1, "", "remove"], [197, 1, 1, "", "resample"], [197, 1, 1, "", "resize"], [197, 1, 1, "", "reverse"], [197, 1, 1, "", "rotate"], [197, 1, 1, "", "scale"], [197, 1, 1, "", "scanf"], [197, 1, 1, "", "scantil"], [197, 1, 1, "", "set"], [197, 1, 1, "", "setrand"], [197, 1, 1, "", "sin"], [197, 1, 1, "", "size"], [197, 1, 1, "", "smhist"], [197, 1, 1, "", "sort"], [197, 1, 1, "", "sortindex"], [197, 1, 1, "", "spctrm"], [197, 1, 1, "", "spikebin"], [197, 1, 1, "", "sqrt"], [197, 1, 1, "", "stderr"], [197, 1, 1, "", "stdev"], [197, 1, 1, "", "sub"], [197, 1, 1, "", "sum"], [197, 1, 1, "", "sumgauss"], [197, 1, 1, "", "sumsq"], [197, 1, 1, "", "tanh"], [197, 1, 1, "", "to_python"], [197, 1, 1, "", "trigavg"], [197, 1, 1, "", "var"], [197, 1, 1, "", "vread"], [197, 1, 1, "", "vwrite"], [197, 1, 1, "", "where"], [197, 2, 1, "", "x"], [329, 5, 1, "", "abs"], [329, 5, 1, "", "add"], [329, 5, 1, "", "addrand"], [329, 5, 1, "", "append"], [329, 5, 1, "", "apply"], [329, 5, 1, "", "as_numpy"], [329, 5, 1, "", "at"], [329, 5, 1, "", "buffer_size"], [329, 5, 1, "", "c"], [329, 5, 1, "", "cl"], [329, 5, 1, "", "contains"], [329, 5, 1, "", "convlv"], [329, 5, 1, "", "copy"], [329, 5, 1, "", "correl"], [329, 5, 1, "", "deriv"], [329, 5, 1, "", "div"], [329, 5, 1, "", "dot"], [329, 5, 1, "", "eq"], [329, 5, 1, "", "fft"], [329, 5, 1, "", "fill"], [329, 5, 1, "", "filter"], [329, 5, 1, "", "fit"], [329, 5, 1, "", "floor"], [329, 5, 1, "", "fread"], [329, 5, 1, "", "from_double"], [329, 5, 1, "", "from_python"], [329, 5, 1, "", "fwrite"], [329, 5, 1, "", "get"], [329, 5, 1, "", "hist"], [329, 5, 1, "", "histogram"], [329, 5, 1, "", "ind"], [329, 5, 1, "", "index"], [329, 5, 1, "", "indgen"], [329, 5, 1, "", "indvwhere"], [329, 5, 1, "", "indwhere"], [329, 5, 1, "", "inf"], [329, 5, 1, "", "insrt"], [329, 5, 1, "", "integral"], [329, 5, 1, "", "interpolate"], [329, 5, 1, "", "label"], [329, 5, 1, "", "line"], [329, 5, 1, "", "log"], [329, 5, 1, "", "log10"], [329, 5, 1, "", "mag"], [329, 5, 1, "", "mark"], [329, 5, 1, "", "max"], [329, 5, 1, "", "max_ind"], [329, 5, 1, "", "mean"], [329, 5, 1, "", "meansqerr"], [329, 5, 1, "", "medfltr"], [329, 5, 1, "", "median"], [329, 5, 1, "", "min"], [329, 5, 1, "", "min_ind"], [329, 5, 1, "", "mul"], [329, 5, 1, "", "play"], [329, 5, 1, "", "play_remove"], [329, 5, 1, "", "plot"], [329, 5, 1, "", "ploterr"], [329, 5, 1, "", "pow"], [329, 5, 1, "", "printf"], [329, 5, 1, "", "psth"], [329, 5, 1, "", "rebin"], [329, 5, 1, "", "record"], [329, 5, 1, "", "reduce"], [329, 5, 1, "", "remove"], [329, 5, 1, "", "resample"], [329, 5, 1, "", "resize"], [329, 5, 1, "", "reverse"], [329, 5, 1, "", "rotate"], [329, 5, 1, "", "scale"], [329, 5, 1, "", "scanf"], [329, 5, 1, "", "scantil"], [329, 5, 1, "", "set"], [329, 5, 1, "", "setrand"], [329, 5, 1, "", "sin"], [329, 5, 1, "", "size"], [329, 5, 1, "", "smhist"], [329, 5, 1, "", "sort"], [329, 5, 1, "", "sortindex"], [329, 5, 1, "", "spctrm"], [329, 5, 1, "", "spikebin"], [329, 5, 1, "", "sqrt"], [329, 5, 1, "", "stderr"], [329, 5, 1, "", "stdev"], [329, 5, 1, "", "sub"], [329, 5, 1, "", "sum"], [329, 5, 1, "", "sumgauss"], [329, 5, 1, "", "sumsq"], [329, 5, 1, "", "tanh"], [329, 5, 1, "", "to_python"], [329, 5, 1, "", "trigavg"], [329, 5, 1, "", "var"], [329, 5, 1, "", "vread"], [329, 5, 1, "", "vwrite"], [329, 5, 1, "", "where"], [329, 6, 1, "", "x"]], "neuron.h": [[208, 0, 1, "", "Section"], [208, 1, 1, "", "cas"], [340, 4, 1, "", "Section"], [340, 5, 1, "", "cas"]], "neuron.hoc": [[208, 0, 1, "", "HocObject"], [208, 1, 1, "", "execute"], [208, 1, 1, "", "hoc_ac"], [340, 4, 1, "", "HocObject"], [340, 5, 1, "", "execute"], [340, 5, 1, "", "hoc_ac"]], "pnt": [[148, 1, 1, "", "get_loc"], [148, 1, 1, "", "get_segment"], [148, 1, 1, "", "has_loc"], [148, 1, 1, "", "loc"], [279, 5, 1, "", "get_loc"], [279, 5, 1, "", "get_segment"], [279, 5, 1, "", "has_loc"], [279, 5, 1, "", "loc"]], "rxd": [[158, 0, 1, "", "Extracellular"], [158, 0, 1, "", "MultiCompartmentReaction"], [158, 0, 1, "", "Parameter"], [158, 0, 1, "", "Rate"], [158, 0, 1, "", "Reaction"], [158, 0, 1, "", "Region"], [158, 0, 1, "", "RxDException"], [158, 0, 1, "", "Species"], [158, 0, 1, "", "State"], [158, 3, 1, "", "nthread"], [158, 3, 1, "", "re_init"], [158, 3, 1, "", "set_solve_type"], [289, 4, 1, "", "DistributedBoundary"], [289, 4, 1, "", "Extracellular"], [289, 4, 1, "", "FixedCrossSection"], [289, 4, 1, "", "FixedPerimeter"], [289, 4, 1, "", "FractionalVolume"], [289, 4, 1, "", "MultiCompartmentReaction"], [289, 4, 1, "", "Parameter"], [289, 4, 1, "", "Rate"], [289, 4, 1, "", "Reaction"], [289, 4, 1, "", "Region"], [289, 4, 1, "", "RxDException"], [289, 4, 1, "", "ScalableBorder"], [289, 4, 1, "", "Shell"], [289, 4, 1, "", "Species"], [289, 4, 1, "", "State"], [289, 7, 1, "", "inside"], [289, 7, 1, "", "membrane"], [289, 8, 1, "", "nthread"], [289, 8, 1, "", "re_init"], [289, 8, 1, "", "set_solve_type"], [158, 11, 1, "", "v"]], "rxd.nodelist": [[158, 0, 1, "", "NodeList"], [289, 4, 1, "", "NodeList"]], "Section": [[292, 5, 1, "", "cell"], [292, 5, 1, "", "connect"], [292, 5, 1, "", "disconnect"], [292, 5, 1, "", "hname"], [292, 5, 1, "", "name"], [292, 6, 1, "", "nseg"], [292, 5, 1, "", "orientation"], [292, 5, 1, "", "parentseg"], [292, 5, 1, "", "subtree"], [292, 5, 1, "", "wholetree"]], "neuron": [[200, 10, 1, "", "HocError"], [200, 4, 1, "", "Wrapper"], [200, 8, 1, "", "format_exception"], [200, 8, 1, "", "init"], [200, 8, 1, "", "load_mechanisms"], [200, 8, 1, "", "new_hoc_class"], [200, 8, 1, "", "new_point_process"], [200, 8, 1, "", "nrn_dll"], [200, 8, 1, "", "nrn_dll_sym"], [200, 8, 1, "", "nrn_dll_sym_nt"], [200, 8, 1, "", "numpy_element_ref"], [200, 8, 1, "", "quit"], [200, 8, 1, "", "register_savestate"], [200, 8, 1, "", "run"], [200, 8, 1, "", "test"], [200, 8, 1, "", "test_rxd"], [200, 8, 1, "", "xopen"]], "rxd.Reaction": [[289, 11, 1, "", "b_rate"], [289, 11, 1, "", "f_rate"]], "rxd.Region": [[158, 11, 1, "", "geometry"], [158, 11, 1, "", "name"], [158, 11, 1, "", "nrn_region"], [158, 11, 1, "", "secs"]], "rxd.Species": [[289, 11, 1, "", "charge"], [289, 5, 1, "", "concentrations"], [289, 5, 1, "", "defined_on_region"], [289, 5, 1, "", "indices"], [289, 11, 1, "", "name"], [289, 11, 1, "", "nodes"], [289, 5, 1, "", "re_init"], [289, 11, 1, "", "regions"], [289, 11, 1, "", "states"]], "rxd.export": [[289, 8, 1, "", "sbml"]], "rxd.node": [[289, 4, 1, "", "Node"], [289, 4, 1, "", "Node1D"], [289, 4, 1, "", "Node3D"], [289, 4, 1, "", "NodeExtracellular"]], "rxd.node.Node": [[289, 11, 1, "", "_ref_concentration"], [289, 11, 1, "", "_ref_molecules"], [289, 11, 1, "", "_ref_value"], [289, 11, 1, "", "concentration"], [289, 11, 1, "", "d"], [289, 5, 1, "", "include_flux"], [289, 11, 1, "", "molecules"], [289, 11, 1, "", "region"], [289, 5, 1, "", "satisfies"], [289, 11, 1, "", "species"], [289, 11, 1, "", "value"], [289, 11, 1, "", "volume"], [289, 11, 1, "", "x3d"], [289, 11, 1, "", "y3d"], [289, 11, 1, "", "z3d"]], "rxd.node.Node1D": [[289, 5, 1, "", "satisfies"], [289, 11, 1, "", "sec"], [289, 11, 1, "", "segment"], [289, 11, 1, "", "surface_area"], [289, 11, 1, "", "x"]], "rxd.node.Node3D": [[289, 5, 1, "", "satisfies"], [289, 11, 1, "", "sec"], [289, 11, 1, "", "segment"], [289, 11, 1, "", "surface_area"]], "rxd.node.NodeExtracellular": [[289, 5, 1, "", "satisfies"]], "rxd.nodelist.NodeList": [[289, 11, 1, "", "_ref_concentration"], [289, 11, 1, "", "_ref_value"], [289, 11, 1, "", "concentration"], [289, 11, 1, "", "diff"], [289, 5, 1, "", "include_flux"], [289, 11, 1, "", "region"], [289, 11, 1, "", "segment"], [289, 11, 1, "", "species"], [289, 11, 1, "", "surface_area"], [289, 11, 1, "", "value"], [289, 5, 1, "", "value_to_grid"], [289, 11, 1, "", "volume"], [289, 11, 1, "", "x"]], "rxdmath": [[290, 8, 1, "", "acos"], [290, 8, 1, "", "acosh"], [290, 8, 1, "", "asin"], [290, 8, 1, "", "asinh"], [290, 8, 1, "", "atan"], [290, 8, 1, "", "atan2"], [290, 8, 1, "", "ceil"], [290, 8, 1, "", "copysign"], [290, 8, 1, "", "cos"], [290, 8, 1, "", "cosh"], [290, 8, 1, "", "degrees"], [290, 8, 1, "", "erf"], [290, 8, 1, "", "erfc"], [290, 8, 1, "", "exp"], [290, 8, 1, "", "expm1"], [290, 8, 1, "", "fabs"], [290, 8, 1, "", "factorial"], [290, 8, 1, "", "floor"], [290, 8, 1, "", "fmod"], [290, 8, 1, "", "gamma"], [290, 8, 1, "", "lgamma"], [290, 8, 1, "", "log"], [290, 8, 1, "", "log10"], [290, 8, 1, "", "log1p"], [290, 8, 1, "", "pow"], [290, 8, 1, "", "radians"], [290, 8, 1, "", "sin"], [290, 8, 1, "", "sinh"], [290, 8, 1, "", "sqrt"], [290, 8, 1, "", "tan"], [290, 8, 1, "", "tanh"], [290, 8, 1, "", "trunc"], [290, 8, 1, "", "vtrap"]]}, "objtypes": {"0": "hoc:class", "1": "hoc:method", "2": "hoc:data", "3": "hoc:function", "4": "py:class", "5": "py:method", "6": "py:data", "7": "py:attribute", "8": "py:function", "9": "py:module", "10": "py:exception", "11": "py:property"}, "objnames": {"0": ["hoc", "class", "HOC class"], "1": ["hoc", "method", "HOC method"], "2": ["hoc", "data", "HOC data"], "3": ["hoc", "function", "HOC function"], "4": ["py", "class", "Python class"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "function", "Python function"], "9": ["py", "module", "Python module"], "10": ["py", "exception", "Python exception"], "11": ["py", "property", "Python property"]}, "titleterms": {"neuron": [0, 1, 3, 4, 9, 25, 26, 29, 38, 46, 47, 53, 54, 55, 58, 59, 71, 77, 78, 81, 84, 88, 93, 95, 113, 114, 115, 117, 121, 122, 135, 150, 161, 200, 224, 237, 243, 245, 246, 247, 250, 251, 252, 266, 281, 293, 316, 332, 356, 372, 373, 376, 382, 383, 384, 385, 386, 389, 392, 394, 396, 397], "document": [0, 121, 135, 266, 382], "onlin": [0, 393, 394, 396, 397], "local": [0, 93, 149, 247, 280, 372], "build": [0, 2, 8, 12, 224, 240, 243, 245, 246, 356, 387, 394, 396, 397], "setup": [0, 58, 372, 376], "faster": 0, "iter": [0, 181, 313, 391], "readthedoc": 0, "config": 0, "file": [0, 4, 8, 14, 28, 42, 47, 48, 61, 71, 81, 93, 94, 98, 114, 117, 119, 122, 184, 187, 188, 224, 228, 247, 316, 319, 320, 356, 360, 376, 378], "handl": [0, 76, 158, 166, 289, 298], "rtd": 0, "leverag": 0, "conf": 0, "py": [0, 10, 13], "notebook": [0, 56], "execut": [0, 4, 52, 61, 62, 165, 213, 297, 345], "wheel": [0, 243, 245], "new": [0, 1, 28, 47, 71, 77, 78, 102, 114, 115, 202, 334, 385, 394], "releas": [0, 245, 382, 383, 384, 385], "8": [1, 392], "2": [1, 38, 39, 41, 46, 48, 61, 62, 71, 75, 84, 89, 91, 101, 104, 106, 107, 112, 373, 387, 392, 396, 397], "what": [1, 14, 25, 42, 46, 47, 71, 75, 81, 88, 91, 98, 104, 118, 119, 121, 392], "": [1, 25, 42, 46, 47, 58, 62, 71, 75, 81, 86, 88, 98, 101, 119, 122, 382, 392, 394], "bug": 1, "fix": [1, 42, 73, 81, 98, 119], "improv": 1, "other": [1, 3, 32, 37, 50, 71, 87, 88, 228, 247, 250, 360, 382, 394], "chang": [1, 59, 71, 79, 87, 89, 91, 371, 382], "1": [1, 38, 39, 41, 46, 48, 61, 62, 75, 89, 91, 99, 102, 103, 113, 373, 386, 392, 396, 397], "0": [1, 3, 48, 89, 93], "break": [1, 56], "deprec": [1, 93, 382, 383, 385], "futur": [1, 84], "upgrad": 1, "step": [1, 7, 48, 61, 62, 71, 89, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 116, 124, 224, 227, 254, 356, 359, 374, 392], "contributor": 1, "feedback": 1, "help": [1, 71, 228, 360, 392], "cmake": [2, 243], "option": [2, 3, 134, 158, 264, 289, 373], "introduct": [3, 31, 32, 33, 76, 83, 84, 149, 280, 371, 382, 391, 396], "gener": [3, 4, 32, 37, 51, 58, 71, 89, 91, 95, 107, 121, 128, 148, 149, 196, 227, 258, 279, 280, 328, 359, 387, 388, 396], "cmake_install_prefix": 3, "path": [3, 25, 213, 224, 345, 356], "where": [3, 71, 371], "nrn": 3, "should": [3, 29, 71], "instal": [3, 7, 58, 71, 77, 208, 237, 242, 243, 246], "cmake_build_typ": 3, "string": [3, 28, 210, 211, 212, 342, 343, 344, 391], "relwithdebinfo": 3, "ninja": 3, "interview": 3, "nrn_enable_interview": 3, "bool": 3, "ON": 3, "iv_dir": 3, "extern": [3, 150, 202, 281, 334], "iv_enable_shar": 3, "off": 3, "iv_enable_x11_dynam": 3, "iv_enable_x11_dynamic_make_head": 3, "mpi": [3, 35, 155, 239, 245, 286, 389], "nrn_enable_mpi": 3, "nrn_enable_mpi_dynam": 3, "nrn_mpi_dynam": 3, "nrn_enable_mus": 3, "python": [3, 46, 208, 236, 243, 245, 266, 340, 379, 385, 390, 391, 392, 397], "nrn_enable_python": 3, "nrn_enable_python_dynam": 3, "nrn_python_dynam": 3, "python_execut": 3, "nrn_enable_module_instal": 3, "nrn_enable_rx3d": 3, "nrn_rx3d_opt_level": 3, "coreneuron": [3, 4, 6, 7, 8, 243], "nrn_enable_coreneuron": 3, "nrn_enable_mod_compat": 3, "occasion": 3, "us": [3, 14, 24, 28, 30, 31, 45, 46, 48, 49, 60, 61, 62, 71, 75, 77, 78, 81, 85, 87, 88, 89, 91, 98, 114, 116, 117, 118, 119, 120, 122, 134, 243, 245, 250, 252, 264, 373, 392, 394], "advanc": [3, 386], "cmake_c_compil": 3, "filepath": 3, "usr": 3, "bin": [3, 76], "cc": 3, "cmake_cxx_compil": 3, "c": [3, 47, 57, 71, 93, 102, 105, 107], "nrn_enable_doc": 3, "nrn_extra_cxx_flag": 3, "nrn_extra_mech_cxx_flag": 3, "nrn_nmodl_cxx_flag": 3, "readline_root_dir": 3, "nrn_enable_test": 3, "nrn_enable_coverag": 3, "nrn_coverage_fil": 3, "nrn_sanit": 3, "miscellan": [3, 54, 132, 171, 182, 195, 213, 224, 262, 303, 314, 327, 345, 356], "rare": [3, 134, 264], "specif": [3, 13, 61, 62, 89, 91, 116, 121, 135, 136, 141, 161, 266, 267, 272, 293, 374], "nrn_enable_discrete_event_observ": 3, "nrn_dynamic_units_use_legaci": 3, "nrn_enable_mech_dll_styl": 3, "nrn_enable_shar": 3, "nrn_enable_thread": 3, "nrn_use_rel_rpath": 3, "nrn_enable_backtrac": 3, "compat": 4, "unsupport": 4, "featur": [4, 122, 368], "mod": [4, 8, 29, 38, 71, 93, 117, 247, 376], "thread": 4, "safe": 4, "tabl": [4, 149, 247, 280], "usag": [4, 10, 13, 77, 149, 280], "With": 4, "gpu": [4, 53, 239, 243], "onli": 4, "explicit": 4, "ion": [4, 59, 144, 158, 275, 289, 376, 392, 397], "variabl": [4, 75, 76, 118, 206, 224, 245, 247, 265, 338, 356, 374, 376, 391, 392], "updat": [4, 58], "random": [4, 95, 196, 328, 397], "number": [4, 28, 54, 196, 328, 391], "random123": 4, "v": [4, 25, 61, 74, 382, 389], "mcellran4": 4, "memori": 4, "manag": [4, 34, 42, 62, 71, 91, 94, 98, 119, 139, 207, 219, 224, 228, 270, 339, 351, 356, 360, 382, 383], "pointer": [4, 93, 149, 150, 203, 204, 209, 280, 281, 335, 336, 341], "argument": [4, 54, 114, 115, 181, 313], "bbcore_read": 4, "bbcore_writ": 4, "have": [4, 28, 71], "question": [4, 14, 71], "exampl": [5, 46, 52, 58, 69, 70, 71, 72, 84, 207, 247, 250, 339, 371, 374, 375, 376, 377, 379, 389], "get": [7, 24, 35, 45, 47, 54, 62, 71, 77, 78, 378, 392], "pip": 7, "from": [7, 29, 37, 71, 74, 94, 121, 161, 187, 247, 293, 319, 378, 382, 383, 394], "sourc": [7, 10, 13, 37, 47, 52, 95, 243, 382], "compil": [7, 71, 117, 134, 247, 264], "select": [7, 37, 42, 89, 98, 119, 164, 296], "instruct": [7, 238, 241], "run": [8, 10, 11, 29, 53, 71, 88, 89, 91, 96, 97, 124, 129, 215, 224, 239, 243, 254, 259, 347, 356, 372, 375, 376, 386, 387, 392], "simul": [8, 13, 28, 30, 31, 32, 33, 36, 37, 44, 45, 51, 58, 59, 96, 97, 121, 135, 220, 237, 266, 352, 372, 375, 376, 386, 387, 392, 394, 397], "enabl": [8, 374], "artifici": [9, 32, 102, 113, 148, 279, 394], "cell": [9, 10, 11, 29, 32, 37, 45, 46, 60, 61, 62, 71, 75, 91, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 148, 279, 386, 387, 388, 392, 394, 396, 397], "batch": [10, 11, 215, 347, 396], "bulletin": [10, 11, 13], "board": [10, 11, 13], "parallel": [10, 11, 35, 155, 286, 389, 397], "physic": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46], "system": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46, 121, 122, 190, 213, 322, 345], "comput": [10, 11, 24, 30, 31, 35, 43, 45, 49, 69, 70, 121], "implement": [10, 11, 24, 29, 30, 31, 45, 46, 71, 90, 155, 286], "The": [10, 11, 25, 32, 37, 42, 43, 60, 76, 88, 90, 91, 94, 95, 98, 119, 121, 122, 236, 237, 372, 376, 386, 392], "model": [10, 11, 13, 24, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 58, 59, 61, 62, 69, 70, 71, 75, 81, 84, 90, 91, 95, 101, 114, 115, 116, 121, 122, 135, 136, 141, 149, 247, 266, 267, 272, 280, 372, 376, 377, 382, 389, 396], "code": [10, 11, 13, 28, 32, 37, 46, 52, 61, 71, 95, 165, 236, 238, 241, 247, 297], "develop": [10, 11, 55, 121, 236, 240], "strategi": [10, 11, 61, 62, 91, 373], "initonerun": [10, 11, 13], "descript": [10, 13, 72, 89, 91, 149, 280], "initbats": [10, 11, 13], "initbatpar": [10, 11, 13], "thing": [10, 11, 40], "do": [10, 11, 28, 46, 54, 56, 59, 71, 88, 91, 117], "hoc": [11, 28, 29, 32, 37, 52, 61, 71, 76, 135, 143, 180, 181, 191, 201, 208, 274, 312, 313, 323, 333, 334, 340, 397], "label": [12, 79], "two": 12, "electrod": [12, 139, 142, 270, 273], "voltag": 12, "clamp": [12, 59, 71, 91], "linear": [12, 33, 149, 247, 280], "circuit": [12, 33, 397], "builder": [12, 32, 33, 60, 85, 106, 107, 224, 356], "walkthrough": 13, "paramet": [13, 44, 84, 89, 91, 100, 101, 109, 111, 128, 149, 199, 200, 247, 258, 280, 331, 332, 370, 374, 375, 388, 396], "instrument": [13, 239, 386], "control": [13, 58, 76, 121, 135, 185, 199, 220, 224, 266, 317, 331, 352, 356], "report": 13, "result": [13, 239, 386, 391, 392], "parallelcontext": [13, 155, 286], "cellbuild": [14, 37, 45, 61, 62, 137, 224, 268, 356], "overview": [14, 27, 81, 158, 161, 289, 293, 371, 372, 374, 376], "hint": [14, 89, 91], "start": [14, 24, 35, 45, 76, 77, 78, 117, 378], "save": [14, 29, 42, 45, 58, 61, 71, 98, 119, 215, 223, 224, 289, 347, 355, 356, 392], "your": [14, 28, 46, 49, 61, 236], "work": [14, 29, 47, 50, 54, 59, 88, 121, 122, 236], "check": [14, 54, 56], "you": [14, 28, 46, 50, 236], "answer": 14, "about": [14, 78, 91, 251], "session": [14, 42, 61, 71, 98, 119, 223, 228, 355, 360], "se": [14, 42, 71, 98, 119], "custom": [24, 87], "initi": [24, 52, 121, 149, 247, 280, 370, 373, 376, 378, 397], "conceptu": [24, 30, 31, 43, 45, 69, 70, 90, 161, 293], "exercis": [24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 41, 43, 45, 47, 122, 386, 396, 397], "steadi": [24, 373], "state": [24, 44, 149, 247, 280, 289, 373, 375], "special": 24, "credit": [24, 89], "electroton": [25, 71], "analysi": [25, 71, 123, 130, 135, 197, 253, 260, 266, 329, 396], "all": [25, 42, 58, 98, 119, 236], "thi": [25, 71, 89, 91, 102], "frequenc": [25, 224, 356], "tool": [25, 47, 71, 81, 88, 89, 91, 102, 122, 123, 125, 130, 136, 224, 253, 255, 260, 267, 356], "log": [25, 89], "A": [25, 47, 62, 90, 91, 99, 100, 102, 103, 106, 107, 108, 110, 121, 250, 377, 382, 387, 397], "x": [25, 35], "shape": [25, 47, 50, 71, 87, 161, 224, 234, 293, 356, 366], "cours": [26, 394, 396, 397], "task": 27, "detail": [27, 47, 90], "anyth": [28, 71], "explicitli": 28, "declar": [28, 54, 93, 375], "i": [28, 42, 46, 54, 59, 71, 88, 98, 117, 119, 121, 236, 392, 396], "assum": 28, "object": [28, 54, 182, 202, 314, 316, 334, 391], "oper": [28, 50, 382], "numer": [28, 39, 71, 158, 289, 394, 397], "function": [28, 53, 71, 76, 86, 89, 93, 100, 114, 115, 149, 158, 191, 203, 220, 224, 247, 280, 289, 290, 296, 323, 335, 352, 356, 373, 375, 391, 392], "data": [28, 40, 47, 51, 71, 81, 89, 91, 161, 293, 371, 396], "type": [28, 32, 54, 61, 71, 93, 102, 103, 106, 247, 391], "includ": [28, 149, 247, 280], "vector": [28, 71, 197, 224, 329, 356], "graph": [28, 29, 71, 74, 87, 122, 224, 226, 228, 356, 358, 360], "list": [28, 71, 169, 301, 391], "after": [28, 150, 247, 281], "creat": [28, 61, 62, 71, 87, 91, 94, 106, 107, 236, 382, 386, 392], "refer": [28, 41, 54, 84, 90, 121, 382, 383], "can": [28, 42, 71, 98, 102, 103, 104, 119], "point": [28, 148, 279], "old": 28, "an": [28, 47, 54, 58, 71, 81, 89, 91, 94, 104, 106, 107], "arrai": 28, "objref": [28, 202, 334], "block": [28, 114, 115, 247], "condit": [28, 378], "procedur": [28, 29, 71, 76, 149, 247, 280], "built": [28, 71, 86], "record": [28, 71, 375, 376, 378, 386, 387, 392], "analyz": [28, 46], "roll": 28, "own": [28, 46, 49, 236], "gui": [28, 29, 31, 60, 71, 81, 89, 102, 114, 123, 136, 179, 228, 236, 253, 267, 310, 311, 360, 394, 396, 397], "hopfield": 29, "brodi": 29, "synchron": [29, 158, 289], "sync": 29, "standard": [29, 186, 224, 318, 356], "intfir": 29, "eg": 29, "intfire1": 29, "intibfir": 29, "templat": 29, "network": [29, 32, 37, 69, 70, 75, 83, 85, 106, 107, 108, 110, 113, 121, 152, 155, 283, 286, 387, 388, 394, 396, 397], "how": [29, 42, 46, 54, 59, 71, 74, 75, 77, 78, 79, 80, 87, 94, 95, 98, 117, 119, 236, 246, 371], "gain": 29, "familiar": [29, 121], "increas": 29, "100": 29, "narrow": 29, "differ": [29, 68, 71, 239], "between": [29, 68, 71], "fast": [29, 382], "slow": 29, "so": 29, "make": [29, 45, 59, 71, 112, 113, 388, 391], "more": [29, 45, 392, 397], "them": [29, 71, 98, 119], "fire": [29, 107], "reduc": 29, "inhibit": 29, "demonstr": [29, 95], "synchroni": 29, "worsen": 29, "time": [29, 71, 91, 213, 236, 345, 374], "constant": [29, 149, 189, 247, 280, 321], "beyond": 29, "displai": [29, 84, 224, 356, 391], "spike": [29, 71, 95, 96, 97, 102, 103, 107, 389, 394], "look": [29, 47, 58, 81, 228, 360], "like": [29, 47, 71, 81], "spikeplot1": 29, "measur": [29, 91], "interval2": 29, "ocomm": 29, "set": [29, 61, 62, 71, 91, 99, 108, 110, 170, 245, 250, 302, 391, 392], "period": 29, "randomli": 29, "rewir": 29, "assess": 29, "connect": [29, 32, 37, 108, 109, 110, 111, 150, 281, 386, 387], "anim": 29, "interact": 30, "hodgkin": [30, 158, 289], "huxlei": 30, "cabl": 30, "equat": 30, "defin": [32, 102, 103, 149, 158, 161, 247, 280, 289, 293, 375, 386], "creation": [32, 37], "automat": [32, 37], "fly": 34, "mswin": 35, "mac": [35, 117, 241, 243, 244, 396], "o": [35, 243], "linux": [35, 238, 241, 243, 245, 396], "go": [35, 42, 75, 98, 119], "further": [35, 122], "multithread": 36, "paralel": 36, "readi": 37, "ball": [37, 45, 386, 387, 388, 389, 390], "stick": [37, 45, 61, 386, 387, 388, 389, 390], "synaps": [37, 104, 105, 387, 396], "stimul": [37, 386], "target": 37, "script": [38, 114, 250, 392, 394, 397], "3": [38, 39, 41, 46, 48, 56, 61, 62, 75, 89, 91, 100, 105, 108, 109, 110, 111, 161, 293, 373, 388, 392, 396], "4": [38, 39, 41, 46, 61, 62, 75, 89, 91, 116, 373, 389, 392], "5": [38, 39, 61, 62, 71, 74, 89, 91, 392, 396], "6": [38, 39, 61, 89, 91, 392, 396], "halfgap": 38, "method": [39, 247, 392, 394, 397], "qualiti": 40, "issu": 40, "morphometr": [40, 47, 81], "import": [40, 47, 56, 200, 332, 372, 376, 391, 392, 396], "keep": 40, "mind": 40, "reaction": [41, 90, 158, 289, 371, 372, 375, 378, 379, 381, 394], "diffus": [41, 59, 158, 289, 371, 378, 379, 381, 394], "window": [42, 71, 94, 98, 119, 122, 224, 228, 231, 236, 243, 246, 356, 360, 363], "when": [42, 50, 71, 98, 119], "print": [42, 71, 94, 223, 228, 355, 360], "pfwm": 42, "wrong": [42, 98, 119], "inhomogen": [43, 378], "channel": [43, 59, 90, 147, 217, 278, 349, 376, 392, 397], "distribut": [43, 224, 243, 356], "discontinu": 44, "approxim": 45, "represent": [45, 46], "biolog": 45, "properti": [45, 63, 103, 296, 392], "retriev": [45, 98, 119, 228, 360], "experiment": [45, 89, 91], "rig": 45, "footnot": [45, 382], "asid": [45, 392], "modeldb": [46, 84, 394, 397], "moor": 46, "et": [46, 84], "al": [46, 84], "1983": 46, "yale": 46, "edu": 46, "9852": 46, "being": 46, "repres": [46, 150, 247, 281], "purpos": [46, 121], "wa": 46, "examin": 46, "view": [46, 80, 89, 91, 360], "discov": 46, "underli": 46, "user": [46, 121], "interfac": [46, 121, 397], "anoth": 46, "mainen": 46, "sejnowski": 46, "1996": 46, "2488": 46, "reus": 46, "one": 46, "design": [46, 179, 311], "import3d": [47, 81], "b": [47, 62, 99, 100, 102, 103, 106, 107, 109, 111], "choos": [47, 81, 89, 91, 94], "read": [47, 71, 81, 150, 161, 187, 247, 281, 293, 319, 371, 397], "let": [47, 58, 81], "see": [47, 71, 76, 81, 89, 91], "d": [47, 71, 102, 161, 293], "export": [47, 61, 81, 289], "e": [47, 71], "take": [47, 93], "f": 47, "zoom": [47, 81], "litmu": 47, "test": [47, 53, 89, 91, 243, 245, 388, 389], "complex": [47, 62], "architectur": [47, 108, 110], "quantit": 47, "anatomi": [47, 62], "caveat": 47, "nmodl": [48, 71, 77, 78, 86, 114, 149, 150, 247, 280, 281, 373, 394], "neurosci": 49, "gatewai": 49, "nsg": 49, "portal": 49, "On": [49, 376], "plot": [50, 71, 75, 79, 87, 96, 97, 118, 124, 227, 230, 254, 359, 360, 362, 375, 376, 386, 387, 392, 396], "rotat": 50, "re": [50, 71], "done": [50, 71, 100], "deal": 51, "lot": 51, "comment": [51, 122, 149, 181, 280, 313], "suggest": 51, "interpret": [52, 76, 114, 121, 219, 351], "background": [52, 71, 87], "grammar": 52, "machin": [52, 213, 345], "printf": [52, 186, 318], "access": [53, 182, 184, 208, 314, 316, 340, 392], "resourc": [53, 289, 394], "manual": 53, "guid": [54, 82, 382], "pyobject": 54, "To": [54, 78], "wrap": [54, 394], "encapsul": 54, "derefer": 54, "exist": [54, 382, 385], "valu": [54, 71, 89, 91, 228, 239, 360], "class": [54, 75, 102, 103, 105, 196, 204, 211, 328, 336, 343, 387, 388, 391], "hoccommand": 54, "tip": [54, 122], "rais": 54, "error": [54, 71, 76, 158, 166, 289, 298], "name": [54, 75, 76, 89, 91, 102, 200, 332], "intern": [54, 182, 314], "symbol": 54, "topic": 55, "bokeh": [56, 392], "seem": [56, 71], "doc": 56, "next": 56, "line": 56, "api": 57, "movi": 58, "matplotlib": [58, 392], "load": [58, 89, 91, 165, 297, 375, 386, 388, 392], "morphologi": [58, 59, 372, 375, 386, 397], "definit": [58, 93, 114, 115, 382], "imag": [58, 122, 245], "put": 58, "togeth": [58, 150, 281], "mp4": 58, "biologi": [59, 121], "faq": [59, 71, 243], "current": [59, 71, 91, 386], "puls": [59, 71], "experi": [59, 91, 122], "non": [59, 93], "behavior": 59, "cytosol": 59, "concentr": [59, 71, 217, 349, 370, 373], "respons": [59, 91], "activ": 59, "respond": 59, "tutori": [60, 85, 88, 89, 91, 112, 113, 115, 248, 378, 379, 390, 393, 394, 396], "styliz": [61, 161, 293, 386], "figur": [61, 71, 122], "bring": [61, 89, 382], "up": [61, 62, 89, 91, 99, 108, 110, 122, 245, 250, 382, 392, 394], "specifi": [61, 62, 63, 71, 89, 91, 99, 100, 101, 102, 103, 104, 109, 111, 118, 158, 289, 386], "topologi": [61, 160, 292, 392], "subset": [61, 62, 99], "geometri": [61, 158, 161, 289, 293, 386], "biophys": [61, 62, 63, 75, 103, 121, 386, 392, 394], "continu": [61, 109, 111], "modular": 61, "program": [61, 76, 135, 202, 266, 334], "reusabl": 61, "alwai": 61, "configur": [61, 91], "spatial": [62, 121], "grid": 62, "parameter": [63, 224, 356], "variat": 63, "idraw": [68, 122, 228, 360], "coreldraw": 68, "hybrid": [69, 112], "simpl": [70, 250, 371], "frequent": 71, "ask": 71, "now": 71, "ve": 71, "best": [71, 382], "wai": [71, 184], "learn": [71, 78, 236], "m": [71, 103, 104, 105], "hard": 71, "why": [71, 88, 98, 119], "t": [71, 221, 236, 353], "text": [71, 176, 308], "copi": 71, "someth": 71, "than": 71, "membran": [71, 158, 289], "potenti": [71, 158, 289], "edit": [71, 76, 89, 122, 224, 356], "main": [71, 224, 356], "menu": [71, 128, 171, 176, 224, 228, 258, 303, 308, 356, 360], "construct": [71, 76, 83, 247, 387], "odd": 71, "nseg": [71, 386], "good": 71, "stretegi": 71, "color": [71, 79, 87], "scale": [71, 89, 397], "messag": 71, "sai": 71, "too": 71, "big": 71, "foo": 71, "find": [71, 75], "version": [71, 382, 383, 385], "mecan": 71, "fooba": 71, "need": [71, 81, 89, 91, 102, 103, 105, 106, 107, 108, 109, 110, 111], "translat": [71, 80, 228, 360], "its": [71, 372], "incompat": 71, "ar": [71, 93], "unit": [71, 114, 115, 149, 247, 280, 375], "doe": [71, 88], "etc": [71, 147, 158, 278, 289], "field": [71, 170, 302], "doesn": 71, "ani": 71, "effect": [71, 388], "seclamp": 71, "vclamp": 71, "which": 71, "iclamp": [71, 91], "just": 71, "deliv": 71, "rectangular": 71, "waveform": 71, "produc": 71, "arbitrari": 71, "g": 71, "calcul": 71, "real": 71, "want": [71, 89], "sequenc": 71, "regular": 71, "interv": 71, "plai": [71, 224, 356], "overkil": 71, "send": 71, "event": [71, 217, 349, 394], "precalcul": 71, "drive": [71, 245], "postsynapt": 71, "mechan": [71, 77, 78, 90, 121, 143, 148, 150, 208, 224, 274, 279, 281, 340, 356, 376, 392, 394], "binari": [71, 243, 244], "pclamp": 71, "exit": 71, "enter": 71, "oc": 71, "prompt": 71, "fiinitializehandl": 72, "syntax": [72, 76, 181, 313], "funni": 73, "ax": 73, "delet": [74, 94, 228, 360], "belong": 75, "proper": 75, "instanc": [75, 106, 128, 258], "section": [75, 161, 164, 231, 293, 296, 363, 386, 392], "neuronhom": 76, "cpu": [76, 243], "contain": 76, "interepret": 76, "stand": 76, "alon": 76, "keyword": [76, 201, 333], "introduc": 76, "nrnoc": 76, "express": [76, 158, 181, 289, 290, 313], "statement": [76, 149, 181, 280, 313], "flow": [76, 121, 382], "input": [76, 91, 96, 97, 102, 183, 315, 387], "output": [76, 94, 96, 97, 183, 186, 315, 318], "also": 76, "forum": 77, "basic": [77, 78, 135, 149, 158, 248, 266, 280, 289, 374, 386, 390, 392, 396, 397], "add": [77, 78, 376, 394], "move": 79, "convert": 81, "we": [81, 89, 91, 102, 103, 105, 106, 107, 108, 109, 110, 111], "explor": [81, 388, 396], "problem": [81, 89, 91, 95], "out": [81, 186, 318], "modelview": 84, "compact": 84, "action": 84, "ca1": 84, "pyramid": 84, "layer": 84, "nn": 84, "subthreshold": 84, "synapt": [84, 90, 102, 109, 111, 387, 394], "summat": 84, "poirazi": 84, "2003": 84, "interoper": 84, "goal": 84, "summari": 84, "acknowledg": 84, "colormap": 87, "optim": [88, 89, 91, 133, 243, 263, 396], "call": [88, 213, 345], "multipl": [88, 89, 91, 224, 356], "fitter": [88, 89, 91, 224, 356], "realli": 88, "fit": [89, 91, 128, 224, 258, 356], "download": [89, 378], "give": [89, 91, 102], "our": [89, 106, 387], "form": 89, "adjust": [89, 91, 387], "constrain": [89, 91], "restrict": [89, 170, 302, 372], "space": [89, 158, 289], "criteria": 89, "satisfi": 89, "perform": [89, 91, 239], "mrf": [89, 91], "algorithm": [89, 91], "extra": [89, 129, 259], "scheme": [90, 224, 356, 382, 383], "bind": 90, "r": [90, 93], "dissoci": 90, "arc": 90, "gate": 90, "conserv": [90, 149, 247, 280], "electr": 91, "unoptim": 91, "project": [91, 207, 339], "resist": 91, "multiplerunfitt": 91, "redraw": 91, "again": 91, "proxi": 91, "pitfal": 91, "minim": 91, "principl": 91, "dirti": 91, "contamin": 91, "earli": 91, "late": 91, "note": [91, 155, 286, 376, 385], "adapt": [93, 394], "9": [93, 392, 396], "dev": 93, "legaci": 93, "pattern": 93, "invalid": 93, "implicit": 93, "convers": 93, "prototyp": 93, "incorrect": 93, "k": 93, "consid": 93, "overload": 93, "void": 93, "page": 94, "orient": [94, 202, 316, 334, 387], "posit": [94, 373, 387], "layout": [94, 168, 300], "area": 94, "resiz": 94, "content": 94, "postscript": [94, 122, 228, 360], "ascii": [94, 228, 360], "independ": [95, 121, 149, 227, 280, 359], "stream": 95, "solut": [95, 397], "outlin": [95, 112, 113], "train": [96, 97, 102, 107, 395], "group": [98, 119, 396], "subsetdomainiter": 99, "distanc": [99, 373], "metric": 99, "verifi": 100, "govern": 100, "repeat": 100, "until": 100, "vari": [101, 370], "suppli": [102, 103], "short": 102, "uniqu": 102, "integr": [102, 107, 121, 243, 394], "affer": [103, 107], "motoneuron": 103, "anatom": 103, "kind": 104, "attach": 104, "place": 105, "renshaw": 105, "each": [106, 107], "three": 106, "net": 112, "within": 114, "kinet": [114, 115, 149, 224, 247, 280, 356], "under": 117, "maco": [117, 245], "d_lambda": 120, "rule": [120, 236], "flexibl": 121, "power": 121, "advantag": 121, "over": 121, "separ": 121, "pure": 121, "concern": 121, "idiom": 121, "effici": 121, "painless": 121, "tempor": 121, "discret": [121, 149, 247, 280, 372], "conveni": 121, "graphic": 121, "extend": 121, "librari": [121, 372, 375, 376, 388], "enhanc": 121, "customiz": 121, "larg": 121, "base": [121, 143, 274], "support": [121, 243, 245, 385], "avail": 121, "requir": [121, 382], "dress": 122, "public": [122, 202, 251, 252, 334], "latex": 122, "mswindow": 122, "functionfitt": [124, 254], "independentvar": [124, 227, 254, 359], "arg": [124, 254], "yexpr": [124, 254], "praxisfit": [124, 254], "stopatnextquadform": [124, 129, 254, 259], "watchthefit": [124, 254], "roughfit": [124, 129, 254, 259], "argvalu": [124, 254], "currentvaluesasdefault": [124, 129, 254, 259], "fittodata": [124, 254], "readdatafil": [124, 254], "commonfunctionalform": [124, 254], "fitcriterion": [124, 254], "parameterrangelimit": [124, 254], "dataweight": [124, 129, 254, 259], "saverestorefunct": [124, 254], "imped": [125, 131, 224, 255, 261, 356], "impshap": [125, 255], "impx": [126, 256], "logavsx": [126, 224, 256, 356], "impedanceratio": [127, 257], "mulrunfitt": [128, 258], "panel": [128, 228, 258, 360], "runfitt": [129, 259], "readdata": [129, 259], "variabletofit": [129, 259], "parameterstovari": [129, 259], "parameterrang": [129, 259], "changeparmfromlist": [129, 259], "removeparmfromlist": [129, 259], "saverestorefitparam": [129, 259], "numberofdataregion": [129, 259], "anothervariabletofit": [129, 259], "dofit": [129, 259], "singlerunfit": [129, 259], "bequiet": [129, 259], "programmat": [130, 141, 220, 260, 272, 352], "quick": [135, 266], "link": [135, 266], "visual": [135, 266, 372], "kineticbuild": [137, 268], "insert": [138, 224, 269, 356, 392], "pointmanag": [139, 270], "pointgroup": [139, 270], "viewer": [139, 224, 270, 356], "pointprocess": [139, 224, 270, 356], "pointprocessmanag": [139, 270], "pointprocessgroupmanag": [139, 270], "showmechan": [140, 271], "mechtyp": [140, 271], "kschan": [145, 276], "linearmechan": [146, 277], "dynam": [147, 165, 278, 297, 377, 391], "process": [148, 279], "languag": [149, 180, 208, 247, 250, 280, 312, 340], "histori": [149, 280, 382], "rational": [149, 280], "paradigm": [149, 280], "titl": [149, 280], "assign": [149, 247, 280], "breakpoint": [149, 247, 280], "deriv": [149, 247, 280], "net_rec": [149, 247, 280], "watch": [149, 280], "constructor": [149, 247, 280], "destructor": [149, 247, 280], "nonlinear": [149, 190, 247, 280, 322], "compart": [149, 280], "longitudinal_diffus": [149, 280], "function_t": [149, 247, 280], "conduct": [149, 280, 387], "while": [149, 280], "IF": [149, 280], "els": [149, 280, 391], "lag": [149, 280], "extens": [150, 281, 388], "suffix": [150, 247, 281], "rang": [150, 281], "global": [150, 224, 281, 356], "nonspecific_curr": [150, 247, 281], "electrode_curr": [150, 247, 281], "useion": [150, 247, 281], "write": [150, 188, 236, 247, 281, 320], "valenc": [150, 247, 281], "point_process": [150, 247, 281], "bbcorepoint": [150, 281], "threadsaf": [150, 247, 281], "befor": [150, 247, 281], "for_netcon": [150, 247, 281], "protect": [150, 247, 281], "mutexlock": [150, 247, 281], "mutexunlock": [150, 247, 281], "commun": [150, 389], "verbatim": [150, 247, 249, 281], "mechanismtyp": [151, 282], "netcon": [154, 285], "subworld": [155, 286], "transfer": [155, 286], "parallelnetmanag": [156, 287], "obsolet": [157, 176, 185, 188, 203, 230, 288, 308, 317, 320, 335, 362], "stimuli": [157, 288], "domain": [158, 170, 289, 302], "intracellular": [158, 289], "region": [158, 289, 372, 374], "frankenhaus": [158, 289], "For": [158, 289, 391], "extracellular": [158, 289, 378], "protein": [158, 289, 375], "mathemat": [158, 198, 289, 290, 330], "rate": [158, 289, 290, 371], "manipul": [158, 211, 213, 289, 343, 345], "node": [158, 289, 371], "segment": [158, 164, 208, 289, 296, 340, 392], "statetransitionev": [159, 291], "3d": [161, 293], "sectionlist": [162, 294], "sectionref": [163, 295], "dot": [164, 296], "notat": [164, 296], "stack": 164, "default": [164, 228, 296, 360, 373], "dialog": [167, 299], "box": [167, 299], "style": [170, 302], "printwindowmanag": [170, 302], "placement": [170, 302], "pwmanag": [172, 304], "sectionbrows": [173, 305], "symchoos": [174, 306], "texteditor": [175, 307], "valuefieldeditor": [177, 309], "widget": [178, 310], "proc": [181, 313], "func": [181, 313], "obfunc": [181, 313], "debug": [182, 236, 239, 314], "namespac": [182, 314], "relat": [182, 289, 314], "recommend": 184, "plotter": [185, 317], "format": [186, 241, 318], "redirect": [186, 318], "termin": [187, 319], "open": [188, 320], "solv": [190, 247, 322], "common": [191, 323], "math": [191, 323, 371], "guimath": [192, 324], "matrix": [193, 325], "mcell_ran4": [194, 326], "pseudo": [196, 328], "fourier": [197, 329], "mechanismstandard": [199, 331], "sub": [200, 332], "packag": [200, 244, 332], "begintempl": [202, 334], "endtempl": [202, 334], "objectvar": [202, 334], "nullobject": [202, 334], "ptrvector": [205, 337], "predeclar": [206, 338], "util": [207, 339], "prjnrninit": [207, 339], "prjnrncmp": [207, 339], "prjnrnco": [207, 339], "prjnrnci": [207, 339], "prjnrnpr": [207, 339], "ivdialog": [207, 339], "pars": [210, 342], "sscanf": [210, 342], "stringfunct": [211, 343], "identif": [213, 345], "command": [213, 224, 345, 356], "timer": [214, 346], "job": [215, 347], "bbsavest": [216, 348], "cvode": [217, 349], "modeldescriptionissu": [217, 349], "famili": [218, 224, 350, 356], "execcommand": [218, 350], "gathervec": [218, 350], "vectorplai": [218, 350], "vecwrap": [218, 350], "finitializehandl": [220, 352], "runcontrol": [221, 353], "dt": [221, 353], "initrun": [221, 353], "init": [221, 353], "stop": [221, 353], "continuetil": [221, 353], "continuefor": [221, 353], "singlestep": [221, 353], "tstop": [221, 353], "plotsm": [221, 353], "quiet": [221, 353], "realtim": [221, 353], "savest": [222, 354], "loadsess": [224, 356], "loadhoc": [224, 356], "loaddll": [224, 356], "savesess": [224, 356], "workingdir": [224, 356], "recentdir": [224, 356], "quit": [224, 228, 356, 360], "singlecompart": [224, 356], "networkcel": [224, 356], "fromcellbuild": [224, 356], "artificialcel": [224, 356], "networkbuild": [224, 356], "usevariabledt": [224, 356], "localvariabledt": [224, 356], "absolutetoler": [224, 356], "homogen": [224, 356], "spec": [224, 356], "shapenam": [224, 356], "namevalu": [224, 356], "celsiu": [224, 356], "globalra": [224, 356], "archiv": [224, 356], "And": [224, 228, 356, 360], "hardcopi": [224, 356], "family1": [224, 356], "currentaxi": [224, 356], "stateaxi": [224, 356], "shapeplot": [224, 231, 356, 363], "vectormovi": [224, 356], "phaseplan": [224, 356], "grapher": [224, 227, 356, 359], "voltageaxi": [224, 356], "retrievefromfil": [224, 356], "gathervalu": [224, 356], "draw": [224, 356], "ungroup": [224, 356], "groupmanag": [224, 356], "glyph": [225, 357], "eraseal": [227, 359], "indepbegin": [227, 359], "xexpr": [227, 359], "feel": [228, 360], "scene": [228, 241, 360], "view_equal_plot": 228, "zoomout10": [228, 360], "zoomin10": [228, 360], "newview": [228, 360], "zoominout": [228, 360], "roundview": [228, 360], "wholescen": [228, 360], "setview": [228, 360], "scene_equal_view": 228, "objectnam": [228, 360], "browser": [228, 360], "fieldeditor": [228, 360], "button": [228, 360], "valueeditor": [228, 360], "editor": [228, 360], "screenitem": [228, 360], "paperitem": [228, 360], "printtofil": [228, 360], "saveselect": [228, 360], "saveal": [228, 360], "selectprint": [228, 360], "windowtitlesprint": [228, 360], "virtualscreen": [228, 360], "landport": [228, 360], "trai": [228, 360], "crosshair": [228, 360], "plotwhat": [228, 231, 360, 363], "pickvector": [228, 360], "plotrang": [228, 360], "changecolor": [228, 360], "brush": [228, 360], "axistyp": [228, 360], "viewaxi": [228, 360], "newaxi": [228, 360], "viewbox": [228, 360], "keeplin": [228, 360], "familylabel": [228, 360], "eras": [228, 360], "movetext": [228, 231, 360, 363], "changetext": [228, 360], "notif": [229, 361], "plotshap": [231, 232, 363, 364], "rotate3d": [231, 363], "shapestyl": [231, 363], "variablescal": [231, 363], "timeplot": [231, 363], "spaceplot": [231, 363], "rangevarplot": [233, 365], "menuexplor": [235, 367], "pointprocessloc": [235, 367], "shapebrows": [235, 367], "don": 236, "bunch": 236, "onc": 236, "expect": 236, "everyth": 236, "first": [236, 387], "try": 236, "ii": [236, 396], "debugg": 236, "pdb": 236, "coverag": 238, "depend": [238, 241, 243, 244, 247], "simplifi": 238, "workflow": [238, 245], "diagnosi": 239, "segfault": 239, "crash": 239, "nan": 239, "inf": 239, "nhost": 239, "nthread": 239, "gdb": 239, "valgrind": 239, "sanit": 239, "threadsanit": 239, "tsan": 239, "profil": 239, "benchmark": 239, "behind": 241, "subsystem": 243, "wsl": 243, "x86_64": [243, 244], "appl": [243, 244], "m1": [243, 244], "sign": 244, "notar": 244, "docker": 245, "push": 245, "dockerhub": 245, "launch": 245, "consider": 245, "bb5": 245, "publish": 245, "pypi": 245, "via": [245, 316, 387], "azur": 245, "upload": 245, "circleci": 245, "nightli": 245, "pre": 246, "requisit": 246, "environ": [246, 265, 396], "snippet": 247, "TO": 247, "WITH": [247, 382], "nmodlanguag": 248, "julia": 250, "neuron_module_opt": 265, "nrnunit_use_legaci": 265, "sbml": 289, "restor": 289, "sec": 296, "remov": 368, "who": 371, "nodelist": 371, "abrupt": 371, "scalar": 371, "bistabl": 371, "wave": [371, 374], "part": [372, 396, 397], "rxd": [372, 376, 379, 396], "speci": [372, 374], "uniform": 373, "h": [373, 392], "calcium": 374, "concept": [374, 394, 397], "structur": 374, "circadian": 375, "rhythm": 375, "helper": 375, "clariti": 375, "combin": 376, "stimulu": [376, 392], "homeostat": 376, "lack": 376, "thereof": 376, "final": [376, 382, 383], "degrad": 377, "buffer": 377, "calbindin": 377, "d28k": 377, "singl": [378, 396], "voxel": 378, "boundari": 378, "anisotropi": 378, "tissu": 378, "characterist": 378, "ip3": 380, "demo": 380, "threshold": 381, "git": 382, "github": 382, "branch": [382, 397], "tag": 382, "checkout": 382, "stage": 382, "commit": 382, "reset": 382, "merg": 382, "squash": 382, "forward": 382, "rebas": 382, "practic": 382, "pull": 382, "request": 382, "date": 382, "review": 382, "convent": 382, "semant": 382, "pep": 382, "440": 382, "life": [382, 385], "cycl": 382, "alpha": [382, 383], "beta": 382, "candid": 382, "gitlab": 382, "altern": 382, "guidelin": [382, 383], "contribut": [382, 383], "patch": [382, 383], "scm": 384, "softwar": 385, "polici": 385, "eol": 385, "end": 385, "studi": 386, "role": 386, "amplitud": 386, "both": 386, "dendrit": 386, "soma": 386, "ring": [387, 388], "netstim": 387, "serial": 389, "mode": 389, "back": 389, "gather": 389, "cast": 391, "arithmet": 391, "comparison": 391, "choic": 391, "comprehens": 391, "theori": [391, 396], "loop": 391, "dictionari": 391, "modul": [391, 392], "pickl": [391, 392], "psection": 392, "morpholog": 392, "dir": 392, "7": 392, "csv": 392, "json": 392, "cn": [393, 394], "2021": [393, 396, 397], "incf": 394, "2022": 394, "welcom": 394, "neuromorpho": 394, "org": 394, "trigger": 394, "transmiss": 394, "accuraci": 394, "stabil": 394, "speed": 394, "video": 395, "netpyn": 396, "tech": 396, "lectur": [396, 397], "spinal": 396, "cord": 396, "hand": 396, "driven": 396, "multiscal": 396, "virtual": 396, "06": 397, "03": 397, "q": 397, "08": 397, "10": 397, "15": 397, "ad": 397, "17": 397, "22": 397, "24": 397, "29": 397, "07": 397, "01": 397, "13": 397, "discuss": 397, "conclus": 397, "reproduc": 397, "20": 397, "27": 397, "spine": 397}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Bulletin board code walkthroughs": [[13, "bulletin-board-code-walkthroughs"]], "initonerun.py": [[13, "initonerun-py"], [10, "initonerun-py"]], "Description": [[13, "description"], [13, "id1"], [13, "id7"], [10, "description"], [10, "id1"], [10, "id4"], [72, "description"], [72, "id2"]], "Usage": [[13, "usage"], [13, "id2"], [13, "id8"], [10, "usage"], [10, "id2"], [10, "id5"], [280, "usage"], [149, "usage"]], "Source": [[13, "source"], [13, "id3"], [13, "id9"], [10, "source"], [10, "id3"], [10, "id6"]], "Code walkthrough": [[13, "code-walkthrough"], [13, "id4"], [13, "id10"]], "Simulation parameters": [[13, "simulation-parameters"], [13, "id5"]], "Model specification": [[13, "model-specification"]], "Instrumentation": [[13, "instrumentation"], [13, "id6"], [239, "instrumentation"], [386, "Instrumentation"]], "Simulation control and reporting of results": [[13, "simulation-control-and-reporting-of-results"]], "initbatser.py": [[13, "initbatser-py"], [10, "initbatser-py"]], "Simulation control": [[13, "simulation-control"], [13, "id11"]], "Reporting of results": [[13, "reporting-of-results"]], "initbatpar.py": [[13, "initbatpar-py"], [10, "initbatpar-py"]], "ParallelContext": [[13, "parallelcontext"], [286, "parallelcontext"], [155, "parallelcontext"]], "Reaction-Diffusion Exercises": [[41, "reaction-diffusion-exercises"]], "Exercise 1": [[41, "exercise-1"], [38, "exercise-1"], [39, "exercise-1"]], "Exercise 2": [[41, "exercise-2"], [38, "exercise-2"], [39, "exercise-2"]], "Exercise 3": [[41, "exercise-3"], [38, "exercise-3"], [39, "exercise-3"]], "Exercise 4": [[41, "exercise-4"], [38, "exercise-4"], [39, "exercise-4"]], "References": [[41, "references"], [84, "references"], [121, "references"]], "Hopfield Brody synchronization (sync) model": [[29, "hopfield-brody-synchronization-sync-model"]], "Standard intfire implementation (eg IntFire1 from intfire1.mod))": [[29, "standard-intfire-implementation-eg-intfire1-from-intfire1-mod"]], "IntIbFire in sync model": [[29, "intibfire-in-sync-model"]], "Cell template": [[29, "cell-template"]], "Network": [[29, "network"]], "How it works": [[29, "how-it-works"]], "Exercises to gain familiarity with the model": [[29, "exercises-to-gain-familiarity-with-the-model"]], "Increase to 100 neurons and run.": [[29, "increase-to-100-neurons-and-run"]], "Narrow the difference between fast and slow cells so as to make more of them fire.": [[29, "narrow-the-difference-between-fast-and-slow-cells-so-as-to-make-more-of-them-fire"]], "Reduce the inhibition and demonstrate that synchrony worsens.": [[29, "reduce-the-inhibition-and-demonstrate-that-synchrony-worsens"]], "Increase cell time constant.": [[29, "increase-cell-time-constant"]], "Beyond the GUI \u2013 Saving and displaying spikes": [[29, "beyond-the-gui-saving-and-displaying-spikes"]], "Graph spike times \u2013 should look like SpikePlot1 graph": [[29, "graph-spike-times-should-look-like-spikeplot1-graph"]], "Synchronization measures": [[29, "synchronization-measures"]], "Procedure interval2() in ocomm.hoc sets cell periods randomly": [[29, "procedure-interval2-in-ocomm-hoc-sets-cell-periods-randomly"]], "Rewiring the network": [[29, "rewiring-the-network"]], "Exercises": [[29, "exercises"], [28, "exercises"], [28, "id5"], [28, "id6"], [28, "id7"], [28, "id8"], [28, "id9"], [31, "exercises"], [25, "exercises"], [30, "exercises"], [396, "exercises"], [396, "id2"], [396, "id6"], [47, "exercises"], [45, "exercises"]], "Assessing connectivity": [[29, "assessing-connectivity"]], "Graphing connectivity": [[29, "graphing-connectivity"]], "Animate": [[29, "animate"]], "Introduction to the Network Builder": [[32, "introduction-to-the-network-builder"]], "Model": [[32, "model"], [36, "model"], [36, "id2"], [37, "model"], [33, "model"], [44, "model"]], "Simulation": [[32, "simulation"], [32, "id1"], [28, "simulation"], [31, "simulation"], [36, "simulation"], [36, "id3"], [37, "simulation"], [37, "id2"], [30, "simulation"], [33, "simulation"], [44, "simulation"], [45, "simulation"]], "Define artificial cell types": [[32, "define-artificial-cell-types"]], "Cell creation": [[32, "cell-creation"], [37, "cell-creation"]], "Connections": [[32, "connections"], [37, "connections"]], "Other Simulation Exercises": [[32, "other-simulation-exercises"], [37, "other-simulation-exercises"]], "The automatically generated hoc code": [[32, "the-automatically-generated-hoc-code"], [37, "the-automatically-generated-hoc-code"]], "HOC Exercises": [[28, "hoc-exercises"]], "Anything not explicitly declared is assumed to be a number": [[28, "anything-not-explicitly-declared-is-assumed-to-be-a-number"], [28, "id2"]], "Do you have anything to declare?: objects and strings": [[28, "do-you-have-anything-to-declare-objects-and-strings"], [28, "id3"]], "Operators and numerical functions": [[28, "operators-and-numerical-functions"], [28, "id4"]], "Data types: numbers, strings, and objects": [[28, "data-types-numbers-strings-and-objects"]], "Objects include vectors, graphs, lists, \u2026": [[28, "objects-include-vectors-graphs-lists"]], "After creating object reference, can use it to point a new or old object": [[28, "after-creating-object-reference-can-use-it-to-point-a-new-or-old-object"]], "Can create an array of objrefs": [[28, "can-create-an-array-of-objrefs"]], "Strings": [[28, "strings"], [344, "strings"], [212, "strings"]], "Blocks of code": [[28, "blocks-of-code"]], "Conditionals": [[28, "conditionals"]], "Procedures and functions": [[28, "procedures-and-functions"]], "Built-in object types: graphs, vectors, lists, files": [[28, "built-in-object-types-graphs-vectors-lists-files"]], "Graph": [[28, "graph"], [224, "graph"], [228, "graph"], [226, "graph"], [360, "graph"], [356, "graph"], [358, "graph"]], "Vector": [[28, "vector"], [329, "vector"], [224, "vector"], [197, "vector"], [356, "vector"]], "File": [[28, "file"], [224, "file"], [356, "file"]], "List": [[28, "list"], [301, "list"], [169, "list"]], "Recording the simulation": [[28, "recording-the-simulation"]], "Graphing and analyzing data": [[28, "graphing-and-analyzing-data"]], "Roll your own GUI": [[28, "roll-your-own-gui"]], "Exercise": [[28, "exercise"], [122, "exercise"], [386, "Exercise"]], "Introduction to the GUI": [[31, "introduction-to-the-gui"]], "Physical System": [[31, "physical-system"], [43, "physical-system"], [36, "physical-system"], [36, "id1"], [30, "physical-system"], [33, "physical-system"], [24, "physical-system"], [44, "physical-system"], [45, "physical-system"]], "Conceptual Model": [[31, "conceptual-model"], [43, "conceptual-model"], [30, "conceptual-model"], [24, "conceptual-model"], [69, "conceptual-model"], [70, "conceptual-model"], [45, "conceptual-model"]], "Computational implementation of the conceptual model": [[31, "computational-implementation-of-the-conceptual-model"], [30, "computational-implementation-of-the-conceptual-model"], [24, "computational-implementation-of-the-conceptual-model"], [45, "computational-implementation-of-the-conceptual-model"]], "Using the computational model": [[31, "using-the-computational-model"], [30, "using-the-computational-model"], [24, "using-the-computational-model"]], "Running a simulation": [[8, "running-a-simulation"]], "Building MOD files": [[8, "building-mod-files"]], "Enabling CoreNEURON": [[8, "enabling-coreneuron"]], "Batch runs with bulletin board parallelization": [[11, "batch-runs-with-bulletin-board-parallelization"], [10, "batch-runs-with-bulletin-board-parallelization"]], "Physical system": [[11, "physical-system"], [10, "physical-system"]], "Computational implementation": [[11, "computational-implementation"], [10, "computational-implementation"]], "The model cell": [[11, "the-model-cell"], [10, "the-model-cell"]], "Code development strategy": [[11, "code-development-strategy"], [10, "code-development-strategy"]], "initonerun.hoc": [[11, "initonerun-hoc"]], "initbatser.hoc": [[11, "initbatser-hoc"]], "initbatpar.hoc": [[11, "initbatpar-hoc"]], "Things to do": [[11, "things-to-do"], [10, "things-to-do"]], "NEURON scripting exercises": [[38, "neuron-scripting-exercises"]], "Exercise 5": [[38, "exercise-5"], [39, "exercise-5"]], "Exercise 6": [[38, "exercise-6"], [39, "exercise-6"]], "halfgap.mod": [[38, "halfgap-mod"]], "CellBuilder Overview and Hints": [[14, "cellbuilder-overview-and-hints"]], "Starting the CellBuilder": [[14, "starting-the-cellbuilder"]], "Using the CellBuilder": [[14, "using-the-cellbuilder"], [45, "using-the-cellbuilder"]], "Saving your work": [[14, "saving-your-work"]], "Checking what you saved": [[14, "checking-what-you-saved"]], "Questions and answers about sessions and ses files": [[14, "questions-and-answers-about-sessions-and-ses-files"]], "Managing Models on the Fly": [[34, "managing-models-on-the-fly"]], "Introduction": [[3, "introduction"], [396, "introduction"], [76, "introduction"], [84, "introduction"], [280, "introduction"], [149, "introduction"]], "General options": [[3, "general-options"]], "CMAKE_INSTALL_PREFIX:PATH=<path-where-nrn-should-be-installed>": [[3, "cmake-install-prefix-path-path-where-nrn-should-be-installed"]], "CMAKE_BUILD_TYPE:STRING=RelWithDebInfo": [[3, "cmake-build-type-string-relwithdebinfo"]], "Ninja": [[3, "ninja"]], "InterViews options": [[3, "interviews-options"]], "NRN_ENABLE_INTERVIEWS:BOOL=ON": [[3, "nrn-enable-interviews-bool-on"]], "IV_DIR:PATH=<path-to-external-installation-of-interviews>": [[3, "iv-dir-path-path-to-external-installation-of-interviews"]], "IV_ENABLE_SHARED:BOOL=OFF": [[3, "iv-enable-shared-bool-off"]], "IV_ENABLE_X11_DYNAMIC:BOOL=OFF": [[3, "iv-enable-x11-dynamic-bool-off"]], "IV_ENABLE_X11_DYNAMIC_MAKE_HEADERS:BOOL=OFF": [[3, "iv-enable-x11-dynamic-make-headers-bool-off"]], "MPI options:": [[3, "mpi-options"]], "NRN_ENABLE_MPI:BOOL=ON": [[3, "nrn-enable-mpi-bool-on"]], "NRN_ENABLE_MPI_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-mpi-dynamic-bool-off"]], "NRN_MPI_DYNAMIC:STRING=": [[3, "nrn-mpi-dynamic-string"]], "NRN_ENABLE_MUSIC:BOOL=OFF": [[3, "nrn-enable-music-bool-off"]], "Python options:": [[3, "python-options"]], "NRN_ENABLE_PYTHON:BOOL=ON": [[3, "nrn-enable-python-bool-on"]], "NRN_ENABLE_PYTHON_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-python-dynamic-bool-off"]], "NRN_PYTHON_DYNAMIC:STRING=": [[3, "nrn-python-dynamic-string"]], "PYTHON_EXECUTABLE:PATH=": [[3, "python-executable-path"]], "NRN_ENABLE_MODULE_INSTALL:BOOL=ON": [[3, "nrn-enable-module-install-bool-on"]], "NRN_ENABLE_RX3D:BOOL=ON": [[3, "nrn-enable-rx3d-bool-on"]], "NRN_RX3D_OPT_LEVEL:STRING=0": [[3, "nrn-rx3d-opt-level-string-0"]], "CoreNEURON options:": [[3, "coreneuron-options"]], "NRN_ENABLE_CORENEURON:BOOL=OFF": [[3, "nrn-enable-coreneuron-bool-off"]], "NRN_ENABLE_MOD_COMPATIBILITY:BOOL=OFF": [[3, "nrn-enable-mod-compatibility-bool-off"]], "Other CoreNEURON options:": [[3, "other-coreneuron-options"]], "Occasionally useful advanced options:": [[3, "occasionally-useful-advanced-options"]], "CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc": [[3, "cmake-c-compiler-filepath-usr-bin-cc"]], "CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++": [[3, "cmake-cxx-compiler-filepath-usr-bin-c"]], "NRN_ENABLE_DOCS:BOOL=OFF": [[3, "nrn-enable-docs-bool-off"]], "NRN_EXTRA_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-cxx-flags-string"]], "NRN_EXTRA_MECH_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-mech-cxx-flags-string"]], "NRN_NMODL_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-nmodl-cxx-flags-string"]], "Readline_ROOT_DIR:PATH=/usr": [[3, "readline-root-dir-path-usr"]], "NRN_ENABLE_TESTS:BOOL=OFF": [[3, "nrn-enable-tests-bool-off"]], "NRN_ENABLE_COVERAGE:BOOL=OFF": [[3, "nrn-enable-coverage-bool-off"]], "NRN_COVERAGE_FILES:STRING=": [[3, "nrn-coverage-files-string"]], "NRN_SANITIZERS:STRING=": [[3, "nrn-sanitizers-string"]], "Miscellaneous Rarely used options specific to NEURON:": [[3, "miscellaneous-rarely-used-options-specific-to-neuron"]], "NRN_ENABLE_DISCRETE_EVENT_OBSERVER:BOOL=ON": [[3, "nrn-enable-discrete-event-observer-bool-on"]], "NRN_DYNAMIC_UNITS_USE_LEGACY:BOOL=OFF": [[3, "nrn-dynamic-units-use-legacy-bool-off"]], "NRN_ENABLE_MECH_DLL_STYLE:BOOL=ON": [[3, "nrn-enable-mech-dll-style-bool-on"]], "NRN_ENABLE_SHARED:BOOL=ON": [[3, "nrn-enable-shared-bool-on"]], "NRN_ENABLE_THREADS:BOOL=ON": [[3, "nrn-enable-threads-bool-on"]], "NRN_USE_REL_RPATH=OFF": [[3, "nrn-use-rel-rpath-off"]], "NRN_ENABLE_BACKTRACE:BOOL=OFF": [[3, "nrn-enable-backtrace-bool-off"]], "Inhomogeneous Channel Distribution": [[43, "inhomogeneous-channel-distribution"]], "Computational Model": [[43, "computational-model"], [69, "computational-model"], [70, "computational-model"]], "The exercise": [[43, "the-exercise"]], "NEURON 8.2": [[1, "neuron-8-2"]], "8.2.2": [[1, "id1"]], "What\u2019s New": [[1, "what-s-new"], [1, "id3"], [1, "id7"], [1, "id11"], [1, "id19"], [1, "id23"]], "Bug Fixes": [[1, "bug-fixes"], [1, "id4"], [1, "id8"], [1, "id13"], [1, "id17"], [1, "id20"], [1, "id26"]], "Improvements /  Other Changes": [[1, "improvements-other-changes"], [1, "id5"], [1, "id9"], [1, "id21"], [1, "id27"]], "8.2.1": [[1, "id2"]], "8.2.0": [[1, "id6"]], "Breaking Changes": [[1, "breaking-changes"], [1, "id12"], [1, "id24"]], "Deprecations & future changes": [[1, "deprecations-future-changes"]], "Upgrade Steps": [[1, "upgrade-steps"], [1, "id15"], [1, "id28"]], "NEURON 8.1": [[1, "neuron-8-1"]], "8.1.0": [[1, "id10"]], "Deprecations": [[1, "deprecations"], [1, "id25"]], "Improvements / Other Changes": [[1, "id14"]], "NEURON 8.0": [[1, "neuron-8-0"]], "8.0.2": [[1, "id16"]], "8.0.1": [[1, "id18"]], "8.0.0": [[1, "id22"]], "Contributors": [[1, "contributors"]], "Feedback / Help": [[1, "feedback-help"]], "CoreNEURON Compatibility": [[4, "coreneuron-compatibility"]], "Unsupported Features": [[4, "unsupported-features"]], "MOD File Compatibility": [[4, "mod-file-compatibility"]], "Thread Safe MOD Files": [[4, "thread-safe-mod-files"]], "TABLE Usage With GPU Execution": [[4, "table-usage-with-gpu-execution"]], "NEURON Only MOD Files": [[4, "neuron-only-mod-files"]], "Explicit ION Variables Update": [[4, "explicit-ion-variables-update"]], "Random Number Generators: Random123 vs MCellRan4": [[4, "random-number-generators-random123-vs-mcellran4"]], "Memory Management for POINTER Variables": [[4, "memory-management-for-pointer-variables"]], "Arguments to bbcore_read and bbcore_write.": [[4, "id1"]], "Have a question?": [[4, "have-a-question"]], "CoreNEURON": [[6, "coreneuron"]], "Saving Windows": [[42, "saving-windows"]], "What is a session?": [[42, "what-is-a-session"], [98, "what-is-a-session"], [119, "what-is-a-session"]], "When (and how) to save all windows to a ses file": [[42, "when-and-how-to-save-all-windows-to-a-ses-file"]], "When (and how) to save selected windows": [[42, "when-and-how-to-save-selected-windows"]], "The Print & File Window Manager (PFWM)": [[42, "the-print-file-window-manager-pfwm"]], "What\u2019s in a ses file": [[42, "what-s-in-a-ses-file"], [98, "what-s-in-a-ses-file"], [119, "what-s-in-a-ses-file"]], "What can go wrong, and how to fix it": [[42, "what-can-go-wrong-and-how-to-fix-it"], [98, "what-can-go-wrong-and-how-to-fix-it"], [119, "what-can-go-wrong-and-how-to-fix-it"]], "Artificial Cells in NEURON": [[9, "artificial-cells-in-neuron"]], "Quality Issues with Morphometric Data": [[40, "quality-issues-with-morphometric-data"]], "Important things to keep in mind": [[40, "important-things-to-keep-in-mind"]], "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder": [[12, "building-and-labeling-a-two-electrode-voltage-clamp-with-the-linear-circuit-builder"]], "Electrotonic Analysis with NEURON": [[25, "electrotonic-analysis-with-neuron"]], "What\u2019s all this, then?": [[25, "what-s-all-this-then"]], "The Frequency Tool": [[25, "the-frequency-tool"]], "The Path Tool": [[25, "the-path-tool"]], "The log(A) vs x tool": [[25, "the-log-a-vs-x-tool"]], "The Shape Tool": [[25, "the-shape-tool"]], "Parallel Computing with MPI": [[35, "parallel-computing-with-mpi"]], "Getting Started": [[35, "getting-started"]], "MSWIN": [[35, "mswin"]], "Mac OS X and Linux": [[35, "mac-os-x-and-linux"]], "Going Further": [[35, "going-further"]], "NEURON Documentation": [[0, "neuron-documentation"]], "Online": [[0, "online"]], "Local build": [[0, "local-build"]], "Setup": [[0, "setup"]], "Building the documentation": [[0, "building-the-documentation"]], "Faster Local Iterations": [[0, "faster-local-iterations"]], "ReadTheDocs setup": [[0, "readthedocs-setup"]], "Config file": [[0, "config-file"]], "Documentation not handled by RTD": [[0, "documentation-not-handled-by-rtd"]], "Leveraging conf.py": [[0, "leveraging-conf-py"]], "Notebooks execution with neuron wheels": [[0, "notebooks-execution-with-neuron-wheels"]], "New release on RTD": [[0, "new-release-on-rtd"]], "Examples": [[5, "examples"], [72, "examples"], [339, "examples"], [207, "examples"], [379, null], [371, "Examples"]], "CMake Build Options": [[2, "cmake-build-options"]], "Multithreaded paralellization": [[36, "multithreaded-paralellization"]], "Network ready cells from the CellBuilder": [[37, "network-ready-cells-from-the-cellbuilder"]], "Ball-Stick cell model": [[37, "ball-stick-cell-model"]], "Ball-Stick cell model with synapses": [[37, "ball-stick-cell-model-with-synapses"]], "Stimulators": [[37, "stimulators"]], "Select the source cell": [[37, "select-the-source-cell"]], "Select the target cell": [[37, "select-the-target-cell"]], "Select the synapse on the target cell": [[37, "select-the-synapse-on-the-target-cell"]], "Numerical Methods Exercises": [[39, "numerical-methods-exercises"]], "Interactive Modeling": [[30, "interactive-modeling"]], "Hodgkin-Huxley cable equations": [[30, "hodgkin-huxley-cable-equations"]], "Introduction to the Linear Circuit Builder": [[33, "introduction-to-the-linear-circuit-builder"]], "Custom Initialization": [[24, "custom-initialization"]], "Getting started": [[24, "getting-started"], [45, "getting-started"], [378, "Getting-started"]], "Exercise: initializing to steady state": [[24, "exercise-initializing-to-steady-state"]], "\u201cSpecial credit\u201d Exercise": [[24, "special-credit-exercise"]], "Getting CoreNEURON": [[7, "getting-coreneuron"]], "Installing with pip": [[7, "installing-with-pip"]], "Installing from source": [[7, "installing-from-source"]], "Compiler Selection": [[7, "compiler-selection"]], "Step-by-step instructions": [[7, "step-by-step-instructions"]], "NEURON Course Exercises": [[26, "neuron-course-exercises"]], "Overview of the Tasks": [[27, "overview-of-the-tasks"]], "Details": [[27, "details"]], "NEURON 2021 Online Course": [[397, "neuron-2021-online-course"]], "Basic Concepts and GUI": [[397, "basic-concepts-and-gui"]], "Lecture 2021-06-03": [[397, "lecture-2021-06-03"]], "Q & A 2021-06-08": [[397, "q-a-2021-06-08"]], "Branched cells": [[397, "branched-cells"]], "Lecture 2021-06-10": [[397, "lecture-2021-06-10"]], "Q & A part 1 2021-06-15": [[397, "q-a-part-1-2021-06-15"]], "Q & A part 2 2021-06-15": [[397, "q-a-part-2-2021-06-15"]], "Adding ion channels": [[397, "adding-ion-channels"]], "Lecture 2021-06-17": [[397, "lecture-2021-06-17"]], "Q & A 2021-06-22": [[397, "q-a-2021-06-22"]], "Python scripting": [[397, "python-scripting"]], "2021-06-24": [[397, "id1"]], "2021-06-29": [[397, "id2"]], "2021-07-01": [[397, "id3"]], "Scripting and Morphologies 2021-07-06": [[397, "scripting-and-morphologies-2021-07-06"]], "Networks and numerical methods": [[397, "networks-and-numerical-methods"]], "2021-07-08": [[397, "id4"]], "Parallel NEURON simulations 2021-07-13": [[397, "parallel-neuron-simulations-2021-07-13"]], "Network exercise solutions and discussion 2021-07-15": [[397, "network-exercise-solutions-and-discussion-2021-07-15"]], "Parallel simulation conclusion, reproducible randomness, more numerical methods 2021-07-20": [[397, "parallel-simulation-conclusion-reproducible-randomness-more-numerical-methods-2021-07-20"]], "ModelDB exercises 2021-07-27": [[397, "modeldb-exercises-2021-07-27"]], "Scaling, spines, and reading HOC 2021-07-29": [[397, "scaling-spines-and-reading-hoc-2021-07-29"]], "Building GUI interfaces, Initialization, and Circuits 2021-08-03": [[397, "building-gui-interfaces-initialization-and-circuits-2021-08-03"]], "NetPyNE 2021 Online Course": [[396, "netpyne-2021-online-course"]], "Course introduction": [[396, "course-introduction"]], "Single neuron theory I": [[396, "single-neuron-theory-i"]], "General tech basics": [[396, "general-tech-basics"]], "NEURON basics": [[396, "neuron-basics"]], "Lecture": [[396, "lecture"], [396, "id1"], [396, "id5"], [396, "id7"]], "Group 1": [[396, "group-1"], [396, "id3"]], "Group 2": [[396, "group-2"], [396, "id4"]], "Single neuron theory II": [[396, "single-neuron-theory-ii"]], "NEURON RxD": [[396, "neuron-rxd"]], "Network and synapse theory": [[396, "network-and-synapse-theory"]], "Networks in NEURON exercises": [[396, "networks-in-neuron-exercises"]], "NetPyNE GUI": [[396, "netpyne-gui"]], "Tutorials 1 and 2: Spinal cord": [[396, "tutorials-1-and-2-spinal-cord"]], "Tutorial 3": [[396, "tutorial-3"]], "Tutorial 2: spinal cord": [[396, "tutorial-2-spinal-cord"]], "Tutorials 3-5": [[396, "tutorials-3-5"]], "Tutorials 6 and 9": [[396, "tutorials-6-and-9"]], "NetPyNE analysis and plotting": [[396, "netpyne-analysis-and-plotting"]], "NetPyNE cell imports": [[396, "netpyne-cell-imports"]], "Hands-on": [[396, "hands-on"]], "Building data driven multiscale models": [[396, "building-data-driven-multiscale-models"]], "Parameter exploration and optimization": [[396, "parameter-exploration-and-optimization"]], "Part 1": [[396, "part-1"]], "Part 2": [[396, "part-2"]], "NetPyNE and RxD": [[396, "netpyne-and-rxd"]], "NetPyNE hands on batches": [[396, "netpyne-hands-on-batches"]], "NetPyNE virtual environments on mac and linux": [[396, "netpyne-virtual-environments-on-mac-and-linux"]], "Training videos": [[395, "training-videos"]], "Using the Import3D GUI": [[81, "using-the-import3d-gui"]], "Overview of the Import3D tool": [[81, "overview-of-the-import3d-tool"]], "Reading a morphometric data file and converting it to a NEURON model": [[81, "reading-a-morphometric-data-file-and-converting-it-to-a-neuron-model"]], "We need an Import3D tool.": [[81, "we-need-an-import3d-tool"]], "We need to choose a file to read.": [[81, "we-need-to-choose-a-file-to-read"]], "Let\u2019s see what it looks like.": [[81, "let-s-see-what-it-looks-like"]], "Exporting the model.": [[81, "exporting-the-model"]], "Exploring morphometric data and fixing problems": [[81, "exploring-morphometric-data-and-fixing-problems"]], "Zooming in and out": [[81, "zooming-in-and-out"]], "Testing GPU functionality": [[53, "testing-gpu-functionality"]], "Accessing GPU resources": [[53, "accessing-gpu-resources"]], "Running NEURON tests": [[53, "running-neuron-tests"]], "Running tests manually": [[53, "running-tests-manually"]], "C/C++ API": [[57, "c-c-api"]], "NMODL\u2019s built-in functions": [[86, "nmodl-s-built-in-functions"]], "Guides": [[82, "guides"]], "How-Do-I Guide": [[54, "how-do-i-guide"]], "Working with Object and PyObject": [[54, "working-with-object-and-pyobject"]], "To check if a NEURON object is wrapping a PyObject": [[54, "to-check-if-a-neuron-object-is-wrapping-a-pyobject"]], "To check if a PyObject is wrapping a NEURON object": [[54, "to-check-if-a-pyobject-is-wrapping-a-neuron-object"]], "To encapsulate a NEURON Object in a PyObject": [[54, "to-encapsulate-a-neuron-object-in-a-pyobject"]], "To encapsule a PyObject in a NEURON Object": [[54, "to-encapsule-a-pyobject-in-a-neuron-object"]], "To check if a PyObject is a number": [[54, "to-check-if-a-pyobject-is-a-number"]], "To reference a NEURON Object": [[54, "to-reference-a-neuron-object"]], "To dereference a NEURON Object": [[54, "to-dereference-a-neuron-object"]], "Arguments": [[54, "arguments"], [313, "arguments"], [181, "arguments"]], "Check for the existence of an argument": [[54, "check-for-the-existence-of-an-argument"]], "Check the type of an argument": [[54, "check-the-type-of-an-argument"]], "Get the value of an argument": [[54, "get-the-value-of-an-argument"]], "Classes": [[54, "classes"], [391, "Classes"]], "Declaring classes": [[54, "declaring-classes"]], "Object types": [[54, "object-types"]], "HocCommand objects": [[54, "hoccommand-objects"]], "Miscellaneous tips": [[54, "miscellaneous-tips"]], "Raising a NEURON error": [[54, "raising-a-neuron-error"]], "Checking if the name of an internal symbol": [[54, "checking-if-the-name-of-an-internal-symbol"]], "State and parameter discontinuities": [[44, "state-and-parameter-discontinuities"]], "Fixing funny axes": [[73, "fixing-funny-axes"]], "Creating a stylized (\u201cstick-figure\u201d) model cell": [[61, "creating-a-stylized-stick-figure-model-cell"]], "Step 1. Bring up a CellBuilder": [[61, "step-1-bring-up-a-cellbuilder"]], "Step 2. Specify topology": [[61, "step-2-specify-topology"]], "Step 3. Specify subsets": [[61, "step-3-specify-subsets"]], "Step 4. Specify geometry": [[61, "step-4-specify-geometry"]], "Set up a strategy": [[61, "set-up-a-strategy"], [61, "id1"]], "Execute the strategy": [[61, "execute-the-strategy"], [61, "id2"]], "Step 5. Specify biophysics": [[61, "step-5-specify-biophysics"]], "Step 6. Use the model specification": [[61, "step-6-use-the-model-specification"]], "Using \u201cContinuous Create\u201d": [[61, "using-continuous-create"]], "Modular programming and reusable code": [[61, "modular-programming-and-reusable-code"]], "Exporting hoc code vs. saving a cell type": [[61, "exporting-hoc-code-vs-saving-a-cell-type"]], "Always save your configured CellBuilder to a session file": [[61, "always-save-your-configured-cellbuilder-to-a-session-file"]], "How to get started with NEURON": [[77, "how-to-get-started-with-neuron"], [78, "how-to-get-started-with-neuron"]], "Installation": [[77, "installation"], [237, "installation"], [242, "installation"], [208, "installation"]], "Forum": [[77, "forum"]], "Basic NEURON Usage": [[77, "basic-neuron-usage"]], "Using NMODL to add new mechanisms to NEURON": [[77, "using-nmodl-to-add-new-mechanisms-to-neuron"]], "Network Builder tutorials": [[85, "network-builder-tutorials"]], "Using the Network Builder": [[85, "using-the-network-builder"]], "Using ModelDB with NEURON": [[46, "using-modeldb-with-neuron"]], "Example: Moore et al. 1983 modeldb.yale.edu/9852": [[46, "example-moore-et-al-1983-modeldb-yale-edu-9852"]], "1. What physical system is being represented, and for what purpose?": [[46, "what-physical-system-is-being-represented-and-for-what-purpose"], [46, "id2"]], "2. What is the representation of the physical system, and how was it implemented?": [[46, "what-is-the-representation-of-the-physical-system-and-how-was-it-implemented"], [46, "id4"]], "Using Python to Examine What\u2019s in the Model": [[46, "using-python-to-examine-what-s-in-the-model"]], "Using Model View to Discover What\u2019s in a Model": [[46, "using-model-view-to-discover-what-s-in-a-model"]], "Analyzing the Underlying Code": [[46, "analyzing-the-underlying-code"]], "3. What is the user interface, how was it implemented, and how do you use it?": [[46, "what-is-the-user-interface-how-was-it-implemented-and-how-do-you-use-it"], [46, "id5"]], "Another example: Mainen and Sejnowski 1996 modeldb.yale.edu/2488": [[46, "another-example-mainen-and-sejnowski-1996-modeldb-yale-edu-2488"]], "4. Reuse one of their cells in a model of your own design": [[46, "reuse-one-of-their-cells-in-a-model-of-your-own-design"]], "Using the Cell Builder GUI": [[60, "using-the-cell-builder-gui"]], "The tutorials:": [[60, null], [88, null]], "Example of a Hybrid Network": [[69, "example-of-a-hybrid-network"]], "Hoc": [[76, "hoc"]], "The interpreter in $NEURONHOME/bin/$CPU": [[76, "the-interpreter-in-neuronhome-bin-cpu"]], "Constructing programs that contain the interepreter": [[76, "constructing-programs-that-contain-the-interepreter"]], "The stand-alone interpreter": [[76, "the-stand-alone-interpreter"]], "Starting the interpreter": [[76, "starting-the-interpreter"]], "Error handling": [[76, "error-handling"], [289, "error-handling"], [158, "error-handling"]], "Syntax": [[76, "syntax"], [72, "syntax"], [72, "id1"]], "Names": [[76, "names"]], "Keywords": [[76, "keywords"]], "Names introduced by nrnoc": [[76, "names-introduced-by-nrnoc"]], "Variables": [[76, "variables"]], "Expressions": [[76, "expressions"], [313, "expressions"], [181, "expressions"]], "Statements": [[76, "statements"], [313, "statements"], [181, "statements"]], "Control Flow": [[76, "control-flow"]], "Functions and Procedures": [[76, "functions-and-procedures"]], "Input and Output": [[76, "input-and-output"], [315, "input-and-output"], [183, "input-and-output"]], "Editing": [[76, "editing"]], "See Also": [[76, "see-also"]], "Biology Modeling FAQ": [[59, "biology-modeling-faq"]], "How do I work with neuron morphologies?": [[59, "how-do-i-work-with-neuron-morphologies"]], "How do I simulate a current clamp pulse experiment?": [[59, "how-do-i-simulate-a-current-clamp-pulse-experiment"]], "How do I simulate a current clamp with non-pulse behavior?": [[59, "how-do-i-simulate-a-current-clamp-with-non-pulse-behavior"]], "How do I make cytosolic concentrations change in response to ion channel activity?": [[59, "how-do-i-make-cytosolic-concentrations-change-in-response-to-ion-channel-activity"]], "How do I make cytosolic concentrations diffuse and respond to ion channel activity?": [[59, "how-do-i-make-cytosolic-concentrations-diffuse-and-respond-to-ion-channel-activity"]], "How to plot variables that belong to biophysical cell models in a network": [[75, "how-to-plot-variables-that-belong-to-biophysical-cell-models-in-a-network"]], "Using Plot what? to find names": [[75, "using-plot-what-to-find-names"]], "1. Find the proper cell class": [[75, "find-the-proper-cell-class"]], "2. Find the proper instance of that class": [[75, "find-the-proper-instance-of-that-class"]], "3. Find the proper section": [[75, "find-the-proper-section"]], "4. Find the proper variable": [[75, "find-the-proper-variable"]], "What\u2019s going on": [[75, "what-s-going-on"]], "Using NMODL files": [[48, "using-nmodl-files"]], "Step 0:": [[48, "step-0"]], "Step 1:": [[48, "step-1"]], "Step 2:": [[48, "step-2"]], "Step 3:": [[48, "step-3"]], "bokeh 3 seems to break docs notebooks": [[56, "bokeh-3-seems-to-break-docs-notebooks"]], "do not check import of next line": [[56, "do-not-check-import-of-next-line"]], "How to translate the view": [[80, "how-to-translate-the-view"]], "Using the Neuroscience Gateway (NSG) portal": [[49, "using-the-neuroscience-gateway-nsg-portal"]], "On your own computer:": [[49, "on-your-own-computer"]], "Using NSG:": [[49, "using-nsg"]], "NEURON Development topics": [[55, "neuron-development-topics"]], "FIinitializeHandler": [[72, "fiinitializehandler"]], "How to delete v(.5) from the graph": [[74, "how-to-delete-v-5-from-the-graph"]], "Working with Shape Plots": [[50, "working-with-shape-plots"]], "Rotation": [[50, "rotation"]], "Other operations": [[50, "other-operations"]], "When you\u2019re done": [[50, "when-you-re-done"]], "Example of Generating a Movie": [[58, "example-of-generating-a-movie"]], "Install NEURON, update matplotlib": [[58, "install-neuron-update-matplotlib"]], "Load the morphology definition": [[58, "load-the-morphology-definition"]], "Setup the model": [[58, "setup-the-model"], [376, "Setup-the-model"], [372, "Setup-the-model"]], "Simulation control and image saving": [[58, "simulation-control-and-image-saving"]], "Put it all together into an MP4": [[58, "put-it-all-together-into-an-mp4"]], "Let\u2019s look at the MP4": [[58, "let-s-look-at-the-mp4"]], "Working with Morphometric Data": [[47, "working-with-morphometric-data"]], "A. Get an Import3D tool.": [[47, "a-get-an-import3d-tool"]], "B. Choose a file to read.": [[47, "b-choose-a-file-to-read"]], "C. Let\u2019s see what it looks like.": [[47, "c-let-s-see-what-it-looks-like"]], "D. Exporting the model.": [[47, "d-exporting-the-model"]], "E. Take a new look at the shape in the Import3D tool.": [[47, "e-take-a-new-look-at-the-shape-in-the-import3d-tool"]], "F. Zooming in": [[47, "f-zooming-in"]], "A \u201clitmus test\u201d for models with complex architecture": [[47, "a-litmus-test-for-models-with-complex-architecture"]], "Quantitative tests of anatomy": [[47, "quantitative-tests-of-anatomy"]], "Detailed morphometric data: sources, caveats, and importing into NEURON": [[47, "detailed-morphometric-data-sources-caveats-and-importing-into-neuron"]], "Specifying parameterized variation of biophysical properties": [[63, "specifying-parameterized-variation-of-biophysical-properties"]], "How to move the labels": [[79, "how-to-move-the-labels"]], "How to change the colors of the plots": [[79, "how-to-change-the-colors-of-the-plots"]], "HOC Interpreter": [[52, "hoc-interpreter"]], "Background": [[52, "background"]], "Source Code": [[52, "source-code"]], "HOC Grammar": [[52, "hoc-grammar"]], "HOC Initialization": [[52, "hoc-initialization"]], "HOC Interpreter - executing the machine": [[52, "hoc-interpreter-executing-the-machine"]], "HOC Interpreter example - printf": [[52, "hoc-interpreter-example-printf"]], "Dealing with Simulations that Generate a lot of Data": [[51, "dealing-with-simulations-that-generate-a-lot-of-data"]], "Comments and suggestions": [[51, "comments-and-suggestions"]], "Example of a Simple Network": [[70, "example-of-a-simple-network"]], "Frequently asked questions (FAQ)": [[71, "frequently-asked-questions-faq"]], "Now that I\u2019ve installed NEURON, how do I run it?": [[71, "now-that-i-ve-installed-neuron-how-do-i-run-it"]], "What\u2019s the best way to learn how to use NEURON?": [[71, "what-s-the-best-way-to-learn-how-to-use-neuron"]], "How do I create a NEURON model?": [[71, "how-do-i-create-a-neuron-model"]], "Help! I\u2019m having a hard time implementing models!": [[71, "help-i-m-having-a-hard-time-implementing-models"]], "Why can\u2019t NEURON read the text file (or hoc file) that I created?": [[71, "why-can-t-neuron-read-the-text-file-or-hoc-file-that-i-created"]], "How do I print a hard copy of a NEURON window?": [[71, "how-do-i-print-a-hard-copy-of-a-neuron-window"]], "How do I plot something other than membrane potential?": [[71, "how-do-i-plot-something-other-than-membrane-potential"]], "How do I save and edit figures?": [[71, "how-do-i-save-and-edit-figures"]], "I\u2019ve used the NEURON Main Menu to construct and manage models. How can I save what I have done?": [[71, "i-ve-used-the-neuron-main-menu-to-construct-and-manage-models-how-can-i-save-what-i-have-done"]], "What is a ses (session) file? Can I edit it?": [[71, "what-is-a-ses-session-file-can-i-edit-it"]], "How do I use NEURON\u2019s tools for electrotonic analysis?": [[71, "how-do-i-use-neuron-s-tools-for-electrotonic-analysis"]], "Why should I use an odd value for nseg?": [[71, "why-should-i-use-an-odd-value-for-nseg"]], "What\u2019s a good stretegy for specifying nseg?": [[71, "what-s-a-good-stretegy-for-specifying-nseg"]], "How do I change the background color used in NEURON\u2019s shape plots and other graphs?": [[71, "how-do-i-change-the-background-color-used-in-neuron-s-shape-plots-and-other-graphs"]], "How do I change the color scale used in shape plots?": [[71, "how-do-i-change-the-color-scale-used-in-shape-plots"]], "I see an error message that says \u2026 procedure too big in ./foo.hoc \u2026": [[71, "i-see-an-error-message-that-says-procedure-too-big-in-foo-hoc"]], "Where can I find examples of mod files?": [[71, "where-can-i-find-examples-of-mod-files"]], "How do I compile mod files?": [[71, "how-do-i-compile-mod-files"]], "I can\u2019t get mod files to compile.": [[71, "i-can-t-get-mod-files-to-compile"]], "I installed a new version of NEURON, and now I see error messages like this: \u2018mecanisms fooba needs to be re-translated. its version 5.2 \u201cc\u201d code is incompatible with this neuron version\u2019.": [[71, "i-installed-a-new-version-of-neuron-and-now-i-see-error-messages-like-this-mecanisms-fooba-needs-to-be-re-translated-its-version-5-2-c-code-is-incompatible-with-this-neuron-version"]], "Is there a list of functions that are built into NMODL?": [[71, "is-there-a-list-of-functions-that-are-built-into-nmodl"]], "Is there a list of functions that are built into hoc?": [[71, "is-there-a-list-of-functions-that-are-built-into-hoc"]], "What units does NEURON use for current, concentration, etc.?": [[71, "what-units-does-neuron-use-for-current-concentration-etc"]], "When I type a new value into a numeric field, it doesn\u2019t seem to have any effect.": [[71, "when-i-type-a-new-value-into-a-numeric-field-it-doesn-t-seem-to-have-any-effect"]], "What is the difference between SEClamp and VClamp, and which should I use?": [[71, "what-is-the-difference-between-seclamp-and-vclamp-and-which-should-i-use"]], "SEClamp and IClamp just deliver rectangular step waveforms. How can I make them produce an arbitrary waveform, e.g. something that I calculated or recorded from a real cell?": [[71, "seclamp-and-iclamp-just-deliver-rectangular-step-waveforms-how-can-i-make-them-produce-an-arbitrary-waveform-e-g-something-that-i-calculated-or-recorded-from-a-real-cell"]], "I just want a current clamp that will deliver a sequence of current pulses at regular intervals. Vector play seems like overkill for this.": [[71, "i-just-want-a-current-clamp-that-will-deliver-a-sequence-of-current-pulses-at-regular-intervals-vector-play-seems-like-overkill-for-this"]], "I want a current clamp that will generate a pulse when I send it an event, or that I can use to produce pulses at precalculated times.": [[71, "i-want-a-current-clamp-that-will-generate-a-pulse-when-i-send-it-an-event-or-that-i-can-use-to-produce-pulses-at-precalculated-times"]], "I have a set of recorded or calculated spike times. How can I use these to drive a postsynaptic mechanism?": [[71, "i-have-a-set-of-recorded-or-calculated-spike-times-how-can-i-use-these-to-drive-a-postsynaptic-mechanism"]], "How can I read data from a binary PClamp file?": [[71, "how-can-i-read-data-from-a-binary-pclamp-file"]], "How do I exit NEURON? I\u2019m not using the GUI, and when I enter ^D at the oc> prompt it doesn\u2019t do anything?": [[71, "how-do-i-exit-neuron-i-m-not-using-the-gui-and-when-i-enter-d-at-the-oc-prompt-it-doesn-t-do-anything"]], "Is there a list of functions that are built into NEURON?": [[71, "is-there-a-list-of-functions-that-are-built-into-neuron"]], "ModelView: Compact display of parameters for NEURON models": [[84, "modelview-compact-display-of-parameters-for-neuron-models"]], "ModelView in action": [[84, "modelview-in-action"]], "Example: CA1 pyramidal neuron: as a 2-layer NN and subthreshold synaptic summation by Poirazi et al. 2003": [[84, "example-ca1-pyramidal-neuron-as-a-2-layer-nn-and-subthreshold-synaptic-summation-by-poirazi-et-al-2003"]], "ModelView and ModelDB": [[84, "modelview-and-modeldb"]], "ModelView and Interoperability Future Goals": [[84, "modelview-and-interoperability-future-goals"]], "Summary": [[84, "summary"]], "Acknowledgement": [[84, "acknowledgement"]], "Differences between idraw and CorelDraw": [[68, "differences-between-idraw-and-coreldraw"]], "Introduction to Network Construction": [[83, "introduction-to-network-construction"]], "Ball-and-stick approximation to cell": [[45, "ball-and-stick-approximation-to-cell"]], "Making the representation of the biological properties": [[45, "making-the-representation-of-the-biological-properties"]], "Using the representation of the biological properties": [[45, "using-the-representation-of-the-biological-properties"]], "Saving and Retrieving the Experimental Rig": [[45, "saving-and-retrieving-the-experimental-rig"]], "More Exercises": [[45, "more-exercises"]], "Footnotes and Asides": [[45, "footnotes-and-asides"]], "Managing a model cell with complex anatomy": [[62, "managing-a-model-cell-with-complex-anatomy"]], "Step 1: Get the cell\u2019s anatomy into a CellBuilder": [[62, "step-1-get-the-cell-s-anatomy-into-a-cellbuilder"]], "Step 2. Create subsets": [[62, "step-2-create-subsets"]], "Step 3. Specify the spatial grid": [[62, "step-3-specify-the-spatial-grid"]], "Step 4. Specify biophysics": [[62, "step-4-specify-biophysics"]], "A. Set up a strategy": [[62, "a-set-up-a-strategy"]], "B. Execute the strategy": [[62, "b-execute-the-strategy"]], "Step 5. Use the model specification": [[62, "step-5-use-the-model-specification"]], "To learn the basics about using NEURON:": [[78, "to-learn-the-basics-about-using-neuron"]], "To learn how to use NMODL to add new mechanisms to NEURON:": [[78, "to-learn-how-to-use-nmodl-to-add-new-mechanisms-to-neuron"]], "PtrVector": [[337, "ptrvector"], [205, "ptrvector"]], "Plotter Control (obsolete)": [[317, "plotter-control-obsolete"], [185, "plotter-control-obsolete"]], "ValueFieldEditor": [[309, "valuefieldeditor"], [177, "valuefieldeditor"]], "CVode": [[349, "cvode"], [217, "cvode"]], "ModelDescriptionIssues": [[349, "modeldescriptionissues"], [217, "modeldescriptionissues"]], "Channels": [[349, "channels"], [217, "channels"]], "Concentrations": [[349, "concentrations"], [217, "concentrations"]], "Events": [[349, "events"], [217, "events"]], "GUI Widgets": [[310, "gui-widgets"]], "HOC Syntax": [[313, "hoc-syntax"], [181, "hoc-syntax"]], "comments": [[313, "comments"], [181, "comments"]], "proc": [[313, "proc"], [181, "proc"]], "func": [[313, "func"], [181, "func"]], "obfunc": [[313, "obfunc"], [181, "obfunc"]], "iterator": [[313, "iterator"], [181, "iterator"]], "Solving Nonlinear Systems": [[322, "solving-nonlinear-systems"], [190, "solving-nonlinear-systems"]], "Common Math Functions (HOC)": [[323, "common-math-functions-hoc"], [191, "common-math-functions-hoc"]], "Pointers": [[341, "pointers"], [209, "pointers"]], "Constants": [[321, "constants"], [189, "constants"]], "TextEditor": [[307, "texteditor"], [175, "texteditor"]], "Printf (Formatted Output)": [[318, "printf-formatted-output"], [186, "printf-formatted-output"]], "Redirect Standard Out": [[318, "redirect-standard-out"], [186, "redirect-standard-out"]], "Obsolete Pointer Functions": [[335, "obsolete-pointer-functions"], [203, "obsolete-pointer-functions"]], "neuron": [[332, "neuron"], [200, "neuron"]], "Important names and sub-packages": [[332, "important-names-and-sub-packages"], [200, "important-names-and-sub-packages"]], "Parameters": [[332, "parameters"], [332, "id1"], [200, "parameters"], [200, "id1"], [375, "Parameters"], [374, "Parameters"]], "MechanismStandard (Parameter Control)": [[331, "mechanismstandard-parameter-control"], [199, "mechanismstandard-parameter-control"]], "Timer": [[346, "timer"], [214, "timer"]], "HOC Keywords": [[333, "hoc-keywords"], [201, "hoc-keywords"]], "System Calls": [[345, "system-calls"], [213, "system-calls"]], "Path Manipulation": [[345, "path-manipulation"], [213, "path-manipulation"]], "Machine Identification": [[345, "machine-identification"], [213, "machine-identification"]], "Execute a Command": [[345, "execute-a-command"], [213, "execute-a-command"]], "Timing": [[345, "timing"], [213, "timing"]], "Miscellaneous": [[345, "miscellaneous"], [314, "miscellaneous"], [327, "miscellaneous"], [224, "miscellaneous"], [262, "miscellaneous"], [213, "miscellaneous"], [195, "miscellaneous"], [182, "miscellaneous"], [132, "miscellaneous"], [356, "miscellaneous"]], "Read from Terminal and Files": [[319, "read-from-terminal-and-files"], [187, "read-from-terminal-and-files"]], "Python Language": [[340, "python-language"], [208, "python-language"]], "Python Accessing HOC": [[340, "python-accessing-hoc"], [208, "python-accessing-hoc"]], "Segment": [[340, "segment"], [208, "segment"]], "Mechanism": [[340, "mechanism"], [208, "mechanism"]], "HOC accessing Python": [[340, "hoc-accessing-python"], [208, "hoc-accessing-python"]], "Project Management": [[339, "project-management"], [207, "project-management"]], "Utilities": [[339, "utilities"], [207, "utilities"]], "prjnrninit": [[339, "prjnrninit"], [207, "prjnrninit"]], "prjnrncmp": [[339, "prjnrncmp"], [207, "prjnrncmp"]], "prjnrnco": [[339, "prjnrnco"], [207, "prjnrnco"]], "prjnrnci": [[339, "prjnrnci"], [207, "prjnrnci"]], "prjnrnpr": [[339, "prjnrnpr"], [207, "prjnrnpr"]], "ivdialog": [[339, "ivdialog"], [207, "ivdialog"]], "String Parsing (sscanf)": [[342, "string-parsing-sscanf"], [210, "string-parsing-sscanf"]], "StringFunctions (String Manipulation Class)": [[343, "stringfunctions-string-manipulation-class"], [211, "stringfunctions-string-manipulation-class"]], "Matrix": [[325, "matrix"], [193, "matrix"]], "mcell_ran4": [[326, "mcell-ran4"], [194, "mcell-ran4"]], "Family": [[350, "family"], [224, "family"], [218, "family"], [356, "family"]], "ExecCommand": [[350, "execcommand"], [218, "execcommand"]], "GatherVec": [[350, "gathervec"], [218, "gathervec"]], "VectorPlay": [[350, "vectorplay"], [218, "vectorplay"]], "VecWrap": [[350, "vecwrap"], [218, "vecwrap"]], "HOC Language": [[312, "hoc-language"], [180, "hoc-language"]], "Debugging and Internals Access": [[314, "debugging-and-internals-access"], [182, "debugging-and-internals-access"]], "Namespace Related": [[314, "namespace-related"], [182, "namespace-related"]], "Object Related": [[314, "object-related"], [182, "object-related"]], "File Access (objected-oriented via NEURON)": [[316, "file-access-objected-oriented-via-neuron"]], "Predeclared Variables": [[338, "predeclared-variables"], [206, "predeclared-variables"]], "GUIMath": [[324, "guimath"], [192, "guimath"]], "Pseudo-Random Number Generation": [[328, "pseudo-random-number-generation"], [196, "pseudo-random-number-generation"]], "Random Class": [[328, "random-class"], [196, "random-class"]], "Object Oriented Programming in HOC": [[334, "object-oriented-programming-in-hoc"]], "begintemplate": [[334, "begintemplate"], [202, "begintemplate"]], "endtemplate": [[334, "endtemplate"], [202, "endtemplate"]], "objectvar": [[334, "objectvar"], [202, "objectvar"]], "objref": [[334, "objref"], [202, "objref"]], "public": [[334, "public"], [202, "public"]], "external": [[334, "external"], [202, "external"]], "new": [[334, "new"], [202, "new"]], "NULLobject": [[334, "nullobject"], [202, "nullobject"]], "Fourier Analysis": [[329, "fourier-analysis"], [197, "fourier-analysis"]], "Running and Saving Batch Jobs": [[347, "running-and-saving-batch-jobs"], [215, "running-and-saving-batch-jobs"]], "Pointer Class": [[336, "pointer-class"], [204, "pointer-class"]], "BBSaveState": [[348, "bbsavestate"], [216, "bbsavestate"]], "Obsolete Text Menus": [[308, "obsolete-text-menus"], [176, "obsolete-text-menus"]], "Open and Write to Files (Obsolete)": [[320, "open-and-write-to-files-obsolete"], [188, "open-and-write-to-files-obsolete"]], "GUI Design": [[311, "gui-design"], [179, "gui-design"]], "Mathematics": [[330, "mathematics"], [198, "mathematics"]], "Electrode": [[273, "electrode"], [270, "electrode"], [139, "electrode"], [142, "electrode"]], "KSChan": [[276, "kschan"], [145, "kschan"]], "Inserter": [[269, "inserter"], [224, "inserter"], [138, "inserter"], [356, "inserter"]], "Managers": [[270, "managers"], [224, "managers"], [139, "managers"], [356, "managers"]], "PointManager": [[270, "pointmanager"], [139, "pointmanager"]], "PointGroup": [[270, "pointgroup"], [139, "pointgroup"]], "Viewers": [[270, "viewers"], [224, "viewers"], [139, "viewers"], [356, "viewers"]], "PointProcesses": [[270, "pointprocesses"], [224, "pointprocesses"], [139, "pointprocesses"], [356, "pointprocesses"]], "PointProcessManager": [[270, "pointprocessmanager"], [139, "pointprocessmanager"]], "PointProcessGroupManager": [[270, "pointprocessgroupmanager"], [139, "pointprocessgroupmanager"]], "Conceptual Overview of Sections": [[293, "conceptual-overview-of-sections"], [161, "conceptual-overview-of-sections"]], "Geometry": [[293, "geometry-geometry"], [161, "geometry"]], "Stylized specification of geometry": [[293, "stylized-specification-of-geometry"], [161, "stylized-specification-of-geometry"]], "3-D specification of geometry": [[293, "d-specification-of-geometry"], [161, "d-specification-of-geometry"]], "Defining the 3D Shape": [[293, "defining-the-3d-shape"], [161, "defining-the-3d-shape"]], "Reading 3D Data from NEURON": [[293, "reading-3d-data-from-neuron"], [161, "reading-3d-data-from-neuron"]], "Section and Segment Selection": [[296, "section-and-segment-selection"], [164, "section-and-segment-selection"]], "Dot notation for properties": [[296, "dot-notation-for-properties"]], "sec= for functions": [[296, "sec-for-functions"]], "Default section": [[296, "default-section"], [164, "default-section"]], "NMODL": [[280, "nmodl"], [149, "nmodl"]], "Model Description Language": [[280, "model-description-language"], [149, "model-description-language"]], "History": [[280, "history"], [149, "history"]], "Rationale": [[280, "rationale"], [149, "rationale"]], "General Paradigm": [[280, "general-paradigm"], [149, "general-paradigm"]], "Basic NMODL Statements": [[280, "basic-nmodl-statements"], [149, "basic-nmodl-statements"]], "TITLE": [[280, "title"], [149, "title"]], "COMMENT": [[280, "comment"], [149, "comment"]], "DEFINE": [[280, "define"], [247, "DEFINE"], [149, "define"]], "UNITS": [[280, "units"], [247, "UNITS"], [149, "units"]], "PARAMETER": [[280, "parameter"], [247, "PARAMETER"], [149, "parameter"]], "STATE": [[280, "state"], [247, "STATE"], [149, "state"]], "ASSIGNED": [[280, "assigned"], [247, "ASSIGNED"], [149, "assigned"]], "CONSTANT": [[280, "constant"], [247, "CONSTANT"], [149, "constant"]], "LOCAL": [[280, "local"], [247, "LOCAL"], [149, "local"]], "INDEPENDENT": [[280, "independent"], [149, "independent"]], "POINTER": [[280, "pointer"], [281, "pointer"], [149, "pointer"], [150, "pointer"]], "INCLUDE": [[280, "include"], [247, "INCLUDE"], [149, "include"]], "BREAKPOINT": [[280, "breakpoint"], [247, "BREAKPOINT"], [149, "breakpoint"]], "DERIVATIVE": [[280, "derivative"], [247, "DERIVATIVE"], [149, "derivative"]], "NET_RECEIVE": [[280, "net-receive"], [247, "NET_RECEIVE"], [149, "net-receive"]], "WATCH": [[280, "watch"], [149, "watch"]], "CONSTRUCTOR": [[280, "constructor"], [247, "CONSTRUCTOR"], [149, "constructor"]], "DESTRUCTOR": [[280, "destructor"], [247, "DESTRUCTOR"], [149, "destructor"]], "LINEAR": [[280, "linear"], [247, "LINEAR"], [149, "linear"]], "NONLINEAR": [[280, "nonlinear"], [247, "NONLINEAR"], [149, "nonlinear"]], "KINETIC": [[280, "kinetic"], [247, "KINETIC"], [149, "kinetic"]], "CONSERVE": [[280, "conserve"], [247, "CONSERVE"], [149, "conserve"]], "COMPARTMENT": [[280, "compartment"], [149, "compartment"]], "LONGITUDINAL_DIFFUSION": [[280, "longitudinal-diffusion"], [149, "longitudinal-diffusion"]], "PROCEDURE": [[280, "procedure"], [247, "PROCEDURE"], [149, "procedure"]], "FUNCTION": [[280, "function"], [247, "FUNCTION"], [149, "function"]], "TABLE": [[280, "table"], [247, "TABLE"], [149, "table"]], "INITIAL": [[280, "initial"], [247, "INITIAL"], [149, "initial"]], "DISCRETE": [[280, "discrete"], [247, "DISCRETE"], [149, "discrete"]], "FUNCTION_TABLE": [[280, "function-table"], [247, "FUNCTION_TABLE"], [149, "function-table"]], "CONDUCTANCE": [[280, "conductance"], [149, "conductance"]], "WHILE": [[280, "while"], [149, "while"]], "IF / ELSE IF / ELSE": [[280, "if-else-if-else"], [149, "if-else-if-else"]], "LAG": [[280, "lag"], [149, "lag"]], "Implementation Notes": [[286, "implementation-notes"], [155, "implementation-notes"]], "MPI": [[286, "mpi"], [155, "mpi"]], "SubWorld": [[286, "subworld"], [155, "subworld"]], "Parallel Network": [[286, "parallel-network"], [155, "parallel-network"]], "Parallel Transfer": [[286, "parallel-transfer"], [155, "parallel-transfer"]], "MechanismType": [[282, "mechanismtype"], [151, "mechanismtype"]], "LinearMechanism": [[277, "linearmechanism"], [146, "linearmechanism"]], "SectionList": [[294, "sectionlist"], [162, "sectionlist"]], "HOC-based Mechanisms": [[274, "hoc-based-mechanisms"], [143, "hoc-based-mechanisms"]], "Mathematical functions for rate expressions": [[290, "mathematical-functions-for-rate-expressions"], [289, "mathematical-functions-for-rate-expressions"], [158, "mathematical-functions-for-rate-expressions"]], "Point Processes and Artificial Cells": [[279, "point-processes-and-artificial-cells"], [148, "point-processes-and-artificial-cells"]], "General": [[279, "general"], [148, "general"]], "Mechanisms": [[279, "mechanisms"], [148, "mechanisms"]], "Programmatic Model Specification": [[272, "programmatic-model-specification"], [141, "programmatic-model-specification"]], "Dynamic Code Loading and Execution": [[297, "dynamic-code-loading-and-execution"], [165, "dynamic-code-loading-and-execution"]], "code-executing": [[297, "code-executing"], [165, "code-executing"]], "code-loading": [[297, "code-loading"], [165, "code-loading"]], "ShowMechanism": [[271, "showmechanism"], [140, "showmechanism"]], "MechType": [[271, "mechtype"], [140, "mechtype"]], "NetCon": [[285, "netcon"], [154, "netcon"]], "Basic Reaction-Diffusion": [[289, "basic-reaction-diffusion"], [158, "basic-reaction-diffusion"]], "Overview": [[289, "overview"], [158, "overview"], [374, "Overview"], [376, "Overview"], [371, "Overview"], [372, "Overview"]], "Related resources": [[289, "related-resources"]], "Specifying the domain": [[289, "specifying-the-domain"], [158, "specifying-the-domain"]], "Intracellular regions and regions in Frankenhauser-Hodgkin space": [[289, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"], [158, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"]], "For specifying the geometry": [[289, "for-specifying-the-geometry"], [158, "for-specifying-the-geometry"]], "Extracellular regions": [[289, "extracellular-regions"], [158, "extracellular-regions"]], "Defining proteins, ions, etc": [[289, "defining-proteins-ions-etc"], [158, "defining-proteins-ions-etc"]], "Defining reactions": [[289, "defining-reactions"], [158, "defining-reactions"]], "Manipulating nodes": [[289, "manipulating-nodes"], [158, "manipulating-nodes"]], "Membrane potential": [[289, "membrane-potential"], [158, "membrane-potential"]], "Synchronization with segments": [[289, "synchronization-with-segments"], [158, "synchronization-with-segments"]], "Numerical options": [[289, "numerical-options"], [158, "numerical-options"]], "SBML Export": [[289, "sbml-export"]], "Saving and restoring state": [[289, "saving-and-restoring-state"]], "Optimization": [[263, "optimization"], [133, "optimization"]], "Environment Variables": [[265, "environment-variables"]], "NEURON_MODULE_OPTIONS": [[265, "neuron-module-options"]], "NRNUNIT_USE_LEGACY": [[265, "nrnunit-use-legacy"]], "SectionRef": [[295, "sectionref"], [163, "sectionref"]], "Error Handling": [[298, "error-handling"], [166, "error-handling"]], "Networks": [[283, "networks"], [152, "networks"]], "Obsolete Stimuli": [[288, "obsolete-stimuli"], [157, "obsolete-stimuli"]], "Layout": [[300, "layout"], [168, "layout"]], "Topology": [[292, "topology"], [160, "topology"]], "CellBuilder": [[268, "cellbuilder"], [224, "cellbuilder"], [137, "cellbuilder"], [356, "cellbuilder"]], "KineticBuild": [[268, "kineticbuild"], [137, "kineticbuild"]], "StateTransitionEvent": [[291, "statetransitionevent"], [159, "statetransitionevent"]], "Dialog Boxes": [[299, "dialog-boxes"], [167, "dialog-boxes"]], "Miscellaneous Menus": [[303, "miscellaneous-menus"], [171, "miscellaneous-menus"]], "SymChooser": [[306, "symchooser"], [174, "symchooser"]], "Style Settings": [[302, "style-settings"], [170, "style-settings"]], "Domain Restrictions for Fields": [[302, "domain-restrictions-for-fields"], [170, "domain-restrictions-for-fields"]], "PrintWindowManager Placement": [[302, "printwindowmanager-placement"], [170, "printwindowmanager-placement"]], "PWManager": [[304, "pwmanager"], [172, "pwmanager"]], "NEURON Extension to NMODL": [[281, "neuron-extension-to-nmodl"], [150, "neuron-extension-to-nmodl"]], "NEURON": [[281, "neuron"], [247, "NEURON"], [150, "neuron"]], "SUFFIX": [[281, "suffix"], [247, "SUFFIX"], [150, "suffix"]], "RANGE": [[281, "range"], [150, "range"]], "GLOBAL": [[281, "global"], [150, "global"]], "NONSPECIFIC_CURRENT": [[281, "nonspecific-current"], [247, "NONSPECIFIC_CURRENT"], [150, "nonspecific-current"]], "ELECTRODE_CURRENT": [[281, "electrode-current"], [247, "ELECTRODE_CURRENT"], [150, "electrode-current"]], "USEION": [[281, "useion"], [247, "USEION"], [150, "useion"]], "READ": [[281, "read"], [247, "READ"], [150, "read"]], "WRITE": [[281, "write"], [247, "WRITE"], [150, "write"]], "VALENCE": [[281, "valence"], [247, "VALENCE"], [150, "valence"]], "REPRESENTS": [[281, "represents"], [281, "id1"], [247, "REPRESENTS"], [150, "represents"]], "POINT_PROCESS": [[281, "point-process"], [247, "POINT_PROCESS"], [150, "point-process"]], "BBCOREPOINTER": [[281, "bbcorepointer"], [150, "bbcorepointer"]], "EXTERNAL": [[281, "external"], [150, "external"]], "THREADSAFE": [[281, "threadsafe"], [247, "THREADSAFE"], [150, "threadsafe"]], "BEFORE / AFTER": [[281, "before-after"]], "FOR_NETCONS": [[281, "for-netcons"], [247, "FOR_NETCONS"], [150, "for-netcons"]], "PROTECT": [[281, "protect"], [247, "PROTECT"], [150, "protect"]], "MUTEXLOCK / MUTEXUNLOCK": [[281, "mutexlock-mutexunlock"], [247, "MUTEXLOCK-/-MUTEXUNLOCK"], [150, "mutexlock-mutexunlock"]], "Connecting Mechanisms Together": [[281, "connecting-mechanisms-together"], [150, "connecting-mechanisms-together"]], "VERBATIM": [[281, "verbatim"], [247, "VERBATIM"], [249, "verbatim"], [150, "verbatim"]], "Rarely Used Compilation Options": [[264, "rarely-used-compilation-options"], [134, "rarely-used-compilation-options"]], "Ions": [[275, "ions"], [144, "ions"]], "Dynamics (Channels, etc\u2026)": [[278, "dynamics-channels-etc"], [147, "dynamics-channels-etc"]], "SectionBrowser": [[305, "sectionbrowser"], [173, "sectionbrowser"]], "Model Specification GUI Tools": [[267, "model-specification-gui-tools"], [136, "model-specification-gui-tools"]], "NEURON Python documentation": [[266, "neuron-python-documentation"]], "Quick Links": [[266, "quick-links"], [135, "quick-links"]], "Basic Programming": [[266, "basic-programming"], [135, "basic-programming"]], "Model Specification": [[266, "model-specification"], [135, "model-specification"]], "Simulation Control": [[266, "simulation-control"], [135, "simulation-control"]], "Visualization": [[266, "visualization"], [135, "visualization"]], "Analysis": [[266, "analysis"], [135, "analysis"]], "ParallelNetManager": [[287, "parallelnetmanager"], [156, "parallelnetmanager"]], "RunFitter": [[259, "runfitter"], [129, "runfitter"]], "ReadData": [[259, "readdata"], [129, "readdata"]], "CurrentValuesAsDefault": [[259, "currentvaluesasdefault"], [254, "currentvaluesasdefault"], [124, "currentvaluesasdefault"], [129, "currentvaluesasdefault"]], "Variabletofit": [[259, "variabletofit"], [129, "variabletofit"]], "Parameterstovary": [[259, "parameterstovary"], [129, "parameterstovary"]], "Extras": [[259, "extras"], [129, "extras"]], "DataWeights": [[259, "dataweights"], [254, "dataweights"], [124, "dataweights"], [129, "dataweights"]], "ParameterRanges": [[259, "parameterranges"], [129, "parameterranges"]], "Changeparmfromlist": [[259, "changeparmfromlist"], [129, "changeparmfromlist"]], "Removeparmfromlist": [[259, "removeparmfromlist"], [129, "removeparmfromlist"]], "SaveRestoreFitParams": [[259, "saverestorefitparams"], [129, "saverestorefitparams"]], "NumberOfDataRegions": [[259, "numberofdataregions"], [129, "numberofdataregions"]], "AnotherVariableToFit": [[259, "anothervariabletofit"], [129, "anothervariabletofit"]], "Dofit": [[259, "dofit"], [129, "dofit"]], "SingleRunFit": [[259, "singlerunfit"], [129, "singlerunfit"]], "StopatnextQuadForm": [[259, "stopatnextquadform"], [129, "stopatnextquadform"]], "Running": [[259, "running"], [254, "running"], [124, "running"], [129, "running"]], "Roughfit": [[259, "roughfit"], [129, "roughfit"]], "BeQuiet": [[259, "bequiet"], [129, "bequiet"]], "ImpedanceRatio": [[257, "impedanceratio"], [127, "impedanceratio"]], "Publications using NEURON": [[252, "publications-using-neuron"]], "Interpreter Management": [[219, "interpreter-management"], [351, "interpreter-management"]], "Programmatic Analysis Tools": [[260, "programmatic-analysis-tools"], [130, "programmatic-analysis-tools"]], "Neuron MODelling Language": [[247, "Neuron-MODelling-Language"]], "Compiling example mod files": [[247, "Compiling-example-mod-files"]], "NMODL Code Blocks": [[247, "NMODL-Code-Blocks"]], "Example mod file": [[247, "Example-mod-file"], [247, "id1"], [247, "id4"], [247, "id6"], [247, "id8"], [247, "id10"]], "Functionality example": [[247, "Functionality-example"], [247, "id2"], [247, "id5"], [247, "id7"], [247, "id9"], [247, "id11"]], "Example snippet": [[247, "Example-snippet"]], "NMODL Variable Types": [[247, "NMODL-Variable-Types"]], "Example mod files": [[247, "Example-mod-files"]], "Functionality Example": [[247, "Functionality-Example"]], "SOLVE": [[247, "SOLVE"]], "METHOD": [[247, "METHOD"]], "Other NMODL constructs": [[247, "Other-NMODL-constructs"]], "FROM": [[247, "FROM"]], "TO": [[247, "TO"]], "WITH": [[247, "WITH"]], "DEPEND": [[247, "DEPEND"]], "BEFORE": [[247, "BEFORE"], [150, "before"]], "AFTER": [[247, "AFTER"], [150, "after"]], "The NEURON Simulator": [[237, "the-neuron-simulator"]], "MulRunFitter": [[258, "mulrunfitter"], [128, "mulrunfitter"]], "Parameters Menu": [[258, "parameters-menu"], [128, "parameters-menu"]], "Generators Menu": [[258, "generators-menu"], [128, "generators-menu"]], "Fitness menu of a Generator instance in the generator Panel": [[258, "fitness-menu-of-a-generator-instance-in-the-generator-panel"], [128, "fitness-menu-of-a-generator-instance-in-the-generator-panel"]], "Building Python Wheels": [[245, "building-python-wheels"]], "Linux wheels": [[245, "linux-wheels"]], "Setting up Docker": [[245, "setting-up-docker"]], "NEURON Docker Image Workflow": [[245, "neuron-docker-image-workflow"]], "Building the docker image": [[245, "building-the-docker-image"]], "Pushing to DockerHub": [[245, "pushing-to-dockerhub"]], "Using the docker image": [[245, "using-the-docker-image"]], "MPI support": [[245, "mpi-support"]], "macOS wheels": [[245, "macos-wheels"]], "Launch the wheel building": [[245, "launch-the-wheel-building"]], "Linux": [[245, "linux"], [241, "linux"], [243, "linux"], [243, "id1"]], "macOS": [[245, "macos"]], "Testing the wheels": [[245, "testing-the-wheels"]], "MacOS considerations": [[245, "macos-considerations"]], "Testing on BB5": [[245, "testing-on-bb5"]], "Publishing the wheels on Pypi via Azure": [[245, "publishing-the-wheels-on-pypi-via-azure"]], "Variables that drive PyPI upload": [[245, "variables-that-drive-pypi-upload"]], "Release wheels": [[245, "release-wheels"]], "Publishing the wheels on Pypi via CircleCI": [[245, "publishing-the-wheels-on-pypi-via-circleci"]], "Nightly wheels": [[245, "nightly-wheels"]], "FunctionFitter": [[254, "functionfitter"], [124, "functionfitter"]], "Plot": [[254, "plot"], [227, "plot"], [124, "plot"], [375, "Plot"], [359, "plot"]], "Steps": [[254, "steps"], [227, "steps"], [124, "steps"], [359, "steps"]], "IndependentVar": [[254, "independentvar"], [227, "independentvar"], [124, "independentvar"], [359, "independentvar"]], "Args": [[254, "args"], [124, "args"]], "Yexpr": [[254, "yexpr"], [124, "yexpr"]], "PraxisFit": [[254, "praxisfit"], [124, "praxisfit"]], "StopAtNextQuadForm": [[254, "stopatnextquadform"], [124, "stopatnextquadform"]], "WatchTheFit": [[254, "watchthefit"], [124, "watchthefit"]], "RoughFit": [[254, "roughfit"], [124, "roughfit"]], "ArgValues": [[254, "argvalues"], [124, "argvalues"]], "FittoData": [[254, "fittodata"], [124, "fittodata"]], "ReadDataFile": [[254, "readdatafile"], [124, "readdatafile"]], "CommonFunctionalForms": [[254, "commonfunctionalforms"], [124, "commonfunctionalforms"]], "FitCriterion": [[254, "fitcriterion"], [124, "fitcriterion"]], "ParameterRangeLimits": [[254, "parameterrangelimits"], [124, "parameterrangelimits"]], "SaveRestoreFunction": [[254, "saverestorefunction"], [124, "saverestorefunction"]], "Impedance Tools": [[255, "impedance-tools"], [125, "impedance-tools"]], "ImpShape": [[255, "impshape"], [125, "impshape"]], "Diagnosis and Debugging": [[239, "diagnosis-and-debugging"]], "Segfault and crash.": [[239, "segfault-and-crash"]], "NaN or Inf values": [[239, "nan-or-inf-values"]], "Different results with different nhost or nthread.": [[239, "different-results-with-different-nhost-or-nthread"]], "GDB": [[239, "gdb"]], "GDB and MPI": [[239, "gdb-and-mpi"]], "Valgrind": [[239, "valgrind"]], "Valgrind + gdb": [[239, "valgrind-gdb"]], "Sanitizers": [[239, "sanitizers"]], "ThreadSanitizer (TSAN)": [[239, "threadsanitizer-tsan"]], "Profiling and performance benchmarking": [[239, "profiling-and-performance-benchmarking"]], "Running benchmarks": [[239, "running-benchmarks"]], "Running GPU benchmarks": [[239, "running-gpu-benchmarks"]], "Grapher": [[227, "grapher"], [224, "grapher"], [359, "grapher"], [356, "grapher"]], "EraseAll": [[227, "eraseall"], [359, "eraseall"]], "Generator": [[227, "generator"], [359, "generator"]], "IndepBegin": [[227, "indepbegin"], [359, "indepbegin"]], "IndepEnd": [[227, "independ"], [359, "independ"]], "Xexpr": [[227, "xexpr"], [359, "xexpr"]], "Code Formatting": [[241, "code-formatting"]], "Dependencies": [[241, "dependencies"], [244, "dependencies"]], "Mac": [[241, "mac"]], "Instructions": [[241, "instructions"], [238, "instructions"]], "Behind the scenes": [[241, "behind-the-scenes"]], "Impedance": [[261, "impedance"], [224, "impedance"], [131, "impedance"], [356, "impedance"]], "Standard Run Tools": [[224, "standard-run-tools"], [356, "standard-run-tools"]], "NEURON Main Menu": [[224, "neuron-main-menu"], [356, "neuron-main-menu"]], "LoadSession": [[224, "loadsession"], [356, "loadsession"]], "LoadHoc": [[224, "loadhoc"], [356, "loadhoc"]], "LoadDLL": [[224, "loaddll"], [356, "loaddll"]], "savesession": [[224, "savesession"], [356, "savesession"]], "workingdir": [[224, "workingdir"], [356, "workingdir"]], "recentdir": [[224, "recentdir"], [356, "recentdir"]], "Quit": [[224, "quit"], [228, "quit"], [360, "quit"], [356, "quit"]], "Edit": [[224, "edit"], [356, "edit"]], "Build": [[224, "build"], [356, "build"]], "singlecompartment": [[224, "singlecompartment"], [356, "singlecompartment"]], "NetworkCell": [[224, "networkcell"], [356, "networkcell"]], "FromCellBuilder": [[224, "fromcellbuilder"], [356, "fromcellbuilder"]], "ArtificialCell": [[224, "artificialcell"], [356, "artificialcell"]], "NetworkBuilder": [[224, "networkbuilder"], [356, "networkbuilder"]], "Tools": [[224, "tools"], [356, "tools"]], "Fitting": [[224, "fitting"], [356, "fitting"]], "Parameterized Function": [[224, "parameterized-function"], [356, "parameterized-function"]], "Run Fitter": [[224, "run-fitter"], [356, "run-fitter"]], "Multiple Run Fitter": [[224, "multiple-run-fitter"], [356, "multiple-run-fitter"]], "Run Control": [[224, "run-control"], [356, "run-control"]], "Variable Step Control": [[224, "variable-step-control"], [356, "variable-step-control"]], "Usevariabledt": [[224, "usevariabledt"], [356, "usevariabledt"]], "Localvariabledt": [[224, "localvariabledt"], [356, "localvariabledt"]], "AbsoluteTolerance": [[224, "absolutetolerance"], [356, "absolutetolerance"]], "Distributed Mechanisms": [[224, "distributed-mechanisms"], [356, "distributed-mechanisms"]], "Homogeneous Spec": [[224, "homogeneous-spec"], [356, "homogeneous-spec"]], "ShapeName": [[224, "shapename"], [356, "shapename"]], "NameValues": [[224, "namevalues"], [356, "namevalues"]], "Mechanisms Globals": [[224, "mechanisms-globals"], [356, "mechanisms-globals"]], "celsius": [[224, "celsius"], [356, "celsius"]], "globalRa": [[224, "globalra"], [356, "globalra"]], "Frequency": [[224, "frequency"], [356, "frequency"]], "Path": [[224, "path"], [356, "path"]], "LogAvsX": [[224, "logavsx"], [256, "logavsx"], [126, "logavsx"], [356, "logavsx"]], "Shape": [[224, "shape"], [234, "shape"], [356, "shape"], [366, "shape"]], "Archive And Hardcopy": [[224, "archive-and-hardcopy"], [356, "archive-and-hardcopy"]], "Family1": [[224, "family1"], [356, "family1"]], "Command": [[224, "command"], [356, "command"]], "Builders": [[224, "builders"], [356, "builders"]], "Kinetic Scheme Builder": [[224, "kinetic-scheme-builder"], [356, "kinetic-scheme-builder"]], "Currentaxis": [[224, "currentaxis"], [356, "currentaxis"]], "Stateaxis": [[224, "stateaxis"], [356, "stateaxis"]], "Shapeplot": [[224, "shapeplot"], [356, "shapeplot"]], "VectorMovie": [[224, "vectormovie"], [356, "vectormovie"]], "PhasePlane": [[224, "phaseplane"], [356, "phaseplane"]], "Voltageaxis": [[224, "voltageaxis"], [356, "voltageaxis"]], "Save to File": [[224, "save-to-file"], [356, "save-to-file"]], "RetrievefromFile": [[224, "retrievefromfile"], [356, "retrievefromfile"]], "GatherValues": [[224, "gathervalues"], [356, "gathervalues"]], "Play": [[224, "play"], [356, "play"]], "Display": [[224, "display"], [356, "display"]], "Draw": [[224, "draw"], [356, "draw"]], "Window": [[224, "window"], [356, "window"]], "Ungrouped": [[224, "ungrouped"], [356, "ungrouped"]], "GroupManager": [[224, "groupmanager"], [356, "groupmanager"]], "NMODLanguage": [[248, "nmodlanguage"]], "Basic tutorials": [[248, null], [390, null]], "Programmatic Simulation Control": [[220, "programmatic-simulation-control"], [352, "programmatic-simulation-control"]], "Functions": [[220, "functions"], [352, "functions"], [391, "Functions"]], "FInitializeHandler": [[220, "finitializehandler"], [352, "finitializehandler"]], "Glyph": [[225, "glyph"], [357, "glyph"]], "Publications about NEURON": [[251, "publications-about-neuron"]], "Notification": [[229, "notification"], [361, "notification"]], "PlotShape": [[232, "plotshape"], [364, "plotshape"]], "Developer Builds": [[240, "developer-builds"]], "PlotShape Window": [[231, "plotshape-window"], [363, "plotshape-window"]], "Section": [[231, "section"], [363, "section"]], "Rotate3D": [[231, "rotate3d"], [363, "rotate3d"]], "ShapeStyle": [[231, "shapestyle"], [363, "shapestyle"]], "PlotWhat": [[231, "plotwhat"], [228, "plotwhat"], [363, "plotwhat"], [360, "plotwhat"]], "VariableScale": [[231, "variablescale"], [363, "variablescale"]], "TimePlot": [[231, "timeplot"], [363, "timeplot"]], "SpacePlot": [[231, "spaceplot"], [363, "spaceplot"]], "ShapePlot": [[231, "shapeplot"], [363, "shapeplot"]], "MoveText": [[231, "movetext"], [228, "movetext"], [363, "movetext"], [360, "movetext"]], "How to develop and debug your own code": [[236, "how-to-develop-and-debug-your-own-code"]], "Rule I: Don\u2019t write a bunch of code (or create a bunch of GUI windows) all at once, and then expect everything to work the first time you try it.": [[236, "rule-i-don-t-write-a-bunch-of-code-or-create-a-bunch-of-gui-windows-all-at-once-and-then-expect-everything-to-work-the-first-time-you-try-it"]], "Rule II: Learn how to debug your own code.": [[236, "rule-ii-learn-how-to-debug-your-own-code"]], "The Python Debugger: pdb": [[236, "the-python-debugger-pdb"]], "Mac Binary Package (Apple M1 and Mac x86_64)": [[244, "mac-binary-package-apple-m1-and-mac-x86-64"]], "Signing and Notarization": [[244, "signing-and-notarization"]], "Obsolete Plotting": [[230, "obsolete-plotting"], [362, "obsolete-plotting"]], "GUI Look And Feel": [[228, "gui-look-and-feel"], [360, "gui-look-and-feel"]], "Scene": [[228, "scene"], [360, "scene"]], "View_equal_Plot": [[228, "view-equal-plot"]], "ZoomOut10": [[228, "zoomout10"], [360, "zoomout10"]], "ZoomIn10": [[228, "zoomin10"], [360, "zoomin10"]], "NewView": [[228, "newview"], [360, "newview"]], "ZoomInOut": [[228, "zoominout"], [360, "zoominout"]], "Translate": [[228, "translate"], [360, "translate"]], "RoundView": [[228, "roundview"], [360, "roundview"]], "WholeScene": [[228, "wholescene"], [360, "wholescene"]], "SetView": [[228, "setview"], [360, "setview"]], "Scene_equal_View": [[228, "scene-equal-view"]], "ObjectName": [[228, "objectname"], [360, "objectname"]], "Browser": [[228, "browser"], [360, "browser"]], "FieldEditor": [[228, "fieldeditor"], [360, "fieldeditor"]], "Panel": [[228, "panel"], [360, "panel"]], "Button": [[228, "button"], [360, "button"]], "Menu": [[228, "menu"], [360, "menu"]], "ValueEditor": [[228, "valueeditor"], [360, "valueeditor"]], "Default Value Editor": [[228, "default-value-editor"], [360, "default-value-editor"]], "Print & File Window Manager": [[228, "print-file-window-manager"], [360, "print-file-window-manager"]], "ScreenItem": [[228, "screenitem"], [360, "screenitem"]], "PaperItem": [[228, "paperitem"], [360, "paperitem"]], "Help": [[228, "help"], [360, "help"]], "Print": [[228, "print"], [360, "print"]], "PrintToFile": [[228, "printtofile"], [360, "printtofile"]], "PostScript": [[228, "postscript"], [360, "postscript"]], "Idraw": [[228, "idraw"], [360, "idraw"]], "Ascii": [[228, "ascii"], [360, "ascii"]], "Session": [[228, "session"], [360, "session"]], "Retrieve": [[228, "retrieve"], [360, "retrieve"]], "SaveSelected": [[228, "saveselected"], [360, "saveselected"]], "SaveAll": [[228, "saveall"], [360, "saveall"]], "Other": [[228, "other"], [360, "other"]], "SelectPrinter": [[228, "selectprinter"], [360, "selectprinter"]], "WindowTitlesPrinted": [[228, "windowtitlesprinted"], [360, "windowtitlesprinted"]], "VirtualScreen": [[228, "virtualscreen"], [360, "virtualscreen"]], "LandPort": [[228, "landport"], [360, "landport"]], "Tray": [[228, "tray"], [360, "tray"]], "Crosshair": [[228, "crosshair"], [360, "crosshair"]], "PickVector": [[228, "pickvector"], [360, "pickvector"]], "PlotRange": [[228, "plotrange"], [360, "plotrange"]], "ChangeColor-Brush": [[228, "changecolor-brush"], [360, "changecolor-brush"]], "AxisType": [[228, "axistype"], [360, "axistype"]], "ViewAxis": [[228, "viewaxis"], [360, "viewaxis"]], "NewAxis": [[228, "newaxis"], [360, "newaxis"]], "ViewBox": [[228, "viewbox"], [360, "viewbox"]], "KeepLines": [[228, "keeplines"], [360, "keeplines"]], "FamilyLabel": [[228, "familylabel"], [360, "familylabel"]], "Erase": [[228, "erase"], [360, "erase"]], "ChangeText": [[228, "changetext"], [360, "changetext"]], "Delete": [[228, "delete"], [360, "delete"]], "RangeVarPlot": [[233, "rangevarplot"], [365, "rangevarplot"]], "RunControl": [[221, "runcontrol"], [353, "runcontrol"]], "t": [[221, "t"], [353, "t"]], "dt": [[221, "dt"], [353, "dt"]], "InitRun": [[221, "initrun"], [353, "initrun"]], "Init": [[221, "init"], [353, "init"]], "Stop": [[221, "stop"], [353, "stop"]], "Continuetil": [[221, "continuetil"], [353, "continuetil"]], "Continuefor": [[221, "continuefor"], [353, "continuefor"]], "SingleStep": [[221, "singlestep"], [353, "singlestep"]], "Tstop": [[221, "tstop"], [353, "tstop"]], "Plotsms": [[221, "plotsms"], [353, "plotsms"]], "Quiet": [[221, "quiet"], [353, "quiet"]], "RealTime": [[221, "realtime"], [353, "realtime"]], "Code Coverage": [[238, "code-coverage"]], "Dependencies (Linux)": [[238, "dependencies-linux"]], "Simplified Workflow": [[238, "simplified-workflow"]], "Session Printing and Saving": [[223, "session-printing-and-saving"], [355, "session-printing-and-saving"]], "Impx": [[256, "impx"], [126, "impx"]], "GUI Analysis Tools": [[253, "gui-analysis-tools"], [123, "gui-analysis-tools"]], "Installing Binary Distribution": [[243, "installing-binary-distribution"]], "Mac OS": [[243, "mac-os"]], "Windows": [[243, "windows"]], "Windows Subsystem for Linux (WSL) Python Wheel": [[243, "windows-subsystem-for-linux-wsl-python-wheel"]], "Installing Source Distributions": [[243, "installing-source-distributions"]], "Install Build Dependencies": [[243, "install-build-dependencies"]], "Mac OS - x86_64": [[243, "mac-os-x86-64"]], "Mac OS - Apple M1": [[243, "mac-os-apple-m1"]], "Install NEURON using CMake": [[243, "install-neuron-using-cmake"]], "Optimized CPU and GPU Support using CoreNEURON": [[243, "optimized-cpu-and-gpu-support-using-coreneuron"]], "Run integrated tests": [[243, "run-integrated-tests"]], "FAQs": [[243, "faqs"]], "Windows build": [[246, "windows-build"]], "Pre-requisites": [[246, "pre-requisites"]], "Build Environment installation": [[246, "build-environment-installation"]], "How to build NEURON": [[246, "how-to-build-neuron"]], "MenuExplore": [[235, "menuexplore"], [367, "menuexplore"]], "PointProcessLocator": [[235, "pointprocesslocator"], [367, "pointprocesslocator"]], "ShapeBrowser": [[235, "shapebrowser"], [367, "shapebrowser"]], "SaveState": [[222, "savestate"], [354, "savestate"]], "Other scripting languages": [[250, "other-scripting-languages"]], "Setting up Julia for use with NEURON": [[250, "setting-up-julia-for-use-with-neuron"]], "A simple Julia example": [[250, "a-simple-julia-example"]], "Object Oriented Programming": [[202, "object-oriented-programming"]], "File Access (Recommended Way)": [[184, "file-access-recommended-way"]], "Widgets": [[178, "widgets"]], "Dot notation": [[164, "dot-notation"]], "Stack of sections": [[164, "stack-of-sections"]], "NEURON HOC documentation": [[135, "neuron-hoc-documentation"]], "Pointer-Communication": [[150, "pointer-communication"]], "Randomness in NEURON models": [[95, "randomness-in-neuron-models"]], "How to generate independent random spike streams": [[95, "how-to-generate-independent-random-spike-streams"]], "The problem": [[95, "the-problem"], [91, "the-problem"]], "Source code that demonstrates the problem": [[95, "source-code-that-demonstrates-the-problem"]], "The solution": [[95, "the-solution"]], "Outline of the solution:": [[95, "outline-of-the-solution"]], "Source code that demonstrates the solution:": [[95, "source-code-that-demonstrates-the-solution"]], "UNITS Tutorial": [[115, "units-tutorial"]], "Definition of new units": [[115, "definition-of-new-units"], [114, "definition-of-new-units"]], "Function and Argument units": [[115, "function-and-argument-units"], [114, "function-and-argument-units"]], "Units for KINETIC blocks": [[115, "units-for-kinetic-blocks"], [114, "units-for-kinetic-blocks"]], "Units in NEURON models": [[115, "units-in-neuron-models"], [114, "units-in-neuron-models"]], "3. Placing synapses on the M cell": [[105, "placing-synapses-on-the-m-cell"]], "C. We need a \u201cRenshaw cell\u201d class.": [[105, "c-we-need-a-renshaw-cell-class"]], "Using Session Files for Saving and Retrieving Windows": [[98, "using-session-files-for-saving-and-retrieving-windows"], [119, "using-session-files-for-saving-and-retrieving-windows"]], "How (and when) to save all windows to a ses file, and how to retrieve them": [[98, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"], [119, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"]], "How (and why) to save selected windows": [[98, "how-and-why-to-save-selected-windows"], [119, "how-and-why-to-save-selected-windows"]], "The Window Group Manager": [[98, "the-window-group-manager"], [119, "the-window-group-manager"]], "Using the d_lambda Rule": [[120, "using-the-d-lambda-rule"]], "Tutorial 2 : Fitting a model to data": [[91, "tutorial-2-fitting-a-model-to-data"]], "The cell and the electrical measurements": [[91, "the-cell-and-the-electrical-measurements"]], "Step 1. Create an \u201cunoptimized\u201d model": [[91, "step-1-create-an-unoptimized-model"]], "Step 2. Set up a current clamp experiment on this model": [[91, "step-2-set-up-a-current-clamp-experiment-on-this-model"]], "Project management time!": [[91, "project-management-time"]], "What about input resistance?": [[91, "what-about-input-resistance"]], "Step 3. Configure a MultipleRunFitter to do a \u201crun fitness\u201d optimization": [[91, "step-3-configure-a-multiplerunfitter-to-do-a-run-fitness-optimization"]], "Create a Multiple Run Fitter.": [[91, "create-a-multiple-run-fitter"]], "We need a tool to perform a \u201crun fitness\u201d optimization.": [[91, "we-need-a-tool-to-perform-a-run-fitness-optimization"]], "Give the Run Fitness Generator a descriptive name.": [[91, "give-the-run-fitness-generator-a-descriptive-name"]], "We need to see this Run Fitness Generator.": [[91, "we-need-to-see-this-run-fitness-generator"]], "Redrawing the iclamp Run Fitness Generator": [[91, "redrawing-the-iclamp-run-fitness-generator"]], "Step 4. Load the Experimental Data into the iclamp Run Fitness Generator": [[91, "step-4-load-the-experimental-data-into-the-iclamp-run-fitness-generator"]], "Loading data into the Run Fitness Generator": [[91, "loading-data-into-the-run-fitness-generator"]], "Testing the Run Fitness Generator": [[91, "testing-the-run-fitness-generator"]], "Project management time again!": [[91, "project-management-time-again"]], "Step 5. Specify the parameters that will be adjusted": [[91, "step-5-specify-the-parameters-that-will-be-adjusted"]], "Parameter specification": [[91, "parameter-specification"], [89, "parameter-specification"]], "Proxy parameters": [[91, "proxy-parameters"]], "Testing the proxy parameters": [[91, "testing-the-proxy-parameters"]], "Using the proxy parameters": [[91, "using-the-proxy-parameters"]], "Viewing (and changing) parameter values": [[91, "viewing-and-changing-parameter-values"], [89, "viewing-and-changing-parameter-values"]], "Constraining parameters": [[91, "constraining-parameters"], [89, "constraining-parameters"]], "Step 6. Perform the optimization": [[91, "step-6-perform-the-optimization"], [89, "step-6-perform-the-optimization"]], "Test the MRF": [[91, "test-the-mrf"], [89, "test-the-mrf"]], "Choose and use an optimization algorithm": [[91, "choose-and-use-an-optimization-algorithm"], [89, "choose-and-use-an-optimization-algorithm"]], "Problems and pitfalls": [[91, "problems-and-pitfalls"]], "A minimal principled strategy": [[91, "a-minimal-principled-strategy"]], "What about dirty data?": [[91, "what-about-dirty-data"]], "Contamination of the early response": [[91, "contamination-of-the-early-response"]], "Contamination of the late response": [[91, "contamination-of-the-late-response"]], "Hints": [[91, "hints"], [89, "hints"]], "Notes": [[91, "notes"]], "What is NEURON": [[121, "what-is-neuron"]], "A flexible and powerful simulator of neurons and networks": [[121, "a-flexible-and-powerful-simulator-of-neurons-and-networks"]], "Advantages over general-purpose simulators": [[121, "advantages-over-general-purpose-simulators"]], "Separates biology from purely computational concerns": [[121, "separates-biology-from-purely-computational-concerns"]], "Working with familiar idioms": [[121, "working-with-familiar-idioms"]], "Integrator-independent model specification": [[121, "integrator-independent-model-specification"]], "Efficient and painless spatial and temporal discretization": [[121, "efficient-and-painless-spatial-and-temporal-discretization"]], "Convenient user interface": [[121, "convenient-user-interface"]], "The interpreters": [[121, "the-interpreters"]], "The graphical user interface": [[121, "the-graphical-user-interface"]], "User-extendable library of biophysical mechanisms": [[121, "user-extendable-library-of-biophysical-mechanisms"]], "Enhancements for modeling networks": [[121, "enhancements-for-modeling-networks"]], "Customizable initialization and simulation flow control": [[121, "customizable-initialization-and-simulation-flow-control"]], "Large user base": [[121, "large-user-base"]], "Development, support, and documentation": [[121, "development-support-and-documentation"]], "Availability and system requirements": [[121, "availability-and-system-requirements"]], "Step 3. Connect the cells": [[111, "step-3-connect-the-cells"], [109, "step-3-connect-the-cells"], [110, "step-3-connect-the-cells"], [108, "step-3-connect-the-cells"]], "continued": [[111, "continued"]], "B. We need to specify the parameters of the synaptic connections.": [[111, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"], [109, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"]], "Using NEURON on the Mac": [[117, "using-neuron-on-the-mac"]], "Under macOS, how do I compile mod files or start NEURON?": [[117, "under-macos-how-do-i-compile-mod-files-or-start-neuron"]], "Implementational Details of the Synaptic Mechanism": [[90, "implementational-details-of-the-synaptic-mechanism"]], "The conceptual model": [[90, "the-conceptual-model"]], "The reaction scheme": [[90, "the-reaction-scheme"]], "Binding of A to R": [[90, "binding-of-a-to-r"]], "Dissociation of ARc": [[90, "dissociation-of-arc"]], "Channel gating": [[90, "channel-gating"]], "Conservation": [[90, "conservation"]], "Reference": [[90, "reference"], [383, "reference"]], "Step 2. Create each cell in the network": [[106, "step-2-create-each-cell-in-the-network"], [107, "step-2-create-each-cell-in-the-network"]], "A. We need a Network Builder": [[106, "a-we-need-a-network-builder"]], "B. We need an instance of each of our three cell types.": [[106, "b-we-need-an-instance-of-each-of-our-three-cell-types"]], "Step 4. Use the model specification": [[116, "step-4-use-the-model-specification"]], "Run a simulation and plot the input and output spike trains": [[97, "run-a-simulation-and-plot-the-input-and-output-spike-trains"], [96, "run-a-simulation-and-plot-the-input-and-output-spike-trains"]], "Step 2. Specify the model parameter(s) to be varied": [[101, "step-2-specify-the-model-parameter-s-to-be-varied"]], "Step 1. Define the types of cells": [[102, "step-1-define-the-types-of-cells"], [103, "step-1-define-the-types-of-cells"]], "A. We need the GUI tool for specifying new types of artificial cells.": [[102, "a-we-need-the-gui-tool-for-specifying-new-types-of-artificial-cells"]], "B. We need a class of cells that can supply spike trains.": [[102, "b-we-need-a-class-of-cells-that-can-supply-spike-trains"]], "C. We need to give this new cell class a short, unique name.": [[102, "c-we-need-to-give-this-new-cell-class-a-short-unique-name"]], "D. We need a class of cells that can integrate synaptic inputs.": [[102, "d-we-need-a-class-of-cells-that-can-integrate-synaptic-inputs"]], "Step 1. Set up a SubsetDomainIterator": [[99, "step-1-set-up-a-subsetdomainiterator"]], "A. Specify the subset": [[99, "a-specify-the-subset"]], "B. Specify the distance metric": [[99, "b-specify-the-distance-metric"]], "A. We need a Network Builder.": [[107, "a-we-need-a-network-builder"]], "B. We need a cell to generate the afferent spike train.": [[107, "b-we-need-a-cell-to-generate-the-afferent-spike-train"]], "C. We need an integrate and fire cell.": [[107, "c-we-need-an-integrate-and-fire-cell"]], "Working with PostScript and idraw figures": [[122, "working-with-postscript-and-idraw-figures"]], "The system": [[122, "the-system"]], "The modeling experiment": [[122, "the-modeling-experiment"]], "Dressing up these figures for publication": [[122, "dressing-up-these-figures-for-publication"]], "Using features of NEURON\u2019s graph windows": [[122, "using-features-of-neuron-s-graph-windows"]], "Editing the image file": [[122, "editing-the-image-file"]], "Further comments": [[122, "further-comments"]], "idraw and LaTeX": [[122, "idraw-and-latex"]], "Tips and tools for MSWindows": [[122, "tips-and-tools-for-mswindows"]], "Units used in NEURON": [[114, "units-used-in-neuron"]], "Scripting, the GUI, and the interpreter": [[114, "scripting-the-gui-and-the-interpreter"]], "Units within NMODL files": [[114, "units-within-nmodl-files"]], "A. We need a class of cells that can supply afferent spikes.": [[103, "a-we-need-a-class-of-cells-that-can-supply-afferent-spikes"]], "B. We need a \u201cmotoneuron\u201d or \u201cM cell\u201d class.": [[103, "b-we-need-a-motoneuron-or-m-cell-class"]], "1. Specifying the anatomical and biophysical properties of the M cell class": [[103, "specifying-the-anatomical-and-biophysical-properties-of-the-m-cell-class"]], "Tutorial 1: Making Networks of Artificial Neurons": [[113, "tutorial-1-making-networks-of-artificial-neurons"]], "Outline": [[113, "outline"], [112, "outline"]], "2. Specifying what kinds of synapses can be attached to an M cell": [[104, "specifying-what-kinds-of-synapses-can-be-attached-to-an-m-cell"]], "Continued": [[109, "continued"]], "Tutorial 1 : Fitting a function to data": [[89, "tutorial-1-fitting-a-function-to-data"]], "Step 0. Download the data": [[89, "step-0-download-the-data"]], "Step 1. Bring up a Multiple Run Fitter": [[89, "step-1-bring-up-a-multiple-run-fitter"]], "We need the GUI tool for optimization problems.": [[89, "we-need-the-gui-tool-for-optimization-problems"]], "We need a tool for optimizing a function.": [[89, "we-need-a-tool-for-optimizing-a-function"]], "Give the Function Fitness Generator a descriptive name.": [[89, "give-the-function-fitness-generator-a-descriptive-name"]], "We need to see this Function Fitness Generator.": [[89, "we-need-to-see-this-function-fitness-generator"]], "Step 2. Load the Experimental Data into the Multiple Run Fitter": [[89, "step-2-load-the-experimental-data-into-the-multiple-run-fitter"]], "We need to load our data into the Function Fitness Generator.": [[89, "we-need-to-load-our-data-into-the-function-fitness-generator"]], "Step 3. Specify the function we want to optimize": [[89, "step-3-specify-the-function-we-want-to-optimize"]], "Selecting and Editing a Functional Form": [[89, "selecting-and-editing-a-functional-form"]], "Step 4. Specify the parameters that will be adjusted": [[89, "step-4-specify-the-parameters-that-will-be-adjusted"]], "Testing the Generator": [[89, "testing-the-generator"]], "Restricting parameter space": [[89, "restricting-parameter-space"]], "Log scaling": [[89, "log-scaling"]], "Step 5. Specify the criteria we want the function to satisfy": [[89, "step-5-specify-the-criteria-we-want-the-function-to-satisfy"]], "\u201cExtra credit\u201d problem": [[89, "extra-credit-problem"]], "Step 3. Specify and verify the functions that govern the parameters": [[100, "step-3-specify-and-verify-the-functions-that-govern-the-parameters"]], "A. Specifying a function": [[100, "a-specifying-a-function"]], "B. Verifying a function": [[100, "b-verifying-a-function"]], "Repeat until done": [[100, "repeat-until-done"]], "A. We need to set up the network architecture.": [[110, "a-we-need-to-set-up-the-network-architecture"], [108, "a-we-need-to-set-up-the-network-architecture"]], "Adapting MOD files for C++ with NEURON 9.0[.dev]": [[93, "adapting-mod-files-for-c-with-neuron-with-cpp-mechanisms"]], "Legacy patterns that are invalid C++": [[93, "legacy-patterns-that-are-invalid-c"]], "Implicit pointer type conversions": [[93, "implicit-pointer-type-conversions"]], "Local non-prototype function declarations": [[93, "local-non-prototype-function-declarations"]], "Function declarations with incorrect types": [[93, "function-declarations-with-incorrect-types"]], "K&R function definitions": [[93, "k-r-function-definitions"]], "Legacy patterns that are considered deprecated": [[93, "legacy-patterns-that-are-considered-deprecated"]], "Deprecated overloads taking void*": [[93, "deprecated-overloads-taking-void"]], "Using NEURON\u2019s Optimization Tools": [[88, "using-neuron-s-optimization-tools"]], "Why is it called \u201cMultiple Run Fitter,\u201d and what does it really do?": [[88, "why-is-it-called-multiple-run-fitter-and-what-does-it-really-do"]], "Other optimization tools that work with NEURON": [[88, "other-optimization-tools-that-work-with-neuron"]], "How to change the background color used in shape plots and other graphs": [[87, "how-to-change-the-background-color-used-in-shape-plots-and-other-graphs"]], "How create a custom colormap": [[87, "how-create-a-custom-colormap"]], "Using \u201cPlot what?\u201d to Specify a Variable to be plotted": [[118, "using-plot-what-to-specify-a-variable-to-be-plotted"]], "The Print & File Manager": [[94, "the-print-file-manager"]], "How to choose a window to be printed": [[94, "how-to-choose-a-window-to-be-printed"]], "Page orientation": [[94, "page-orientation"]], "Positioning a window in the layout area": [[94, "positioning-a-window-in-the-layout-area"]], "Resizing a window in the layout area": [[94, "resizing-a-window-in-the-layout-area"]], "Deleting a window from the layout area": [[94, "deleting-a-window-from-the-layout-area"]], "Printing the contents of the layout area": [[94, "printing-the-contents-of-the-layout-area"]], "Creating a PostScript output file": [[94, "creating-a-postscript-output-file"]], "Creating an ASCII output file": [[94, "creating-an-ascii-output-file"]], "Tutorial 2 : Making Hybrid Nets": [[112, "tutorial-2-making-hybrid-nets"]], "Reaction-diffusion thresholds": [[381, "Reaction-diffusion-thresholds"]], "Example: Degradable buffer": [[377, "Example:-Degradable-buffer"]], "Calbindin D28K dynamics": [[377, "Calbindin-D28K-dynamics"]], "A model": [[377, "A-model"]], "Example: Circadian rhythm": [[375, "Example:-Circadian-rhythm"]], "Load libraries": [[375, "Load-libraries"]], "Units": [[375, "Units"]], "Helper functions for clarity": [[375, "Helper-functions-for-clarity"]], "Define the morphology": [[375, "Define-the-morphology"]], "Declaring proteins": [[375, "Declaring-proteins"]], "Reactions": [[375, "Reactions"]], "Record states": [[375, "Record-states"]], "Run the simulation": [[375, "Run-the-simulation"], [386, "Run-the-simulation"]], "Example: Calcium waves": [[374, "Example:-Calcium-waves"]], "Concept": [[374, "Concept"]], "Specification": [[374, "Specification"]], "Basic structure": [[374, "Basic-structure"]], "Enable variable time step": [[374, "Enable-variable-time-step"]], "Regions": [[374, "Regions"]], "Species": [[374, "Species"]], "IP3 demo": [[380, "IP3-demo"]], "Initialization Strategies": [[373, "Initialization-Strategies"]], "Option 1: NEURON and NMODL defaults": [[373, "Option-1:-NEURON-and-NMODL-defaults"]], "Option 2: Uniform initial concentration": [[373, "Option-2:-Uniform-initial-concentration"]], "Option 3: Initializing to a function of position": [[373, "Option-3:-Initializing-to-a-function-of-position"]], "Using h.distance:": [[373, "Using-h.distance:"]], "Using position:": [[373, "Using-position:"]], "Option 4: to steady state": [[373, "Option-4:-to-steady-state"]], "View = Plot": [[360, "view-plot"]], "Scene = View": [[360, "scene-view"]], "Example: combining MOD file ion channels with rxd": [[376, "Example:-combining-MOD-file-ion-channels-with-rxd"]], "Setup NEURON library and imports": [[376, "Setup-NEURON-library-and-imports"], [372, "Setup-NEURON-library-and-imports"]], "Add a stimulus": [[376, "Add-a-stimulus"]], "Setup recording variables": [[376, "Setup-recording-variables"]], "Initialize and run the simulation": [[376, "Initialize-and-run-the-simulation"]], "Plot it": [[376, "Plot-it"]], "Note: On homeostatic mechanisms or the lack thereof": [[376, "Note:-On-homeostatic-mechanisms-or-the-lack-thereof"]], "Finally: The mod file": [[376, "Finally:-The-mod-file"]], "Ball and stick 4: Parallel vs serial mode": [[389, "Ball-and-stick-4:-Parallel-vs-serial-mode"]], "Parallel communication in NEURON": [[389, "Parallel-communication-in-NEURON"]], "Test MPI and Parallel NEURON": [[389, "Test-MPI-and-Parallel-NEURON"]], "Back to the example": [[389, "Back-to-the-example"]], "Test the model": [[389, "Test-the-model"]], "Gathering spikes": [[389, "Gathering-spikes"]], "Scripting NEURON basics": [[392, "Scripting-NEURON-basics"]], "What is NEURON?": [[392, "What-is-NEURON?"]], "Step 1: Import the neuron module into Python": [[392, "Step-1:-Import-the-neuron-module-into-Python"]], "Step 2: Create a cell": [[392, "Step-2:-Create-a-cell"]], "Aside 1: NEURON\u2019s h.topology function": [[392, "Aside-1:-NEURON\u2019s-h.topology-function"]], "Aside 2: The psection method": [[392, "Aside-2:-The-psection-method"]], "Step 3: Set the cell\u2019s morphological properties": [[392, "Step-3:-Set-the-cell\u2019s-morphological-properties"]], "Aside 3: Python\u2019s dir function": [[392, "Aside-3:-Python\u2019s-dir-function"]], "Aside 4: Getting more help": [[392, "Aside-4:-Getting-more-help"]], "Biophysical mechanisms": [[392, "Biophysical-mechanisms"]], "Step 4: Insert ion channels": [[392, "Step-4:-Insert-ion-channels"]], "Aside 5: Sections and segments": [[392, "Aside-5:-Sections-and-segments"]], "Aside 6: Accessing segment variables": [[392, "Aside-6:-Accessing-segment-variables"]], "Step 5: Insert a stimulus": [[392, "Step-5:-Insert-a-stimulus"]], "Step 6: Set up recording variables": [[392, "Step-6:-Set-up-recording-variables"]], "Step 7: Run the simulation": [[392, "Step-7:-Run-the-simulation"]], "Step 8: Plot the results": [[392, "Step-8:-Plot-the-results"]], "Using bokeh": [[392, "Using-bokeh"]], "Using matplotlib": [[392, "Using-matplotlib"]], "Step 9: Saving and loading results": [[392, "Step-9:-Saving-and-loading-results"]], "CSV": [[392, "CSV"]], "JSON": [[392, "JSON"]], "Pickles": [[392, "Pickles"]], "NEURON Source and Release Management Guide": [[382, "neuron-source-and-release-management-guide"]], "INTRODUCTION": [[382, "introduction"]], "Definitions": [[382, "definitions"]], "GIT and GITHUB": [[382, "git-and-github"]], "Git Branches and Tags": [[382, "git-branches-and-tags"]], "GitHub": [[382, "github"]], "GIT OPERATIONS": [[382, "git-operations"]], "Checkout, Stage, Commit": [[382, "checkout-stage-commit"]], "Checkout & Reset": [[382, "checkout-reset"]], "Merging Branches": [[382, "merging-branches"]], "Merge \u2013squash": [[382, "merge-squash"]], "Fast-Forward merge": [[382, "fast-forward-merge"]], "Merge and Rebase": [[382, "merge-and-rebase"]], "BEST PRACTICES": [[382, "best-practices"]], "Creating Changes/Pull Requests": [[382, "creating-changes-pull-requests"]], "Bring up to date: Merge vs Rebase": [[382, "bring-up-to-date-merge-vs-rebase"]], "Reviewing": [[382, "reviewing"]], "CREATING RELEASES": [[382, "creating-releases"]], "NEURON\u2019s Release Requirements": [[382, "neuron-s-release-requirements"]], "VERSIONING SCHEMES": [[382, "versioning-schemes"]], "Existing Conventions": [[382, "existing-conventions"]], "Semantic Versioning": [[382, "semantic-versioning"]], "PEP 440": [[382, "pep-440"]], "Release Life Cycle: Alpha, Beta, Release Candidate": [[382, "release-life-cycle-alpha-beta-release-candidate"]], "A Versioning Scheme for NEURON": [[382, "a-versioning-scheme-for-neuron"]], "RELEASE MANAGEMENT WITH GIT": [[382, "release-management-with-git"]], "Git Branching Models": [[382, "git-branching-models"]], "GitHub Flow": [[382, "github-flow"]], "Git Flow": [[382, "git-flow"]], "GitLab Flow": [[382, "gitlab-flow"]], "Other Alternatives": [[382, "other-alternatives"]], "NEURON Release Management Guidelines": [[382, "neuron-release-management-guidelines"], [383, "neuron-release-management-guidelines"]], "Contributing": [[382, "contributing"], [383, "contributing"]], "Managing Releases": [[382, "managing-releases"], [383, "managing-releases"]], "From Alpha to Final Release": [[382, "from-alpha-to-final-release"], [383, "from-alpha-to-final-release"]], "Patch Releases": [[382, "patch-releases"], [383, "patch-releases"]], "Release Deprecation": [[382, "release-deprecation"], [383, "release-deprecation"]], "REFERENCES": [[382, "references"]], "DOCUMENT HISTORY": [[382, "document-history"]], "Footnotes": [[382, "footnotes"]], "NEURON Versioning and Release Guidelines": [[383, "neuron-versioning-and-release-guidelines"]], "Release Versioning": [[383, "release-versioning"]], "Versioning Scheme": [[383, "versioning-scheme"]], "Ball and stick 1: Basic cell": [[386, "Ball-and-stick-1:-Basic-cell"]], "Load NEURON": [[386, "Load-NEURON"]], "Defining the cell morphology": [[386, "Defining-the-cell-morphology"]], "Create the sections": [[386, "Create-the-sections"]], "Connect the sections": [[386, "Connect-the-sections"]], "Define stylized geometry": [[386, "Define-stylized-geometry"]], "Specify biophysics": [[386, "Specify-biophysics"]], "Stimulation": [[386, "Stimulation"]], "Recording": [[386, "Recording"], [387, "Recording"]], "Plot the results": [[386, "Plot-the-results"]], "Simulation studies": [[386, "Simulation-studies"]], "Role of current amplitude": [[386, "Role-of-current-amplitude"]], "Plotting both the dendrite and the soma": [[386, "Plotting-both-the-dendrite-and-the-soma"]], "The role of nseg": [[386, "The-role-of-nseg"]], "Advanced exercise": [[386, "Advanced-exercise"]], "Ball and stick 2: Build a ring network of ball-and-stick cells": [[387, "Ball-and-stick-2:-Build-a-ring-network-of-ball-and-stick-cells"]], "Generic cell class": [[387, "Generic-cell-class"]], "Adjusting position and orientation": [[387, "Adjusting-position-and-orientation"]], "Construct and position our cells": [[387, "Construct-and-position-our-cells"]], "A first synapse, and input via a NetStim": [[387, "A-first-synapse,-and-input-via-a-NetStim"]], "Running and plotting a simulation": [[387, "Running-and-plotting-a-simulation"]], "Simulating": [[387, "Simulating"]], "Plotting": [[387, "Plotting"]], "Recording synaptic conductance": [[387, "Recording-synaptic-conductance"]], "Connecting the cells": [[387, "Connecting-the-cells"]], "Introduction to Python": [[391, "Introduction-to-Python"]], "Displaying results": [[391, "Displaying-results"]], "Variables: Strings, numbers, and dynamic type casting": [[391, "Variables:-Strings,-numbers,-and-dynamic-type-casting"]], "Arithmetic: +, -, *, /, **, % and comparisons": [[391, "Arithmetic:-+,--,-*,-/,-**,-%-and-comparisons"]], "Making choices: if, else": [[391, "Making-choices:-if,-else"]], "Lists": [[391, "Lists"]], "List comprehensions (set theory)": [[391, "List-comprehensions-(set-theory)"]], "For loops and iterators": [[391, "For-loops-and-iterators"]], "Dictionaries": [[391, "Dictionaries"]], "Importing modules": [[391, "Importing-modules"]], "Pickling objects": [[391, "Pickling-objects"]], "Python RXD tutorials": [[379, "python-rxd-tutorials"]], "Reaction-diffusion": [[379, null]], "Ball and stick 3: Extensible network of cells": [[388, "Ball-and-stick-3:-Extensible-network-of-cells"]], "Loading libraries": [[388, "Loading-libraries"]], "Generic Cell class": [[388, "Generic-Cell-class"]], "Make a Ring class": [[388, "Make-a-Ring-class"]], "Test the network": [[388, "Test-the-network"]], "Explore effects of parameters": [[388, "Explore-effects-of-parameters"]], "NEURON Software Policies": [[385, "neuron-software-policies"]], "Python Support Policy": [[385, "python-support-policy"]], "EOL (end of life)": [[385, "eol-end-of-life"]], "Note on Existing releases": [[385, "note-on-existing-releases"]], "Deprecation": [[385, "deprecation"]], "New Python versions": [[385, "new-python-versions"]], "Varying initial concentrations and parameters": [[370, "Varying-initial-concentrations-and-parameters"]], "NEURON SCM and Release": [[384, "neuron-scm-and-release"]], "Reaction-diffusion introduction": [[371, "Reaction-diffusion-introduction"]], "Math": [[371, "Math"]], "Where": [[371, "Where"]], "Who": [[371, "Who"]], "How": [[371, "How"]], "Reading the data": [[371, "Reading-the-data"]], "NodeList": [[371, "NodeList"]], "Node": [[371, "Node"]], "Simple Reaction with Abrupt Change in Reaction Rate": [[371, "Simple-Reaction-with-Abrupt-Change-in-Reaction-Rate"]], "Scalar Bistable Wave": [[371, "Scalar-Bistable-Wave"]], "INCF/CNS 2022 Online Tutorial": [[394, "incf-cns-2022-online-tutorial"]], "Course Welcome": [[394, "course-welcome"]], "NEURON concepts": [[394, "neuron-concepts"]], "Using NEURON\u2019s GUI to build and simulate cells": [[394, "using-neuron-s-gui-to-build-and-simulate-cells"]], "Using NMODL to add new biophysical mechanisms": [[394, "using-nmodl-to-add-new-biophysical-mechanisms"]], "Using resources from ModelDB and NeuroMorpho.Org": [[394, "using-resources-from-modeldb-and-neuromorpho-org"]], "Networks: spike-triggered synaptic transmission, events, and artificial cells": [[394, "networks-spike-triggered-synaptic-transmission-events-and-artificial-cells"]], "Numerical Methods: accuracy, stability, speed": [[394, "numerical-methods-accuracy-stability-speed"]], "Scripting NEURON": [[394, "scripting-neuron"]], "Numerical methods: adaptive integration": [[394, "numerical-methods-adaptive-integration"]], "Reaction-diffusion simulations": [[394, "reaction-diffusion-simulations"]], "Other resources and wrap-up": [[394, "other-resources-and-wrap-up"]], "Removed Features": [[368, "removed-features"], [368, "id9"]], "Extracellular reaction-diffusion tutorial": [[378, "Extracellular-reaction-diffusion-tutorial"]], "Download files": [[378, "Download-files"]], "Recording from a single voxel": [[378, "Recording-from-a-single-voxel"]], "Boundary conditions": [[378, "Boundary-conditions"]], "Extracellular reactions": [[378, "Extracellular-reactions"]], "Inhomogeneities": [[378, "Inhomogeneities"]], "Initial conditions": [[378, "Initial-conditions"]], "Anisotropy": [[378, "Anisotropy"]], "Tissue characteristics": [[378, "Tissue-characteristics"]], "Restricting reactions to a part of a region": [[372, "Restricting-reactions-to-a-part-of-a-region"]], "Morphology and discretization": [[372, "Morphology-and-discretization"]], "The rxd.Region": [[372, "The-rxd.Region"]], "The rxd.Species": [[372, "The-rxd.Species"]], "The rxd.Reaction and its localization": [[372, "The-rxd.Reaction-and-its-localization"]], "Run and visualize the simulation": [[372, "Run-and-visualize-the-simulation"]], "Python tutorials": [[390, "python-tutorials"]], "Ball and Stick tutorial": [[390, null]], "CNS 2021 Online Tutorial": [[393, "cns-2021-online-tutorial"]]}, "indexentries": {"mulrunfitter": [[128, "index-0"], [258, "index-0"]], "impedance (hoc built-in class)": [[131, "Impedance"]], "compute() (hoc impedance method)": [[131, "Impedance.compute"]], "deltafac() (hoc impedance method)": [[131, "Impedance.deltafac"]], "input() (hoc impedance method)": [[131, "Impedance.input"]], "input_phase() (hoc impedance method)": [[131, "Impedance.input_phase"]], "loc() (hoc impedance method)": [[131, "Impedance.loc"]], "ratio() (hoc impedance method)": [[131, "Impedance.ratio"]], "transfer() (hoc impedance method)": [[131, "Impedance.transfer"]], "transfer_phase() (hoc impedance method)": [[131, "Impedance.transfer_phase"]], "hoc built-in function": [[132, "ghk"], [132, "nernst"], [133, "attr_praxis"], [133, "fit_praxis"], [133, "pval_praxis"], [133, "stop_praxis"], [143, "hocmech"], [144, "ion_charge"], [144, "ion_register"], [144, "ion_style"], [157, "fclamp"], [157, "fclampi"], [157, "fclampv"], [157, "fstim"], [157, "fstimi"], [157, "prstim"], [158, "rxd.nthread"], [158, "rxd.re_init"], [158, "rxd.set_solve_type"], [160, "delete_section"], [160, "disconnect"], [160, "id0"], [160, "ismembrane"], [160, "issection"], [160, "parent_connection"], [160, "parent_node"], [160, "parent_section"], [160, "psection"], [160, "secname"], [160, "section_exists"], [160, "section_orientation"], [160, "section_owner"], [160, "sectionname"], [161, "arc3d"], [161, "area"], [161, "define_shape"], [161, "diam3d"], [161, "distance"], [161, "getSpineArea"], [161, "n3d"], [161, "pt3dadd"], [161, "pt3dchange"], [161, "pt3dclear"], [161, "pt3dconst"], [161, "pt3dinsert"], [161, "pt3dremove"], [161, "pt3dstyle"], [161, "ri"], [161, "setSpineArea"], [161, "spine3d"], [161, "x3d"], [161, "y3d"], [161, "z3d"], [164, "pop_section"], [164, "push_section"], [165, "execute"], [165, "execute1"], [165, "load_file"], [165, "load_func"], [165, "load_proc"], [165, "load_template"], [166, "coredump_on_error"], [166, "execerror"], [166, "nrn_feenableexcept"], [166, "show_errmess_always"], [167, "boolean_dialog"], [167, "continue_dialog"], [167, "string_dialog"], [170, "ivoc_style"], [170, "pwman_place"], [170, "variable_domain"], [171, "nrnglobalmechmenu"], [171, "nrnmechmenu"], [171, "nrnpointmenu"], [171, "nrnsecmenu"], [176, "fmenu"], [178, "units"], [178, "xbutton"], [178, "xcheckbox"], [178, "xfixedvalue"], [178, "xlabel"], [178, "xmenu"], [178, "xpanel"], [178, "xpvalue"], [178, "xradiobutton"], [178, "xslider"], [178, "xstatebutton"], [178, "xvalue"], [178, "xvarlabel"], [181, "argtype"], [181, "numarg"], [182, "allobjects"], [182, "allobjectvars"], [182, "hoc_pointer_"], [182, "name_declared"], [182, "object_id"], [182, "object_pop"], [182, "object_push"], [182, "symbols"], [185, "lw"], [186, "hoc_stdio"], [186, "printf"], [187, "fscan"], [187, "getstr"], [187, "sred"], [187, "xred"], [188, "fprint"], [188, "ropen"], [188, "wopen"], [188, "xopen"], [190, "eqinit"], [190, "prmat"], [190, "solve"], [191, "abs"], [191, "atan"], [191, "atan2"], [191, "cos"], [191, "erf"], [191, "erfc"], [191, "exp"], [191, "int"], [191, "log"], [191, "log10"], [191, "sin"], [191, "sqrt"], [191, "tanh"], [194, "mcell_ran4"], [194, "mcell_ran4_init"], [194, "use_mcell_ran4"], [202, "init"], [202, "unref"], [203, "this_node"], [203, "this_section"], [208, "nrnpython"], [210, "sscanf"], [212, "sprint"], [212, "strcmp"], [213, "WinExec"], [213, "chdir"], [213, "getcwd"], [213, "machine_name"], [213, "neuronhome"], [213, "nrn_load_dll"], [213, "nrnversion"], [213, "show_winio"], [213, "startsw"], [213, "stopsw"], [213, "system"], [213, "unix_mac_pc"], [215, "batch_run"], [215, "batch_save"], [219, "quit"], [219, "retrieveaudit"], [219, "saveaudit"], [220, "checkpoint"], [220, "fadvance"], [220, "fcurrent"], [220, "finitialize"], [220, "fmatrix"], [220, "frecord_init"], [220, "initnrn"], [223, "print_session"], [223, "save_session"], [229, "doEvents"], [229, "doNotify"], [230, "axis"], [230, "graph"], [230, "graphmode"], [230, "plot"], [230, "plotx"], [230, "ploty"], [230, "plt"], [230, "regraph"], [230, "setcolor"], [230, "settext"]], "ghk()": [[132, "ghk"], [262, "ghk"]], "nernst()": [[132, "nernst"], [262, "nernst"]], "attr_praxis()": [[133, "attr_praxis"], [263, "attr_praxis"]], "fit_praxis()": [[133, "fit_praxis"], [263, "fit_praxis"]], "pval_praxis()": [[133, "pval_praxis"], [263, "pval_praxis"]], "stop_praxis()": [[133, "stop_praxis"], [263, "stop_praxis"]], "electrode (hoc built-in class)": [[142, "Electrode"]], "holding() (hoc electrode method)": [[142, "Electrode.Holding"]], "iclamp() (hoc electrode method)": [[142, "Electrode.IClamp"]], "location() (hoc electrode method)": [[142, "Electrode.Location"]], "returnlevel() (hoc electrode method)": [[142, "Electrode.Returnlevel"]], "testlevel() (hoc electrode method)": [[142, "Electrode.Testlevel"]], "vclamp() (hoc electrode method)": [[142, "Electrode.VClamp"]], "vclampfamily() (hoc electrode method)": [[142, "Electrode.VClampFamily"]], "vclampigraph() (hoc electrode method)": [[142, "Electrode.VClampigraph"]], "amp() (hoc electrode method)": [[142, "Electrode.amp"]], "amp0() (hoc electrode method)": [[142, "Electrode.amp0"]], "del() (hoc electrode method)": [[142, "Electrode.del"]], "dur() (hoc electrode method)": [[142, "Electrode.dur"]], "dur0() (hoc electrode method)": [[142, "Electrode.dur0"]], "hocmech()": [[143, "hocmech"]], "ion_charge()": [[144, "ion_charge"], [275, "ion_charge"]], "ion_register()": [[144, "ion_register"], [275, "ion_register"]], "ion_style()": [[144, "ion_style"], [275, "ion_style"]], "kschan (hoc built-in class)": [[145, "KSChan"]], "ksgate (hoc built-in class)": [[145, "KSGate"]], "ksstate (hoc built-in class)": [[145, "KSState"]], "kstrans (hoc built-in class)": [[145, "KSTrans"]], "ab() (hoc kstrans method)": [[145, "KSTrans.ab"]], "add_hhstate() (hoc kschan method)": [[145, "KSChan.add_hhstate"]], "add_ksstate() (hoc kschan method)": [[145, "KSChan.add_ksstate"]], "add_transition() (hoc kschan method)": [[145, "KSChan.add_transition"]], "erev() (hoc kschan method)": [[145, "KSChan.erev"]], "f() (hoc kstrans method)": [[145, "KSTrans.f"]], "frac() (hoc ksstate method)": [[145, "KSState.frac"]], "ftype() (hoc kstrans method)": [[145, "KSTrans.ftype"]], "gate() (hoc kschan method)": [[145, "KSChan.gate"]], "gate() (hoc ksstate method)": [[145, "KSState.gate"]], "gmax() (hoc kschan method)": [[145, "KSChan.gmax"]], "index() (hoc ksgate method)": [[145, "KSGate.index"]], "index() (hoc ksstate method)": [[145, "KSState.index"]], "index() (hoc kstrans method)": [[145, "KSTrans.index"]], "inftau() (hoc kstrans method)": [[145, "KSTrans.inftau"]], "ion() (hoc kschan method)": [[145, "KSChan.ion"]], "iv_type() (hoc kschan method)": [[145, "KSChan.iv_type"]], "ligand() (hoc kschan method)": [[145, "KSChan.ligand"]], "ligand() (hoc kstrans method)": [[145, "KSTrans.ligand"]], "name() (hoc kschan method)": [[145, "KSChan.name"]], "name() (hoc ksstate method)": [[145, "KSState.name"]], "ngate() (hoc kschan method)": [[145, "KSChan.ngate"]], "nligand() (hoc kschan method)": [[145, "KSChan.nligand"]], "nstate() (hoc kschan method)": [[145, "KSChan.nstate"]], "nstate() (hoc ksgate method)": [[145, "KSGate.nstate"]], "ntrans() (hoc kschan method)": [[145, "KSChan.ntrans"]], "parm() (hoc kstrans method)": [[145, "KSTrans.parm"]], "power() (hoc ksgate method)": [[145, "KSGate.power"]], "pr() (hoc kschan method)": [[145, "KSChan.pr"]], "remove_state() (hoc kschan method)": [[145, "KSChan.remove_state"]], "remove_transition() (hoc kschan method)": [[145, "KSChan.remove_transition"]], "set_f() (hoc kstrans method)": [[145, "KSTrans.set_f"]], "setstructure() (hoc kschan method)": [[145, "KSChan.setstructure"]], "sindex() (hoc ksgate method)": [[145, "KSGate.sindex"]], "src() (hoc kstrans method)": [[145, "KSTrans.src"]], "state() (hoc kschan method)": [[145, "KSChan.state"]], "target() (hoc kstrans method)": [[145, "KSTrans.target"]], "trans() (hoc kschan method)": [[145, "KSChan.trans"]], "type() (hoc kstrans method)": [[145, "KSTrans.type"]], "linearmechanism (hoc built-in class)": [[146, "LinearMechanism"]], "apcount (hoc built-in class)": [[148, "APCount"]], "alphasynapse (hoc built-in class)": [[148, "AlphaSynapse"]], "exp2syn (hoc built-in class)": [[148, "Exp2Syn"]], "expsyn (hoc built-in class)": [[148, "ExpSyn"]], "iclamp (hoc built-in class)": [[148, "IClamp"]], "intfire1 (hoc built-in class)": [[148, "IntFire1"]], "intfire2 (hoc built-in class)": [[148, "IntFire2"]], "intfire4 (hoc built-in class)": [[148, "IntFire4"]], "netstim (hoc built-in class)": [[148, "NetStim"]], "seclamp (hoc built-in class)": [[148, "SEClamp"]], "vclamp (hoc built-in class)": [[148, "VClamp"]], "capacitance (mechanism)": [[148, "index-1"], [279, "index-1"]], "extracellular (mechanism)": [[148, "index-5"], [279, "index-5"]], "fastpas (mechanism)": [[148, "index-4"], [279, "index-4"]], "get_loc() (hoc pnt method)": [[148, "pnt.get_loc"]], "get_segment() (hoc pnt method)": [[148, "pnt.get_segment"]], "has_loc() (hoc pnt method)": [[148, "pnt.has_loc"]], "hh (mechanism)": [[148, "index-2"], [279, "index-2"]], "loc() (hoc pnt method)": [[148, "pnt.loc"]], "pas (mechanism)": [[148, "index-3"], [279, "index-3"]], "setdata (mechanism)": [[148, "index-0"], [279, "index-0"]], "mechanismtype (hoc built-in class)": [[151, "MechanismType"]], "action() (hoc mechanismtype method)": [[151, "MechanismType.action"]], "count() (hoc mechanismtype method)": [[151, "MechanismType.count"]], "has_net_event() (hoc mechanismtype method)": [[151, "MechanismType.has_net_event"]], "internal_type() (hoc mechanismtype method)": [[151, "MechanismType.internal_type"]], "is_artificial() (hoc mechanismtype method)": [[151, "MechanismType.is_artificial"]], "is_netcon_target() (hoc mechanismtype method)": [[151, "MechanismType.is_netcon_target"]], "make() (hoc mechanismtype method)": [[151, "MechanismType.make"]], "menu() (hoc mechanismtype method)": [[151, "MechanismType.menu"]], "pp_begin() (hoc mechanismtype method)": [[151, "MechanismType.pp_begin"]], "pp_next() (hoc mechanismtype method)": [[151, "MechanismType.pp_next"]], "remove() (hoc mechanismtype method)": [[151, "MechanismType.remove"]], "select() (hoc mechanismtype method)": [[151, "MechanismType.select"]], "selected() (hoc mechanismtype method)": [[151, "MechanismType.selected"]], "netcon (hoc built-in class)": [[154, "NetCon"]], "netcon.delay (hoc built-in variable)": [[154, "NetCon.delay"]], "netcon.threshold (hoc built-in variable)": [[154, "NetCon.threshold"]], "netcon.weight (hoc built-in variable)": [[154, "NetCon.weight"]], "netcon.x (hoc built-in variable)": [[154, "NetCon.x"]], "active() (hoc netcon method)": [[154, "NetCon.active"]], "event() (hoc netcon method)": [[154, "NetCon.event"]], "get_recordvec() (hoc netcon method)": [[154, "NetCon.get_recordvec"]], "postcell() (hoc netcon method)": [[154, "NetCon.postcell"]], "postcelllist() (hoc netcon method)": [[154, "NetCon.postcelllist"]], "postloc() (hoc netcon method)": [[154, "NetCon.postloc"]], "pre() (hoc netcon method)": [[154, "NetCon.pre"]], "precell() (hoc netcon method)": [[154, "NetCon.precell"]], "precelllist() (hoc netcon method)": [[154, "NetCon.precelllist"]], "prelist() (hoc netcon method)": [[154, "NetCon.prelist"]], "preloc() (hoc netcon method)": [[154, "NetCon.preloc"]], "record() (hoc netcon method)": [[154, "NetCon.record"]], "setpost() (hoc netcon method)": [[154, "NetCon.setpost"]], "srcgid() (hoc netcon method)": [[154, "NetCon.srcgid"]], "syn() (hoc netcon method)": [[154, "NetCon.syn"]], "synlist() (hoc netcon method)": [[154, "NetCon.synlist"]], "valid() (hoc netcon method)": [[154, "NetCon.valid"]], "wcnt() (hoc netcon method)": [[154, "NetCon.wcnt"]], "parallelcontext (hoc built-in class)": [[155, "ParallelContext"]], "threads() (hoc parallelcontext method)": [[155, "ParallelContext.Threads"]], "allgather() (hoc parallelcontext method)": [[155, "ParallelContext.allgather"]], "allreduce() (hoc parallelcontext method)": [[155, "ParallelContext.allreduce"]], "alltoall() (hoc parallelcontext method)": [[155, "ParallelContext.alltoall"]], "barrier() (hoc parallelcontext method)": [[155, "ParallelContext.barrier"]], "broadcast() (hoc parallelcontext method)": [[155, "ParallelContext.broadcast"]], "cell() (hoc parallelcontext method)": [[155, "ParallelContext.cell"]], "context() (hoc parallelcontext method)": [[155, "ParallelContext.context"]], "done() (hoc parallelcontext method)": [[155, "ParallelContext.done"]], "dt() (hoc parallelcontext method)": [[155, "ParallelContext.dt"]], "event_time() (hoc parallelcontext method)": [[155, "ParallelContext.event_time"]], "gid2cell() (hoc parallelcontext method)": [[155, "ParallelContext.gid2cell"]], "gid2obj() (hoc parallelcontext method)": [[155, "ParallelContext.gid2obj"]], "gid_clear() (hoc parallelcontext method)": [[155, "ParallelContext.gid_clear"]], "gid_connect() (hoc parallelcontext method)": [[155, "ParallelContext.gid_connect"]], "gid_exists() (hoc parallelcontext method)": [[155, "ParallelContext.gid_exists"]], "id() (hoc parallelcontext method)": [[155, "ParallelContext.id"]], "id_bbs() (hoc parallelcontext method)": [[155, "ParallelContext.id_bbs"]], "id_world() (hoc parallelcontext method)": [[155, "ParallelContext.id_world"]], "integ_time() (hoc parallelcontext method)": [[155, "ParallelContext.integ_time"]], "look() (hoc parallelcontext method)": [[155, "ParallelContext.look"]], "look_take() (hoc parallelcontext method)": [[155, "ParallelContext.look_take"]], "max_histogram() (hoc parallelcontext method)": [[155, "ParallelContext.max_histogram"]], "mech_time() (hoc parallelcontext method)": [[155, "ParallelContext.mech_time"]], "multisplit() (hoc parallelcontext method)": [[155, "ParallelContext.multisplit"]], "nhost() (hoc parallelcontext method)": [[155, "ParallelContext.nhost"]], "nhost_bbs() (hoc parallelcontext method)": [[155, "ParallelContext.nhost_bbs"]], "nhost_world() (hoc parallelcontext method)": [[155, "ParallelContext.nhost_world"]], "nthread() (hoc parallelcontext method)": [[155, "ParallelContext.nthread"]], "outputcell() (hoc parallelcontext method)": [[155, "ParallelContext.outputcell"]], "pack() (hoc parallelcontext method)": [[155, "ParallelContext.pack"]], "partition() (hoc parallelcontext method)": [[155, "ParallelContext.partition"]], "post() (hoc parallelcontext method)": [[155, "ParallelContext.post"]], "prcellstate() (hoc parallelcontext method)": [[155, "ParallelContext.prcellstate"]], "psolve() (hoc parallelcontext method)": [[155, "ParallelContext.psolve"]], "py_alltoall() (hoc parallelcontext method)": [[155, "ParallelContext.py_alltoall"]], "pyret() (hoc parallelcontext method)": [[155, "ParallelContext.pyret"]], "retval() (hoc parallelcontext method)": [[155, "ParallelContext.retval"]], "runworker() (hoc parallelcontext method)": [[155, "ParallelContext.runworker"]], "sec_in_thread() (hoc parallelcontext method)": [[155, "ParallelContext.sec_in_thread"]], "send_time() (hoc parallelcontext method)": [[155, "ParallelContext.send_time"]], "set_gid2node() (hoc parallelcontext method)": [[155, "ParallelContext.set_gid2node"]], "set_maxstep() (hoc parallelcontext method)": [[155, "ParallelContext.set_maxstep"]], "setup_transfer() (hoc parallelcontext method)": [[155, "ParallelContext.setup_transfer"]], "source_var() (hoc parallelcontext method)": [[155, "ParallelContext.source_var"]], "spike_compress() (hoc parallelcontext method)": [[155, "ParallelContext.spike_compress"]], "spike_record() (hoc parallelcontext method)": [[155, "ParallelContext.spike_record"]], "spike_statistics() (hoc parallelcontext method)": [[155, "ParallelContext.spike_statistics"]], "splitcell() (hoc parallelcontext method)": [[155, "ParallelContext.splitcell"]], "step_time() (hoc parallelcontext method)": [[155, "ParallelContext.step_time"]], "step_wait() (hoc parallelcontext method)": [[155, "ParallelContext.step_wait"]], "submit() (hoc parallelcontext method)": [[155, "ParallelContext.submit"]], "subworlds() (hoc parallelcontext method)": [[155, "ParallelContext.subworlds"]], "t() (hoc parallelcontext method)": [[155, "ParallelContext.t"]], "take() (hoc parallelcontext method)": [[155, "ParallelContext.take"]], "target_var() (hoc parallelcontext method)": [[155, "ParallelContext.target_var"]], "thread_busywait() (hoc parallelcontext method)": [[155, "ParallelContext.thread_busywait"]], "thread_ctime() (hoc parallelcontext method)": [[155, "ParallelContext.thread_ctime"]], "thread_how_many_proc() (hoc parallelcontext method)": [[155, "ParallelContext.thread_how_many_proc"]], "thread_stat() (hoc parallelcontext method)": [[155, "ParallelContext.thread_stat"]], "threshold() (hoc parallelcontext method)": [[155, "ParallelContext.threshold"]], "time() (hoc parallelcontext method)": [[155, "ParallelContext.time"]], "timeout() (hoc parallelcontext method)": [[155, "ParallelContext.timeout"]], "unpack() (hoc parallelcontext method)": [[155, "ParallelContext.unpack"]], "upkpyobj() (hoc parallelcontext method)": [[155, "ParallelContext.upkpyobj"]], "upkscalar() (hoc parallelcontext method)": [[155, "ParallelContext.upkscalar"]], "upkstr() (hoc parallelcontext method)": [[155, "ParallelContext.upkstr"]], "upkvec() (hoc parallelcontext method)": [[155, "ParallelContext.upkvec"]], "userid() (hoc parallelcontext method)": [[155, "ParallelContext.userid"]], "vtransfer_time() (hoc parallelcontext method)": [[155, "ParallelContext.vtransfer_time"]], "wait_time() (hoc parallelcontext method)": [[155, "ParallelContext.wait_time"]], "working() (hoc parallelcontext method)": [[155, "ParallelContext.working"]], "parallelnetmanager (hoc built-in class)": [[156, "ParallelNetManager"]], "create_cell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.create_cell"]], "gatherspikes() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.gatherspikes"]], "gid_exists() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.gid_exists"]], "nc_append() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.nc_append"]], "pcontinue() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.pcontinue"]], "pinit() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.pinit"]], "prstat() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.prstat"]], "prun() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.prun"]], "psolve() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.psolve"]], "register_cell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.register_cell"]], "round_robin() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.round_robin"]], "set_gid2node() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.set_gid2node"]], "spike_record() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.spike_record"]], "splitcell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.splitcell"]], "want_all_spikes() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.want_all_spikes"]], "fclamp()": [[157, "fclamp"], [288, "fclamp"]], "fclampi()": [[157, "fclampi"], [288, "fclampi"]], "fclampv()": [[157, "fclampv"], [288, "fclampv"]], "fstim()": [[157, "fstim"], [288, "fstim"]], "fstimi()": [[157, "fstimi"], [288, "fstimi"]], "prstim()": [[157, "prstim"], [288, "prstim"]], "geometry (rxd.region property)": [[158, "rxd.Region.geometry"], [289, "rxd.Region.geometry"]], "name (rxd.region property)": [[158, "rxd.Region.name"], [289, "rxd.Region.name"]], "nrn_region (rxd.region property)": [[158, "rxd.Region.nrn_region"], [289, "rxd.Region.nrn_region"]], "rxd.extracellular (hoc built-in class)": [[158, "rxd.Extracellular"]], "rxd.multicompartmentreaction (hoc built-in class)": [[158, "rxd.MultiCompartmentReaction"]], "rxd.parameter (hoc built-in class)": [[158, "rxd.Parameter"]], "rxd.rate (hoc built-in class)": [[158, "rxd.Rate"]], "rxd.reaction (hoc built-in class)": [[158, "rxd.Reaction"]], "rxd.region (hoc built-in class)": [[158, "rxd.Region"]], "rxd.rxdexception (hoc built-in class)": [[158, "rxd.RxDException"]], "rxd.species (hoc built-in class)": [[158, "rxd.Species"]], "rxd.state (hoc built-in class)": [[158, "rxd.State"]], "rxd.nodelist.nodelist (hoc built-in class)": [[158, "rxd.nodelist.NodeList"]], "rxd.nthread()": [[158, "rxd.nthread"], [289, "rxd.nthread"]], "rxd.re_init()": [[158, "rxd.re_init"], [289, "rxd.re_init"]], "rxd.set_solve_type()": [[158, "rxd.set_solve_type"], [289, "rxd.set_solve_type"]], "secs (rxd.region property)": [[158, "rxd.Region.secs"], [289, "rxd.Region.secs"]], "v (rxd property)": [[158, "rxd.v"], [289, "rxd.v"]], "statetransitionevent (hoc built-in class)": [[159, "StateTransitionEvent"]], "state() (hoc statetransitionevent method)": [[159, "StateTransitionEvent.state"]], "transition() (hoc statetransitionevent method)": [[159, "StateTransitionEvent.transition"]], "connect (keyword)": [[160, "index-1"]], "create (keyword)": [[160, "index-0"]], "delete_section()": [[160, "delete_section"], [292, "delete_section"]], "disconnect()": [[160, "disconnect"], [292, "disconnect"]], "ismembrane()": [[160, "ismembrane"], [292, "ismembrane"]], "issection()": [[160, "issection"], [292, "issection"]], "nseg (hoc built-in variable)": [[160, "nseg"]], "parent_connection()": [[160, "parent_connection"], [292, "parent_connection"]], "parent_node()": [[160, "parent_node"], [292, "parent_node"]], "parent_section()": [[160, "parent_section"], [292, "parent_section"]], "psection()": [[160, "psection"], [292, "psection"]], "secname()": [[160, "secname"], [292, "secname"]], "section_exists()": [[160, "section_exists"], [292, "section_exists"]], "section_orientation()": [[160, "section_orientation"], [292, "section_orientation"]], "section_owner()": [[160, "section_owner"], [292, "section_owner"]], "sectionname()": [[160, "sectionname"], [292, "sectionname"]], "topology()": [[160, "id0"], [292, "id0"]], "l (hoc built-in variable)": [[161, "L"]], "ra (hoc built-in variable)": [[161, "Ra"]], "arc3d()": [[161, "arc3d"], [293, "arc3d"]], "area()": [[161, "area"], [293, "area"]], "define_shape()": [[161, "define_shape"], [293, "define_shape"]], "diam (hoc built-in variable)": [[161, "diam"]], "diam3d()": [[161, "diam3d"], [293, "diam3d"]], "diam_changed (hoc built-in variable)": [[161, "diam_changed"]], "distance()": [[161, "distance"], [293, "distance"]], "getspinearea()": [[161, "getSpineArea"], [293, "getSpineArea"]], "n3d()": [[161, "n3d"], [293, "n3d"]], "pt3dadd()": [[161, "pt3dadd"], [293, "pt3dadd"]], "pt3dchange()": [[161, "pt3dchange"], [293, "pt3dchange"]], "pt3dclear()": [[161, "pt3dclear"], [293, "pt3dclear"]], "pt3dconst()": [[161, "pt3dconst"], [293, "pt3dconst"]], "pt3dinsert()": [[161, "pt3dinsert"], [293, "pt3dinsert"]], "pt3dremove()": [[161, "pt3dremove"], [293, "pt3dremove"]], "pt3dstyle()": [[161, "pt3dstyle"], [293, "pt3dstyle"]], "ri()": [[161, "ri"], [293, "ri"]], "setspinearea()": [[161, "setSpineArea"], [293, "setSpineArea"]], "spine3d()": [[161, "spine3d"], [293, "spine3d"]], "x3d()": [[161, "x3d"], [293, "x3d"]], "y3d()": [[161, "y3d"], [293, "y3d"]], "z3d()": [[161, "z3d"], [293, "z3d"]], "sectionlist (hoc built-in class)": [[162, "SectionList"]], "allroots() (hoc sectionlist method)": [[162, "SectionList.allroots"]], "append() (hoc sectionlist method)": [[162, "SectionList.append"]], "children() (hoc sectionlist method)": [[162, "SectionList.children"]], "printnames() (hoc sectionlist method)": [[162, "SectionList.printnames"]], "remove() (hoc sectionlist method)": [[162, "SectionList.remove"]], "subtree() (hoc sectionlist method)": [[162, "SectionList.subtree"]], "unique() (hoc sectionlist method)": [[162, "SectionList.unique"]], "wholetree() (hoc sectionlist method)": [[162, "SectionList.wholetree"]], "sectionref (hoc built-in class)": [[163, "SectionRef"]], "child() (hoc sectionref method)": [[163, "SectionRef.child"]], "exists() (hoc sectionref method)": [[163, "SectionRef.exists"]], "has_parent() (hoc sectionref method)": [[163, "SectionRef.has_parent"]], "has_trueparent() (hoc sectionref method)": [[163, "SectionRef.has_trueparent"]], "is_cas() (hoc sectionref method)": [[163, "SectionRef.is_cas"]], "nchild() (hoc sectionref method)": [[163, "SectionRef.nchild"]], "parent() (hoc sectionref method)": [[163, "SectionRef.parent"]], "root() (hoc sectionref method)": [[163, "SectionRef.root"]], "sec() (hoc sectionref method)": [[163, "SectionRef.sec"]], "trueparent() (hoc sectionref method)": [[163, "SectionRef.trueparent"]], "access (keyword)": [[164, "index-0"]], "forall (keyword)": [[164, "index-1"]], "forsec (keyword)": [[164, "index-3"]], "ifsec (keyword)": [[164, "index-2"]], "pop_section()": [[164, "pop_section"], [296, "pop_section"]], "push_section()": [[164, "push_section"], [296, "push_section"]], "execute()": [[165, "execute"], [297, "execute"]], "execute1()": [[165, "execute1"], [297, "execute1"]], "load_file()": [[165, "load_file"], [297, "load_file"]], "load_func()": [[165, "load_func"], [297, "load_func"]], "load_proc()": [[165, "load_proc"], [297, "load_proc"]], "load_template()": [[165, "load_template"], [297, "load_template"]], "coredump_on_error()": [[166, "coredump_on_error"], [298, "coredump_on_error"]], "execerror()": [[166, "execerror"], [298, "execerror"]], "nrn_feenableexcept()": [[166, "nrn_feenableexcept"], [298, "nrn_feenableexcept"]], "show_errmess_always()": [[166, "show_errmess_always"], [298, "show_errmess_always"]], "boolean_dialog()": [[167, "boolean_dialog"], [299, "boolean_dialog"]], "continue_dialog()": [[167, "continue_dialog"], [299, "continue_dialog"]], "string_dialog()": [[167, "string_dialog"], [299, "string_dialog"]], "deck (hoc built-in class)": [[168, "Deck"]], "hbox (hoc built-in class)": [[168, "HBox"]], "vbox (hoc built-in class)": [[168, "VBox"]], "adjust() (hoc vbox method)": [[168, "VBox.adjust"]], "adjuster() (hoc vbox method)": [[168, "VBox.adjuster"]], "dialog() (hoc vbox method)": [[168, "VBox.dialog"]], "dismiss_action() (hoc vbox method)": [[168, "VBox.dismiss_action"]], "flip_to() (hoc deck method)": [[168, "Deck.flip_to"]], "full_request() (hoc vbox method)": [[168, "VBox.full_request"]], "intercept() (hoc deck method)": [[168, "Deck.intercept"]], "intercept() (hoc vbox method)": [[168, "VBox.intercept"]], "ismapped() (hoc vbox method)": [[168, "VBox.ismapped"]], "map() (hoc deck method)": [[168, "Deck.map"]], "map() (hoc vbox method)": [[168, "VBox.map"]], "move_last() (hoc deck method)": [[168, "Deck.move_last"]], "priority() (hoc vbox method)": [[168, "VBox.priority"]], "ref() (hoc vbox method)": [[168, "VBox.ref"]], "remove() (hoc deck method)": [[168, "Deck.remove"]], "remove_last() (hoc deck method)": [[168, "Deck.remove_last"]], "save() (hoc deck method)": [[168, "Deck.save"]], "save() (hoc vbox method)": [[168, "VBox.save"]], "size() (hoc vbox method)": [[168, "VBox.size"]], "unmap() (hoc deck method)": [[168, "Deck.unmap"]], "unmap() (hoc vbox method)": [[168, "VBox.unmap"]], "list (hoc built-in class)": [[169, "List"]], "accept_action() (hoc list method)": [[169, "List.accept_action"]], "append() (hoc list method)": [[169, "List.append"]], "browser() (hoc list method)": [[169, "List.browser"]], "count() (hoc list method)": [[169, "List.count"]], "index() (hoc list method)": [[169, "List.index"]], "insrt() (hoc list method)": [[169, "List.insrt"]], "o() (hoc list method)": [[169, "List.o"]], "object() (hoc list method)": [[169, "List.object"]], "prepend() (hoc list method)": [[169, "List.prepend"]], "remove() (hoc list method)": [[169, "List.remove"]], "remove_all() (hoc list method)": [[169, "List.remove_all"]], "scroll_pos() (hoc list method)": [[169, "List.scroll_pos"]], "select() (hoc list method)": [[169, "List.select"]], "select_action() (hoc list method)": [[169, "List.select_action"]], "selected() (hoc list method)": [[169, "List.selected"]], "ivoc_style()": [[170, "ivoc_style"], [302, "ivoc_style"]], "pwman_place()": [[170, "pwman_place"], [302, "pwman_place"]], "variable_domain()": [[170, "variable_domain"], [302, "variable_domain"]], "nrnglobalmechmenu()": [[171, "nrnglobalmechmenu"], [303, "nrnglobalmechmenu"]], "nrnmechmenu()": [[171, "nrnmechmenu"], [303, "nrnmechmenu"]], "nrnpointmenu()": [[171, "nrnpointmenu"], [303, "nrnpointmenu"]], "nrnsecmenu()": [[171, "nrnsecmenu"], [303, "nrnsecmenu"]], "pwmanager (hoc built-in class)": [[172, "PWManager"]], "close() (hoc pwmanager method)": [[172, "PWManager.close"]], "count() (hoc pwmanager method)": [[172, "PWManager.count"]], "deco() (hoc pwmanager method)": [[172, "PWManager.deco"]], "deiconify() (hoc pwmanager method)": [[172, "PWManager.deiconify"]], "group() (hoc pwmanager method)": [[172, "PWManager.group"]], "hide() (hoc pwmanager method)": [[172, "PWManager.hide"]], "iconify() (hoc pwmanager method)": [[172, "PWManager.iconify"]], "is_mapped() (hoc pwmanager method)": [[172, "PWManager.is_mapped"]], "landscape() (hoc pwmanager method)": [[172, "PWManager.landscape"]], "leader() (hoc pwmanager method)": [[172, "PWManager.leader"]], "manager() (hoc pwmanager method)": [[172, "PWManager.manager"]], "map() (hoc pwmanager method)": [[172, "PWManager.map"]], "name() (hoc pwmanager method)": [[172, "PWManager.name"]], "paper_place() (hoc pwmanager method)": [[172, "PWManager.paper_place"]], "printfile() (hoc pwmanager method)": [[172, "PWManager.printfile"]], "save() (hoc pwmanager method)": [[172, "PWManager.save"]], "scale() (hoc pwmanager method)": [[172, "PWManager.scale"]], "snap() (hoc pwmanager method)": [[172, "PWManager.snap"]], "window_place() (hoc pwmanager method)": [[172, "PWManager.window_place"]], "sectionbrowser (hoc built-in class)": [[173, "SectionBrowser"]], "accept_action() (hoc sectionbrowser method)": [[173, "SectionBrowser.accept_action"]], "select() (hoc sectionbrowser method)": [[173, "SectionBrowser.select"]], "select_action() (hoc sectionbrowser method)": [[173, "SectionBrowser.select_action"]], "symchooser (hoc built-in class)": [[174, "SymChooser"]], "run() (hoc symchooser method)": [[174, "SymChooser.run"]], "text() (hoc symchooser method)": [[174, "SymChooser.text"]], "texteditor (hoc built-in class)": [[175, "TextEditor"]], "map() (hoc texteditor method)": [[175, "TextEditor.map"]], "readonly() (hoc texteditor method)": [[175, "TextEditor.readonly"]], "text() (hoc texteditor method)": [[175, "TextEditor.text"]], "fmenu()": [[176, "fmenu"], [308, "fmenu"]], "valuefieldeditor (hoc built-in class)": [[177, "ValueFieldEditor"]], "default() (hoc valuefieldeditor method)": [[177, "ValueFieldEditor.default"]], "units()": [[178, "units"], [310, "units"]], "xbutton()": [[178, "xbutton"], [310, "xbutton"]], "xcheckbox()": [[178, "xcheckbox"], [310, "xcheckbox"]], "xfixedvalue()": [[178, "xfixedvalue"], [310, "xfixedvalue"]], "xlabel()": [[178, "xlabel"], [310, "xlabel"]], "xmenu()": [[178, "xmenu"], [310, "xmenu"]], "xpanel()": [[178, "xpanel"], [310, "xpanel"]], "xpvalue()": [[178, "xpvalue"], [310, "xpvalue"]], "xradiobutton()": [[178, "xradiobutton"], [310, "xradiobutton"]], "xslider()": [[178, "xslider"], [310, "xslider"]], "xstatebutton()": [[178, "xstatebutton"], [310, "xstatebutton"]], "xvalue()": [[178, "xvalue"], [310, "xvalue"]], "xvarlabel()": [[178, "xvarlabel"], [310, "xvarlabel"]], "argtype()": [[181, "argtype"], [313, "argtype"]], "arguments": [[181, "index-8"], [313, "index-8"]], "comments": [[181, "index-1"], [313, "index-1"]], "expression": [[181, "index-2"], [313, "index-2"]], "func": [[181, "index-5"], [313, "index-5"]], "iterator": [[181, "index-7"], [313, "index-7"]], "numarg()": [[181, "numarg"], [313, "numarg"]], "obfunc": [[181, "index-6"], [313, "index-6"]], "proc": [[181, "index-4"], [313, "index-4"]], "statement": [[181, "index-3"], [313, "index-3"]], "syntax (hoc)": [[181, "index-0"], [313, "index-0"]], "allobjects()": [[182, "allobjects"], [314, "allobjects"]], "allobjectvars()": [[182, "allobjectvars"], [314, "allobjectvars"]], "hoc_pointer_()": [[182, "hoc_pointer_"], [314, "hoc_pointer_"]], "name_declared()": [[182, "name_declared"], [314, "name_declared"]], "object_id()": [[182, "object_id"], [314, "object_id"]], "object_pop()": [[182, "object_pop"], [314, "object_pop"]], "object_push()": [[182, "object_push"], [314, "object_push"]], "symbols()": [[182, "symbols"], [314, "symbols"]], "file (hoc built-in class)": [[184, "File"]], "aopen() (hoc file method)": [[184, "File.aopen"]], "chooser() (hoc file method)": [[184, "File.chooser"]], "close() (hoc file method)": [[184, "File.close"]], "dir() (hoc file method)": [[184, "File.dir"]], "eof() (hoc file method)": [[184, "File.eof"]], "flush() (hoc file method)": [[184, "File.flush"]], "getname() (hoc file method)": [[184, "File.getname"]], "gets() (hoc file method)": [[184, "File.gets"]], "isopen() (hoc file method)": [[184, "File.isopen"]], "mktemp() (hoc file method)": [[184, "File.mktemp"]], "printf() (hoc file method)": [[184, "File.printf"]], "ropen() (hoc file method)": [[184, "File.ropen"]], "scanstr() (hoc file method)": [[184, "File.scanstr"]], "scanvar() (hoc file method)": [[184, "File.scanvar"]], "seek() (hoc file method)": [[184, "File.seek"]], "tell() (hoc file method)": [[184, "File.tell"]], "unlink() (hoc file method)": [[184, "File.unlink"]], "vread() (hoc file method)": [[184, "File.vread"]], "vwrite() (hoc file method)": [[184, "File.vwrite"]], "wopen() (hoc file method)": [[184, "File.wopen"]], "xopen() (hoc file method)": [[184, "File.xopen"]], "lw()": [[185, "lw"], [317, "lw"]], "hoc_stdio()": [[186, "hoc_stdio"]], "printf()": [[186, "printf"], [318, "printf"]], "fscan()": [[187, "fscan"], [319, "fscan"]], "getstr()": [[187, "getstr"], [319, "getstr"]], "sred()": [[187, "sred"], [319, "sred"]], "xred()": [[187, "xred"], [319, "xred"]], "fprint()": [[188, "fprint"], [320, "fprint"]], "ropen()": [[188, "ropen"], [320, "id0"]], "wopen()": [[188, "wopen"], [320, "wopen"]], "xopen()": [[188, "xopen"], [320, "xopen"]], "eqinit()": [[190, "eqinit"], [322, "eqinit"]], "prmat()": [[190, "prmat"], [322, "prmat"]], "solve()": [[190, "solve"], [322, "solve"]], "abs()": [[191, "abs"], [323, "abs"]], "atan()": [[191, "atan"], [323, "atan"]], "atan2()": [[191, "atan2"], [323, "atan2"]], "cos()": [[191, "cos"], [323, "cos"]], "erf()": [[191, "erf"], [323, "erf"]], "erfc()": [[191, "erfc"], [323, "erfc"]], "exp()": [[191, "exp"], [323, "exp"]], "int()": [[191, "int"], [323, "int"]], "log()": [[191, "log"], [323, "log"]], "log10()": [[191, "log10"], [323, "log10"]], "sin()": [[191, "sin"], [323, "sin"]], "sqrt()": [[191, "sqrt"], [323, "sqrt"]], "tanh()": [[191, "tanh"], [323, "tanh"]], "guimath (hoc built-in class)": [[192, "GUIMath"]], "d2line() (hoc guimath method)": [[192, "GUIMath.d2line"]], "d2line_seg() (hoc guimath method)": [[192, "GUIMath.d2line_seg"]], "feround() (hoc guimath method)": [[192, "GUIMath.feround"]], "inside() (hoc guimath method)": [[192, "GUIMath.inside"]], "matrix (hoc built-in class)": [[193, "Matrix"]], "matrix.x (hoc built-in variable)": [[193, "Matrix.x"]], "add() (hoc matrix method)": [[193, "Matrix.add"]], "bcopy() (hoc matrix method)": [[193, "Matrix.bcopy"]], "c() (hoc matrix method)": [[193, "Matrix.c"]], "cholesky_factor() (hoc matrix method)": [[193, "Matrix.cholesky_factor"]], "det() (hoc matrix method)": [[193, "Matrix.det"]], "exp() (hoc matrix method)": [[193, "Matrix.exp"]], "fprint() (hoc matrix method)": [[193, "Matrix.fprint"]], "from_vector() (hoc matrix method)": [[193, "Matrix.from_vector"]], "getcol() (hoc matrix method)": [[193, "Matrix.getcol"]], "getdiag() (hoc matrix method)": [[193, "Matrix.getdiag"]], "getrow() (hoc matrix method)": [[193, "Matrix.getrow"]], "getval() (hoc matrix method)": [[193, "Matrix.getval"]], "ident() (hoc matrix method)": [[193, "Matrix.ident"]], "inverse() (hoc matrix method)": [[193, "Matrix.inverse"]], "mulm() (hoc matrix method)": [[193, "Matrix.mulm"]], "muls() (hoc matrix method)": [[193, "Matrix.muls"]], "mulv() (hoc matrix method)": [[193, "Matrix.mulv"]], "ncol() (hoc matrix method)": [[193, "Matrix.ncol"]], "nrow() (hoc matrix method)": [[193, "Matrix.nrow"]], "pow() (hoc matrix method)": [[193, "Matrix.pow"]], "printf() (hoc matrix method)": [[193, "Matrix.printf"]], "resize() (hoc matrix method)": [[193, "Matrix.resize"]], "scanf() (hoc matrix method)": [[193, "Matrix.scanf"]], "setcol() (hoc matrix method)": [[193, "Matrix.setcol"]], "setdiag() (hoc matrix method)": [[193, "Matrix.setdiag"]], "setrow() (hoc matrix method)": [[193, "Matrix.setrow"]], "setval() (hoc matrix method)": [[193, "Matrix.setval"]], "solv() (hoc matrix method)": [[193, "Matrix.solv"]], "spgetrowval() (hoc matrix method)": [[193, "Matrix.spgetrowval"]], "sprowlen() (hoc matrix method)": [[193, "Matrix.sprowlen"]], "svd() (hoc matrix method)": [[193, "Matrix.svd"]], "symmeig() (hoc matrix method)": [[193, "Matrix.symmeig"]], "to_vector() (hoc matrix method)": [[193, "Matrix.to_vector"]], "transpose() (hoc matrix method)": [[193, "Matrix.transpose"]], "zero() (hoc matrix method)": [[193, "Matrix.zero"]], "mcell_ran4()": [[194, "mcell_ran4"], [326, "mcell_ran4"]], "mcell_ran4_init()": [[194, "mcell_ran4_init"], [326, "mcell_ran4_init"]], "use_mcell_ran4()": [[194, "use_mcell_ran4"], [326, "use_mcell_ran4"]], "float_epsilon (hoc built-in variable)": [[195, "float_epsilon"]], "acg() (hoc random method)": [[196, "Random.ACG"]], "mcellran4() (hoc random method)": [[196, "Random.MCellRan4"]], "mlcg() (hoc random method)": [[196, "Random.MLCG"]], "random (hoc built-in class)": [[196, "Random"]], "random123() (hoc random method)": [[196, "Random.Random123"]], "random123_globalindex() (hoc random method)": [[196, "Random.Random123_globalindex"]], "binomial() (hoc random method)": [[196, "Random.binomial"]], "discunif() (hoc random method)": [[196, "Random.discunif"]], "erlang() (hoc random method)": [[196, "Random.erlang"]], "geometric() (hoc random method)": [[196, "Random.geometric"]], "hypergeo() (hoc random method)": [[196, "Random.hypergeo"]], "lognormal() (hoc random method)": [[196, "Random.lognormal"]], "negexp() (hoc random method)": [[196, "Random.negexp"]], "normal() (hoc random method)": [[196, "Random.normal"]], "play() (hoc random method)": [[196, "Random.play"]], "poisson() (hoc random method)": [[196, "Random.poisson"]], "repick() (hoc random method)": [[196, "Random.repick"]], "seq() (hoc random method)": [[196, "Random.seq"]], "uniform() (hoc random method)": [[196, "Random.uniform"]], "weibull() (hoc random method)": [[196, "Random.weibull"]], "vector (hoc built-in class)": [[197, "Vector"]], "vector.x (hoc built-in variable)": [[197, "Vector.x"]], "abs() (hoc vector method)": [[197, "Vector.abs"]], "add() (hoc vector method)": [[197, "Vector.add"]], "addrand() (hoc vector method)": [[197, "Vector.addrand"]], "append() (hoc vector method)": [[197, "Vector.append"]], "apply() (hoc vector method)": [[197, "Vector.apply"]], "as_numpy() (hoc vector method)": [[197, "Vector.as_numpy"]], "at() (hoc vector method)": [[197, "Vector.at"]], "buffer_size() (hoc vector method)": [[197, "Vector.buffer_size"]], "c() (hoc vector method)": [[197, "Vector.c"]], "cl() (hoc vector method)": [[197, "Vector.cl"]], "contains() (hoc vector method)": [[197, "Vector.contains"]], "convlv() (hoc vector method)": [[197, "Vector.convlv"]], "copy() (hoc vector method)": [[197, "Vector.copy"]], "correl() (hoc vector method)": [[197, "Vector.correl"]], "deriv() (hoc vector method)": [[197, "Vector.deriv"]], "div() (hoc vector method)": [[197, "Vector.div"]], "dot() (hoc vector method)": [[197, "Vector.dot"]], "eq() (hoc vector method)": [[197, "Vector.eq"]], "fft() (hoc vector method)": [[197, "Vector.fft"]], "fill() (hoc vector method)": [[197, "Vector.fill"]], "filter() (hoc vector method)": [[197, "Vector.filter"]], "fit() (hoc vector method)": [[197, "Vector.fit"]], "floor() (hoc vector method)": [[197, "Vector.floor"]], "fread() (hoc vector method)": [[197, "Vector.fread"]], "from_double() (hoc vector method)": [[197, "Vector.from_double"]], "from_python() (hoc vector method)": [[197, "Vector.from_python"]], "fwrite() (hoc vector method)": [[197, "Vector.fwrite"]], "get() (hoc vector method)": [[197, "Vector.get"]], "hist() (hoc vector method)": [[197, "Vector.hist"]], "histogram() (hoc vector method)": [[197, "Vector.histogram"]], "ind() (hoc vector method)": [[197, "Vector.ind"]], "index() (hoc vector method)": [[197, "Vector.index"]], "indgen() (hoc vector method)": [[197, "Vector.indgen"]], "indvwhere() (hoc vector method)": [[197, "Vector.indvwhere"]], "indwhere() (hoc vector method)": [[197, "Vector.indwhere"]], "inf() (hoc vector method)": [[197, "Vector.inf"]], "insrt() (hoc vector method)": [[197, "Vector.insrt"]], "integral() (hoc vector method)": [[197, "Vector.integral"]], "interpolate() (hoc vector method)": [[197, "Vector.interpolate"]], "label() (hoc vector method)": [[197, "Vector.label"]], "line() (hoc vector method)": [[197, "Vector.line"]], "log() (hoc vector method)": [[197, "Vector.log"]], "log10() (hoc vector method)": [[197, "Vector.log10"]], "mag() (hoc vector method)": [[197, "Vector.mag"]], "mark() (hoc vector method)": [[197, "Vector.mark"]], "max() (hoc vector method)": [[197, "Vector.max"]], "max_ind() (hoc vector method)": [[197, "Vector.max_ind"]], "mean() (hoc vector method)": [[197, "Vector.mean"]], "meansqerr() (hoc vector method)": [[197, "Vector.meansqerr"]], "medfltr() (hoc vector method)": [[197, "Vector.medfltr"]], "median() (hoc vector method)": [[197, "Vector.median"]], "min() (hoc vector method)": [[197, "Vector.min"]], "min_ind() (hoc vector method)": [[197, "Vector.min_ind"]], "mul() (hoc vector method)": [[197, "Vector.mul"]], "play() (hoc vector method)": [[197, "Vector.play"]], "play_remove() (hoc vector method)": [[197, "Vector.play_remove"]], "plot() (hoc vector method)": [[197, "Vector.plot"]], "ploterr() (hoc vector method)": [[197, "Vector.ploterr"]], "pow() (hoc vector method)": [[197, "Vector.pow"]], "printf() (hoc vector method)": [[197, "Vector.printf"]], "psth() (hoc vector method)": [[197, "Vector.psth"]], "rebin() (hoc vector method)": [[197, "Vector.rebin"]], "record() (hoc vector method)": [[197, "Vector.record"]], "reduce() (hoc vector method)": [[197, "Vector.reduce"]], "remove() (hoc vector method)": [[197, "Vector.remove"]], "resample() (hoc vector method)": [[197, "Vector.resample"]], "resize() (hoc vector method)": [[197, "Vector.resize"]], "reverse() (hoc vector method)": [[197, "Vector.reverse"]], "rotate() (hoc vector method)": [[197, "Vector.rotate"]], "scale() (hoc vector method)": [[197, "Vector.scale"]], "scanf() (hoc vector method)": [[197, "Vector.scanf"]], "scantil() (hoc vector method)": [[197, "Vector.scantil"]], "set() (hoc vector method)": [[197, "Vector.set"]], "setrand() (hoc vector method)": [[197, "Vector.setrand"]], "sin() (hoc vector method)": [[197, "Vector.sin"]], "size() (hoc vector method)": [[197, "Vector.size"]], "smhist() (hoc vector method)": [[197, "Vector.smhist"]], "sort() (hoc vector method)": [[197, "Vector.sort"]], "sortindex() (hoc vector method)": [[197, "Vector.sortindex"]], "spctrm() (hoc vector method)": [[197, "Vector.spctrm"]], "spikebin() (hoc vector method)": [[197, "Vector.spikebin"]], "sqrt() (hoc vector method)": [[197, "Vector.sqrt"]], "stderr() (hoc vector method)": [[197, "Vector.stderr"]], "stdev() (hoc vector method)": [[197, "Vector.stdev"]], "sub() (hoc vector method)": [[197, "Vector.sub"]], "sum() (hoc vector method)": [[197, "Vector.sum"]], "sumgauss() (hoc vector method)": [[197, "Vector.sumgauss"]], "sumsq() (hoc vector method)": [[197, "Vector.sumsq"]], "tanh() (hoc vector method)": [[197, "Vector.tanh"]], "to_python() (hoc vector method)": [[197, "Vector.to_python"]], "trigavg() (hoc vector method)": [[197, "Vector.trigavg"]], "var() (hoc vector method)": [[197, "Vector.var"]], "vread() (hoc vector method)": [[197, "Vector.vread"]], "vwrite() (hoc vector method)": [[197, "Vector.vwrite"]], "where() (hoc vector method)": [[197, "Vector.where"]], "mechanismstandard (hoc built-in class)": [[199, "MechanismStandard"]], "action() (hoc mechanismstandard method)": [[199, "MechanismStandard.action"]], "count() (hoc mechanismstandard method)": [[199, "MechanismStandard.count"]], "get() (hoc mechanismstandard method)": [[199, "MechanismStandard.get"]], "in() (hoc mechanismstandard method)": [[199, "MechanismStandard.in"]], "name() (hoc mechanismstandard method)": [[199, "MechanismStandard.name"]], "out() (hoc mechanismstandard method)": [[199, "MechanismStandard.out"]], "panel() (hoc mechanismstandard method)": [[199, "MechanismStandard.panel"]], "save() (hoc mechanismstandard method)": [[199, "MechanismStandard.save"]], "set() (hoc mechanismstandard method)": [[199, "MechanismStandard.set"]], "hocerror": [[200, "neuron.HocError"], [332, "neuron.HocError"]], "wrapper (class in neuron)": [[200, "neuron.Wrapper"], [332, "neuron.Wrapper"]], "format_exception() (in module neuron)": [[200, "neuron.format_exception"], [332, "neuron.format_exception"]], "init() (in module neuron)": [[200, "neuron.init"], [332, "neuron.init"]], "load_mechanisms() (in module neuron)": [[200, "neuron.load_mechanisms"], [332, "neuron.load_mechanisms"]], "module": [[200, "module-neuron"], [332, "module-neuron"]], "neuron": [[200, "module-neuron"], [332, "module-neuron"]], "new_hoc_class() (in module neuron)": [[200, "neuron.new_hoc_class"], [332, "neuron.new_hoc_class"]], "new_point_process() (in module neuron)": [[200, "neuron.new_point_process"], [332, "neuron.new_point_process"]], "nrn_dll() (in module neuron)": [[200, "neuron.nrn_dll"], [332, "neuron.nrn_dll"]], "nrn_dll_sym() (in module neuron)": [[200, "neuron.nrn_dll_sym"], [332, "neuron.nrn_dll_sym"]], "nrn_dll_sym_nt() (in module neuron)": [[200, "neuron.nrn_dll_sym_nt"], [332, "neuron.nrn_dll_sym_nt"]], "numpy_element_ref() (in module neuron)": [[200, "neuron.numpy_element_ref"], [332, "neuron.numpy_element_ref"]], "quit() (in module neuron)": [[200, "neuron.quit"], [332, "neuron.quit"]], "register_savestate() (in module neuron)": [[200, "neuron.register_savestate"], [332, "neuron.register_savestate"]], "run() (in module neuron)": [[200, "neuron.run"], [332, "neuron.run"]], "test() (in module neuron)": [[200, "neuron.test"], [332, "neuron.test"]], "test_rxd() (in module neuron)": [[200, "neuron.test_rxd"], [332, "neuron.test_rxd"]], "xopen() (in module neuron)": [[200, "neuron.xopen"], [332, "neuron.xopen"]], "break (keyword)": [[201, "index-2"], [333, "index-2"]], "continue (keyword)": [[201, "index-3"], [333, "index-3"]], "debug (keyword)": [[201, "index-12"], [333, "index-12"]], "delete (keyword)": [[201, "index-10"], [333, "index-10"]], "depvar (keyword)": [[201, "index-14"], [333, "index-14"]], "double (keyword)": [[201, "index-13"], [333, "index-13"]], "else (keyword)": [[201, "index-6"], [333, "index-6"]], "eqn (keyword)": [[201, "index-15"], [333, "index-15"]], "for (keyword)": [[201, "index-8"], [333, "index-8"]], "help (keyword)": [[201, "index-0"], [333, "index-0"]], "if (keyword)": [[201, "index-5"], [333, "index-5"]], "insert (keyword)": [[201, "index-20"], [333, "index-20"]], "local (keyword)": [[201, "index-16"], [333, "index-16"]], "localobj (keyword)": [[201, "index-17"], [333, "index-17"]], "print (keyword)": [[201, "index-9"], [333, "index-9"]], "read (keyword)": [[201, "index-11"], [333, "index-11"]], "return (keyword)": [[201, "index-1"], [333, "index-1"]], "setpointer (keyword)": [[201, "index-19"], [333, "index-19"]], "stop (keyword)": [[201, "index-4"], [333, "index-4"]], "strdef (keyword)": [[201, "index-18"], [333, "index-18"]], "uninsert (keyword)": [[201, "index-21"], [333, "index-21"]], "while (keyword)": [[201, "index-7"], [333, "index-7"]], "nullobject": [[202, "index-7"], [334, "index-7"]], "begintemplate (keyword)": [[202, "index-0"], [334, "index-0"]], "endtemplate (keyword)": [[202, "index-1"], [334, "index-1"]], "external (keyword)": [[202, "index-5"], [334, "index-5"]], "init()": [[202, "init"], [334, "init"]], "new (keyword)": [[202, "index-6"], [334, "index-6"]], "objectvar (keyword)": [[202, "index-2"], [334, "index-2"]], "objref (keyword)": [[202, "index-3"], [334, "index-3"]], "public (keyword)": [[202, "index-4"], [334, "index-4"]], "this (hoc built-in variable)": [[202, "this"]], "unref()": [[202, "unref"], [334, "unref"]], "this_node()": [[203, "this_node"], [335, "this_node"]], "this_section()": [[203, "this_section"], [335, "this_section"]], "pointer (hoc built-in class)": [[204, "Pointer"]], "assign() (hoc pointer method)": [[204, "Pointer.assign"]], "s() (hoc pointer method)": [[204, "Pointer.s"]], "val() (hoc pointer method)": [[204, "Pointer.val"]], "ptrvector (hoc built-in class)": [[205, "PtrVector"]], "gather() (hoc ptrvector method)": [[205, "PtrVector.gather"]], "getval() (hoc ptrvector method)": [[205, "PtrVector.getval"]], "pset() (hoc ptrvector method)": [[205, "PtrVector.pset"]], "ptr_update_callback() (hoc ptrvector method)": [[205, "PtrVector.ptr_update_callback"]], "resize() (hoc ptrvector method)": [[205, "PtrVector.resize"]], "scatter() (hoc ptrvector method)": [[205, "PtrVector.scatter"]], "setval() (hoc ptrvector method)": [[205, "PtrVector.setval"]], "size() (hoc ptrvector method)": [[205, "PtrVector.size"]], "hoc_ac_ (hoc built-in variable)": [[206, "hoc_ac_"]], "hoc_cross_x_ (hoc built-in variable)": [[206, "hoc_cross_x_"]], "hoc_cross_y_ (hoc built-in variable)": [[206, "hoc_cross_y_"]], "hoc_obj_ (hoc built-in variable)": [[206, "hoc_obj_"]], "pythonobject (hoc built-in class)": [[208, "PythonObject"]], "cas() (hoc neuron.h method)": [[208, "neuron.h.cas"]], "execute() (hoc neuron.hoc method)": [[208, "neuron.hoc.execute"]], "hoc_ac() (hoc neuron.hoc method)": [[208, "neuron.hoc.hoc_ac"]], "neuron.h.section (hoc built-in class)": [[208, "neuron.h.Section"]], "neuron.hoc.hocobject (hoc built-in class)": [[208, "neuron.hoc.HocObject"]], "nrnpython()": [[208, "nrnpython"], [340, "nrnpython"]], "sscanf()": [[210, "sscanf"], [342, "sscanf"]], "stringfunctions (hoc built-in class)": [[211, "StringFunctions"]], "alias() (hoc stringfunctions method)": [[211, "StringFunctions.alias"]], "alias_list() (hoc stringfunctions method)": [[211, "StringFunctions.alias_list"]], "head() (hoc stringfunctions method)": [[211, "StringFunctions.head"]], "is_artificial() (hoc stringfunctions method)": [[211, "StringFunctions.is_artificial"]], "is_name() (hoc stringfunctions method)": [[211, "StringFunctions.is_name"]], "is_point_process() (hoc stringfunctions method)": [[211, "StringFunctions.is_point_process"]], "left() (hoc stringfunctions method)": [[211, "StringFunctions.left"]], "len() (hoc stringfunctions method)": [[211, "StringFunctions.len"]], "references() (hoc stringfunctions method)": [[211, "StringFunctions.references"]], "right() (hoc stringfunctions method)": [[211, "StringFunctions.right"]], "substr() (hoc stringfunctions method)": [[211, "StringFunctions.substr"]], "tail() (hoc stringfunctions method)": [[211, "StringFunctions.tail"]], "sprint()": [[212, "sprint"], [344, "sprint"]], "strcmp()": [[212, "strcmp"], [344, "strcmp"]], "winexec()": [[213, "WinExec"], [345, "WinExec"]], "chdir()": [[213, "chdir"], [345, "chdir"]], "getcwd()": [[213, "getcwd"], [345, "getcwd"]], "machine_name()": [[213, "machine_name"], [345, "machine_name"]], "neuronhome()": [[213, "neuronhome"], [345, "neuronhome"]], "nrn_load_dll()": [[213, "nrn_load_dll"], [345, "nrn_load_dll"]], "nrnversion()": [[213, "nrnversion"], [345, "nrnversion"]], "show_winio()": [[213, "show_winio"], [345, "show_winio"]], "startsw()": [[213, "startsw"], [345, "startsw"]], "stopsw()": [[213, "stopsw"], [345, "stopsw"]], "system()": [[213, "system"], [345, "system"]], "unix_mac_pc()": [[213, "unix_mac_pc"], [345, "unix_mac_pc"]], "timer (hoc built-in class)": [[214, "Timer"]], "end() (hoc timer method)": [[214, "Timer.end"]], "seconds() (hoc timer method)": [[214, "Timer.seconds"]], "start() (hoc timer method)": [[214, "Timer.start"]], "batch_run()": [[215, "batch_run"], [347, "batch_run"]], "batch_save()": [[215, "batch_save"], [347, "batch_save"]], "bbsavestate (hoc built-in class)": [[216, "BBSaveState"]], "ignore() (hoc bbsavestate method)": [[216, "BBSaveState.ignore"]], "restore_test() (hoc bbsavestate method)": [[216, "BBSaveState.restore_test"]], "save_test() (hoc bbsavestate method)": [[216, "BBSaveState.save_test"]], "vector_play_init() (hoc bbsavestate method)": [[216, "BBSaveState.vector_play_init"]], "cvode (hoc built-in class)": [[217, "CVode"]], "acor() (hoc cvode method)": [[217, "CVode.acor"]], "active() (hoc cvode method)": [[217, "CVode.active"]], "atol() (hoc cvode method)": [[217, "CVode.atol"]], "atolscale() (hoc cvode method)": [[217, "CVode.atolscale"]], "cache_efficient() (hoc cvode method)": [[217, "CVode.cache_efficient"]], "condition_order() (hoc cvode method)": [[217, "CVode.condition_order"]], "current_method() (hoc cvode method)": [[217, "CVode.current_method"]], "dae_init_dteps() (hoc cvode method)": [[217, "CVode.dae_init_dteps"]], "debug_event() (hoc cvode method)": [[217, "CVode.debug_event"]], "dstates() (hoc cvode method)": [[217, "CVode.dstates"]], "error_weights() (hoc cvode method)": [[217, "CVode.error_weights"]], "event() (hoc cvode method)": [[217, "CVode.event"]], "event_queue_info() (hoc cvode method)": [[217, "CVode.event_queue_info"]], "f() (hoc cvode method)": [[217, "CVode.f"]], "fixed_step() (hoc cvode method)": [[217, "CVode.fixed_step"]], "free_event_queues() (hoc cvode method)": [[217, "CVode.free_event_queues"]], "jacobian() (hoc cvode method)": [[217, "CVode.jacobian"]], "maxorder() (hoc cvode method)": [[217, "CVode.maxorder"]], "maxstep() (hoc cvode method)": [[217, "CVode.maxstep"]], "minstep() (hoc cvode method)": [[217, "CVode.minstep"]], "netconlist() (hoc cvode method)": [[217, "CVode.netconlist"]], "order() (hoc cvode method)": [[217, "CVode.order"]], "poolshrink() (hoc cvode method)": [[217, "CVode.poolshrink"]], "print_event_queue() (hoc cvode method)": [[217, "CVode.print_event_queue"]], "queue_mode() (hoc cvode method)": [[217, "CVode.queue_mode"]], "re_init() (hoc cvode method)": [[217, "CVode.re_init"]], "record() (hoc cvode method)": [[217, "CVode.record"]], "record_remove() (hoc cvode method)": [[217, "CVode.record_remove"]], "rtol() (hoc cvode method)": [[217, "CVode.rtol"]], "simgraph_remove() (hoc cvode method)": [[217, "CVode.simgraph_remove"]], "solve() (hoc cvode method)": [[217, "CVode.solve"]], "spike_stat() (hoc cvode method)": [[217, "CVode.spike_stat"]], "state_magnitudes() (hoc cvode method)": [[217, "CVode.state_magnitudes"]], "statename() (hoc cvode method)": [[217, "CVode.statename"]], "states() (hoc cvode method)": [[217, "CVode.states"]], "statistics() (hoc cvode method)": [[217, "CVode.statistics"]], "stiff() (hoc cvode method)": [[217, "CVode.stiff"]], "store_events() (hoc cvode method)": [[217, "CVode.store_events"]], "use_daspk() (hoc cvode method)": [[217, "CVode.use_daspk"]], "use_fast_imem() (hoc cvode method)": [[217, "CVode.use_fast_imem"]], "use_local_dt() (hoc cvode method)": [[217, "CVode.use_local_dt"]], "use_long_double() (hoc cvode method)": [[217, "CVode.use_long_double"]], "use_mxb() (hoc cvode method)": [[217, "CVode.use_mxb"]], "ygather() (hoc cvode method)": [[217, "CVode.ygather"]], "yscatter() (hoc cvode method)": [[217, "CVode.yscatter"]], "makefamily (hoc function)": [[218, "index-0"], [350, "index-0"]], "quit()": [[219, "quit"], [351, "quit"]], "retrieveaudit()": [[219, "retrieveaudit"], [351, "retrieveaudit"]], "saveaudit()": [[219, "saveaudit"], [351, "saveaudit"]], "finitializehandler (hoc built-in class)": [[220, "FInitializeHandler"]], "allprint() (hoc finitializehandler method)": [[220, "FInitializeHandler.allprint"]], "celsius (hoc built-in variable)": [[220, "celsius"]], "checkpoint()": [[220, "checkpoint"], [352, "checkpoint"]], "clamp_resist (hoc built-in variable)": [[220, "clamp_resist"]], "dt (hoc built-in variable)": [[220, "dt"]], "fadvance()": [[220, "fadvance"], [352, "fadvance"]], "fcurrent()": [[220, "fcurrent"], [352, "fcurrent"]], "finitialize()": [[220, "finitialize"], [352, "finitialize"]], "fmatrix()": [[220, "fmatrix"], [352, "fmatrix"]], "frecord_init()": [[220, "frecord_init"], [352, "frecord_init"]], "initnrn()": [[220, "initnrn"], [352, "initnrn"]], "secondorder (hoc built-in variable)": [[220, "secondorder"]], "stoprun (hoc built-in variable)": [[220, "stoprun"]], "t (hoc built-in variable)": [[220, "t"]], "savestate (hoc built-in class)": [[222, "SaveState"]], "fread() (hoc savestate method)": [[222, "SaveState.fread"]], "fwrite() (hoc savestate method)": [[222, "SaveState.fwrite"]], "restore() (hoc savestate method)": [[222, "SaveState.restore"]], "save() (hoc savestate method)": [[222, "SaveState.save"]], "writehoc() (hoc savestate method)": [[222, "SaveState.writehoc"]], "print_session()": [[223, "print_session"], [355, "print_session"]], "save_session()": [[223, "save_session"], [355, "save_session"]], "glyph (hoc built-in class)": [[225, "Glyph"]], "circle() (hoc glyph method)": [[225, "Glyph.circle"]], "close_path() (hoc glyph method)": [[225, "Glyph.close_path"]], "control_point() (hoc glyph method)": [[225, "Glyph.control_point"]], "curve_to() (hoc glyph method)": [[225, "Glyph.curve_to"]], "erase() (hoc glyph method)": [[225, "Glyph.erase"]], "fill() (hoc glyph method)": [[225, "Glyph.fill"]], "gif() (hoc glyph method)": [[225, "Glyph.gif"]], "glyph() (hoc glyph method)": [[225, "Glyph.glyph"]], "label() (hoc glyph method)": [[225, "Glyph.label"]], "line_to() (hoc glyph method)": [[225, "Glyph.line_to"]], "move_to() (hoc glyph method)": [[225, "Glyph.move_to"]], "new_path() (hoc glyph method)": [[225, "Glyph.new_path"]], "stroke() (hoc glyph method)": [[225, "Glyph.stroke"]], "graph (hoc built-in class)": [[226, "Graph"]], "addexpr() (hoc graph method)": [[226, "Graph.addexpr"]], "addobject() (hoc graph method)": [[226, "Graph.addobject"]], "addvar() (hoc graph method)": [[226, "Graph.addvar"]], "align() (hoc graph method)": [[226, "Graph.align"]], "begin() (hoc graph method)": [[226, "Graph.begin"]], "beginline() (hoc graph method)": [[226, "Graph.beginline"]], "brush() (hoc graph method)": [[226, "Graph.brush"]], "color() (hoc graph method)": [[226, "Graph.color"]], "crosshair_action() (hoc graph method)": [[226, "Graph.crosshair_action"]], "erase() (hoc graph method)": [[226, "Graph.erase"]], "erase_all() (hoc graph method)": [[226, "Graph.erase_all"]], "exec_menu() (hoc graph method)": [[226, "Graph.exec_menu"]], "family() (hoc graph method)": [[226, "Graph.family"]], "fastflush() (hoc graph method)": [[226, "Graph.fastflush"]], "fixed() (hoc graph method)": [[226, "Graph.fixed"]], "flush() (hoc graph method)": [[226, "Graph.flush"]], "getline() (hoc graph method)": [[226, "Graph.getline"]], "gif() (hoc graph method)": [[226, "Graph.gif"]], "glyph() (hoc graph method)": [[226, "Graph.glyph"]], "label() (hoc graph method)": [[226, "Graph.label"]], "line() (hoc graph method)": [[226, "Graph.line"]], "line_info() (hoc graph method)": [[226, "Graph.line_info"]], "mark() (hoc graph method)": [[226, "Graph.mark"]], "menu_action() (hoc graph method)": [[226, "Graph.menu_action"]], "menu_remove() (hoc graph method)": [[226, "Graph.menu_remove"]], "menu_tool() (hoc graph method)": [[226, "Graph.menu_tool"]], "plot() (hoc graph method)": [[226, "Graph.plot"]], "printfile() (hoc graph method)": [[226, "Graph.printfile"]], "relative() (hoc graph method)": [[226, "Graph.relative"]], "save_name() (hoc graph method)": [[226, "Graph.save_name"]], "simgraph() (hoc graph method)": [[226, "Graph.simgraph"]], "size() (hoc graph method)": [[226, "Graph.size"]], "unmap() (hoc graph method)": [[226, "Graph.unmap"]], "vector() (hoc graph method)": [[226, "Graph.vector"]], "vfixed() (hoc graph method)": [[226, "Graph.vfixed"]], "view() (hoc graph method)": [[226, "Graph.view"]], "view_count() (hoc graph method)": [[226, "Graph.view_count"]], "view_info() (hoc graph method)": [[226, "Graph.view_info"]], "view_size() (hoc graph method)": [[226, "Graph.view_size"]], "xaxis() (hoc graph method)": [[226, "Graph.xaxis"]], "xexpr() (hoc graph method)": [[226, "Graph.xexpr"]], "yaxis() (hoc graph method)": [[226, "Graph.yaxis"]], "doevents()": [[229, "doEvents"], [361, "doEvents"]], "donotify()": [[229, "doNotify"], [361, "doNotify"]], "axis()": [[230, "axis"], [362, "axis"]], "graph()": [[230, "graph"], [362, "graph"]], "graphmode()": [[230, "graphmode"], [362, "graphmode"]], "plot()": [[230, "plot"], [362, "plot"]], "plotx()": [[230, "plotx"], [362, "plotx"]], "ploty()": [[230, "ploty"], [362, "ploty"]], "plt()": [[230, "plt"], [362, "plt"]], "regraph()": [[230, "regraph"], [362, "regraph"]], "setcolor()": [[230, "setcolor"], [362, "setcolor"]], "settext()": [[230, "settext"], [362, "settext"]], "plotshape (hoc built-in class)": [[232, "PlotShape"]], "beginline() (hoc plotshape method)": [[232, "PlotShape.beginline"]], "color() (hoc plotshape method)": [[232, "PlotShape.color"]], "color_all() (hoc plotshape method)": [[232, "PlotShape.color_all"]], "color_list() (hoc plotshape method)": [[232, "PlotShape.color_list"]], "colormap() (hoc plotshape method)": [[232, "PlotShape.colormap"]], "erase() (hoc plotshape method)": [[232, "PlotShape.erase"]], "erase_all() (hoc plotshape method)": [[232, "PlotShape.erase_all"]], "exec_menu() (hoc plotshape method)": [[232, "PlotShape.exec_menu"]], "fastflush() (hoc plotshape method)": [[232, "PlotShape.fastflush"]], "flush() (hoc plotshape method)": [[232, "PlotShape.flush"]], "hinton() (hoc plotshape method)": [[232, "PlotShape.hinton"]], "label() (hoc plotshape method)": [[232, "PlotShape.label"]], "len_scale() (hoc plotshape method)": [[232, "PlotShape.len_scale"]], "line() (hoc plotshape method)": [[232, "PlotShape.line"]], "mark() (hoc plotshape method)": [[232, "PlotShape.mark"]], "menu_action() (hoc plotshape method)": [[232, "PlotShape.menu_action"]], "menu_tool() (hoc plotshape method)": [[232, "PlotShape.menu_tool"]], "nearest() (hoc plotshape method)": [[232, "PlotShape.nearest"]], "observe() (hoc plotshape method)": [[232, "PlotShape.observe"]], "printfile() (hoc plotshape method)": [[232, "PlotShape.printfile"]], "push_selected() (hoc plotshape method)": [[232, "PlotShape.push_selected"]], "rotate() (hoc plotshape method)": [[232, "PlotShape.rotate"]], "save_name() (hoc plotshape method)": [[232, "PlotShape.save_name"]], "scale() (hoc plotshape method)": [[232, "PlotShape.scale"]], "show() (hoc plotshape method)": [[232, "PlotShape.show"]], "size() (hoc plotshape method)": [[232, "PlotShape.size"]], "unmap() (hoc plotshape method)": [[232, "PlotShape.unmap"]], "variable() (hoc plotshape method)": [[232, "PlotShape.variable"]], "view() (hoc plotshape method)": [[232, "PlotShape.view"]], "view_count() (hoc plotshape method)": [[232, "PlotShape.view_count"]], "rangevarplot (hoc built-in class)": [[233, "RangeVarPlot"]], "begin() (hoc rangevarplot method)": [[233, "RangeVarPlot.begin"]], "color() (hoc rangevarplot method)": [[233, "RangeVarPlot.color"]], "end() (hoc rangevarplot method)": [[233, "RangeVarPlot.end"]], "from_vector() (hoc rangevarplot method)": [[233, "RangeVarPlot.from_vector"]], "left() (hoc rangevarplot method)": [[233, "RangeVarPlot.left"]], "list() (hoc rangevarplot method)": [[233, "RangeVarPlot.list"]], "origin() (hoc rangevarplot method)": [[233, "RangeVarPlot.origin"]], "right() (hoc rangevarplot method)": [[233, "RangeVarPlot.right"]], "to_vector() (hoc rangevarplot method)": [[233, "RangeVarPlot.to_vector"]], "shape (hoc built-in class)": [[234, "Shape"]], "action() (hoc shape method)": [[234, "Shape.action"]], "beginline() (hoc shape method)": [[234, "Shape.beginline"]], "color() (hoc shape method)": [[234, "Shape.color"]], "color_all() (hoc shape method)": [[234, "Shape.color_all"]], "color_list() (hoc shape method)": [[234, "Shape.color_list"]], "erase() (hoc shape method)": [[234, "Shape.erase"]], "erase_all() (hoc shape method)": [[234, "Shape.erase_all"]], "exec_menu() (hoc shape method)": [[234, "Shape.exec_menu"]], "flush() (hoc shape method)": [[234, "Shape.flush"]], "label() (hoc shape method)": [[234, "Shape.label"]], "len_scale() (hoc shape method)": [[234, "Shape.len_scale"]], "line() (hoc shape method)": [[234, "Shape.line"]], "mark() (hoc shape method)": [[234, "Shape.mark"]], "menu_action() (hoc shape method)": [[234, "Shape.menu_action"]], "menu_tool() (hoc shape method)": [[234, "Shape.menu_tool"]], "nearest() (hoc shape method)": [[234, "Shape.nearest"]], "observe() (hoc shape method)": [[234, "Shape.observe"]], "point_mark() (hoc shape method)": [[234, "Shape.point_mark"]], "point_mark_remove() (hoc shape method)": [[234, "Shape.point_mark_remove"]], "printfile() (hoc shape method)": [[234, "Shape.printfile"]], "push_selected() (hoc shape method)": [[234, "Shape.push_selected"]], "rotate() (hoc shape method)": [[234, "Shape.rotate"]], "save_name() (hoc shape method)": [[234, "Shape.save_name"]], "select() (hoc shape method)": [[234, "Shape.select"]], "show() (hoc shape method)": [[234, "Shape.show"]], "size() (hoc shape method)": [[234, "Shape.size"]], "unmap() (hoc shape method)": [[234, "Shape.unmap"]], "view() (hoc shape method)": [[234, "Shape.view"]], "view_count() (hoc shape method)": [[234, "Shape.view_count"]], "menuexpore (hoc class)": [[235, "index-0"], [367, "index-0"]], "pointprocesslocator (hoc class)": [[235, "index-1"], [367, "index-1"]], "impedance (built-in class)": [[261, "Impedance"]], "compute() (impedance method)": [[261, "Impedance.compute"]], "deltafac() (impedance method)": [[261, "Impedance.deltafac"]], "input() (impedance method)": [[261, "Impedance.input"]], "input_phase() (impedance method)": [[261, "Impedance.input_phase"]], "loc() (impedance method)": [[261, "Impedance.loc"]], "ratio() (impedance method)": [[261, "Impedance.ratio"]], "transfer() (impedance method)": [[261, "Impedance.transfer"]], "transfer_phase() (impedance method)": [[261, "Impedance.transfer_phase"]], "built-in function": [[262, "ghk"], [262, "nernst"], [263, "attr_praxis"], [263, "fit_praxis"], [263, "pval_praxis"], [263, "stop_praxis"], [274, "make_mechanism"], [274, "make_pointprocess"], [275, "ion_charge"], [275, "ion_register"], [275, "ion_style"], [288, "fclamp"], [288, "fclampi"], [288, "fclampv"], [288, "fstim"], [288, "fstimi"], [288, "prstim"], [289, "rxd.export.sbml"], [289, "rxd.nthread"], [289, "rxd.re_init"], [289, "rxd.set_solve_type"], [290, "rxdmath.acos"], [290, "rxdmath.acosh"], [290, "rxdmath.asin"], [290, "rxdmath.asinh"], [290, "rxdmath.atan"], [290, "rxdmath.atan2"], [290, "rxdmath.ceil"], [290, "rxdmath.copysign"], [290, "rxdmath.cos"], [290, "rxdmath.cosh"], [290, "rxdmath.degrees"], [290, "rxdmath.erf"], [290, "rxdmath.erfc"], [290, "rxdmath.exp"], [290, "rxdmath.expm1"], [290, "rxdmath.fabs"], [290, "rxdmath.factorial"], [290, "rxdmath.floor"], [290, "rxdmath.fmod"], [290, "rxdmath.gamma"], [290, "rxdmath.lgamma"], [290, "rxdmath.log"], [290, "rxdmath.log10"], [290, "rxdmath.log1p"], [290, "rxdmath.pow"], [290, "rxdmath.radians"], [290, "rxdmath.sin"], [290, "rxdmath.sinh"], [290, "rxdmath.sqrt"], [290, "rxdmath.tan"], [290, "rxdmath.tanh"], [290, "rxdmath.trunc"], [290, "rxdmath.vtrap"], [292, "delete_section"], [292, "disconnect"], [292, "id0"], [292, "ismembrane"], [292, "issection"], [292, "parent_connection"], [292, "parent_node"], [292, "parent_section"], [292, "psection"], [292, "secname"], [292, "section_exists"], [292, "section_orientation"], [292, "section_owner"], [292, "sectionname"], [293, "arc3d"], [293, "area"], [293, "define_shape"], [293, "diam3d"], [293, "distance"], [293, "getSpineArea"], [293, "n3d"], [293, "pt3dadd"], [293, "pt3dchange"], [293, "pt3dclear"], [293, "pt3dconst"], [293, "pt3dinsert"], [293, "pt3dremove"], [293, "pt3dstyle"], [293, "ri"], [293, "setSpineArea"], [293, "spine3d"], [293, "x3d"], [293, "y3d"], [293, "z3d"], [296, "pop_section"], [296, "push_section"], [297, "execute"], [297, "execute1"], [297, "load_file"], [297, "load_func"], [297, "load_proc"], [297, "load_template"], [298, "coredump_on_error"], [298, "execerror"], [298, "nrn_feenableexcept"], [298, "show_errmess_always"], [299, "boolean_dialog"], [299, "continue_dialog"], [299, "string_dialog"], [302, "ivoc_style"], [302, "pwman_place"], [302, "variable_domain"], [303, "nrnglobalmechmenu"], [303, "nrnmechmenu"], [303, "nrnpointmenu"], [303, "nrnsecmenu"], [308, "fmenu"], [310, "units"], [310, "xbutton"], [310, "xcheckbox"], [310, "xfixedvalue"], [310, "xlabel"], [310, "xmenu"], [310, "xpanel"], [310, "xpvalue"], [310, "xradiobutton"], [310, "xslider"], [310, "xstatebutton"], [310, "xvalue"], [310, "xvarlabel"], [313, "argtype"], [313, "numarg"], [314, "allobjects"], [314, "allobjectvars"], [314, "hoc_pointer_"], [314, "name_declared"], [314, "object_id"], [314, "object_pop"], [314, "object_push"], [314, "symbols"], [317, "lw"], [318, "hoc_stdout"], [318, "printf"], [319, "fscan"], [319, "getstr"], [319, "sred"], [319, "xred"], [320, "fprint"], [320, "id0"], [320, "wopen"], [320, "xopen"], [322, "eqinit"], [322, "prmat"], [322, "solve"], [323, "abs"], [323, "atan"], [323, "atan2"], [323, "cos"], [323, "erf"], [323, "erfc"], [323, "exp"], [323, "int"], [323, "log"], [323, "log10"], [323, "sin"], [323, "sqrt"], [323, "tanh"], [326, "mcell_ran4"], [326, "mcell_ran4_init"], [326, "use_mcell_ran4"], [334, "init"], [334, "unref"], [335, "this_node"], [335, "this_section"], [340, "nrnpython"], [342, "sscanf"], [344, "sprint"], [344, "strcmp"], [345, "WinExec"], [345, "chdir"], [345, "getcwd"], [345, "machine_name"], [345, "neuronhome"], [345, "nrn_load_dll"], [345, "nrnversion"], [345, "show_winio"], [345, "startsw"], [345, "stopsw"], [345, "system"], [345, "unix_mac_pc"], [347, "batch_run"], [347, "batch_save"], [351, "quit"], [351, "retrieveaudit"], [351, "saveaudit"], [352, "checkpoint"], [352, "fadvance"], [352, "fcurrent"], [352, "finitialize"], [352, "fmatrix"], [352, "frecord_init"], [352, "initnrn"], [352, "nrnunit_use_legacy"], [355, "print_session"], [355, "save_session"], [361, "doEvents"], [361, "doNotify"], [362, "axis"], [362, "graph"], [362, "graphmode"], [362, "plot"], [362, "plotx"], [362, "ploty"], [362, "plt"], [362, "regraph"], [362, "setcolor"], [362, "settext"]], "electrode (built-in class)": [[273, "Electrode"]], "holding() (electrode method)": [[273, "Electrode.Holding"]], "iclamp() (electrode method)": [[273, "Electrode.IClamp"]], "location() (electrode method)": [[273, "Electrode.Location"]], "returnlevel() (electrode method)": [[273, "Electrode.Returnlevel"]], "testlevel() (electrode method)": [[273, "Electrode.Testlevel"]], "vclamp() (electrode method)": [[273, "Electrode.VClamp"]], "vclampfamily() (electrode method)": [[273, "Electrode.VClampFamily"]], "vclampigraph() (electrode method)": [[273, "Electrode.VClampigraph"]], "amp() (electrode method)": [[273, "Electrode.amp"]], "amp0() (electrode method)": [[273, "Electrode.amp0"]], "del() (electrode method)": [[273, "Electrode.del"]], "dur() (electrode method)": [[273, "Electrode.dur"]], "dur0() (electrode method)": [[273, "Electrode.dur0"]], "make_mechanism()": [[274, "make_mechanism"]], "make_pointprocess()": [[274, "make_pointprocess"]], "kschan (built-in class)": [[276, "KSChan"]], "ksgate (built-in class)": [[276, "KSGate"]], "ksstate (built-in class)": [[276, "KSState"]], "kstrans (built-in class)": [[276, "KSTrans"]], "ab() (kstrans method)": [[276, "KSTrans.ab"]], "add_hhstate() (kschan method)": [[276, "KSChan.add_hhstate"]], "add_ksstate() (kschan method)": [[276, "KSChan.add_ksstate"]], "add_transition() (kschan method)": [[276, "KSChan.add_transition"]], "erev() (kschan method)": [[276, "KSChan.erev"]], "f() (kstrans method)": [[276, "KSTrans.f"]], "frac() (ksstate method)": [[276, "KSState.frac"]], "ftype() (kstrans method)": [[276, "KSTrans.ftype"]], "gate() (kschan method)": [[276, "KSChan.gate"]], "gate() (ksstate method)": [[276, "KSState.gate"]], "gmax() (kschan method)": [[276, "KSChan.gmax"]], "index() (ksgate method)": [[276, "KSGate.index"]], "index() (ksstate method)": [[276, "KSState.index"]], "index() (kstrans method)": [[276, "KSTrans.index"]], "inftau() (kstrans method)": [[276, "KSTrans.inftau"]], "ion() (kschan method)": [[276, "KSChan.ion"]], "iv_type() (kschan method)": [[276, "KSChan.iv_type"]], "ligand() (kschan method)": [[276, "KSChan.ligand"]], "ligand() (kstrans method)": [[276, "KSTrans.ligand"]], "name() (kschan method)": [[276, "KSChan.name"]], "name() (ksstate method)": [[276, "KSState.name"]], "ngate() (kschan method)": [[276, "KSChan.ngate"]], "nligand() (kschan method)": [[276, "KSChan.nligand"]], "nstate() (kschan method)": [[276, "KSChan.nstate"]], "nstate() (ksgate method)": [[276, "KSGate.nstate"]], "ntrans() (kschan method)": [[276, "KSChan.ntrans"]], "parm() (kstrans method)": [[276, "KSTrans.parm"]], "power() (ksgate method)": [[276, "KSGate.power"]], "pr() (kschan method)": [[276, "KSChan.pr"]], "remove_state() (kschan method)": [[276, "KSChan.remove_state"]], "remove_transition() (kschan method)": [[276, "KSChan.remove_transition"]], "set_f() (kstrans method)": [[276, "KSTrans.set_f"]], "setstructure() (kschan method)": [[276, "KSChan.setstructure"]], "sindex() (ksgate method)": [[276, "KSGate.sindex"]], "src() (kstrans method)": [[276, "KSTrans.src"]], "state() (kschan method)": [[276, "KSChan.state"]], "target() (kstrans method)": [[276, "KSTrans.target"]], "trans() (kschan method)": [[276, "KSChan.trans"]], "type() (kstrans method)": [[276, "KSTrans.type"]], "linearmechanism (built-in class)": [[277, "LinearMechanism"]], "apcount (built-in class)": [[279, "APCount"]], "alphasynapse (built-in class)": [[279, "AlphaSynapse"]], "exp2syn (built-in class)": [[279, "Exp2Syn"]], "expsyn (built-in class)": [[279, "ExpSyn"]], "iclamp (built-in class)": [[279, "IClamp"]], "intfire1 (built-in class)": [[279, "IntFire1"]], "intfire2 (built-in class)": [[279, "IntFire2"]], "intfire4 (built-in class)": [[279, "IntFire4"]], "netstim (built-in class)": [[279, "NetStim"]], "patternstim (built-in class)": [[279, "PatternStim"]], "seclamp (built-in class)": [[279, "SEClamp"]], "vclamp (built-in class)": [[279, "VClamp"]], "get_loc() (pnt method)": [[279, "pnt.get_loc"]], "get_segment() (pnt method)": [[279, "pnt.get_segment"]], "has_loc() (pnt method)": [[279, "pnt.has_loc"]], "loc() (pnt method)": [[279, "pnt.loc"]], "mechanismtype (built-in class)": [[282, "MechanismType"]], "action() (mechanismtype method)": [[282, "MechanismType.action"]], "code() (mechanismtype method)": [[282, "MechanismType.code"]], "count() (mechanismtype method)": [[282, "MechanismType.count"]], "file() (mechanismtype method)": [[282, "MechanismType.file"]], "has_net_event() (mechanismtype method)": [[282, "MechanismType.has_net_event"]], "internal_type() (mechanismtype method)": [[282, "MechanismType.internal_type"]], "is_artificial() (mechanismtype method)": [[282, "MechanismType.is_artificial"]], "is_netcon_target() (mechanismtype method)": [[282, "MechanismType.is_netcon_target"]], "make() (mechanismtype method)": [[282, "MechanismType.make"]], "menu() (mechanismtype method)": [[282, "MechanismType.menu"]], "pp_begin() (mechanismtype method)": [[282, "MechanismType.pp_begin"]], "pp_next() (mechanismtype method)": [[282, "MechanismType.pp_next"]], "remove() (mechanismtype method)": [[282, "MechanismType.remove"]], "select() (mechanismtype method)": [[282, "MechanismType.select"]], "selected() (mechanismtype method)": [[282, "MechanismType.selected"]], "netcon (built-in class)": [[285, "NetCon"]], "netcon.delay (built-in variable)": [[285, "NetCon.delay"]], "netcon.threshold (built-in variable)": [[285, "NetCon.threshold"]], "netcon.weight (built-in variable)": [[285, "NetCon.weight"]], "netcon.x (built-in variable)": [[285, "NetCon.x"]], "active() (netcon method)": [[285, "NetCon.active"]], "event() (netcon method)": [[285, "NetCon.event"]], "get_recordvec() (netcon method)": [[285, "NetCon.get_recordvec"]], "postcell() (netcon method)": [[285, "NetCon.postcell"]], "postcelllist() (netcon method)": [[285, "NetCon.postcelllist"]], "postloc() (netcon method)": [[285, "NetCon.postloc"]], "postseg() (netcon method)": [[285, "NetCon.postseg"]], "pre() (netcon method)": [[285, "NetCon.pre"]], "precell() (netcon method)": [[285, "NetCon.precell"]], "precelllist() (netcon method)": [[285, "NetCon.precelllist"]], "prelist() (netcon method)": [[285, "NetCon.prelist"]], "preloc() (netcon method)": [[285, "NetCon.preloc"]], "preseg() (netcon method)": [[285, "NetCon.preseg"]], "record() (netcon method)": [[285, "NetCon.record"]], "setpost() (netcon method)": [[285, "NetCon.setpost"]], "srcgid() (netcon method)": [[285, "NetCon.srcgid"]], "syn() (netcon method)": [[285, "NetCon.syn"]], "synlist() (netcon method)": [[285, "NetCon.synlist"]], "valid() (netcon method)": [[285, "NetCon.valid"]], "wcnt() (netcon method)": [[285, "NetCon.wcnt"]], "parallelcontext (built-in class)": [[286, "ParallelContext"]], "threads() (parallelcontext method)": [[286, "ParallelContext.Threads"]], "allgather() (parallelcontext method)": [[286, "ParallelContext.allgather"]], "allreduce() (parallelcontext method)": [[286, "ParallelContext.allreduce"]], "alltoall() (parallelcontext method)": [[286, "ParallelContext.alltoall"]], "barrier() (parallelcontext method)": [[286, "ParallelContext.barrier"]], "broadcast() (parallelcontext method)": [[286, "ParallelContext.broadcast"]], "cell() (parallelcontext method)": [[286, "ParallelContext.cell"]], "context() (parallelcontext method)": [[286, "ParallelContext.context"]], "done() (parallelcontext method)": [[286, "ParallelContext.done"]], "dt() (parallelcontext method)": [[286, "ParallelContext.dt"]], "event_time() (parallelcontext method)": [[286, "ParallelContext.event_time"]], "gid2cell() (parallelcontext method)": [[286, "ParallelContext.gid2cell"]], "gid2obj() (parallelcontext method)": [[286, "ParallelContext.gid2obj"]], "gid_clear() (parallelcontext method)": [[286, "ParallelContext.gid_clear"]], "gid_connect() (parallelcontext method)": [[286, "ParallelContext.gid_connect"]], "gid_exists() (parallelcontext method)": [[286, "ParallelContext.gid_exists"]], "id() (parallelcontext method)": [[286, "ParallelContext.id"]], "id_bbs() (parallelcontext method)": [[286, "ParallelContext.id_bbs"]], "id_world() (parallelcontext method)": [[286, "ParallelContext.id_world"]], "integ_time() (parallelcontext method)": [[286, "ParallelContext.integ_time"]], "look() (parallelcontext method)": [[286, "ParallelContext.look"]], "look_take() (parallelcontext method)": [[286, "ParallelContext.look_take"]], "max_histogram() (parallelcontext method)": [[286, "ParallelContext.max_histogram"]], "mech_time() (parallelcontext method)": [[286, "ParallelContext.mech_time"]], "mpi_init() (parallelcontext method)": [[286, "ParallelContext.mpi_init"]], "mpiabort_on_error() (parallelcontext method)": [[286, "ParallelContext.mpiabort_on_error"]], "multisplit() (parallelcontext method)": [[286, "ParallelContext.multisplit"]], "nhost() (parallelcontext method)": [[286, "ParallelContext.nhost"]], "nhost_bbs() (parallelcontext method)": [[286, "ParallelContext.nhost_bbs"]], "nhost_world() (parallelcontext method)": [[286, "ParallelContext.nhost_world"]], "nrncore_run() (parallelcontext method)": [[286, "ParallelContext.nrncore_run"]], "nrncore_write() (parallelcontext method)": [[286, "ParallelContext.nrncore_write"]], "nthread() (parallelcontext method)": [[286, "ParallelContext.nthread"]], "outputcell() (parallelcontext method)": [[286, "ParallelContext.outputcell"]], "pack() (parallelcontext method)": [[286, "ParallelContext.pack"]], "partition() (parallelcontext method)": [[286, "ParallelContext.partition"]], "post() (parallelcontext method)": [[286, "ParallelContext.post"]], "prcellstate() (parallelcontext method)": [[286, "ParallelContext.prcellstate"]], "psolve() (parallelcontext method)": [[286, "ParallelContext.psolve"]], "py_allgather() (parallelcontext method)": [[286, "ParallelContext.py_allgather"]], "py_alltoall() (parallelcontext method)": [[286, "ParallelContext.py_alltoall"]], "py_broadcast() (parallelcontext method)": [[286, "ParallelContext.py_broadcast"]], "py_gather() (parallelcontext method)": [[286, "ParallelContext.py_gather"]], "py_scatter() (parallelcontext method)": [[286, "ParallelContext.py_scatter"]], "pyret() (parallelcontext method)": [[286, "ParallelContext.pyret"]], "retval() (parallelcontext method)": [[286, "ParallelContext.retval"]], "runworker() (parallelcontext method)": [[286, "ParallelContext.runworker"]], "sec_in_thread() (parallelcontext method)": [[286, "ParallelContext.sec_in_thread"]], "send_time() (parallelcontext method)": [[286, "ParallelContext.send_time"]], "set_gid2node() (parallelcontext method)": [[286, "ParallelContext.set_gid2node"]], "set_maxstep() (parallelcontext method)": [[286, "ParallelContext.set_maxstep"]], "setup_transfer() (parallelcontext method)": [[286, "ParallelContext.setup_transfer"]], "source_var() (parallelcontext method)": [[286, "ParallelContext.source_var"]], "spike_compress() (parallelcontext method)": [[286, "ParallelContext.spike_compress"]], "spike_record() (parallelcontext method)": [[286, "ParallelContext.spike_record"]], "spike_statistics() (parallelcontext method)": [[286, "ParallelContext.spike_statistics"]], "splitcell() (parallelcontext method)": [[286, "ParallelContext.splitcell"]], "step_time() (parallelcontext method)": [[286, "ParallelContext.step_time"]], "submit() (parallelcontext method)": [[286, "ParallelContext.submit"]], "subworlds() (parallelcontext method)": [[286, "ParallelContext.subworlds"]], "t() (parallelcontext method)": [[286, "ParallelContext.t"]], "take() (parallelcontext method)": [[286, "ParallelContext.take"]], "target_var() (parallelcontext method)": [[286, "ParallelContext.target_var"]], "thread_busywait() (parallelcontext method)": [[286, "ParallelContext.thread_busywait"]], "thread_ctime() (parallelcontext method)": [[286, "ParallelContext.thread_ctime"]], "thread_how_many_proc() (parallelcontext method)": [[286, "ParallelContext.thread_how_many_proc"]], "thread_stat() (parallelcontext method)": [[286, "ParallelContext.thread_stat"]], "threshold() (parallelcontext method)": [[286, "ParallelContext.threshold"]], "time() (parallelcontext method)": [[286, "ParallelContext.time"]], "timeout() (parallelcontext method)": [[286, "ParallelContext.timeout"]], "unpack() (parallelcontext method)": [[286, "ParallelContext.unpack"]], "upkpyobj() (parallelcontext method)": [[286, "ParallelContext.upkpyobj"]], "upkscalar() (parallelcontext method)": [[286, "ParallelContext.upkscalar"]], "upkstr() (parallelcontext method)": [[286, "ParallelContext.upkstr"]], "upkvec() (parallelcontext method)": [[286, "ParallelContext.upkvec"]], "userid() (parallelcontext method)": [[286, "ParallelContext.userid"]], "vtransfer_time() (parallelcontext method)": [[286, "ParallelContext.vtransfer_time"]], "wait_time() (parallelcontext method)": [[286, "ParallelContext.wait_time"]], "working() (parallelcontext method)": [[286, "ParallelContext.working"]], "parallelnetmanager (built-in class)": [[287, "ParallelNetManager"]], "create_cell() (parallelnetmanager method)": [[287, "ParallelNetManager.create_cell"]], "gatherspikes() (parallelnetmanager method)": [[287, "ParallelNetManager.gatherspikes"]], "gid_exists() (parallelnetmanager method)": [[287, "ParallelNetManager.gid_exists"]], "nc_append() (parallelnetmanager method)": [[287, "ParallelNetManager.nc_append"]], "pcontinue() (parallelnetmanager method)": [[287, "ParallelNetManager.pcontinue"]], "pinit() (parallelnetmanager method)": [[287, "ParallelNetManager.pinit"]], "prstat() (parallelnetmanager method)": [[287, "ParallelNetManager.prstat"]], "prun() (parallelnetmanager method)": [[287, "ParallelNetManager.prun"]], "psolve() (parallelnetmanager method)": [[287, "ParallelNetManager.psolve"]], "register_cell() (parallelnetmanager method)": [[287, "ParallelNetManager.register_cell"]], "round_robin() (parallelnetmanager method)": [[287, "ParallelNetManager.round_robin"]], "set_gid2node() (parallelnetmanager method)": [[287, "ParallelNetManager.set_gid2node"]], "spike_record() (parallelnetmanager method)": [[287, "ParallelNetManager.spike_record"]], "splitcell() (parallelnetmanager method)": [[287, "ParallelNetManager.splitcell"]], "want_all_spikes() (parallelnetmanager method)": [[287, "ParallelNetManager.want_all_spikes"]], "_ref_concentration (rxd.node.node property)": [[289, "rxd.node.Node._ref_concentration"]], "_ref_concentration (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList._ref_concentration"]], "_ref_molecules (rxd.node.node property)": [[289, "rxd.node.Node._ref_molecules"]], "_ref_value (rxd.node.node property)": [[289, "rxd.node.Node._ref_value"]], "_ref_value (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList._ref_value"]], "b_rate (rxd.reaction property)": [[289, "rxd.Reaction.b_rate"]], "charge (rxd.species property)": [[289, "rxd.Species.charge"]], "concentration (rxd.node.node property)": [[289, "rxd.node.Node.concentration"]], "concentration (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.concentration"]], "concentrations() (rxd.species method)": [[289, "rxd.Species.concentrations"]], "d (rxd.node.node property)": [[289, "rxd.node.Node.d"]], "defined_on_region() (rxd.species method)": [[289, "rxd.Species.defined_on_region"]], "diff (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.diff"]], "f_rate (rxd.reaction property)": [[289, "rxd.Reaction.f_rate"]], "include_flux() (rxd.node.node method)": [[289, "rxd.node.Node.include_flux"]], "include_flux() (rxd.nodelist.nodelist method)": [[289, "rxd.nodelist.NodeList.include_flux"]], "indices() (rxd.species method)": [[289, "rxd.Species.indices"]], "inside (rxd attribute)": [[289, "rxd.inside"]], "membrane (rxd attribute)": [[289, "rxd.membrane"]], "molecules (rxd.node.node property)": [[289, "rxd.node.Node.molecules"]], "name (rxd.species property)": [[289, "rxd.Species.name"]], "nodes (rxd.species property)": [[289, "rxd.Species.nodes"]], "re_init() (rxd.species method)": [[289, "rxd.Species.re_init"]], "region (rxd.node.node property)": [[289, "rxd.node.Node.region"]], "region (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.region"]], "regions (rxd.species property)": [[289, "rxd.Species.regions"]], "rxd.distributedboundary (built-in class)": [[289, "rxd.DistributedBoundary"]], "rxd.extracellular (built-in class)": [[289, "rxd.Extracellular"]], "rxd.fixedcrosssection (built-in class)": [[289, "rxd.FixedCrossSection"]], "rxd.fixedperimeter (built-in class)": [[289, "rxd.FixedPerimeter"]], "rxd.fractionalvolume (built-in class)": [[289, "rxd.FractionalVolume"]], "rxd.multicompartmentreaction (built-in class)": [[289, "rxd.MultiCompartmentReaction"]], "rxd.parameter (built-in class)": [[289, "rxd.Parameter"]], "rxd.rate (built-in class)": [[289, "rxd.Rate"]], "rxd.reaction (built-in class)": [[289, "rxd.Reaction"]], "rxd.region (built-in class)": [[289, "rxd.Region"]], "rxd.rxdexception (built-in class)": [[289, "rxd.RxDException"]], "rxd.scalableborder (built-in class)": [[289, "rxd.ScalableBorder"]], "rxd.shell (built-in class)": [[289, "rxd.Shell"]], "rxd.species (built-in class)": [[289, "rxd.Species"]], "rxd.state (built-in class)": [[289, "rxd.State"]], "rxd.export.sbml()": [[289, "rxd.export.sbml"]], "rxd.node.node (built-in class)": [[289, "rxd.node.Node"]], "rxd.node.node1d (built-in class)": [[289, "rxd.node.Node1D"]], "rxd.node.node3d (built-in class)": [[289, "rxd.node.Node3D"]], "rxd.node.nodeextracellular (built-in class)": [[289, "rxd.node.NodeExtracellular"]], "rxd.nodelist.nodelist (built-in class)": [[289, "rxd.nodelist.NodeList"]], "satisfies() (rxd.node.node method)": [[289, "rxd.node.Node.satisfies"]], "satisfies() (rxd.node.node1d method)": [[289, "rxd.node.Node1D.satisfies"]], "satisfies() (rxd.node.node3d method)": [[289, "rxd.node.Node3D.satisfies"]], "satisfies() (rxd.node.nodeextracellular method)": [[289, "rxd.node.NodeExtracellular.satisfies"]], "sec (rxd.node.node1d property)": [[289, "rxd.node.Node1D.sec"]], "sec (rxd.node.node3d property)": [[289, "rxd.node.Node3D.sec"]], "segment (rxd.node.node1d property)": [[289, "rxd.node.Node1D.segment"]], "segment (rxd.node.node3d property)": [[289, "rxd.node.Node3D.segment"]], "segment (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.segment"]], "species (rxd.node.node property)": [[289, "rxd.node.Node.species"]], "species (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.species"]], "states (rxd.species property)": [[289, "rxd.Species.states"]], "surface_area (rxd.node.node1d property)": [[289, "rxd.node.Node1D.surface_area"]], "surface_area (rxd.node.node3d property)": [[289, "rxd.node.Node3D.surface_area"]], "surface_area (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.surface_area"]], "value (rxd.node.node property)": [[289, "rxd.node.Node.value"]], "value (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.value"]], "value_to_grid() (rxd.nodelist.nodelist method)": [[289, "rxd.nodelist.NodeList.value_to_grid"]], "volume (rxd.node.node property)": [[289, "rxd.node.Node.volume"]], "volume (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.volume"]], "x (rxd.node.node1d property)": [[289, "rxd.node.Node1D.x"]], "x (rxd.nodelist.nodelist property)": [[289, "rxd.nodelist.NodeList.x"]], "x3d (rxd.node.node property)": [[289, "rxd.node.Node.x3d"]], "y3d (rxd.node.node property)": [[289, "rxd.node.Node.y3d"]], "z3d (rxd.node.node property)": [[289, "rxd.node.Node.z3d"]], "rxdmath.acos()": [[290, "rxdmath.acos"]], "rxdmath.acosh()": [[290, "rxdmath.acosh"]], "rxdmath.asin()": [[290, "rxdmath.asin"]], "rxdmath.asinh()": [[290, "rxdmath.asinh"]], "rxdmath.atan()": [[290, "rxdmath.atan"]], "rxdmath.atan2()": [[290, "rxdmath.atan2"]], "rxdmath.ceil()": [[290, "rxdmath.ceil"]], "rxdmath.copysign()": [[290, "rxdmath.copysign"]], "rxdmath.cos()": [[290, "rxdmath.cos"]], "rxdmath.cosh()": [[290, "rxdmath.cosh"]], "rxdmath.degrees()": [[290, "rxdmath.degrees"]], "rxdmath.erf()": [[290, "rxdmath.erf"]], "rxdmath.erfc()": [[290, "rxdmath.erfc"]], "rxdmath.exp()": [[290, "rxdmath.exp"]], "rxdmath.expm1()": [[290, "rxdmath.expm1"]], "rxdmath.fabs()": [[290, "rxdmath.fabs"]], "rxdmath.factorial()": [[290, "rxdmath.factorial"]], "rxdmath.floor()": [[290, "rxdmath.floor"]], "rxdmath.fmod()": [[290, "rxdmath.fmod"]], "rxdmath.gamma()": [[290, "rxdmath.gamma"]], "rxdmath.lgamma()": [[290, "rxdmath.lgamma"]], "rxdmath.log()": [[290, "rxdmath.log"]], "rxdmath.log10()": [[290, "rxdmath.log10"]], "rxdmath.log1p()": [[290, "rxdmath.log1p"]], "rxdmath.pow()": [[290, "rxdmath.pow"]], "rxdmath.radians()": [[290, "rxdmath.radians"]], "rxdmath.sin()": [[290, "rxdmath.sin"]], "rxdmath.sinh()": [[290, "rxdmath.sinh"]], "rxdmath.sqrt()": [[290, "rxdmath.sqrt"]], "rxdmath.tan()": [[290, "rxdmath.tan"]], "rxdmath.tanh()": [[290, "rxdmath.tanh"]], "rxdmath.trunc()": [[290, "rxdmath.trunc"]], "rxdmath.vtrap()": [[290, "rxdmath.vtrap"]], "statetransitionevent (built-in class)": [[291, "StateTransitionEvent"]], "state() (statetransitionevent method)": [[291, "StateTransitionEvent.state"]], "transition() (statetransitionevent method)": [[291, "StateTransitionEvent.transition"]], "section (built-in class)": [[292, "Section"]], "section.nseg (built-in variable)": [[292, "Section.nseg"]], "cell() (section method)": [[292, "Section.cell"]], "connect() (section method)": [[292, "Section.connect"]], "disconnect() (section method)": [[292, "Section.disconnect"]], "hname() (section method)": [[292, "Section.hname"]], "name() (section method)": [[292, "Section.name"]], "orientation() (section method)": [[292, "Section.orientation"]], "parentseg() (section method)": [[292, "Section.parentseg"]], "subtree() (section method)": [[292, "Section.subtree"]], "wholetree() (section method)": [[292, "Section.wholetree"]], "l (built-in variable)": [[293, "L"]], "ra (built-in variable)": [[293, "Ra"]], "diam (built-in variable)": [[293, "diam"]], "diam_changed (built-in variable)": [[293, "diam_changed"]], "sectionlist (built-in class)": [[294, "SectionList"]], "allroots() (sectionlist method)": [[294, "SectionList.allroots"]], "append() (sectionlist method)": [[294, "SectionList.append"]], "children() (sectionlist method)": [[294, "SectionList.children"]], "printnames() (sectionlist method)": [[294, "SectionList.printnames"]], "remove() (sectionlist method)": [[294, "SectionList.remove"]], "subtree() (sectionlist method)": [[294, "SectionList.subtree"]], "unique() (sectionlist method)": [[294, "SectionList.unique"]], "wholetree() (sectionlist method)": [[294, "SectionList.wholetree"]], "sectionref (built-in class)": [[295, "SectionRef"]], "sectionref.child (built-in variable)": [[295, "SectionRef.child"]], "sectionref.parent (built-in variable)": [[295, "SectionRef.parent"]], "sectionref.root (built-in variable)": [[295, "SectionRef.root"]], "sectionref.sec (built-in variable)": [[295, "SectionRef.sec"]], "sectionref.trueparent (built-in variable)": [[295, "SectionRef.trueparent"]], "exists() (sectionref method)": [[295, "SectionRef.exists"]], "has_parent() (sectionref method)": [[295, "SectionRef.has_parent"]], "has_trueparent() (sectionref method)": [[295, "SectionRef.has_trueparent"]], "is_cas() (sectionref method)": [[295, "SectionRef.is_cas"]], "nchild() (sectionref method)": [[295, "SectionRef.nchild"]], "deck (built-in class)": [[300, "Deck"]], "hbox (built-in class)": [[300, "HBox"]], "vbox (built-in class)": [[300, "VBox"]], "adjust() (vbox method)": [[300, "VBox.adjust"]], "adjuster() (vbox method)": [[300, "VBox.adjuster"]], "dialog() (vbox method)": [[300, "VBox.dialog"]], "dismiss_action() (vbox method)": [[300, "VBox.dismiss_action"]], "flip_to() (deck method)": [[300, "Deck.flip_to"]], "full_request() (vbox method)": [[300, "VBox.full_request"]], "intercept() (deck method)": [[300, "Deck.intercept"]], "intercept() (vbox method)": [[300, "VBox.intercept"]], "ismapped() (vbox method)": [[300, "VBox.ismapped"]], "map() (deck method)": [[300, "Deck.map"]], "map() (vbox method)": [[300, "VBox.map"]], "move_last() (deck method)": [[300, "Deck.move_last"]], "priority() (vbox method)": [[300, "VBox.priority"]], "ref() (vbox method)": [[300, "VBox.ref"]], "remove() (deck method)": [[300, "Deck.remove"]], "remove_last() (deck method)": [[300, "Deck.remove_last"]], "save() (deck method)": [[300, "Deck.save"]], "save() (vbox method)": [[300, "VBox.save"]], "size() (vbox method)": [[300, "VBox.size"]], "unmap() (deck method)": [[300, "Deck.unmap"]], "unmap() (vbox method)": [[300, "VBox.unmap"]], "list (built-in class)": [[301, "List"]], "accept_action() (list method)": [[301, "List.accept_action"]], "append() (list method)": [[301, "List.append"]], "browser() (list method)": [[301, "List.browser"]], "count() (list method)": [[301, "List.count"]], "index() (list method)": [[301, "List.index"]], "insrt() (list method)": [[301, "List.insrt"]], "o() (list method)": [[301, "List.o"]], "object() (list method)": [[301, "List.object"]], "prepend() (list method)": [[301, "List.prepend"]], "remove() (list method)": [[301, "List.remove"]], "remove_all() (list method)": [[301, "List.remove_all"]], "scroll_pos() (list method)": [[301, "List.scroll_pos"]], "select() (list method)": [[301, "List.select"]], "select_action() (list method)": [[301, "List.select_action"]], "selected() (list method)": [[301, "List.selected"]], "pwmanager (built-in class)": [[304, "PWManager"]], "close() (pwmanager method)": [[304, "PWManager.close"]], "count() (pwmanager method)": [[304, "PWManager.count"]], "deco() (pwmanager method)": [[304, "PWManager.deco"]], "deiconify() (pwmanager method)": [[304, "PWManager.deiconify"]], "group() (pwmanager method)": [[304, "PWManager.group"]], "hide() (pwmanager method)": [[304, "PWManager.hide"]], "iconify() (pwmanager method)": [[304, "PWManager.iconify"]], "is_mapped() (pwmanager method)": [[304, "PWManager.is_mapped"]], "landscape() (pwmanager method)": [[304, "PWManager.landscape"]], "leader() (pwmanager method)": [[304, "PWManager.leader"]], "manager() (pwmanager method)": [[304, "PWManager.manager"]], "map() (pwmanager method)": [[304, "PWManager.map"]], "name() (pwmanager method)": [[304, "PWManager.name"]], "paper_place() (pwmanager method)": [[304, "PWManager.paper_place"]], "printfile() (pwmanager method)": [[304, "PWManager.printfile"]], "save() (pwmanager method)": [[304, "PWManager.save"]], "scale() (pwmanager method)": [[304, "PWManager.scale"]], "snap() (pwmanager method)": [[304, "PWManager.snap"]], "window_place() (pwmanager method)": [[304, "PWManager.window_place"]], "sectionbrowser (built-in class)": [[305, "SectionBrowser"]], "accept_action() (sectionbrowser method)": [[305, "SectionBrowser.accept_action"]], "select() (sectionbrowser method)": [[305, "SectionBrowser.select"]], "select_action() (sectionbrowser method)": [[305, "SectionBrowser.select_action"]], "symchooser (built-in class)": [[306, "SymChooser"]], "run() (symchooser method)": [[306, "SymChooser.run"]], "text() (symchooser method)": [[306, "SymChooser.text"]], "texteditor (built-in class)": [[307, "TextEditor"]], "map() (texteditor method)": [[307, "TextEditor.map"]], "readonly() (texteditor method)": [[307, "TextEditor.readonly"]], "text() (texteditor method)": [[307, "TextEditor.text"]], "valuefieldeditor (built-in class)": [[309, "ValueFieldEditor"]], "default() (valuefieldeditor method)": [[309, "ValueFieldEditor.default"]], "file (built-in class)": [[316, "File"]], "aopen() (file method)": [[316, "File.aopen"]], "chooser() (file method)": [[316, "File.chooser"]], "close() (file method)": [[316, "File.close"]], "dir() (file method)": [[316, "File.dir"]], "eof() (file method)": [[316, "File.eof"]], "flush() (file method)": [[316, "File.flush"]], "getname() (file method)": [[316, "File.getname"]], "gets() (file method)": [[316, "File.gets"]], "isopen() (file method)": [[316, "File.isopen"]], "mktemp() (file method)": [[316, "File.mktemp"]], "printf() (file method)": [[316, "File.printf"]], "ropen() (file method)": [[316, "File.ropen"]], "scanstr() (file method)": [[316, "File.scanstr"]], "scanvar() (file method)": [[316, "File.scanvar"]], "seek() (file method)": [[316, "File.seek"]], "tell() (file method)": [[316, "File.tell"]], "unlink() (file method)": [[316, "File.unlink"]], "vread() (file method)": [[316, "File.vread"]], "vwrite() (file method)": [[316, "File.vwrite"]], "wopen() (file method)": [[316, "File.wopen"]], "xopen() (file method)": [[316, "File.xopen"]], "hoc_stdout()": [[318, "hoc_stdout"]], "guimath (built-in class)": [[324, "GUIMath"]], "d2line() (guimath method)": [[324, "GUIMath.d2line"]], "d2line_seg() (guimath method)": [[324, "GUIMath.d2line_seg"]], "feround() (guimath method)": [[324, "GUIMath.feround"]], "inside() (guimath method)": [[324, "GUIMath.inside"]], "matrix (built-in class)": [[325, "Matrix"]], "matrix.x (built-in variable)": [[325, "Matrix.x"]], "add() (matrix method)": [[325, "Matrix.add"]], "bcopy() (matrix method)": [[325, "Matrix.bcopy"]], "c() (matrix method)": [[325, "Matrix.c"]], "det() (matrix method)": [[325, "Matrix.det"]], "exp() (matrix method)": [[325, "Matrix.exp"]], "fprint() (matrix method)": [[325, "Matrix.fprint"]], "from_vector() (matrix method)": [[325, "Matrix.from_vector"]], "getcol() (matrix method)": [[325, "Matrix.getcol"]], "getdiag() (matrix method)": [[325, "Matrix.getdiag"]], "getrow() (matrix method)": [[325, "Matrix.getrow"]], "getval() (matrix method)": [[325, "Matrix.getval"]], "ident() (matrix method)": [[325, "Matrix.ident"]], "inverse() (matrix method)": [[325, "Matrix.inverse"]], "mulm() (matrix method)": [[325, "Matrix.mulm"]], "muls() (matrix method)": [[325, "Matrix.muls"]], "mulv() (matrix method)": [[325, "Matrix.mulv"]], "ncol() (matrix method)": [[325, "Matrix.ncol"]], "nrow() (matrix method)": [[325, "Matrix.nrow"]], "pow() (matrix method)": [[325, "Matrix.pow"]], "printf() (matrix method)": [[325, "Matrix.printf"]], "resize() (matrix method)": [[325, "Matrix.resize"]], "scanf() (matrix method)": [[325, "Matrix.scanf"]], "setcol() (matrix method)": [[325, "Matrix.setcol"]], "setdiag() (matrix method)": [[325, "Matrix.setdiag"]], "setrow() (matrix method)": [[325, "Matrix.setrow"]], "setval() (matrix method)": [[325, "Matrix.setval"]], "solv() (matrix method)": [[325, "Matrix.solv"]], "spgetrowval() (matrix method)": [[325, "Matrix.spgetrowval"]], "sprowlen() (matrix method)": [[325, "Matrix.sprowlen"]], "svd() (matrix method)": [[325, "Matrix.svd"]], "symmeig() (matrix method)": [[325, "Matrix.symmeig"]], "to_vector() (matrix method)": [[325, "Matrix.to_vector"]], "transpose() (matrix method)": [[325, "Matrix.transpose"]], "zero() (matrix method)": [[325, "Matrix.zero"]], "float_epsilon (built-in variable)": [[327, "float_epsilon"]], "acg() (random method)": [[328, "Random.ACG"]], "mcellran4() (random method)": [[328, "Random.MCellRan4"]], "mlcg() (random method)": [[328, "Random.MLCG"]], "random (built-in class)": [[328, "Random"]], "random123() (random method)": [[328, "Random.Random123"]], "random123_globalindex() (random method)": [[328, "Random.Random123_globalindex"]], "binomial() (random method)": [[328, "Random.binomial"]], "discunif() (random method)": [[328, "Random.discunif"]], "erlang() (random method)": [[328, "Random.erlang"]], "geometric() (random method)": [[328, "Random.geometric"]], "hypergeo() (random method)": [[328, "Random.hypergeo"]], "lognormal() (random method)": [[328, "Random.lognormal"]], "negexp() (random method)": [[328, "Random.negexp"]], "normal() (random method)": [[328, "Random.normal"]], "play() (random method)": [[328, "Random.play"]], "poisson() (random method)": [[328, "Random.poisson"]], "repick() (random method)": [[328, "Random.repick"]], "seq() (random method)": [[328, "Random.seq"]], "uniform() (random method)": [[328, "Random.uniform"]], "weibull() (random method)": [[328, "Random.weibull"]], "vector (built-in class)": [[329, "Vector"]], "vector.x (built-in variable)": [[329, "Vector.x"]], "abs() (vector method)": [[329, "Vector.abs"]], "add() (vector method)": [[329, "Vector.add"]], "addrand() (vector method)": [[329, "Vector.addrand"]], "append() (vector method)": [[329, "Vector.append"]], "apply() (vector method)": [[329, "Vector.apply"]], "as_numpy() (vector method)": [[329, "Vector.as_numpy"]], "at() (vector method)": [[329, "Vector.at"]], "buffer_size() (vector method)": [[329, "Vector.buffer_size"]], "c() (vector method)": [[329, "Vector.c"]], "cl() (vector method)": [[329, "Vector.cl"]], "contains() (vector method)": [[329, "Vector.contains"]], "convlv() (vector method)": [[329, "Vector.convlv"]], "copy() (vector method)": [[329, "Vector.copy"]], "correl() (vector method)": [[329, "Vector.correl"]], "deriv() (vector method)": [[329, "Vector.deriv"]], "div() (vector method)": [[329, "Vector.div"]], "dot() (vector method)": [[329, "Vector.dot"]], "eq() (vector method)": [[329, "Vector.eq"]], "fft() (vector method)": [[329, "Vector.fft"]], "fill() (vector method)": [[329, "Vector.fill"]], "filter() (vector method)": [[329, "Vector.filter"]], "fit() (vector method)": [[329, "Vector.fit"]], "floor() (vector method)": [[329, "Vector.floor"]], "fread() (vector method)": [[329, "Vector.fread"]], "from_double() (vector method)": [[329, "Vector.from_double"]], "from_python() (vector method)": [[329, "Vector.from_python"]], "fwrite() (vector method)": [[329, "Vector.fwrite"]], "get() (vector method)": [[329, "Vector.get"]], "hist() (vector method)": [[329, "Vector.hist"]], "histogram() (vector method)": [[329, "Vector.histogram"]], "ind() (vector method)": [[329, "Vector.ind"]], "index() (vector method)": [[329, "Vector.index"]], "indgen() (vector method)": [[329, "Vector.indgen"]], "indvwhere() (vector method)": [[329, "Vector.indvwhere"]], "indwhere() (vector method)": [[329, "Vector.indwhere"]], "inf() (vector method)": [[329, "Vector.inf"]], "insrt() (vector method)": [[329, "Vector.insrt"]], "integral() (vector method)": [[329, "Vector.integral"]], "interpolate() (vector method)": [[329, "Vector.interpolate"]], "label() (vector method)": [[329, "Vector.label"]], "line() (vector method)": [[329, "Vector.line"]], "log() (vector method)": [[329, "Vector.log"]], "log10() (vector method)": [[329, "Vector.log10"]], "mag() (vector method)": [[329, "Vector.mag"]], "mark() (vector method)": [[329, "Vector.mark"]], "max() (vector method)": [[329, "Vector.max"]], "max_ind() (vector method)": [[329, "Vector.max_ind"]], "mean() (vector method)": [[329, "Vector.mean"]], "meansqerr() (vector method)": [[329, "Vector.meansqerr"]], "medfltr() (vector method)": [[329, "Vector.medfltr"]], "median() (vector method)": [[329, "Vector.median"]], "min() (vector method)": [[329, "Vector.min"]], "min_ind() (vector method)": [[329, "Vector.min_ind"]], "mul() (vector method)": [[329, "Vector.mul"]], "play() (vector method)": [[329, "Vector.play"]], "play_remove() (vector method)": [[329, "Vector.play_remove"]], "plot() (vector method)": [[329, "Vector.plot"]], "ploterr() (vector method)": [[329, "Vector.ploterr"]], "pow() (vector method)": [[329, "Vector.pow"]], "printf() (vector method)": [[329, "Vector.printf"]], "psth() (vector method)": [[329, "Vector.psth"]], "rebin() (vector method)": [[329, "Vector.rebin"]], "record() (vector method)": [[329, "Vector.record"]], "reduce() (vector method)": [[329, "Vector.reduce"]], "remove() (vector method)": [[329, "Vector.remove"]], "resample() (vector method)": [[329, "Vector.resample"]], "resize() (vector method)": [[329, "Vector.resize"]], "reverse() (vector method)": [[329, "Vector.reverse"]], "rotate() (vector method)": [[329, "Vector.rotate"]], "scale() (vector method)": [[329, "Vector.scale"]], "scanf() (vector method)": [[329, "Vector.scanf"]], "scantil() (vector method)": [[329, "Vector.scantil"]], "set() (vector method)": [[329, "Vector.set"]], "setrand() (vector method)": [[329, "Vector.setrand"]], "sin() (vector method)": [[329, "Vector.sin"]], "size() (vector method)": [[329, "Vector.size"]], "smhist() (vector method)": [[329, "Vector.smhist"]], "sort() (vector method)": [[329, "Vector.sort"]], "sortindex() (vector method)": [[329, "Vector.sortindex"]], "spctrm() (vector method)": [[329, "Vector.spctrm"]], "spikebin() (vector method)": [[329, "Vector.spikebin"]], "sqrt() (vector method)": [[329, "Vector.sqrt"]], "stderr() (vector method)": [[329, "Vector.stderr"]], "stdev() (vector method)": [[329, "Vector.stdev"]], "sub() (vector method)": [[329, "Vector.sub"]], "sum() (vector method)": [[329, "Vector.sum"]], "sumgauss() (vector method)": [[329, "Vector.sumgauss"]], "sumsq() (vector method)": [[329, "Vector.sumsq"]], "tanh() (vector method)": [[329, "Vector.tanh"]], "to_python() (vector method)": [[329, "Vector.to_python"]], "trigavg() (vector method)": [[329, "Vector.trigavg"]], "var() (vector method)": [[329, "Vector.var"]], "vread() (vector method)": [[329, "Vector.vread"]], "vwrite() (vector method)": [[329, "Vector.vwrite"]], "where() (vector method)": [[329, "Vector.where"]], "mechanismstandard (built-in class)": [[331, "MechanismStandard"]], "_in() (mechanismstandard method)": [[331, "MechanismStandard._in"]], "action() (mechanismstandard method)": [[331, "MechanismStandard.action"]], "count() (mechanismstandard method)": [[331, "MechanismStandard.count"]], "get() (mechanismstandard method)": [[331, "MechanismStandard.get"]], "name() (mechanismstandard method)": [[331, "MechanismStandard.name"]], "out() (mechanismstandard method)": [[331, "MechanismStandard.out"]], "panel() (mechanismstandard method)": [[331, "MechanismStandard.panel"]], "save() (mechanismstandard method)": [[331, "MechanismStandard.save"]], "set() (mechanismstandard method)": [[331, "MechanismStandard.set"]], "this (built-in variable)": [[334, "this"]], "pointer (built-in class)": [[336, "Pointer"]], "assign() (pointer method)": [[336, "Pointer.assign"]], "s() (pointer method)": [[336, "Pointer.s"]], "val (pointer attribute)": [[336, "Pointer.val"]], "ptrvector (built-in class)": [[337, "PtrVector"]], "gather() (ptrvector method)": [[337, "PtrVector.gather"]], "getval() (ptrvector method)": [[337, "PtrVector.getval"]], "label() (ptrvector method)": [[337, "PtrVector.label"]], "plot() (ptrvector method)": [[337, "PtrVector.plot"]], "pset() (ptrvector method)": [[337, "PtrVector.pset"]], "ptr_update_callback() (ptrvector method)": [[337, "PtrVector.ptr_update_callback"]], "resize() (ptrvector method)": [[337, "PtrVector.resize"]], "scatter() (ptrvector method)": [[337, "PtrVector.scatter"]], "setval() (ptrvector method)": [[337, "PtrVector.setval"]], "size() (ptrvector method)": [[337, "PtrVector.size"]], "hoc_ac_ (built-in variable)": [[338, "hoc_ac_"]], "hoc_cross_x_ (built-in variable)": [[338, "hoc_cross_x_"]], "hoc_cross_y_ (built-in variable)": [[338, "hoc_cross_y_"]], "hoc_obj_ (built-in variable)": [[338, "hoc_obj_"]], "pythonobject (built-in class)": [[340, "PythonObject"]], "cas() (neuron.h method)": [[340, "neuron.h.cas"]], "execute() (neuron.hoc method)": [[340, "neuron.hoc.execute"]], "hoc_ac() (neuron.hoc method)": [[340, "neuron.hoc.hoc_ac"]], "neuron.h.section (built-in class)": [[340, "neuron.h.Section"]], "neuron.hoc.hocobject (built-in class)": [[340, "neuron.hoc.HocObject"]], "stringfunctions (built-in class)": [[343, "StringFunctions"]], "alias() (stringfunctions method)": [[343, "StringFunctions.alias"]], "alias_list() (stringfunctions method)": [[343, "StringFunctions.alias_list"]], "head() (stringfunctions method)": [[343, "StringFunctions.head"]], "is_artificial() (stringfunctions method)": [[343, "StringFunctions.is_artificial"]], "is_name() (stringfunctions method)": [[343, "StringFunctions.is_name"]], "is_point_process() (stringfunctions method)": [[343, "StringFunctions.is_point_process"]], "left() (stringfunctions method)": [[343, "StringFunctions.left"]], "len() (stringfunctions method)": [[343, "StringFunctions.len"]], "references() (stringfunctions method)": [[343, "StringFunctions.references"]], "right() (stringfunctions method)": [[343, "StringFunctions.right"]], "substr() (stringfunctions method)": [[343, "StringFunctions.substr"]], "tail() (stringfunctions method)": [[343, "StringFunctions.tail"]], "timer (built-in class)": [[346, "Timer"]], "end() (timer method)": [[346, "Timer.end"]], "seconds() (timer method)": [[346, "Timer.seconds"]], "start() (timer method)": [[346, "Timer.start"]], "bbsavestate (built-in class)": [[348, "BBSaveState"]], "ignore() (bbsavestate method)": [[348, "BBSaveState.ignore"]], "restore_test() (bbsavestate method)": [[348, "BBSaveState.restore_test"]], "save_test() (bbsavestate method)": [[348, "BBSaveState.save_test"]], "vector_play_init() (bbsavestate method)": [[348, "BBSaveState.vector_play_init"]], "cvode (built-in class)": [[349, "CVode"]], "acor() (cvode method)": [[349, "CVode.acor"]], "active() (cvode method)": [[349, "CVode.active"]], "atol() (cvode method)": [[349, "CVode.atol"]], "atolscale() (cvode method)": [[349, "CVode.atolscale"]], "cache_efficient() (cvode method)": [[349, "CVode.cache_efficient"]], "condition_order() (cvode method)": [[349, "CVode.condition_order"]], "current_method() (cvode method)": [[349, "CVode.current_method"]], "dae_init_dteps() (cvode method)": [[349, "CVode.dae_init_dteps"]], "debug_event() (cvode method)": [[349, "CVode.debug_event"]], "diam_change_count() (cvode method)": [[349, "CVode.diam_change_count"]], "dstates() (cvode method)": [[349, "CVode.dstates"]], "error_weights() (cvode method)": [[349, "CVode.error_weights"]], "event() (cvode method)": [[349, "CVode.event"]], "event_queue_info() (cvode method)": [[349, "CVode.event_queue_info"]], "extra_scatter_gather() (cvode method)": [[349, "CVode.extra_scatter_gather"]], "extra_scatter_gather_remove() (cvode method)": [[349, "CVode.extra_scatter_gather_remove"]], "f() (cvode method)": [[349, "CVode.f"]], "fixed_step() (cvode method)": [[349, "CVode.fixed_step"]], "free_event_queues() (cvode method)": [[349, "CVode.free_event_queues"]], "jacobian() (cvode method)": [[349, "CVode.jacobian"]], "maxorder() (cvode method)": [[349, "CVode.maxorder"]], "maxstep() (cvode method)": [[349, "CVode.maxstep"]], "minstep() (cvode method)": [[349, "CVode.minstep"]], "netconlist() (cvode method)": [[349, "CVode.netconlist"]], "order() (cvode method)": [[349, "CVode.order"]], "poolshrink() (cvode method)": [[349, "CVode.poolshrink"]], "print_event_queue() (cvode method)": [[349, "CVode.print_event_queue"]], "queue_mode() (cvode method)": [[349, "CVode.queue_mode"]], "re_init() (cvode method)": [[349, "CVode.re_init"]], "record() (cvode method)": [[349, "CVode.record"]], "record_remove() (cvode method)": [[349, "CVode.record_remove"]], "rtol() (cvode method)": [[349, "CVode.rtol"]], "simgraph_remove() (cvode method)": [[349, "CVode.simgraph_remove"]], "solve() (cvode method)": [[349, "CVode.solve"]], "spike_stat() (cvode method)": [[349, "CVode.spike_stat"]], "state_magnitudes() (cvode method)": [[349, "CVode.state_magnitudes"]], "statename() (cvode method)": [[349, "CVode.statename"]], "states() (cvode method)": [[349, "CVode.states"]], "statistics() (cvode method)": [[349, "CVode.statistics"]], "stiff() (cvode method)": [[349, "CVode.stiff"]], "store_events() (cvode method)": [[349, "CVode.store_events"]], "structure_change_count() (cvode method)": [[349, "CVode.structure_change_count"]], "use_daspk() (cvode method)": [[349, "CVode.use_daspk"]], "use_fast_imem() (cvode method)": [[349, "CVode.use_fast_imem"]], "use_local_dt() (cvode method)": [[349, "CVode.use_local_dt"]], "use_long_double() (cvode method)": [[349, "CVode.use_long_double"]], "use_mxb() (cvode method)": [[349, "CVode.use_mxb"]], "ygather() (cvode method)": [[349, "CVode.ygather"]], "yscatter() (cvode method)": [[349, "CVode.yscatter"]], "finitializehandler (built-in class)": [[352, "FInitializeHandler"]], "allprint() (finitializehandler method)": [[352, "FInitializeHandler.allprint"]], "celsius (built-in variable)": [[352, "celsius"]], "clamp_resist (built-in variable)": [[352, "clamp_resist"]], "dt (built-in variable)": [[352, "dt"]], "nrnunit_use_legacy()": [[352, "nrnunit_use_legacy"]], "secondorder (built-in variable)": [[352, "secondorder"]], "stoprun (built-in variable)": [[352, "stoprun"]], "t (built-in variable)": [[352, "t"]], "savestate (built-in class)": [[354, "SaveState"]], "fread() (savestate method)": [[354, "SaveState.fread"]], "fwrite() (savestate method)": [[354, "SaveState.fwrite"]], "restore() (savestate method)": [[354, "SaveState.restore"]], "save() (savestate method)": [[354, "SaveState.save"]], "writehoc() (savestate method)": [[354, "SaveState.writehoc"]], "glyph (built-in class)": [[357, "Glyph"]], "circle() (glyph method)": [[357, "Glyph.circle"]], "close() (glyph method)": [[357, "Glyph.close"]], "cpt() (glyph method)": [[357, "Glyph.cpt"]], "curve() (glyph method)": [[357, "Glyph.curve"]], "erase() (glyph method)": [[357, "Glyph.erase"]], "fill() (glyph method)": [[357, "Glyph.fill"]], "gif() (glyph method)": [[357, "Glyph.gif"]], "glyph() (glyph method)": [[357, "Glyph.glyph"]], "l() (glyph method)": [[357, "Glyph.l"]], "label() (glyph method)": [[357, "Glyph.label"]], "m() (glyph method)": [[357, "Glyph.m"]], "path() (glyph method)": [[357, "Glyph.path"]], "s() (glyph method)": [[357, "Glyph.s"]], "graph (built-in class)": [[358, "Graph"]], "addexpr() (graph method)": [[358, "Graph.addexpr"]], "addobject() (graph method)": [[358, "Graph.addobject"]], "addvar() (graph method)": [[358, "Graph.addvar"]], "align() (graph method)": [[358, "Graph.align"]], "begin() (graph method)": [[358, "Graph.begin"]], "beginline() (graph method)": [[358, "Graph.beginline"]], "brush() (graph method)": [[358, "Graph.brush"]], "color() (graph method)": [[358, "Graph.color"]], "crosshair_action() (graph method)": [[358, "Graph.crosshair_action"]], "erase() (graph method)": [[358, "Graph.erase"]], "erase_all() (graph method)": [[358, "Graph.erase_all"]], "exec_menu() (graph method)": [[358, "Graph.exec_menu"]], "family() (graph method)": [[358, "Graph.family"]], "fastflush() (graph method)": [[358, "Graph.fastflush"]], "fixed() (graph method)": [[358, "Graph.fixed"]], "flush() (graph method)": [[358, "Graph.flush"]], "getline() (graph method)": [[358, "Graph.getline"]], "gif() (graph method)": [[358, "Graph.gif"]], "glyph() (graph method)": [[358, "Graph.glyph"]], "label() (graph method)": [[358, "Graph.label"]], "line() (graph method)": [[358, "Graph.line"]], "line_info() (graph method)": [[358, "Graph.line_info"]], "mark() (graph method)": [[358, "Graph.mark"]], "menu_action() (graph method)": [[358, "Graph.menu_action"]], "menu_remove() (graph method)": [[358, "Graph.menu_remove"]], "menu_tool() (graph method)": [[358, "Graph.menu_tool"]], "plot() (graph method)": [[358, "Graph.plot"]], "printfile() (graph method)": [[358, "Graph.printfile"]], "relative() (graph method)": [[358, "Graph.relative"]], "save_name() (graph method)": [[358, "Graph.save_name"]], "simgraph() (graph method)": [[358, "Graph.simgraph"]], "size() (graph method)": [[358, "Graph.size"]], "unmap() (graph method)": [[358, "Graph.unmap"]], "vector() (graph method)": [[358, "Graph.vector"]], "vfixed() (graph method)": [[358, "Graph.vfixed"]], "view() (graph method)": [[358, "Graph.view"]], "view_count() (graph method)": [[358, "Graph.view_count"]], "view_info() (graph method)": [[358, "Graph.view_info"]], "view_size() (graph method)": [[358, "Graph.view_size"]], "xaxis() (graph method)": [[358, "Graph.xaxis"]], "xexpr() (graph method)": [[358, "Graph.xexpr"]], "yaxis() (graph method)": [[358, "Graph.yaxis"]], "plotshape (built-in class)": [[364, "PlotShape"]], "beginline() (plotshape method)": [[364, "PlotShape.beginline"]], "color() (plotshape method)": [[364, "PlotShape.color"]], "color_all() (plotshape method)": [[364, "PlotShape.color_all"]], "color_list() (plotshape method)": [[364, "PlotShape.color_list"]], "colormap() (plotshape method)": [[364, "PlotShape.colormap"]], "erase() (plotshape method)": [[364, "PlotShape.erase"]], "erase_all() (plotshape method)": [[364, "PlotShape.erase_all"]], "exec_menu() (plotshape method)": [[364, "PlotShape.exec_menu"]], "fastflush() (plotshape method)": [[364, "PlotShape.fastflush"]], "flush() (plotshape method)": [[364, "PlotShape.flush"]], "hinton() (plotshape method)": [[364, "PlotShape.hinton"]], "label() (plotshape method)": [[364, "PlotShape.label"]], "len_scale() (plotshape method)": [[364, "PlotShape.len_scale"]], "line() (plotshape method)": [[364, "PlotShape.line"]], "mark() (plotshape method)": [[364, "PlotShape.mark"]], "menu_action() (plotshape method)": [[364, "PlotShape.menu_action"]], "menu_tool() (plotshape method)": [[364, "PlotShape.menu_tool"]], "nearest() (plotshape method)": [[364, "PlotShape.nearest"]], "observe() (plotshape method)": [[364, "PlotShape.observe"]], "plot() (plotshape method)": [[364, "PlotShape.plot"]], "printfile() (plotshape method)": [[364, "PlotShape.printfile"]], "push_selected() (plotshape method)": [[364, "PlotShape.push_selected"]], "rotate() (plotshape method)": [[364, "PlotShape.rotate"]], "save_name() (plotshape method)": [[364, "PlotShape.save_name"]], "scale() (plotshape method)": [[364, "PlotShape.scale"]], "show() (plotshape method)": [[364, "PlotShape.show"]], "size() (plotshape method)": [[364, "PlotShape.size"]], "unmap() (plotshape method)": [[364, "PlotShape.unmap"]], "variable() (plotshape method)": [[364, "PlotShape.variable"]], "view() (plotshape method)": [[364, "PlotShape.view"]], "view_count() (plotshape method)": [[364, "PlotShape.view_count"]], "rangevarplot (built-in class)": [[365, "RangeVarPlot"]], "begin() (rangevarplot method)": [[365, "RangeVarPlot.begin"]], "color() (rangevarplot method)": [[365, "RangeVarPlot.color"]], "end() (rangevarplot method)": [[365, "RangeVarPlot.end"]], "from_vector() (rangevarplot method)": [[365, "RangeVarPlot.from_vector"]], "left() (rangevarplot method)": [[365, "RangeVarPlot.left"]], "list() (rangevarplot method)": [[365, "RangeVarPlot.list"]], "origin() (rangevarplot method)": [[365, "RangeVarPlot.origin"]], "plot() (rangevarplot method)": [[365, "RangeVarPlot.plot"]], "right() (rangevarplot method)": [[365, "RangeVarPlot.right"]], "to_vector() (rangevarplot method)": [[365, "RangeVarPlot.to_vector"]], "vector() (rangevarplot method)": [[365, "RangeVarPlot.vector"]], "shape (built-in class)": [[366, "Shape"]], "action() (shape method)": [[366, "Shape.action"]], "beginline() (shape method)": [[366, "Shape.beginline"]], "color() (shape method)": [[366, "Shape.color"]], "color_all() (shape method)": [[366, "Shape.color_all"]], "color_list() (shape method)": [[366, "Shape.color_list"]], "erase() (shape method)": [[366, "Shape.erase"]], "erase_all() (shape method)": [[366, "Shape.erase_all"]], "exec_menu() (shape method)": [[366, "Shape.exec_menu"]], "flush() (shape method)": [[366, "Shape.flush"]], "label() (shape method)": [[366, "Shape.label"]], "len_scale() (shape method)": [[366, "Shape.len_scale"]], "line() (shape method)": [[366, "Shape.line"]], "mark() (shape method)": [[366, "Shape.mark"]], "menu_action() (shape method)": [[366, "Shape.menu_action"]], "menu_tool() (shape method)": [[366, "Shape.menu_tool"]], "nearest() (shape method)": [[366, "Shape.nearest"]], "observe() (shape method)": [[366, "Shape.observe"]], "point_mark() (shape method)": [[366, "Shape.point_mark"]], "point_mark_remove() (shape method)": [[366, "Shape.point_mark_remove"]], "printfile() (shape method)": [[366, "Shape.printfile"]], "push_selected() (shape method)": [[366, "Shape.push_selected"]], "rotate() (shape method)": [[366, "Shape.rotate"]], "save_name() (shape method)": [[366, "Shape.save_name"]], "select() (shape method)": [[366, "Shape.select"]], "show() (shape method)": [[366, "Shape.show"]], "size() (shape method)": [[366, "Shape.size"]], "unmap() (shape method)": [[366, "Shape.unmap"]], "view() (shape method)": [[366, "Shape.view"]], "view_count() (shape method)": [[366, "Shape.view_count"]]}})